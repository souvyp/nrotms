/*
 */
/*NSF\js\NSF.0.0.3.min.js*/
/*NSF.0.0.3.min.js*/

﻿
String.prototype.ExtFileName = function() {
	if(this != "") {
		return "." + this.replace(/.+\./, "");
	} else {
		return "";
	}
};
String.prototype.FullFileName = function() {
	if(this != null) {
		var _filename = this.replace(/^.*[\\\/]/, '')
		return _filename;
	} else {
		return "";
	}
};
String.prototype.FileName = function() {
	if(this != null) {
		var _filename = this.replace(/^.*[\\\/]/, '')
		var name = _filename.split(".");
		return name[0];
	} else {
		return "";
	}
};
String.prototype.ReplaceAll = function(sSrc, sDst) {
	return this.replace(new RegExp(sSrc, "gm"), sDst);
};
String.prototype.GetAnchorName = function(bDecode) {
	if(bDecode == null || bDecode == undefined || bDecode) {
		return unescape(this.substr(this.indexOf("#") + 1));
	} else {
		return this.substr(this.indexOf("#") + 1);
	}
};
String.prototype.QueryStrings = function(bDecode) {
	var aVars = [],
		sHash, sValue;
	var aHashes = this.slice(this.indexOf('?') + 1).split('&');
	for(var i = 0; i < aHashes.length; i++) {
		sHash = aHashes[i].split('=');
		if(sHash.length > 1) {
			aVars.push(sHash[0]);
			sValue = sHash[1];
			if(sValue.indexOf('#') != -1) {
				sValue = sValue.substr(0, sValue.indexOf('#'));
			}
			if(bDecode == null || bDecode == undefined || bDecode) {
				aVars[sHash[0]] = unescape(sValue);
			} else {
				aVars[sHash[0]] = sValue;
			}
		}
	}
	return aVars;
};
String.prototype.QueryString = function(sName, bDecode) {
	return this.QueryStrings(bDecode)[sName];
};
String.prototype.FormatNumber = function() {
	try {
		return accounting.formatNumber(parseFloat(this), 2);
	} catch(e) {
		return this;
	}
};
String.prototype.Eval = function() {
	try {
		var _func = this.toString();
		return eval(_func);
	} catch(e) {
		if(console) {
			console.log('Eval exception: \n' + e);
		} else {
			alert('Eval exception: \n' + e);
		}
	}
	return false;
};
String.prototype.ASCII = function() {
	return this.charCodeAt(0);
};
String.prototype.FromASCII = function(charcode) {
	return String.fromCharCode(charcode);
};
String.prototype.Reverse = function() {
	return this.split("").reverse().join("");
};
String.prototype.Left = function(n) {
	return this.slice(0, n);
};
String.prototype.Right = function(n) {
	return this.slice(this.length - n);
};
String.prototype.ByteLen = function() {
	return this.replace(/[^x00-xff]/g, "--").length;
};
String.prototype.Replace = function(oldStr, newStr) {
	return this.replace(oldStr, newStr);
};
String.prototype.LTrim = function() {
	return this.replace(/^\s+/, "");
};
String.prototype.RTrim = function() {
	return this.replace(/\s+$/g, "");
};
String.prototype.ToDBC = function(sourcestr) {
	var endvalue = '';
	for(var charati = 0; charati < sourcestr.length; charati++) {
		endvalue += String.fromCharCode(sourcestr.charCodeAt(charati) + 65248);
	}
	return endvalue;
};
String.prototype.RepeatTimes = function(str) {
	return this.split(str).length - 1;
};
String.prototype.ExistsDBC = function() {
	var value = this.match(/[^\x00-\xff]/ig);
	if(value != null) {
		return true;
	} else {
		return false;
	}
};
String.prototype.XMLEncode = function(str) {
	str = $.trim(str);
	str = str.replace("&", "&amp;");
	str = str.replace("<", "&lt;");
	str = str.replace(">", "&gt;");
	str = str.replace("'", "&apos;");
	str = str.replace("\"", "&quot;");
	return str;
};
String.prototype.IsInt = function(intValue) {
	var reg = /^[-|+]?[1-9]*$/;
	return reg.test(intValue);
};
String.prototype.IsDate = function() {
	var reg = /^[\d]{4}([-|/])([0]?[1-9]|[1][0-2])([-|/])([0]?[1-9]|[1-2]\d|[3][0-1])$/;
	return reg.test(this);
};
String.prototype.IsIP = function() {
	var reg = /^(25[0-5]|2[0-4]\d|[0-1]\d{2}|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d{2}|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d{2}|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d{2}|[1-9]?\d)$/;
	return reg.test(this);
};
String.prototype.IsNumeric = function(num) {
	var reg = /^([+-]?)\d*\.?\d+$/;
	return reg.test(num);
};
String.prototype.IsTime = function() {
	var reg = /^([0-1]\d|2[0-3]):[0-5]\d:[0-5]\d$/;
	return reg.test(this);
};
String.prototype.IsDateTime = function() {
	var reg = /^[\d]{4}([-|/])([0]?[1-9]|[1][0-2])([-|/])([0]?[1-9]|[1-2]\d|[3][0-1])\s([0-1]\d|2[0-3]):[0-5]\d:[0-5]\d$/;
	return reg.test(this);
};
String.prototype.ToFloat = function() {
	var _float = 0;
	try {
		_float = parseFloat(this);
	} catch(e) {
		_float = 0;
	}
	if(isNaN(_float)) {
		_float = 0;
	}
	return _float;
};
String.prototype.ToInt = function() {
	var _int = 0;
	try {
		_int = parseInt(this);
	} catch(e) {
		_int = 0;
	}
	if(isNaN(_int)) {
		_int = 0;
	}
	return _int;
};
Math.Random = function(min, max) {
	var _min = 0;
	var _max = 0;
	try {
		_min = parseFloat(min);
		_max = parseFloat(max);
	} catch(e) {
		_min = 0;
		_max = 0;
	}
	if(isNaN(_min) || isNaN(_max)) {
		_min = 0;
		_max = 0;
	}
	return parseInt(Math.random() * (_max - _min + 1) + _min);
};
Math.Max = function(array) {
	var i = array[0];
	for(var n = 0; n < array.length; n++) {
		try {
			array[n] = parseFloat(array[n]);
			i = parseFloat(i);
			if(array[n] > i) {
				i = array[n];
			}
		} catch(e) {
			array[n] = 0;
			i = 0;
		}
		if(isNaN(array[n]) || isNaN(i)) {
			i = 0;
		}
	}
	return i;
};
Math.Min = function(array) {
	var i = array[0];
	for(var n = 0; n < array.length; n++) {
		try {
			array[n] = parseFloat(array[n]);
			i = parseFloat(i);
			if(array[n] < i) {
				i = array[n];
			}
		} catch(e) {
			array[n] = 0;
			i = 0;
		}
		if(isNaN(array[n]) || isNaN(i)) {
			i = 0;
		}
	}
	return i;
};
Date.prototype.DateAdd = function(strInterval, NumDay, dtDate) {
	var _numDay = parseInt(NumDay);
	var _date;
	if(dtDate != null) {
		var tmpdate, tmptime;
		tmpdate = dtDate.split(" ")[0];
		tmptime = dtDate.split(" ")[1];
		if(tmptime != null) {
			var dtTmp = new Date(dtDate.replace(/-/g, "/"));
		} else {
			var dtTmp = new Date(dtDate.replace(/-/g, "/"));
		}
	} else {
		dtTmp = new Date();
	}
	if(isNaN(dtTmp)) {
		dtTmp = new Date();
	}
	switch(strInterval) {
		case "s":
			_date = new Date(Date.parse(dtTmp) + (1000 * _numDay));
			return _date;
		case "n":
			_date = new Date(Date.parse(dtTmp) + (60000 * _numDay));
			return _date;
		case "h":
			_date = new Date(Date.parse(dtTmp) + (3600000 * _numDay));
			return _date;
		case "d":
			_date = new Date(Date.parse(dtTmp) + (86400000 * _numDay));
			return _date;
		case "w":
			_date = new Date(Date.parse(dtTmp) + ((86400000 * 7) * _numDay));
			return _date;
		case "m":
			_date = new Date(dtTmp.getFullYear(), (dtTmp.getMonth()) + _numDay, dtTmp.getDate());
			return _date;
		case "y":
			_date = new Date((dtTmp.getFullYear() + _numDay), dtTmp.getMonth(), dtTmp.getDate());
			return _date;
	}
};
Date.prototype.DaySpan = function(startDate, endDate) {
	var d1 = new Date(startDate.replace(/-/g, "/"));
	var d2 = new Date(endDate.replace(/-/g, "/"));
	var time = d2.getTime() - d1.getTime();
	return parseInt(time / (1000 * 60 * 60 * 24));
};
Date.prototype.GetTime = function(str) {
	var _date;
	if(str != "") {
		_date = new Date(str);
	} else {
		_date = new Date();
	}
	var _str = _date.toTimeString();
	var _time = _str.split(" ")[0];
	return _time;
};
Date.prototype.GetDate = function(str) {
	var _date;
	if(str != "") {
		_date = new Date(str);
	} else {
		_date = new Date();
	}
	var _str = _date.toLocaleDateString();
	var _dateStr = _date.ToString(_str);
	return _dateStr;
};
Date.prototype.IsWeekend = function(year) {
	var weektype = 2;
	var currentdate;
	if(year != null) {
		if(year.indexOf("/") != -1) {
			currentdate = new Date(year.split("/")[0], year.split("/")[1] - 1, year.split("/")[2]);
		} else {
			currentdate = new Date(year.split("-")[0], year.split("-")[1] - 1, year.split("-")[2]);
		}
		if(parseInt(currentdate.getDay()) == 0) {
			return(true);
		} else {
			if(parseInt(currentdate.getDay()) == 6) {
				return true;
			}
		}
	}
	return false;
};
Date.prototype.TimeSpan = function(startDateTime, endDateTime) {
	var regTime = /(\d{4})-(\d{1,2})-(\d{1,2})( \d{1,2}:\d{1,2})/g;
	var interval = Math.abs(Date.parse(startDateTime.replace(regTime, "$2-$3-$1$4")) - Date.parse(endDateTime.replace(regTime, "$2-$3-$1$4"))) / 1000;
	var h = Math.floor(interval / 3600);
	var m = Math.floor(interval % 3600 / 60);
	return h + "小时" + m + "分钟";
};
Date.prototype.IsLead = function(year) {
	var leadyear;
	if(year % 4 == 0 && year % 100 != 0) {
		return true;
	} else if(year % 400 == 0) {
		return true;
	} else {
		return false;
	}
};
Date.prototype.AddDaies = function(date, days) {
	var date = new Date(Date.parse(date.replace(/\-/g, '/')));
	var interTimes = days * 24 * 60 * 60 * 1000;
	var _date = new Date(Date.parse(date) + interTimes);
	return _date;
};
Date.prototype.AddSeconds = function(date, seconds) {
	var date = new Date(Date.parse(date.replace(/\-/g, '/')));
	var interTimes = seconds * 1000;
	var _date = new Date(Date.parse(date) + interTimes);
	return _date;
};
Date.prototype.AddMSeconds = function(date, mseconds) {
	var date = new Date(Date.parse(date.replace(/\-/g, '/')));
	var interTimes = parseInt(mseconds);
	var _date = new Date(Date.parse(date) + interTimes);
	return _date;
};
Date.prototype.ToString = function(str) {
	var _date;
	if(str != null) {
		var arr = str.split(/年|月|日|:/);
		_date = arr[0] + "-" + arr[1] + "-" + arr[2];
	}
	if(_date.IsDate()) {
		return _date;
	} else {
		return "";
	}
}
Array.prototype.IndexOf = function(index) {
	for(var i = 0; i < this.length; i++) {
		if(parseInt(this[i]) === index) {
			return i;
		}
	}
	return -1;
};
Array.prototype.LastIndexOf = function(index) {
	var l = this.length;
	for(var i = l - 1; i >= 0; i--) {
		if(parseInt(this[i]) === index) {
			return i;
		}
	}
	return -1;
};
Array.prototype.RemoveAt = function(dx) {
	this.splice(dx, 1);
	return this;
};
Array.prototype.InsertAt = function(index, obj) {
	this.splice(index, 0, obj);
	return this;
};
Array.prototype.RemoveItem = function(obj) {
	var index = this.IndexOf(obj);
	var result = null;
	if(index >= 0) {
		result = this.RemoveAt(index);
	}
	return result;
};
Array.prototype.RemoveRepeat = function(m) {
	var k = 0,
		j = 0,
		n = 0;
	var array = new Array();
	for(var i = 0; i < m; i++) {
		for(j = i + 1; j < m; j++) {
			if(this[i] == this[j]) {
				this[i] = null;
			}
		}
	}
	for(var i = 0; i < m; i++) {
		if(this[i]) {
			array[k++] = this[i];
		}
	}
	return array;
};
Array.prototype.RemoveLeft = function(num) {
	this.splice(0, num);
	return this;
};
Array.prototype.RemoveRight = function(num) {
	this.splice(this.length - num, num);
	return this;
};
Array.prototype.Left = function(len) {
	return this.slice(0, len);
};
Array.prototype.Right = function(len) {
	if(len >= this.length) {
		return this.concat();
	}
	return this.slice(this.length - len, this.length);
};
Array.prototype.Mid = function(start, len) {
	return this.slice(start, start + len);
};
Array.prototype.RandomItem = function() {
	var lownum = 1;
	var upnum = this.length;
	var t = parseInt(upnum - lownum + 1) * Math.random() + lownum;
	return this[parseInt(t) - 1];
};
Array.prototype.RandomSort = function() {
	return this.sort(function() {
		return Math.random() * new Date % 3 - 1;
	});
};
Array.prototype.RandomItems = function(lownum, upnum, count) {
	if(count > (upnum - lownum + 1)) {
		count = upnum - lownum + 1;
	}
	var res = new Array();
	for(var i = 0; i < count; i++) {
		var t = parseInt(upnum - lownum + 1) * Math.random() + lownum;
		if(numberindexOf(res, this[parseInt(t)]) != -1) {
			i--;
		} else {
			res.push(this[parseInt(t)]);
		}
	}
	return res;

	function numberindexOf(source, findnum) {
		var l = source.length;
		for(var i = 0; i < l; i++) {
			if(source[i] === findnum) {
				return i
			}
		}
		return -1;
	}
};
jQuery.fn.outerHTML = function() {
	return jQuery("<p>").append(this.eq(0).clone()).html();
};
$.fn.serializeObject = function() {
	var _out = {};
	var _in = this.serializeArray();
	$.each(_in, function() {
		if(_out[this.name] !== undefined) {
			if(!_out[this.name].push) {
				_out[this.name] = [_out[this.name]];
			}
			_out[this.name].push(this.value || '');
		} else {
			_out[this.name] = this.value || '';
		}
	});
	return _out;
};
jQuery.fn.shake = function(intShakes, intDistance, intDuration, foreColor) {
	this.each(function() {
		if(foreColor && foreColor != "null") {
			$(this).css("color", foreColor);
		}
		$(this).css("position", "relative");
		for(var x = 1; x <= intShakes; x++) {
			$(this).animate({
				left: (intDistance * -1)
			}, (((intDuration / intShakes) / 4)));
			$(this).animate({
				left: intDistance
			}, ((intDuration / intShakes) / 2));
			$(this).animate({
				left: 0
			}, (((intDuration / intShakes) / 4)));
			$(this).css("color", "");
		}
	});
	return this;
};
$.extend({});
window.NSF = function() {};
NSF.Name = "NSF Javascript Framework";
NSF.Author = "Guo HongLiang";
NSF.Version = "0.1.4";
NSF.PublishDate = "2014-9-1";
NSF.UrlVars = function() {
	this.Name = "NSF.UrlVars";
	this.Author = "Guo HongLiang";
	this.Version = "0.1.4";
	this.PublishDate = "2014-10-14";

	function constructor() {} {
		constructor();
	}
};
NSF.UrlVars.Exists = function(sName, url) {
	var _url;
	if(url != "" && url != null) {
		_url = url;
	} else {
		_url = window.location.href;
	}
	if(-1 == _url.indexOf("?" + sName + "=") &&
		-1 == _url.indexOf("&" + sName + "=")) {
		return false;
	} else {
		return true;
	}
};
NSF.UrlVars.Get = function(sName, url) {
	if(NSF.UrlVars.Exists(sName, url)) {
		return NSF.UrlVars.List(url)[sName];
	} else {
		return "";
	}
};
NSF.UrlVars.Set = function(sName, sValue, sUrl) {
	var _url = '';
	if(sUrl && sUrl != "") {
		_url = sUrl;
	} else {
		_url = window.location.href;
	}
	if(NSF.UrlVars.Exists(sName, _url)) {
		var _re = eval('/([&|?]' + sName + '=)([^&]*)/gi');
		if(_url.indexOf("&" + sName + "=") == -1) {
			return _url.replace(_re, "?" + sName + '=' + sValue);
		} else {
			return _url.replace(_re, "&" + sName + '=' + sValue);
		}
	} else {
		if(_url.indexOf("?") != -1) {
			return _url + "&" + sName + '=' + sValue;
		} else {
			return _url + "?" + sName + '=' + sValue;
		}
	}
};
NSF.UrlVars.List = function(url) {
	if(url != "" && url != null) {
		return url.QueryStrings();
	} else {
		return window.location.href.QueryStrings();
	}
};
NSF.UrlVars.Json = function(url) {
	var _vars = NSF.UrlVars.List(url);
	var _json = {};
	for(var i = 0; i < _vars.length; i++) {
		var _name = _vars[i];
		if(_name) {
			_json[_name.toLowerCase()] = _vars[_name];
		}
	}
	return _json;
};
NSF.UrlVars.Remove = function(sName, sUrl) {
	var _url = '';
	var _array;
	if(sUrl && sUrl != "") {
		_url = sUrl;
	} else {
		_url = window.location.href;
	}
	if(NSF.UrlVars.Exists(sName, _url)) {
		var _value = NSF.UrlVars.Get(sName, _url);
		if(_url.indexOf("?" + sName) != -1) {
			if(_url.indexOf("?" + sName + '=' + _value + "&") != -1) {
				return _url.replace("?" + sName + '=' + _value + "&", "?");
			} else {
				return _url.replace("?" + sName + '=' + _value, "");
			}
		} else if(_url.indexOf("&" + sName) != -1) {
			return _url.replace("&" + sName + '=' + _value, "");
		}
	} else {
		if(_url.indexOf('?') != -1) {
			_array = _url.split('?');
			return _url.replace('?' + _array[1], "");
		}
	}
};
NSF.Envoriment = function() {
	this.Name = "NSF.Envoriment";
	this.Author = "Guo HongLiang";
	this.Version = "0.0.1";
	this.PublishDate = "2015-8-18";

	function constructor() {} {
		constructor();
	}
};
NSF.Envoriment.Html5 = function() {
	if(window.applicationCache) {
		return true;
	} else {
		return false;
	}
};
NSF.Config = function() {
	this.Name = "NSF.Config";
	this.Author = "Guo HongLiang";
	this.Version = "0.0.1";
	this.PublishDate = "2014-9-30";

	function constructor() {} {
		constructor();
	}
};
NSF.Config.Mode = 'ZM';
NSF.Config.Debug = false;﻿
NSF.System = function() {
	this.Name = "NSF.System";
	this.Author = "Guo HongLiang";
	this.Version = "0.0.1";
	this.PublishDate = "2014-9-1";

	function constructor() {} {
		constructor();
	}
};
NSF.System.Json = function() {
	this.Name = "NSF.System.Json";
	this.Author = "Guo HongLiang";
	this.Version = "0.0.1";
	this.PublishDate = "2014-10-14";

	function constructor() {} {
		constructor();
	}
};
NSF.System.Json.ToString = function(obj) {
	if(JSON) {
		try {
			return JSON.stringify(obj);
		} catch(e) {
			return JsonToString(obj);
		}
	} else {
		return JsonToString(obj);
	}

	function JsonToString(obj) {
		var THIS = this;
		switch(typeof(obj)) {
			case 'string':
				return '"' + obj.replace(/(["\\])/g, '\\$1') + '"';
			case 'array':
				return '[' + obj.map(THIS.JsonToString).join(',') + ']';
			case 'object':
				if(obj instanceof Array) {
					var strArr = [];
					var len = obj.length;
					for(var i = 0; i < len; i++) {
						strArr.push(THIS.JsonToString(obj[i]));
					}
					return '[' + strArr.join(',') + ']';
				} else if(obj == null) {
					return 'null';
				} else {
					var string = [];
					for(var property in obj) {
						string.push(THIS.JsonToString(property) + ':' + THIS.JsonToString(obj[property]));
					}
					return '{' + string.join(',') + '}';
				}
			case 'number':
				return obj;
			case false:
				return obj;
		}
	}
};
NSF.System.Json.ToJson = function(str) {
	if(JSON) {
		try {
			return JSON.parse(str);
		} catch(e) {
			return eval('(' + str + ')');
		}
	} else {
		return eval('(' + str + ')');
	}
};
NSF.System.LoadScript = function(id, code) {
	var oHead, oScript, result = false;
	if(code != "" && code != null) {
		try {
			oHead = document.getElementsByTagName("HEAD").item(0);
		} catch(e) {
			oHead = null;
		}
		if(oHead) {
			try {
				oScript = document.createElement("script");
			} catch(e) {
				oScript = null;
			}
			if(oScript) {
				try {
					oScript.id = id;
					oScript.type = "text/javascript";
					oScript.defer = true;
					oScript.text = code;
					oHead.appendChild(oScript);
					result = true;
				} catch(e) {}
			}
		}
	}
	return result;
};
NSF.System.FunctionExist = function(str) {
	try {
		if(typeof(eval(str)) == "function") {
			return true;
		}
	} catch(e) {
		return false;
	}
};
NSF.System.IsNull = function(val) {
	try {
		if(typeof(val) == "undefined") {
			return true;
		} else if(val == null) {
			return true;
		}
		return false;
	} catch(e) {
		return true;
	}
};
NSF.System.uuid = function() {
	var s = [];
	var hexDigits = "0123456789abcdef";
	for(var i = 0; i < 36; i++) {
		s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);
	}
	s[14] = "4";
	s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);
	s[8] = s[13] = s[18] = s[23] = "-";
	var uuid = s.join("");
	return uuid;
};
NSF.System.ThrowInfo = function(sInfo) {
	var _debug = NSF.Config.Debug;
	if(_debug) {
		try {
			if(console) {
				console.log(sInfo);
			} else {
				alert(sInfo);
			}
		} catch(e) {
			alert('error code: ' + e.number + '\ndescription: ' + e.description);
		}
	}
	return;
};
NSF.System.Definition = function() {
	this.Name = "NSF.System.Definition";
	this.Author = "Guo HongLiang";
	this.Version = "0.0.1";
	this.PublishDate = "2014-9-30";

	function constructor() {} {
		constructor();
	}
};
NSF.System.Definition.Interface = function(key) {
	var _value = '';
	if(key == 'SystemData') {
		if(NSF.Config.Mode == 'JDT') {
			_value = 'portal.cn';
		} else {
			_value = 'portal.aspx';
		}
	}
	return _value;
};
NSF.System.Definition.Envoriment = {
	MaxRows: 65536,
	DataIsland: 'view-id',
	DataField: 'view-fld',
	DataStat: 'view-stat',
	DataSubStat: 'view-subStat'
};
NSF.System.Definition.KeyCode = {
	BackSpace: 8,
	Delete: 46,
	Home: 36,
	End: 35,
	PageUp: 33,
	PageDown: 34,
	UpArrow: 38,
	DownArrow: 40,
	RightArrow: 39,
	LeftArrow: 37
};﻿
NSF.System.Network = function() {
	this.Name = "NSF.System.Network";
	this.Author = "Guo HongLiang";
	this.Version = "0.0.1";
	this.PublishDate = "2014-9-1";

	function constructor() {} {
		constructor();
	}
};
NSF.System.Network.Ajax = function(url, params, type, cross, callback) {
	if(!type) {
		type = "GET";
	}
	if(type != "GET" && type != "POST") {
		type = "GET";
	}
	$.ajax({
		async: false,
		url: url,
		dataType: (cross ? "jsonp" : "json"),
		jsonp: (cross ? 'callback' : ''),
		type: type,
		data: params,
		error: function(reqObj, status, err) {
			if(callback) {
				callback(false, '{ "status" : "' + status + '", "err" : "' + err + '" } ');
			} else {
				NSF.System.ThrowInfo('status: ' + status + '\nerr: ' + err);
			}
		},
		success: function(data) {
			if(callback) {
				callback(true, data);
			} else {
				NSF.System.ThrowInfo(data);
			}
		}
	});
};﻿
NSF.System.Data = function() {
	this.Name = "NSF.System.Data";
	this.Author = "Guo HongLiang";
	this.Version = "0.0.1";
	this.PublishDate = "2014-9-1";

	function constructor() {} {
		constructor();
	}
};
NSF.System.Data.ReplaceJsonData = function(str, json) {
	for(var key in json) {
		str = str.ReplaceAll('@' + key.toLowerCase() + '@', json[key]);
	}
	return str;
};
NSF.System.Data.GetDataParams = function(config) {
	var _pml = [{}];
	_pml[0].namespace = 'protocol';
	_pml[0].cmd = 'data';
	_pml[0].version = 1;
	if(config.id) {
		_pml[0].id = config.id;
	}
	var para = [];
	var pObj = {};
	_pml[0].paras = config.paras;
	if(config.page) {
		var _pageJson = {};
		_pageJson.name = "page";
		_pageJson.value = config.page;
		_pml[0].paras.push(_pageJson);
	}
	if(config.rows) {
		var _rowsJson = {};
		_rowsJson.name = "rows";
		_rowsJson.value = config.rows;
		_pml[0].paras.push(_rowsJson);
	}
	return _pml;
};
NSF.System.Data.GetDefineParams = function(config) {
	var _pml = [{}];
	_pml[0].namespace = 'protocol';
	_pml[0].cmd = 'define';
	_pml[0].version = 1;
	if(config.id) {
		_pml[0].id = config.id;
	}
	return _pml;
};
NSF.System.Data.RecordSet = function(sUrl, config, callback) {
	var jsonParams = NSF.System.Data.GetDataParams(config);
	var _cross = config.cross;
	if(_cross == 'false') {
		_cross = false;
	} else {
		_cross = true;
	}
	var _jsonParams = NSF.System.Json.ToString(jsonParams);
	sUrl += NSF.System.Definition.Interface('SystemData');
	NSF.System.Network.Ajax(sUrl, _jsonParams, 'POST', _cross, function(successed, data) {
		var _err = "";
		if(successed && data[0]) {
			if(data[0].result) {
				if(callback) {
					if(data[0].rs) {
						callback(data[0].result, config, data[0].rs);
					} else {
						if(data.msg) {
							_err = data.msg;
						} else {
							_err = "server error!";
						}
					}
				} else {
					NSF.System.ThrowInfo("NSF.System.Data.Rows, result: ");
					NSF.System.ThrowInfo(data.rows);
				}
			} else {
				if(data.err) {
					_err = data.err;
				} else {
					_err = "unknown error!";
				}
			}
		} else {
			if(data && data.err) {
				_err = data.err;
			} else {
				_err = "unknown error!";
			}
		}
		if(_err != "") {
			if(callback) {
				callback(false, config, {
					err: _err
				});
			} else {
				NSF.System.ThrowInfo("NSF.System.Data.Rows, err: \n" + _err);
			}
		}
	});
};
NSF.System.Data.Definition = function(sUrl, config, callback) {
	var jsonParams = NSF.System.Data.GetDefineParams(config);
	var _cross = config.cross;
	if(_cross == 'false') {
		_cross = false;
	} else {
		_cross = true;
	}
	sUrl += NSF.System.Definition.Interface('SystemData');
	jsonParams = NSF.System.Json.ToString(jsonParams);
	NSF.System.Network.Ajax(sUrl, jsonParams, 'POST', _cross, function(successed, data) {
		var _err = "";
		if(successed && data[0]) {
			if(data[0].result) {
				if(callback) {
					if(data[0].columns) {
						callback(data[0].result, config, data[0].columns);
					} else {
						if(data.msg) {
							_err = data.msg;
						} else {
							_err = "server error!";
						}
					}
				} else {
					NSF.System.ThrowInfo("NSF.System.Data.Columns, result: ");
					NSF.System.ThrowInfo(data.fields);
				}
			} else {
				if(data.err) {
					_err = data.err;
				} else {
					_err = "unknown error!";
				}
			}
		} else {
			if(data && data.err) {
				_err = data.err;
			} else {
				_err = "unknown error!";
			}
		}
		if(_err != "") {
			if(callback) {
				callback(false, config, {
					err: _err
				});
			} else {
				NSF.System.ThrowInfo("NSF.System.Data.Columns, err: \n" + _err);
			}
		}
	});
};
NSF.System.Data.Grid = function() {
	var __name = null;
	var __sender = null;
	var __rowscount = 0;
	var __pagesize = 0;
	var __pagination = null;
	var __print = null;
	var __pageBuilder = null;
	var __rowsBuilder = null;
	this.Name = "NSF.System.Data.Grid";
	this.Author = "Guo HongLiang";
	this.Version = "0.0.2";
	this.PublishDate = "2014-10-9";

	function SubStat(container, sender, rows, i) {
		var _doSubitem = false;
		var _row = rows[i];
		var _rowNext = null;
		var _rowLast = null;
		if(rows.length > (i + 1)) {
			_rowNext = rows[i + 1];
			_rowLast = rows[i - 1];
		}
		var _rowCount = _rowCount;
		sender.find("[" + NSF.System.Definition.Envoriment.DataSubStat + "]").each(function(index) {
			var swSubStat = NSF.System.Json.ToJson($(this).attr('"' + NSF.System.Definition.Envoriment.DataSubStat + '"'));
			var field = new NSF.System.Data.FieldProcessor();
			_doSubitem = field.SubStat($(this), _row, swSubStat, _rowNext, i, _rowCount);
		});
		if(_doSubitem) {
			var _html = $(sender.outerHTML());
			_html.find('[' + NSF.System.Definition.Envoriment.DataField + ']').removeAttr(NSF.System.Definition.Envoriment.DataField);
			_html.removeAttr("id");
			container.before(_html);
			sender.find('[' + NSF.System.Definition.Envoriment.DataSubStat + ']').text('');
			_doSubitem = false;
			_rowNo += 1;
			_subStatNO += 1;
			if(__print) {
				__print.PrintPagination(__sender, _rowNo);
			}
		}
	}

	function Stat(sender, rows, i) {
		var _rowCount = rows.length;
		var _row = rows[i];
		var _rowNext = null;
		if(rows.length > (i + 1)) {
			_rowNext = rows[i + 1];
		}
		sender.find('[' + NSF.System.Definition.Envoriment.DataStat + ']').each(function(index) {
			var swStat = NSF.System.Json.ToJson($(this).attr('"' + NSF.System.Definition.Envoriment.DataStat + '"'));
			var field = new NSF.System.Data.FieldProcessor();
			field.Stat($(this), _row, swStat, _rowNext, i, _rowCount);
		});
	}
	this.RowsCbk = function(cbk) {
		if(cbk && typeof(cbk) == 'function') {
			__rowsBuilder = cbk;
		}
		return;
	};
	this.PageCbk = function(cbk) {
		if(cbk && typeof(cbk) == 'function') {
			__pageBuilder = cbk;
		}
		return;
	};
	this.RowsCount = function() {
		return __rowscount;
	};
	this.PageSize = function() {
		return __pagesize;
	};
	this.Pagination = function(sName, containerObj) {
		if(__pagination) {
			NSF.System.ThrowInfo("NSF.System.Data.Grid, The pagination object has been configured!");
			return;
		}
		__pagination = new NSF.System.Data.Pagination(sName, containerObj);
		return;
	};
	this.Print = function(container, header, footer, height, rows) {
		if(__print) {
			NSF.System.ThrowInfo("NSF.System.Data.Grid, The pagination object has been configured!");
			return;
		}
		__print = new NSF.System.Data.PrintArea(container, header, footer, height, rows);
		return;
	};
	this.Show = function(result, config, data) {
		if(result && __sender) {
			var _stat = $("#" + config.stat);
			var _subStat = $("#" + config.subStat);
			var _doSubitem = false;
			var _rowNo = 0;
			var _subStatNo = 0;
			var _statNo = 0;
			var _totalRecs = 0;
			var datas = null;
			var data1 = null;
			if(__print) {
				__print.Initialize(config.page, data.count, data.total);
			}
			if(__pagination != null && data.length > 1) {
				datas = data[1].rows;
				data1 = data[0].rows;
				_totalRecs = data1[0].Total_RecsAmount;
			} else {
				if(data[0]) {
					datas = data[0].rows;
				} else {
					datas = [];
				}
			}
			for(var i = 0; i < datas.length; i++) {
				var _row = $(__sender.outerHTML());
				_row.find('[' + NSF.System.Definition.Envoriment.DataField + ']').each(function(index) {
					var swDef = $(this).attr(NSF.System.Definition.Envoriment.DataField);
					var sw = NSF.System.Json.ToJson(swDef);
					var field = new NSF.System.Data.FieldProcessor();
					field.Normal(datas[i], sw, $(this));
					if(sw.trClass) {
						$(this).addClass(sw.trClass);
					}
				});
				if(i % 2 == 0) {
					_row.addClass(config.oddClass);
				} else {
					_row.addClass(config.evenClass);
				}
				_row.removeAttr('name');
				_row.removeAttr(NSF.System.Definition.Envoriment.DataIsland);
				_row.find('[' + NSF.System.Definition.Envoriment.DataField + ']').removeAttr(NSF.System.Definition.Envoriment.DataField);
				_row.addClass(config.rowIdentClass);
				if(typeof(config.rowVisible) != "undefined" &&
					config.rowVisible != null &&
					config.rowVisible.toString().toLowerCase() == "false") {
					_row.hide();
				} else {
					_row.show();
				}
				__sender.before(_row);
				_rowNo += 1;
				if(__print) {
					__print.PrintPagination(__sender, _rowNo);
				}
				if(_subStat) {
					SubStat(__sender, _subStat, datas, i);
				}
				if(_stat) {
					Stat(_stat, datas, i);
				}
			}
			if(__print) {
				__print.SetPrintTotalPage(__sender, data.rows.length + _subStatNo);
			}
			$('[' + NSF.System.Definition.Envoriment.DataStat + ']').removeAttr('[' + NSF.System.Definition.Envoriment.DataStat + ']');
			if(_subStat) {
				_subStat.remove();
			}
			if(config.ev) {
				var __func = config.ev;
				if(datas && datas.length > 0) {
					__func = NSF.System.Data.ReplaceJsonData(__func, datas[0]);
				}
				__func.Eval();
			}
			__rowscount = _totalRecs;
			var _paras = config.paras;
			var _page = 0;
			for(var k = 0; k < _paras.length; k++) {
				if((_paras[k].name).toLowerCase() == 'rows') {
					__pagesize = _paras[k].value;
				} else if((_paras[k].name).toLowerCase() == 'page') {
					_page = _paras[k].value;
				}
			}
			if(__pagesize < NSF.System.Definition.Envoriment.MaxRows && __rowscount > __pagesize) {
				if(__pagination) {
					if(__pagination.IsReady()) {
						__pagination.Show();
					} else {
						__pagination.Initialize(__pagesize, __rowscount, _page);
					}
				} else {
					NSF.System.ThrowInfo("NSF.System.Data.Grid, the  pagination object is invalid!");
				}
			}
		}
	};
	this.Initialize = function(sUrl, sName, config, sender, json) {
		__name = sName;
		__sender = sender;
		__sender.hide();
		if(json) {
			var _json = NSF.System.Json.ToJson(json);
			if(!(NSF.System.IsNull(_json.view_id))) {
				NSF.System.Definition.Envoriment.DataIsland = _json.view_id;
			}
			if(!(NSF.System.IsNull(_json.view_fld))) {
				NSF.System.Definition.Envoriment.DataField = _json.view_fld;
			}
			if(!(NSF.System.IsNull(_json.view_stat))) {
				NSF.System.Definition.Envoriment.DataStat = _json.view_stat;
			}
			if(!(NSF.System.IsNull(_json.view_subStat))) {
				NSF.System.Definition.Envoriment.DataSubStat = _json.view_subStat;
			}
		}
		if(config) {
			config = NSF.System.Json.ToJson(config);
			if(typeof(config.rowIdentClass) != "undefined" &&
				config.rowIdentClass != "") {
				$(document).find('.' + config.rowIdentClass).remove();
			}
			config.refObj = this;
			NSF.System.Data.RecordSet(sUrl, config, this.Show);
		}
		return;
	};

	function constructor() {
		__name = "";
	} {
		constructor();
	}
};
NSF.System.Data.Pagination = function(sName, container) {
	var __name = null;
	var __container = null;
	var __controller = null;
	var __current = 0;
	var __pagesize = null;
	var __total = null;
	var __pageamount = null;
	this.Name = "NSF.System.Data.Pagination";
	this.Author = "Guo HongLiang";
	this.Version = "0.0.1";
	this.PublishDate = "2014-10-8";

	function GetUrl(pageno) {
		var _url = location.href;
		if(_url.indexOf("?") > -1) {
			if(NSF.UrlVars.Exists(__name, _url)) {
				_url = NSF.UrlVars.Set(__name, pageno, _url);
			} else {
				_url += "&" + __name;
				_url += "=" + pageno;
			}
		} else {
			_url += "?" + __name;
			_url += "=" + pageno;
		}
		return _url;
	}

	function Point(refObj) {
		var _controler = $('<li class="omitted">...</li>');
		refObj.after(_controler);
		return _controler;
	}

	function Button(refObj, pageno) {
		if(pageno != 0) {
			var _html = '<li';
			if(__current == pageno) {
				_html += ' class="active"';
			}
			_html += '><a href="javascript:void(0)"></a></li>'
			var _controler = $(_html);
			_controler.find("a").attr("onclick", "page(" + pageno + ")");
			_controler.find("a").text(pageno);
			refObj.after(_controler);
			return _controler;
		} else {
			return null;
		}
	}

	function Next() {
		if(__current >= __pageamount) {
			return __pageamount;
		} else {
			return __current + 1;
		}
	}

	function Prev() {
		if(__current <= 1) {
			return 1;
		} else {
			return __current - 1;
		}
	}

	function Buttons(refObj) {
		if(__pageamount > 5) {
			var _prev = Prev();
			var _next = Next();
			var __ref = Button(refObj, 1);
			if(_prev > 1) {
				if(_prev - 1 != 1) {
					__ref = Point(__ref);
				}
				__ref = Button(__ref, _prev);
			}
			if(__current != 1 && __current != __pageamount) {
				__ref = Button(__ref, __current);
			}
			if(_next != __pageamount) {
				__ref = Button(__ref, _next);
				if(_next + 1 != __pageamount) {
					__ref = Point(__ref);
				}
			}
			Button(__ref, __pageamount);
			if(__pageamount != 1 &&
				__pageamount != _prev &&
				__pageamount != _next &&
				__pageamount != __current) {}
		} else {
			for(var i = __pageamount; i >= 1; i--) {
				Button(refObj, i);
			}
		}
		return;
	}
	this.Current = function(_t) {
		if(!$.isNumeric(_t)) {
			__current = 1;
		} else {
			try {
				__current = parseInt(_t, 10);
			} catch(e) {
				__current = 1;
			}
		}
		return __current;
	};
	this.Show = function() {
		if(__pageamount > 0) {
			var _prev = Prev();
			var _next = Next();
			__controller.find("li.prev a").eq(0).attr("onclick", "page(" + _prev + ")");
			__controller.find("li.next a").eq(0).attr("onclick", "page(" + _next + ")");
			if(__controller.find('.active').text() != '') {
				__controller.find("li").not('li.prev,li.next,li.showrec').each(function(index) {
					$(this).remove();
				});
			}
			Buttons(__controller.find("li.prev"));
			__controller.find("li.showrec span.pagesize").text(__pagesize);
			__controller.find("li.showrec span.recamount").text(__total);
		} else {
			this.Hidden();
		}
		return;
	};
	this.hidden = function() {
		if(__container) {
			__container.remove();
		}
		return;
	};
	this.IsReady = function() {
		if(__pagesize && __total && __pageamount) {
			return true;
		}
		return false;
	};
	this.Initialize = function(pagesize, total, page) {
		if(!pagesize) {
			__pagesize = 20;
		} else {
			__pagesize = pagesize;
		}
		if(!total) {
			__total = 0;
		} else {
			__total = total;
		}
		this.Current(page);
		__pageamount = __total / __pagesize;
		__pageamount = Math.ceil(__pageamount);
		if(__pageamount <= 0) {
			this.Hidden();
		} else if(__controller) {
			this.Show();
		}
		return;
	};

	function constructor() {
		__name = sName;
		__container = container;
		if(__container) {
			__controller = __container.find("ul.pagination");
		}
	} {
		constructor();
	}
};
NSF.System.Data.Form = function() {
	var __name = null;
	var __sender = null;
	var __url = null;
	var __mode = 'insert';
	var __fields = null;
	this.Name = "NSF.System.Data.Form";
	this.Author = "Guo HongLiang";
	this.Version = "0.0.2";
	this.PublishDate = "2014-10-9";

	function DropList(srcObj, field, selected) {
		var _html = '<select name="' + field.fieldname.toLowerCase() + '" placeholder="' + field.displayname + '">';
		var _linklist = field.linklist;
		var _linkarr = new Array();
		_linkarr = _linklist.split("\r");
		for(var j = 0; j < _linkarr.length; j++) {
			var _id = new Array();
			_id = _linkarr[j].split("=");
			_html += '<option value="' + _id[0] + '"';
			if(selected && _id[0] == selected) {
				_html += ' selected';
			}
			_html += '>' + _id[1] + '</option>';
		}
		_html += '</select>';
		srcObj.html(_html);
		return;
	}

	function DataDropList(srcObj, config, field, selected) {
		NSF.System.Data.Rows(__url, config, 'combo', function(succeed, jsonConfig, jsonData) {
			if(succeed) {
				var _html = '<select name="' + field.fieldname.toLowerCase() + '" placeholder="' + field.displayname + '">';
				if(jsonData) {
					for(var j = 0; j < jsonData.length; j++) {
						_html += '<option value ="' + jsonData[j].id + '"';
						if(selected && jsonData[j].id == selected) {
							_html += ' selected';
						}
						_html += '>' + jsonData[j].text + '</option>';
					}
				}
				_html += '</select>';
				srcObj.html(_html);
			}
		});
	}

	function FormObject(container, config, field, row) {
		var _html = '';
		var _fieldName = field.name.toLowerCase();
		if(field.fldkeys) {
			field.edittype = 15;
		}
		if(field.edittype == 1 ||
			field.edittype == 2 ||
			field.edittype == 6 ||
			field.edittype == 15 ||
			field.edittype == 16) {
			_html = '<input class="form-control"';
			if(field.edittype == 1) {
				_html += ' type="text"';
			} else if(field.edittype == 2) {
				_html += ' type="password"';
			} else if(field.edittype == 6 || field.edittype == 16) {
				_html += ' type="text" onfocus="$(this).calendar()" readonly';
				_html += 'style="background:url(img/datePicker.gif) no-repeat right;"';
				if(field.edittype == 6) {
					_html += ' maxlength="10"';
				} else if(field.edittype == 16) {
					_html += ' maxlength="5"';
				}
			} else if(field.edittype == 15) {
				_html += ' type="hidden"';
			}
			_html += ' name="' + _fieldName + '" placeholder="' + field.displayname + '"';
			if(row) {
				_html += ' value="' + row[_fieldName] + '"';
			}
			_html += '>';
		} else if(field.edittype == 3) {
			_html += '<textarea class="form-control" name="' + _fieldName + '" placeholder="' + field.displayname + '">';
			if(row) {
				_html += row[_fieldName];
			}
			_html += '</textarea>';
		} else if(field.edittype == 4) {
			if(row) {
				DropList(container, field, row[_fieldName]);
			} else {
				DropList(container, field, null);
			}
		} else if(field.edittype == 5) {
			if(row) {
				DataDropList(container, config, field, row[_fieldName]);
			} else {
				DataDropList(container, config, field, null);
			}
		} else if(field.edittype == 17) {
			_html = '<input type="file" name="' + _fieldName + '" />';
		} else {
			_html = field.name;
		}
		if(_html != '') {
			container.html(_html);
		}
		return;
	}
	this.Mode = function(mode) {
		__mode = mode.toLowerCase();
		if(__mode == 'insert' ||
			__mode == 'edit' ||
			__mode == 'query') {
			return __mode;
		} else {
			__mode = 'insert';
		}
		return __mode;
	};
	this.Show = function(config, fields, row) {
		if(__sender) {
			__sender.find('[' + NSF.System.Definition.Envoriment.DataField + ']').each(function(index) {
				var swDef = $(this).attr(NSF.System.Definition.Envoriment.DataField);
				var sw = NSF.System.Json.ToJson(swDef);
				if(sw.method == 'form') {
					for(var i = 0; i < fields.length; i++) {
						var field = fields[i];
						var fieldname = field.name.toLowerCase();
						if(fieldname == sw.fld.toLowerCase()) {
							FormObject($(this), sw, field, row);
							if(sw.ev) {
								var __fun = sw.ev;
								var fieldvalue = field.displayname;
								if(__fun != null) {
									__fun += '("' + fieldname + '","' + fieldvalue + '")';
									__fun.eval();
								}
							}
							break;
						}
					}
				}
				if(sw.trClass) {
					$(this).addClass(sw.trClass);
				}
			});
			__sender.find('[' + NSF.System.Definition.Envoriment.DataField + ']').removeAttr(NSF.System.Definition.Envoriment.DataField);
		}
		if(config.ev) {
			var __func = config.ev;
			if(__func != "") {
				__func += '();';
				__func.Eval();
			}
		}
		return;
	}
	this.ColumnsReady = function(result, config, data) {
		var THIS = config.refObj;
		if(result && data) {
			__fields = data;
			if(__mode == 'insert') {
				THIS.Show(config, __fields, null);
			} else if(__mode == 'edit') {
				NSF.System.Data.RecordSet(__url, config, THIS.RowsReady);
			} else if(__mode == 'query') {
				THIS.Show(config, __fields, null);
			}
		}
		return;
	};
	this.RowsReady = function(result, config, data) {
		var THIS = config.refObj;
		if(!__fields) {
			NSF.System.ThrowInfo('NSF.System.Data.Form.RowsReady, the columns definition is empty!');
			return;
		}
		if(result && data) {
			if(__mode == 'edit') {
				THIS.Show(config, __fields, data.rs);
			}
		}
		return;
	};
	this.Initialize = function(sUrl, sName, config, sender, json) {
		__name = sName;
		__sender = sender;
		__url = sUrl;
		if(json) {
			var _json = NSF.System.Json.ToJson(json);
			if(!(NSF.System.IsNull(_json.view_id))) {
				NSF.System.Definition.Envoriment.DataIsland = _json.view_id;
			}
			if(!(NSF.System.IsNull(_json.view_fld))) {
				NSF.System.Definition.Envoriment.DataField = _json.view_fld;
			}
			if(!(NSF.System.IsNull(_json.view_stat))) {
				NSF.System.Definition.Envoriment.DataStat = _json.view_stat;
			}
			if(!(NSF.System.IsNull(_json.view_subStat))) {
				NSF.System.Definition.Envoriment.DataSubStat = _json.view_subStat;
			}
		}
		if(config) {
			config = NSF.System.Json.ToJson(config);
			config.refObj = this;
			NSF.System.Data.Definition(sUrl, config, this.ColumnsReady);
		}
		return;
	};

	function constructor() {
		__name = "";
	} {
		constructor();
	}
};
NSF.System.Data.PrintArea = function(container, header, footer, height, pageRows) {
	var __container = null;
	var __total = null;
	var __controller = null;
	var __pageamount = null;
	var __current = 0;
	var __header = null;
	var __footer = null;
	var __pageRows = null;
	var __rowHeight = null;
	this.Name = "NSF.System.Data.PrintArea";
	this.Author = "Guo HongLiang";
	this.Version = "0.0.1";
	this.PublishDate = "2014-12-2";

	function ResetUrlVar(sName, sValue) {
		var _url = window.location.href;
		var _re = eval('/(' + sName + '=)([^&]*)/gi');
		return _url.replace(_re, sName + '=' + sValue);
	}

	function GetPaginationUrl(pageno) {
		var _url = location.href;
		if(_url.indexOf("?") > -1) {
			_url = ResetUrlVar("zmPage", pageno);
		} else {
			_url += "?zmPage=" + pageno;
		}
		return _url;
	}

	function GetNextPageno(current, pageamount) {
		if(current >= pageamount) {
			return pageamount;
		} else {
			return current + 1;
		}
	}

	function GetPrevPageno(current) {
		if(current <= 1) {
			return 1;
		} else {
			return current - 1;
		}
	}

	function BuildPaginationBtn(refObj, pageno, current) {
		if(pageno != 0) {
			var _html = '<li';
			if(current == pageno) {
				_html += ' class="active_li"';
			}
			_html += '><a href="#"></a></li>'
			var _controler = $(_html);
			_controler.find("a").attr("href", GetPaginationUrl(pageno));
			_controler.find("a").text(pageno);
			refObj.after(_controler);
			return _controler;
		} else {
			return null;
		}
	}

	function BuildPaginationPoints(refObj) {
		var _controler = $('<li class="omitted">...</li>');
		refObj.after(_controler);
		return _controler;
	}

	function BuildPaginationController(refObj, pageamount, current) {
		var _prev = GetPrevPageno(current);
		var _next = GetNextPageno(current, pageamount);
		var __ref = BuildPaginationBtn(refObj, 1, current);
		if(_prev > 1) {
			if(_prev - 1 != 1) {
				__ref = BuildPaginationPoints(__ref);
			}
			__ref = BuildPaginationBtn(__ref, _prev, current);
		}
		if(current != 1 && current != pageamount) {
			__ref = BuildPaginationBtn(__ref, current, current);
		}
		if(_next != pageamount) {
			__ref = BuildPaginationBtn(__ref, _next, current);
			if(_next + 1 != pageamount) {
				__ref = BuildPaginationPoints(__ref);
			}
		}
		BuildPaginationBtn(__ref, pageamount, current);
		return;
	}

	function ShowPageNo(container, pageNo, after, lastPage) {
		var _html = "<div style=\"width:" + setWidth() + "px;margin-top:" + __header + "px;\"></div><div style=\"width:" + setWidth() + "px; height:14px; text-align: center; font-size:14px;\">第 <span class=\"pageNo_Current\">" + pageNo + "</span> 页 共 <span class=\"pageNo_Total\"></span> 页</div>";
		if(after) {
			container.after(_html);
		} else {
			container.before(_html);
		}
		return;
	}

	function ShowPageBreak(container) {
		container.before("<div style=\"page-break-after: always;\"></div>");
		return;
	}

	function getPageAmount(lastRowNo) {
		var _total = 0;
		if(lastRowNo % __pageRows == 0) {
			_total = lastRowNo / __pageRows;
			if(__footer > 0) {
				return _total + 1;
			} else {
				return _total;
			}
		} else {
			_total = Math.ceil(lastRowNo / __pageRows);
			if((_total * __pageRows * __rowHeight - lastRowNo * __rowHeight) < __footer) {
				_total += 1;
			}
			return _total;
		}
	}
	this.ShowPagination = function(current, pagesize, total) {
		var _container = $("ul.pagination");
		if(_container) {
			current = parseInt(current, 10);
			var _pageamount = total / pagesize;
			_pageamount = Math.ceil(_pageamount);
			if(_pageamount > 0) {
				var _prev = GetPrevPageno(current);
				var _next = GetNextPageno(current, _pageamount);
				_container.find("li.prev a").eq(0).attr("href", GetPaginationUrl(_prev));
				_container.find("li.next a").eq(0).attr("href", GetPaginationUrl(_next));
				if(_pageamount > 5) {
					BuildPaginationController(_container.find("li.prev"), _pageamount, current);
				} else {
					for(var i = _pageamount; i >= 1; i--) {
						BuildPaginationBtn(_container.find("li.prev"), i, current);
					}
				}
			} else {
				_container.find("li.prev a").eq(0).removeAttr("href");
				_container.find("li.next a").eq(0).removeAttr("href");
			}
			_container.find("li.showrec span.pagesize").text(pagesize);
			_container.find("li.showrec span.recamount").text(total);
		}
		return;
	};
	this.HidePagination = function() {
		var _container = $("tr.pagination");
		if(_container) {
			_container.remove();
		}
		return;
	};
	this.SetPrintTotalPage = function(container, rowNo) {
		var prevContainer = container.parent().prev();
		var nextContainer = container.parent().next();
		if(__pageRows == null) {
			__pageRows = 0;
		}
		if(!$.isNumeric(__pageRows)) {
			__pageRows = 0;
		}
		__pageRows = (__pageRows + '').ToInt();
		var _total = getPageAmount(rowNo);
		var _margin = __rowHeight * (__pageRows * _total - rowNo);
		var _pageHeight;
		var _pageMargin = __pageRows * __rowHeight;
		if(_margin > _pageMargin) {
			__header = _margin - _pageMargin + __header;
			ShowPageNo(container, (_total - 1), false, true);
			ShowPageBreak(container);
			var _header = $(prevContainer.outerHTML());
			_header.removeAttr("id");
			container.before(_header);
			__header = _margin - (_margin - _pageMargin) - __footer;
			ShowPageNo(nextContainer, _total, true, true);
			$(".pageNo_Total").html(_total);
		} else if(_margin == _pageMargin) {
			_pageHeight = _margin - __rowHeight - __footer;
			__header = _pageHeight + __header;
			ShowPageNo(nextContainer, _total, true, true);
			$(".pageNo_Total").html(_total);
		} else {
			_pageHeight = _margin - __rowHeight - __footer;
			__header = _pageHeight + __header;
			ShowPageNo(nextContainer, _total, true, true);
			$(".pageNo_Total").html(_total);
		}
		return;
	}
	this.PrintPagination = function(container, rowNo) {
		if(__pageRows == null) {
			__pageRows = 0;
		}
		if(!$.isNumeric(__pageRows)) {
			__pageRows = 0;
		}
		__pageRows = (__pageRows + '').ToInt();
		if(rowNo % __pageRows == 0) {
			var _currPageNo = rowNo / __pageRows;
			ShowPageNo(container, _currPageNo, false, false);
		}
		if(rowNo % __pageRows == 0) {
			ShowPageBreak(container);
			var _header = $(container.parent().prev().outerHTML());
			_header.removeAttr("id");
			container.before(_header);
		}
		return;
	}
	this.Initialize = function(page, count, tatal) {
		__header = header;
		__footer = footer;
		__pageRows = pageRows;
		__rowHeight = height;
		if(!__total) {
			__total = 0;
		} else {
			__total = total;
		}
		__pageamount = __total / __pageRows;
		__pageamount = Math.ceil(__pageamount);
		if(__pageamount <= 0) {
			this.HidePagination();
		} else {
			this.ShowPagination(page, count, __total);
		}
		return;
	};

	function constructor() {} {
		constructor();
	}
};
NSF.System.Data.FieldProcessor = function() {
	this.Name = "NSF.System.Data.FieldProcessor";
	this.Author = "Guo HongLiang";
	this.Version = "0.0.1";
	this.PublishDate = "2015-3-24";
	this.Normal = function(value, sw, container) {
		if(sw.method == 'show') {
			var _fldValue = value[sw.fld];
			if(sw.format) {
				var _cmd = sw.format + '("' + _fldValue + '")';
				_fldValue = _cmd.Eval();
			}
			container.html(_fldValue);
		} else if(sw.method == 'template') {
			if(sw.template) {
				var _tHtml = sw.template;
				_tHtml = NSF.System.Data.ReplaceJsonData(_tHtml, value);
				container.html(_tHtml);
			}
		} else if(sw.method == 'calc') {
			if(sw.execute) {
				var _func = sw.execute + "('" + NSF.System.Json.ToString(value) + "')";
				container.text(_func.Eval())
			}
		} else if(sw.method == 'attr') {
			var _fldValue = value[sw.fld];
			if(sw.format) {
				var _func = sw.format + '("' + _fldValue + '")';
				_fldValue = _func.Eval();
			}
			container.attr(sw.attr, _fldValue);
		}
	};
	this.Stat = function(container, row, swStat, rowNext, i, rowCount) {
		if(swStat.method == "sum") {
			var _stat = (container.text()).ToFloat();
			_stat += row[swStat.fld];
			if(i == (rowCount - 1)) {
				if(_stat.format) {
					var _func = sender.format + '("' + _stat + '")';
					_stat = _func.Eval();
				}
			}
			container.text(_stat);
		} else if(swStat.method == "max") {
			var _maxValue;
			if(typeof(container.attr('maxValue')) == 'undefined') {
				_maxValue = row[swStat.fld];
				container.attr('maxValue', _maxValue);
			} else {
				_maxValue = (container.attr('maxValue')).ToFloat();
				if(_maxValue < row[swStat.fld]) {
					container.attr('maxValue', row[swStat.fld]);
				}
			}
			if(rowNext != null) {
				container.text(container.attr('maxValue'));
			}
		} else if(swStat.method == "min") {
			var _minValue;
			if(typeof(container.attr('minValue')) == 'undefined') {
				_minValue = row[swStat.fld];
				container.attr('minValue', _minValue);
			} else {
				_minValue = (container.attr('minValue')).ToFloat();
				if(_minValue > row[swStat.fld]) {
					container.attr('minValue', row[swStat.fld]);
				}
			}
			if(rowNext != null) {
				container.text(container.attr('minValue'));
			}
		} else if(swStat.method == "avg") {
			var _stat = (container.text()).ToFloat();
			_stat += row[swStat.fld];
			container.text(_stat);
			if(rowNext == null) {
				var _avg = _stat / rowCount;
				container.text(_avg.toFixed(2));
			}
		}
	};
	this.SubStat = function(container, row, swSubStat, rowNext, i, rowCount) {
		if(swSubStat.method == 'sum') {
			var _sub = (container.text()).ToFloat();
			_sub += row[swSubStat.fld];
			if(rowNext == null || i == (rowCount - 1) || row[swSubStat.refFld] != rowNext[swSubStat.refFld]) {
				if(swSubStat.format) {
					var _func = swSubStat.format + '("' + _sub + '")';
					_sub = _func.Eval();
				}
				container.text(_sub);
				return true;
			} else {
				container.text(_sub);
			}
		} else if(swSubStat.method == 'max') {
			var _subStat = (container.text()).ToFloat();
			var _maxValue;
			if(typeof(container.attr('maxValue')) == 'undefined') {
				_maxValue = row[swSubStat.fld];
				container.attr('maxValue', _maxValue);
			} else {
				_maxValue = (container.attr('maxValue')).ToFloat();
				if(_maxValue < row[swSubStat.fld]) {
					container.attr('maxValue', row[swSubStat.fld]);
				}
			}
			if(rowNext == null || i == (rowCount - 1) || row[swSubStat.refFld] != rowNext[swSubStat.refFld]) {
				container.text(container.attr('maxValue'));
				container.removeAttr('maxValue');
				return true;
			}
		} else if(swSubStat.method == 'min') {
			var _minValue;
			if(typeof(container.attr('minValue')) == 'undefined') {
				_minValue = row[swSubStat.fld];
				container.attr('minValue', _minValue);
			} else {
				_minValue = (container.attr('minValue')).ToFloat();
				if(_minValue > row[swSubStat.fld]) {
					container.attr('minValue', row[swSubStat.fld]);
				}
			}
			if(rowNext == null || i == (rowCount - 1) || row[swSubStat.refFld] != rowNext[swSubStat.refFld]) {
				container.text(container.attr('minValue'));
				container.removeAttr('minValue');
				return true;
			}
		} else if(swSubStat.method == 'avg') {
			var _times = 0;
			if(typeof(container.attr('avgAmount')) == 'undefined') {
				_times = 1;
				container.attr('avgAmount', _times);
			} else {
				_times = container.attr('avgAmount').ToInt();
				_times += 1;
				container.attr('avgAmount', _times);
			}
			var _subTotal = (container.text()).ToFloat();
			_subTotal += row[swSubStat.fld];
			if(rowNext == null || i == (rowCount - 1) || row[swSubStat.refFld] != rowNext[swSubStat.refFld]) {
				_subTotal = _subTotal / _times;
				if(swSubStat.format) {
					var _func = swSubStat.format + '("' + _subTotal + '")';
					_subTotal = _func.Eval();
				}
				container.text(_subTotal.toFixed(2));
				container.removeAttr('avgAmount');
				return true;
			} else {
				container.text(_subTotal);
			}
		}
	};

	function constructor() {} {
		constructor();
	}
};

/*NSF\js\NSF.System.Converter.min.js*/
﻿
NSF.System.Converter = function() {
	this.Name = "NSF.System.Converter";
	this.Author = "Guo HongLiang";
	this.Version = "0.0.1";
	this.PublishDate = "2015-2-5";

	function constructor() {} {
		constructor();
	}
};
NSF.System.Converter.ToDoc = function(_html, _css, _name) {
	function Header() {
		var str = "";
		str += '<html xmlns:o="urn:schemas-microsoft-com:office:office"';
		str += 'xmlns:w="urn:schemas-microsoft-com:office:word"';
		str += 'xmlns="http://www.w3.org/TR/REC-html40">';
		str += '<head>';
		str += '<meta http-equiv=Content-Type  content="text/html; charset=gb2312" >';
		str += '<title></title>';
		str += '<!--[if gte mso 9]>';
		str += '<xml>';
		str += '<w:WordDocument>';
		str += '<w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>';
		str += '<w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>';
		str += '<w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>';
		str += '<w:DocumentKind>DocumentNotSpecified</w:DocumentKind>';
		str += '<w:DrawingGridVerticalSpacing>7.8 磅</w:DrawingGridVerticalSpacing>';
		str += '<w:PunctuationKerning></w:PunctuationKerning>';
		str += '<w:View>Web</w:View>';
		str += '<w:Compatibility>';
		str += '<w:DontGrowAutofit/>';
		str += '<w:BalanceSingleByteDoubleByteWidth/>';
		str += '<w:DoNotExpandShiftReturn/>';
		str += '<w:UseFELayout/>';
		str += '</w:Compatibility>';
		str += '<w:Zoom>0</w:Zoom>';
		str += '</w:WordDocument>';
		str += '</xml>';
		str += '<![endif]-->';
		str += Style();
		str += '</head><body>';
		return str;
	}

	function Style() {
		var str = "";
		if(_css != null && _css != "") {
			str += '<style>';
			str += _css;
			str += '</style>';
		}
		return str;
	}

	function Generator() {
		var str = Header();
		if(_html != null && _html != "") {
			str += _html;
		}
		str += Footer();
		return str;
	}

	function Footer() {
		return '</body></html>';
	}

	function Flush(str) {
		var a = document.createElement('a');
		var blob = new Blob([str], {
			'type': 'application\/msword'
		});
		a.href = window.URL.createObjectURL(blob);
		a.download = '' + _name + '.doc';
		a.click();
		return;
	}

	function constructor() {
		var __content = Generator();
		Flush(__content);
	} {
		constructor();
	}
};
NSF.System.Converter.ToXls = function() {
	var idTmr;

	function getExplorer() {
		var explorer = window.navigator.userAgent;
		if(explorer.indexOf("MSIE") >= 0) {
			return 'ie';
		} else if(explorer.indexOf("Firefox") >= 0) {
			return 'Firefox';
		} else if(explorer.indexOf("Chrome") >= 0) {
			return 'Chrome';
		} else if(explorer.indexOf("Opera") >= 0) {
			return 'Opera';
		} else if(explorer.indexOf("Safari") >= 0) {
			return 'Safari';
		}
	}

	function Cleanup() {
		window.clearInterval(idTmr);
		CollectGarbage();
	}
	var tableToExcel = (function() {
		var uri = 'data:application/vnd.ms-excel;base64,',
			template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>',
			base64 = function(s) {
				return window.btoa(unescape(encodeURIComponent(s)))
			},
			format = function(s, c) {
				return s.replace(/{(\w+)}/g,
					function(m, p) {
						return c[p];
					})
			}
		return function(table, name) {
			if(!table.nodeType) table = document.getElementById(table)
			var ctx = {
				worksheet: name || 'Worksheet',
				table: table.innerHTML
			}
			window.location.href = uri + base64(format(template, ctx))
		}
	})();
	this.method1 = function(tableid) {
		if(getExplorer() == 'ie') {
			var curTbl = document.getElementById(tableid);
			var oXL = new ActiveXObject("Excel.Application");
			var oWB = oXL.Workbooks.Add();
			var xlsheet = oWB.Worksheets(1);
			var sel = document.body.createTextRange();
			sel.moveToElementText(curTbl);
			sel.select();
			sel.execCommand("Copy");
			xlsheet.Paste();
			oXL.Visible = true;
			try {
				var fname = oXL.Application.GetSaveAsFilename("Excel.xls", "Excel Spreadsheets (*.xls), *.xls");
			} catch(e) {
				print("Nested catch caught " + e);
			} finally {
				oWB.SaveAs(fname);
				oWB.Close(savechanges = false);
				oXL.Quit();
				oXL = null;
				idTmr = window.setInterval("Cleanup();", 1);
			}
		} else {
			tableToExcel(tableid);
		}
	}
};

;

function setCookie(name, value) { //两个参数，一个是cookie的名子，一个是值
	var Days = 30; //此 cookie 将被保存 30 天
	var exp = new Date(); //new Date("December 31, 9998");
	exp.setTime(exp.getTime() + Days * 24 * 60 * 60 * 1000);
	document.cookie = name + "=" + escape(value) + ";expires=" + exp.toGMTString();
}

function getCookie(name) { //取cookies函数        
	var arr = document.cookie.match(new RegExp("(^| )" + name + "=([^;]*)(;|$)"));
	if(arr != null) return unescape(arr[2]);
	return null;
}

function JsonToStr(data) {
	return JSON.stringify(data);
}

function StrToJson(data) {
	return eval('(' + data + ')'); // JSON.parse(data);
}

Array.prototype.RemoveIndex = function(dx) {
	if(isNaN(dx) || dx > this.length) {
		return false;
	}
	this.splice(dx, 1);
}

String.prototype.replaceAll = function(s1, s2) {
	return this.replace(new RegExp(s1, "gm"), s2);
}

String.prototype.right = function(length_) {

	var _from = this.length - length_;

	if(_from < 0) _from = 0;

	return this.substring(this.length - length_, this.length);

};

function loadStyleString(css, id) {
	var style = document.createElement("style");
	if(id) style.id = id;
	style.type = "text/css";
	try {
		style.appendChild(document.createTextNode(css));
	} catch(ex) {
		style.styleSheet.cssText = css;
	}
	var head = document.getElementsByTagName("head")[0];
	head.appendChild(style);
}

function removeStyle(id) {
	var style = document.getElementById(id);
	if(style) {
		var p;
		if(p = style.parentNode)
			p.removeChild(style);
	}
}

function uuid() {
	var s = [];
	var hexDigits = "0123456789abcdef";
	for(var i = 0; i < 36; i++) {
		s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);
	}
	s[14] = "4"; // bits 12-15 of the time_hi_and_version field to 0010
	s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1); // bits 6-7 of the clock_seq_hi_and_reserved to 01
	s[8] = s[13] = s[18] = s[23] = "-";

	var uuid = s.join("");
	return uuid;
}

//获取页面参数

$.extend({
	getUrlVars: function() {
		var vars = [],
			hash;
		var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
		for(var i = 0; i < hashes.length; i++) {
			hash = hashes[i].split('=');
			vars.push(hash[0]);
			vars[hash[0]] = hash[1];
		}
		return vars;
	},
	getUrlVar: function(name) {
		return $.getUrlVars()[name];
	}
});

function getUrlParam(name) {
	var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)"); //构造一个含有目标参数的正则表达式对象
	var r = window.location.search.substr(1).match(reg); //匹配目标参数
	if(r != null) return unescape(r[2]);
	return null; //返回参数值
}

//取得页面参数
String.prototype.GetValue = function(para) {
	var reg = new RegExp("(^|&)" + para + "=([^&]*)(&|$)");
	var r = this.substr(this.indexOf("\?") + 1).match(reg);
	if(r != null) return unescape(r[2]);
	return null;
}

function GetRequest(name) {
	var str = location.href;
	var re = str.GetValue(name);
	if(re && re != "") {
		var i = re.indexOf('#');
		if(i > 0) re = re.substring(0, i);
	}
	return re;
}

function GetRequestJn() {
	var str = location.href;
	var i = str.indexOf('#');
	if(i > 0)
		return str.substring(i + 1, i + 2);
	else
		return null;
}

$.fn.serializeObject = function() {
	var o = {};
	var a = this.serializeArray();
	$.each(a, function() {
		var i = this.name.indexOf('+');
		if(i > 0)
			this.name = this.name.substring(0, i);
		if(o[this.name]) {
			if(!o[this.name].push) {
				o[this.name] = [o[this.name]];
			}
			o[this.name].push(this.value || '');
		} else {
			o[this.name] = this.value || '';
		}
	});
	return o;
};

function jsonKeyCount(obj) {
	var i = 0;
	for(var key in obj)
		i++;
	return i;
}

Date.prototype.format = function(format) {
	var o = {
		"M+": this.getMonth() + 1, //month 
		"d+": this.getDate(), //day 
		"h+": this.getHours(), //hour 
		"m+": this.getMinutes(), //minute 
		"s+": this.getSeconds(), //second 
		"q+": Math.floor((this.getMonth() + 3) / 3), //quarter 
		"S": this.getMilliseconds() //millisecond 
	}

	if(/(y+)/.test(format)) {
		format = format.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
	}

	for(var k in o) {
		if(new RegExp("(" + k + ")").test(format)) {
			format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : ("00" + o[k]).substr(("" + o[k]).length));
		}
	}
	return format;
}

Date.prototype.Format = function(fmt) { //author: meizz 
	var o = {
		"M+": this.getMonth() + 1, //月份 
		"d+": this.getDate(), //日 
		"h+": this.getHours(), //小时 
		"m+": this.getMinutes(), //分 
		"s+": this.getSeconds(), //秒 
		"q+": Math.floor((this.getMonth() + 3) / 3), //季度 
		"S": this.getMilliseconds() //毫秒 
	};
	if(/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
	for(var k in o)
		if(new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
	return fmt;
}

/*****************************************和数据库交互部分*********************************************/
var DATA_URL = '/code/data/misc.chi';
var GRID_URL = '/code/db/grid.chi';
var TABLE_URL = '/code/data/table.chi';
var FILE_URL = '/code/files/misc.chi';
var NODE_URL = '/code/net/notes.chi'

function OnlineData(param, h, url, dataType, jsonp, retryCount, err, _method) {
	if(url.indexOf('.json') != -1) {
		_method = 'get';
	}
	if(typeof(_method) == "undefined") {
		_method = "post";
	}
	if(_method != "get" && _method != "post" && _method != "put") {
		_method = "post";
	}
	if(!retryCount) retryCount = 0;
	$.ajax({
		type: _method,
		url: url ? url : DATA_URL,
		data: param,
		dataType: dataType ? dataType : 'json',
		jsonp: jsonp ? jsonp : null,
		success: function(data, textStatus) {
			if(h)
				h(data);
		},
		error: function(e) {
			if(retryCount < 5) { //网络错误，最多重试5次
				//alert('网络错误，重试'+retryCount+'次');
				setTimeout(function() {
					OnlineData(param, h, url, dataType, jsonp, retryCount + 1, err);
				}, 100);
			} else {
				if(err) err(e);
				console.log(url ? url : DATA_URL, param, '网络错误');
			}
		}
	});
}

function GetContent(url, param, type, masked, sucHandle, errHandle) {
	$.ajax({
		type: "get",
		url: url,
		data: param,
		dataType: type,
		ifModified: true,
		cache: true,
		beforeSend: function(XMLHttpRequest) {
			if(masked)
				mask();
		},
		success: function(data, textStatus) {
			if(sucHandle) sucHandle(data);
		},
		complete: function(XMLHttpRequest, textStatus) {
			if(masked)
				unmask();
		},
		error: function() {
			if(errHandle) errHandle();
		}
	});
}

function PostContent(url, param, type, masked, sucHandle, errHandle) {
	$.ajax({
		type: "post",
		url: url,
		data: param,
		dataType: type,
		beforeSend: function(XMLHttpRequest) {
			if(masked)
				mask();
		},
		success: function(data, textStatus) {
			if(sucHandle) sucHandle(data);
		},
		complete: function(XMLHttpRequest, textStatus) {
			if(masked)
				unmask();
		},
		error: function() {
			if(errHandle) errHandle();
		}
	});
}

/*********************************************functions*******************************************/

function myShowModalDialog(url, width, height, fn) {
	if(navigator.userAgent.indexOf("Chrome") > 0) {
		window.returnCallBackValue354865588 = fn;
		var paramsChrome = 'height=' + height + ', width=' + width + ', top=' + (((window.screen.height - height) / 2) - 50) +
			',left=' + ((window.screen.width - width) / 2) + ',toolbar=no, menubar=no, scrollbars=no, resizable=no, location=no, status=no';
		window.open(url, "newwindow", paramsChrome);
	} else {
		var params = 'dialogWidth:' + width + 'px;dialogHeight:' + height + 'px;status:no;dialogLeft:' +
			((window.screen.width - width) / 2) + 'px;dialogTop:' + (((window.screen.height - height) / 2) - 50) + 'px;';
		var tempReturnValue = window.showModalDialog(url, "", params);
		fn.call(window, tempReturnValue);
	}
}

function myReturnValue(value) {
	if(navigator.userAgent.indexOf("Chrome") > 0) {
		window.opener.returnCallBackValue354865588.call(window.opener, value);
	} else {
		window.returnValue = value;
	}
}

function openBlank(url, name, iWidth, iHeight, newW) {

	if(url) {
		name = name ? name : '未命名'; //网页名称，可为空;
		iWidth = iWidth ? iWidth : window.screen.availWidth - 30; //弹出窗口的宽度;
		iHeight = iHeight ? iHeight : window.screen.availHeight - 80; //弹出窗口的高度;
		var iTop = 2; // (window.screen.availHeight-30-iHeight)/2;       //获得窗口的垂直位置;
		var iLeft = 2; // (window.screen.availWidth-10-iWidth)/2;           //获得窗口的水平位置;

		//	myShowModalDialog(url,iWidth,iHeight,function(){alert(100)});
		var result = window.open(url, name, 'height=' + iHeight + ',,innerHeight=' + iHeight + ',width=' + iWidth + ',innerWidth=' + iWidth + ',top=' + iTop + ',left=' + iLeft + ',toolbar=no,fullscreen=yes,menubar=no,scrollbars=auto,resizeable=no,location=no,status=no');

		var that = window;
		window.onfocus = function() {
			result.focus();
		};
		window.onclick = function() {
			result.focus();
		};
		result.onclose = function() {
			if(typeof(RefreshData) != "undefined")
				RefreshData();

		};
		result.onbeforeunload = function() {
			if(typeof(RefreshData) != "undefined")
				RefreshData();
		};

	} else {
		var formcontainer = $('.formcontainer');
		if(formcontainer.length == 1) {
			$('#demo').hide();
			var table = $('.formcontainer .FormTable[code]');
			if(!table[0].inited) {
				//if($('body').attr('workflow'))
				table[0].oldHtml = table.html();
				table[0].inited = true;
				var mid = url;
				setTimeout(function() {

					initTableForm(table, false, null, mid);
				}, 100)
			} else {
				$('.formcontainer').show();
				var mid = url;
				if(table[0].oldHtml) {
					table.html(table[0].oldHtml);
					setTimeout(function() {
						initTableForm(table, false, null, mid);
					}, 100)
				} else {
					var defaults = table.find('td:eq(0)').attr('default');
					if(!defaults)
						defaults = '';
					else
						defaults = unescape(defaults);

					initTableFormData(table, mid, defaults);
				}
			}
		} else {
			/*$('#win-Common-Dialog .content').height(iHeight);
			$('#win-Common-Dialog .content').width(iWidth);*/
			$('#win-Common-Dialog .content').html('<iframe id="mainFrame" src="' + url + '" />');
			$('#win-Common-Dialog').modal('show');
			$('#win-Common-Dialog').on('hidden.bs.modal', function(e) {
				if(typeof(RefreshData) != "undefined")
				//if (RefreshData && RefreshData instanceof Function)
					RefreshData();
			});
			/*var iframe = document.getElementById("mainFrame");  
			if (iframe.attachEvent) {  
				iframe.attachEvent("onload", function() {  
					var doc=$(this).prop('contentWindow').document;
					$(this).height($(doc).height());
				});  
			} else {  
				iframe.onload = function() {  
					var doc=$(this).prop('contentWindow').document;
					$(this).height($(doc).height());
				};  
			} 
			if (self != top) { 
				
				parent.ShowOverModal();
				
			} */
		}
	}
}

function closeBlank() {
	$('#win-Common-Dialog').modal('hide');
}

function ShowOverModal() {
	if($('.ShowOverModal').length == 0)
		$('<div class="ShowOverModal"></div>').appendTo('body').show();
	else
		$('.ShowOverModal').show();
}

function HideOverModal() {
	$('.ShowOverModal').hide();
}
/*
$(function(){
	if($('#win-Common-Dialog').length==1){		
		$('#win-Common-Dialog').on('show.bs.modal',function(e){
				if (self != top) { 
					var frm = $(parent.document.all("mainFrame"));
					frm.height(Math.max(frm.height(),$(this).find('.content').height())); 
				}
			});
		$('#win-Common-Dialog').on('hide.bs.modal',function(e){
				if (self != top) { //在iframe中	
					parent.HideOverModal();
				}
			});
	}
});*/

function closeForm(obj) {
	var _code = $('body').attr('code');
	if(typeof(_code) != 'undefined') {
		location.href = '/' + _code + '.aspx';
	} else {
		var demo = $('#demo');
		if(demo.length == 1) {
			demo.show();
			$('.formcontainer').hide();
			if(typeof(RefreshData) != "undefined")
				RefreshData();
		} else {
			if(self != top) { //在iframe中	
				window.parent.closeBlank();
			} else
				window.close();
		}
	}

}

/*  封装bootstrap modal

// 四个选项都是可选参数
Modal.alert(
  {
    msg: '内容',
    title: '标题',
    btnok: '确定',
    btncl:'取消'
  });

// 如需增加回调函数，后面直接加 .on( function(e){} );
// 点击“确定” e: true
// 点击“取消” e: false
Modal.confirm(
  {
    msg: "是否删除角色？"
  })
  .on( function (e) {
    alert("返回结果：" + e);
  });
 */

$('<!-- system modal start -->\n' +
	'<div id="ycf-alert" class="modal">\n' +
	'<div class="modal-dialog modal-sm">\n' +
	'<div class="modal-content">\n' +
	'<div class="modal-header">\n' +
	'<button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>\n' +
	'<h5 class="modal-title"><i class="fa fa-exclamation-circle" style="background-color: #f27302; padding-left: 3px; height: 20px; line-height: 20px; margin-bottom: 25px;"></i> <span style="padding-left:8px;font-family:\'微软雅黑\';">[Title]</span></h5>\n' +
	'</div>\n' +
	'<div class="modal-body small">\n' +
	'<p>[Message]</p>\n' +
	'</div>\n' +
	'<div class="modal-footer" >\n' +
	'<button type="button" class="btn btn-primary btn-sm ok" data-dismiss="modal">[BtnOk]</button>\n' +
	'<button type="button" class="btn btn-default btn-sm cancel" data-dismiss="modal">[BtnCancel]</button>\n' +
	'</div>\n' +
	'</div>\n' +
	'</div>\n' +
	'</div>\n' +
	'<!-- system modal end -->\n').appendTo('body');

window.Modal = function() {
	var reg = new RegExp("\\[([^\\[\\]]*?)\\]", 'igm');
	var alr = $("#ycf-alert");
	var ahtml = alr.html();

	//关闭时恢复 modal html 原样，供下次调用时 replace 用
	//var _init = function () {
	//	alr.on("hidden.bs.modal", function (e) {
	//		$(this).html(ahtml);
	//	});
	//}();

	/* html 复原不在 _init() 里面做了，重复调用时会有问题，直接在 _alert/_confirm 里面做 */

	var _alert = function(options) {
		alr.html(ahtml); // 复原
		alr.find('.ok').removeClass('btn-success').addClass('btn-primary');
		alr.find('.cancel').hide();
		_dialog(options);

		return {
			on: function(callback) {
				if(callback && callback instanceof Function) {
					alr.find('.ok').click(function() {
						callback(true)
					});
				}
			}
		};
	};

	var _confirm = function(options) {
		alr.html(ahtml);
		alr.find('.ok').removeClass('btn-primary').addClass('btn-success');
		alr.find('.cancel').show();
		_dialog(options);

		return {
			on: function(callback) {
				if(callback && callback instanceof Function) {
					alr.find('.ok').click(function() {
						callback(true)
					});
					alr.find('.cancel').click(function() {
						callback(false)
					});
				}
			}
		};
	};

	var _wait = function(options) {
		alr.html(ahtml);
		alr.find('.modal-footer').hide();
		_dialog(options);

		return {
			on: function(callback) {
				if(callback && callback instanceof Function) {
					callback(true);
				}
			}
		};
	};
	var _hide = function(options) {
		alr.modal('hide');
	};

	var _select = function(options) {
		alr.html(ahtml);
		alr.find('.modal-header button:eq(0)').hide();
		alr.find('.modal-footer .cancel').hide();
		_dialog(options);

		return {
			on: function(callback) {
				if(callback && callback instanceof Function) {
					alr.find('.ok').click(function() {
						callback(true)
					});
				}
			}
		};
	};
	var _hide = function(options) {
		alr.modal('hide');
	};

	var _dialog = function(options) {
		var ops = {
			msg: "提示内容",
			title: "操作提示",
			btnok: "确定",
			btncl: "取消"
		};

		$.extend(ops, options);

		//   console.log(alr);

		var html = alr.html().replace(reg, function(node, key) {
			return {
				Title: ops.title,
				Message: ops.msg,
				BtnOk: ops.btnok,
				BtnCancel: ops.btncl
			}[key];
		});

		alr.html(html);
		alr.modal({
			width: 500,
			backdrop: self != top ? false : 'static'
		});
	}

	return {
		alert: _alert,
		confirm: _confirm,
		wait: _wait,
		hide: _hide,
		select: _select
	}

}();

function Mask(txt) {
	Modal.wait({
		msg: txt ? txt : "正在获取远程数据，请稍候...",
		title: "请稍候..."
	});
}

function UnMask() {
	Modal.hide();
}

function alert(m) {
	Modal.wait({
		msg: m ? m : '未知信息',
		title: "温馨提示"
	});
}

function Logout() {
	GetContent('/code/users/user.chi?cmd=logout', {}, 'html', false, function() {
		location.href = '../assets/login/';
	})
}

function openBlank(id) {
	if(typeof(id) != 'undefined') {
		//编辑
		var _href = location.href.split('/')[3].split('.')[0] + '_edit.aspx?id=' + id + '';
		location.href = _href;
	} else {
		//新增
		var _href = location.href.split('/')[3].split('.')[0] + '_edit.aspx';
		location.href = _href;
	}
};
/*
SWFObject v2.2 <http://code.google.com/p/swfobject/> 
is released under the MIT License <http://www.opensource.org/licenses/mit-license.php> 
*/
;
var swfobject = function() {
	var D = "undefined",
		r = "object",
		S = "Shockwave Flash",
		W = "ShockwaveFlash.ShockwaveFlash",
		q = "application/x-shockwave-flash",
		R = "SWFObjectExprInst",
		x = "onreadystatechange",
		O = window,
		j = document,
		t = navigator,
		T = false,
		U = [h],
		o = [],
		N = [],
		I = [],
		l, Q, E, B, J = false,
		a = false,
		n, G, m = true,
		M = function() {
			var aa = typeof j.getElementById != D && typeof j.getElementsByTagName != D && typeof j.createElement != D,
				ah = t.userAgent.toLowerCase(),
				Y = t.platform.toLowerCase(),
				ae = Y ? /win/.test(Y) : /win/.test(ah),
				ac = Y ? /mac/.test(Y) : /mac/.test(ah),
				af = /webkit/.test(ah) ? parseFloat(ah.replace(/^.*webkit\/(\d+(\.\d+)?).*$/, "$1")) : false,
				X = !+"\v1",
				ag = [0, 0, 0],
				ab = null;
			if(typeof t.plugins != D && typeof t.plugins[S] == r) {
				ab = t.plugins[S].description;
				if(ab && !(typeof t.mimeTypes != D && t.mimeTypes[q] && !t.mimeTypes[q].enabledPlugin)) {
					T = true;
					X = false;
					ab = ab.replace(/^.*\s+(\S+\s+\S+$)/, "$1");
					ag[0] = parseInt(ab.replace(/^(.*)\..*$/, "$1"), 10);
					ag[1] = parseInt(ab.replace(/^.*\.(.*)\s.*$/, "$1"), 10);
					ag[2] = /[a-zA-Z]/.test(ab) ? parseInt(ab.replace(/^.*[a-zA-Z]+(.*)$/, "$1"), 10) : 0;
				}
			} else {
				if(typeof O.ActiveXObject != D) {
					try {
						var ad = new ActiveXObject(W);
						if(ad) {
							ab = ad.GetVariable("$version");
							if(ab) {
								X = true;
								ab = ab.split(" ")[1].split(",");
								ag = [parseInt(ab[0], 10), parseInt(ab[1], 10), parseInt(ab[2], 10)];
							}
						}
					} catch(Z) {}
				}
			}
			return {
				w3: aa,
				pv: ag,
				wk: af,
				ie: X,
				win: ae,
				mac: ac
			};
		}(),
		k = function() {
			if(!M.w3) {
				return;
			}
			if((typeof j.readyState != D && j.readyState == "complete") || (typeof j.readyState == D && (j.getElementsByTagName("body")[0] || j.body))) {
				f();
			}
			if(!J) {
				if(typeof j.addEventListener != D) {
					j.addEventListener("DOMContentLoaded", f, false);
				}
				if(M.ie && M.win) {
					j.attachEvent(x, function() {
						if(j.readyState == "complete") {
							j.detachEvent(x, arguments.callee);
							f();
						}
					});
					if(O == top) {
						(function() {
							if(J) {
								return;
							}
							try {
								j.documentElement.doScroll("left");
							} catch(X) {
								setTimeout(arguments.callee, 0);
								return;
							}
							f();
						})();
					}
				}
				if(M.wk) {
					(function() {
						if(J) {
							return;
						}
						if(!/loaded|complete/.test(j.readyState)) {
							setTimeout(arguments.callee, 0);
							return;
						}
						f();
					})();
				}
				s(f);
			}
		}();

	function f() {
		if(J) {
			return;
		}
		try {
			var Z = j.getElementsByTagName("body")[0].appendChild(C("span"));
			Z.parentNode.removeChild(Z);
		} catch(aa) {
			return;
		}
		J = true;
		var X = U.length;
		for(var Y = 0; Y < X; Y++) {
			U[Y]();
		}
	}

	function K(X) {
		if(J) {
			X();
		} else {
			U[U.length] = X;
		}
	}

	function s(Y) {
		if(typeof O.addEventListener != D) {
			O.addEventListener("load", Y, false);
		} else {
			if(typeof j.addEventListener != D) {
				j.addEventListener("load", Y, false);
			} else {
				if(typeof O.attachEvent != D) {
					i(O, "onload", Y);
				} else {
					if(typeof O.onload == "function") {
						var X = O.onload;
						O.onload = function() {
							X();
							Y();
						};
					} else {
						O.onload = Y;
					}
				}
			}
		}
	}

	function h() {
		if(T) {
			V();
		} else {
			H();
		}
	}

	function V() {
		var X = j.getElementsByTagName("body")[0];
		var aa = C(r);
		aa.setAttribute("type", q);
		var Z = X.appendChild(aa);
		if(Z) {
			var Y = 0;
			(function() {
				if(typeof Z.GetVariable != D) {
					var ab = Z.GetVariable("$version");
					if(ab) {
						ab = ab.split(" ")[1].split(",");
						M.pv = [parseInt(ab[0], 10), parseInt(ab[1], 10), parseInt(ab[2], 10)];
					}
				} else {
					if(Y < 10) {
						Y++;
						setTimeout(arguments.callee, 10);
						return;
					}
				}
				X.removeChild(aa);
				Z = null;
				H();
			})();
		} else {
			H();
		}
	}

	function H() {
		var ag = o.length;
		if(ag > 0) {
			for(var af = 0; af < ag; af++) {
				var Y = o[af].id;
				var ab = o[af].callbackFn;
				var aa = {
					success: false,
					id: Y
				};
				if(M.pv[0] > 0) {
					var ae = c(Y);
					if(ae) {
						if(F(o[af].swfVersion) && !(M.wk && M.wk < 312)) {
							w(Y, true);
							if(ab) {
								aa.success = true;
								aa.ref = z(Y);
								ab(aa);
							}
						} else {
							if(o[af].expressInstall && A()) {
								var ai = {};
								ai.data = o[af].expressInstall;
								ai.width = ae.getAttribute("width") || "0";
								ai.height = ae.getAttribute("height") || "0";
								if(ae.getAttribute("class")) {
									ai.styleclass = ae.getAttribute("class");
								}
								if(ae.getAttribute("align")) {
									ai.align = ae.getAttribute("align");
								}
								var ah = {};
								var X = ae.getElementsByTagName("param");
								var ac = X.length;
								for(var ad = 0; ad < ac; ad++) {
									if(X[ad].getAttribute("name").toLowerCase() != "movie") {
										ah[X[ad].getAttribute("name")] = X[ad].getAttribute("value");
									}
								}
								P(ai, ah, Y, ab);
							} else {
								p(ae);
								if(ab) {
									ab(aa);
								}
							}
						}
					}
				} else {
					w(Y, true);
					if(ab) {
						var Z = z(Y);
						if(Z && typeof Z.SetVariable != D) {
							aa.success = true;
							aa.ref = Z;
						}
						ab(aa);
					}
				}
			}
		}
	}

	function z(aa) {
		var X = null;
		var Y = c(aa);
		if(Y && Y.nodeName == "OBJECT") {
			if(typeof Y.SetVariable != D) {
				X = Y;
			} else {
				var Z = Y.getElementsByTagName(r)[0];
				if(Z) {
					X = Z;
				}
			}
		}
		return X;
	}

	function A() {
		return !a && F("6.0.65") && (M.win || M.mac) && !(M.wk && M.wk < 312);
	}

	function P(aa, ab, X, Z) {
		a = true;
		E = Z || null;
		B = {
			success: false,
			id: X
		};
		var ae = c(X);
		if(ae) {
			if(ae.nodeName == "OBJECT") {
				l = g(ae);
				Q = null;
			} else {
				l = ae;
				Q = X;
			}
			aa.id = R;
			if(typeof aa.width == D || (!/%$/.test(aa.width) && parseInt(aa.width, 10) < 310)) {
				aa.width = "310";
			}
			if(typeof aa.height == D || (!/%$/.test(aa.height) && parseInt(aa.height, 10) < 137)) {
				aa.height = "137";
			}
			j.title = j.title.slice(0, 47) + " - Flash Player Installation";
			var ad = M.ie && M.win ? "ActiveX" : "PlugIn",
				ac = "MMredirectURL=" + O.location.toString().replace(/&/g, "%26") + "&MMplayerType=" + ad + "&MMdoctitle=" + j.title;
			if(typeof ab.flashvars != D) {
				ab.flashvars += "&" + ac;
			} else {
				ab.flashvars = ac;
			}
			if(M.ie && M.win && ae.readyState != 4) {
				var Y = C("div");
				X += "SWFObjectNew";
				Y.setAttribute("id", X);
				ae.parentNode.insertBefore(Y, ae);
				ae.style.display = "none";
				(function() {
					if(ae.readyState == 4) {
						ae.parentNode.removeChild(ae);
					} else {
						setTimeout(arguments.callee, 10);
					}
				})();
			}
			u(aa, ab, X);
		}
	}

	function p(Y) {
		if(M.ie && M.win && Y.readyState != 4) {
			var X = C("div");
			Y.parentNode.insertBefore(X, Y);
			X.parentNode.replaceChild(g(Y), X);
			Y.style.display = "none";
			(function() {
				if(Y.readyState == 4) {
					Y.parentNode.removeChild(Y);
				} else {
					setTimeout(arguments.callee, 10);
				}
			})();
		} else {
			Y.parentNode.replaceChild(g(Y), Y);
		}
	}

	function g(ab) {
		var aa = C("div");
		if(M.win && M.ie) {
			aa.innerHTML = ab.innerHTML;
		} else {
			var Y = ab.getElementsByTagName(r)[0];
			if(Y) {
				var ad = Y.childNodes;
				if(ad) {
					var X = ad.length;
					for(var Z = 0; Z < X; Z++) {
						if(!(ad[Z].nodeType == 1 && ad[Z].nodeName == "PARAM") && !(ad[Z].nodeType == 8)) {
							aa.appendChild(ad[Z].cloneNode(true));
						}
					}
				}
			}
		}
		return aa;
	}

	function u(ai, ag, Y) {
		var X, aa = c(Y);
		if(M.wk && M.wk < 312) {
			return X;
		}
		if(aa) {
			if(typeof ai.id == D) {
				ai.id = Y;
			}
			if(M.ie && M.win) {
				var ah = "";
				for(var ae in ai) {
					if(ai[ae] != Object.prototype[ae]) {
						if(ae.toLowerCase() == "data") {
							ag.movie = ai[ae];
						} else {
							if(ae.toLowerCase() == "styleclass") {
								ah += ' class="' + ai[ae] + '"';
							} else {
								if(ae.toLowerCase() != "classid") {
									ah += " " + ae + '="' + ai[ae] + '"';
								}
							}
						}
					}
				}
				var af = "";
				for(var ad in ag) {
					if(ag[ad] != Object.prototype[ad]) {
						af += '<param name="' + ad + '" value="' + ag[ad] + '" />';
					}
				}
				aa.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + ah + ">" + af + "</object>";
				N[N.length] = ai.id;
				X = c(ai.id);
			} else {
				var Z = C(r);
				Z.setAttribute("type", q);
				for(var ac in ai) {
					if(ai[ac] != Object.prototype[ac]) {
						if(ac.toLowerCase() == "styleclass") {
							Z.setAttribute("class", ai[ac]);
						} else {
							if(ac.toLowerCase() != "classid") {
								Z.setAttribute(ac, ai[ac]);
							}
						}
					}
				}
				for(var ab in ag) {
					if(ag[ab] != Object.prototype[ab] && ab.toLowerCase() != "movie") {
						e(Z, ab, ag[ab]);
					}
				}
				aa.parentNode.replaceChild(Z, aa);
				X = Z;
			}
		}
		return X;
	}

	function e(Z, X, Y) {
		var aa = C("param");
		aa.setAttribute("name", X);
		aa.setAttribute("value", Y);
		Z.appendChild(aa);
	}

	function y(Y) {
		var X = c(Y);
		if(X && X.nodeName == "OBJECT") {
			if(M.ie && M.win) {
				X.style.display = "none";
				(function() {
					if(X.readyState == 4) {
						b(Y);
					} else {
						setTimeout(arguments.callee, 10);
					}
				})();
			} else {
				X.parentNode.removeChild(X);
			}
		}
	}

	function b(Z) {
		var Y = c(Z);
		if(Y) {
			for(var X in Y) {
				if(typeof Y[X] == "function") {
					Y[X] = null;
				}
			}
			Y.parentNode.removeChild(Y);
		}
	}

	function c(Z) {
		var X = null;
		try {
			X = j.getElementById(Z);
		} catch(Y) {}
		return X;
	}

	function C(X) {
		return j.createElement(X);
	}

	function i(Z, X, Y) {
		Z.attachEvent(X, Y);
		I[I.length] = [Z, X, Y];
	}

	function F(Z) {
		var Y = M.pv,
			X = Z.split(".");
		X[0] = parseInt(X[0], 10);
		X[1] = parseInt(X[1], 10) || 0;
		X[2] = parseInt(X[2], 10) || 0;
		return(Y[0] > X[0] || (Y[0] == X[0] && Y[1] > X[1]) || (Y[0] == X[0] && Y[1] == X[1] && Y[2] >= X[2])) ? true : false;
	}

	function v(ac, Y, ad, ab) {
		if(M.ie && M.mac) {
			return;
		}
		var aa = j.getElementsByTagName("head")[0];
		if(!aa) {
			return;
		}
		var X = (ad && typeof ad == "string") ? ad : "screen";
		if(ab) {
			n = null;
			G = null;
		}
		if(!n || G != X) {
			var Z = C("style");
			Z.setAttribute("type", "text/css");
			Z.setAttribute("media", X);
			n = aa.appendChild(Z);
			if(M.ie && M.win && typeof j.styleSheets != D && j.styleSheets.length > 0) {
				n = j.styleSheets[j.styleSheets.length - 1];
			}
			G = X;
		}
		if(M.ie && M.win) {
			if(n && typeof n.addRule == r) {
				n.addRule(ac, Y);
			}
		} else {
			if(n && typeof j.createTextNode != D) {
				n.appendChild(j.createTextNode(ac + " {" + Y + "}"));
			}
		}
	}

	function w(Z, X) {
		if(!m) {
			return;
		}
		var Y = X ? "visible" : "hidden";
		if(J && c(Z)) {
			c(Z).style.visibility = Y;
		} else {
			v("#" + Z, "visibility:" + Y);
		}
	}

	function L(Y) {
		var Z = /[\\\"<>\.;]/;
		var X = Z.exec(Y) != null;
		return X && typeof encodeURIComponent != D ? encodeURIComponent(Y) : Y;
	}
	var d = function() {
		if(M.ie && M.win) {
			window.attachEvent("onunload", function() {
				var ac = I.length;
				for(var ab = 0; ab < ac; ab++) {
					I[ab][0].detachEvent(I[ab][1], I[ab][2]);
				}
				var Z = N.length;
				for(var aa = 0; aa < Z; aa++) {
					y(N[aa]);
				}
				for(var Y in M) {
					M[Y] = null;
				}
				M = null;
				for(var X in swfobject) {
					swfobject[X] = null;
				}
				swfobject = null;
			});
		}
	}();
	return {
		registerObject: function(ab, X, aa, Z) {
			if(M.w3 && ab && X) {
				var Y = {};
				Y.id = ab;
				Y.swfVersion = X;
				Y.expressInstall = aa;
				Y.callbackFn = Z;
				o[o.length] = Y;
				w(ab, false);
			} else {
				if(Z) {
					Z({
						success: false,
						id: ab
					});
				}
			}
		},
		getObjectById: function(X) {
			if(M.w3) {
				return z(X);
			}
		},
		embedSWF: function(ab, ah, ae, ag, Y, aa, Z, ad, af, ac) {
			var X = {
				success: false,
				id: ah
			};
			if(M.w3 && !(M.wk && M.wk < 312) && ab && ah && ae && ag && Y) {
				w(ah, false);
				K(function() {
					ae += "";
					ag += "";
					var aj = {};
					if(af && typeof af === r) {
						for(var al in af) {
							aj[al] = af[al];
						}
					}
					aj.data = ab;
					aj.width = ae;
					aj.height = ag;
					var am = {};
					if(ad && typeof ad === r) {
						for(var ak in ad) {
							am[ak] = ad[ak];
						}
					}
					if(Z && typeof Z === r) {
						for(var ai in Z) {
							if(typeof am.flashvars != D) {
								am.flashvars += "&" + ai + "=" + Z[ai];
							} else {
								am.flashvars = ai + "=" + Z[ai];
							}
						}
					}
					if(F(Y)) {
						var an = u(aj, am, ah);
						if(aj.id == ah) {
							w(ah, true);
						}
						X.success = true;
						X.ref = an;
					} else {
						if(aa && A()) {
							aj.data = aa;
							P(aj, am, ah, ac);
							return;
						} else {
							w(ah, true);
						}
					}
					if(ac) {
						ac(X);
					}
				});
			} else {
				if(ac) {
					ac(X);
				}
			}
		},
		switchOffAutoHideShow: function() {
			m = false;
		},
		ua: M,
		getFlashPlayerVersion: function() {
			return {
				major: M.pv[0],
				minor: M.pv[1],
				release: M.pv[2]
			};
		},
		hasFlashPlayerVersion: F,
		createSWF: function(Z, Y, X) {
			if(M.w3) {
				return u(Z, Y, X);
			} else {
				return undefined;
			}
		},
		showExpressInstall: function(Z, aa, X, Y) {
			if(M.w3 && A()) {
				P(Z, aa, X, Y);
			}
		},
		removeSWF: function(X) {
			if(M.w3) {
				y(X);
			}
		},
		createCSS: function(aa, Z, Y, X) {
			if(M.w3) {
				v(aa, Z, Y, X);
			}
		},
		addDomLoadEvent: K,
		addLoadEvent: s,
		getQueryParamValue: function(aa) {
			var Z = j.location.search || j.location.hash;
			if(Z) {
				if(/\?/.test(Z)) {
					Z = Z.split("?")[1];
				}
				if(aa == null) {
					return L(Z);
				}
				var Y = Z.split("&");
				for(var X = 0; X < Y.length; X++) {
					if(Y[X].substring(0, Y[X].indexOf("=")) == aa) {
						return L(Y[X].substring((Y[X].indexOf("=") + 1)));
					}
				}
			}
			return "";
		},
		expressInstallCallback: function() {
			if(a) {
				var X = c(R);
				if(X && l) {
					X.parentNode.replaceChild(l, X);
					if(Q) {
						w(Q, true);
						if(M.ie && M.win) {
							l.style.display = "block";
						}
					}
					if(E) {
						E(B);
					}
				}
				a = false;
			}
		}
	};
}();

/*
SWFUpload: http://www.swfupload.org, http://swfupload.googlecode.com

mmSWFUpload 1.0: Flash upload dialog - http://profandesign.se/swfupload/,  http://www.vinterwebb.se/

SWFUpload is (c) 2006-2007 Lars Huring, Olov Nilzén and Mammon Media and is released under the MIT License:
http://www.opensource.org/licenses/mit-license.php
 
SWFUpload 2 is (c) 2007-2008 Jake Roberts and is released under the MIT License:
http://www.opensource.org/licenses/mit-license.php
*/

var SWFUpload;
if(SWFUpload == undefined) {
	SWFUpload = function(a) {
		this.initSWFUpload(a)
	}
}
SWFUpload.prototype.initSWFUpload = function(b) {
	try {
		this.customSettings = {};
		this.settings = b;
		this.eventQueue = [];
		this.movieName = "SWFUpload_" + SWFUpload.movieCount++;
		this.movieElement = null;
		SWFUpload.instances[this.movieName] = this;
		this.initSettings();
		this.loadFlash();
		this.displayDebugInfo()
	} catch(a) {
		delete SWFUpload.instances[this.movieName];
		throw a
	}
};
SWFUpload.instances = {};
SWFUpload.movieCount = 0;
SWFUpload.version = "2.2.0 2009-03-25";
SWFUpload.QUEUE_ERROR = {
	QUEUE_LIMIT_EXCEEDED: -100,
	FILE_EXCEEDS_SIZE_LIMIT: -110,
	ZERO_BYTE_FILE: -120,
	INVALID_FILETYPE: -130
};
SWFUpload.UPLOAD_ERROR = {
	HTTP_ERROR: -200,
	MISSING_UPLOAD_URL: -210,
	IO_ERROR: -220,
	SECURITY_ERROR: -230,
	UPLOAD_LIMIT_EXCEEDED: -240,
	UPLOAD_FAILED: -250,
	SPECIFIED_FILE_ID_NOT_FOUND: -260,
	FILE_VALIDATION_FAILED: -270,
	FILE_CANCELLED: -280,
	UPLOAD_STOPPED: -290
};
SWFUpload.FILE_STATUS = {
	QUEUED: -1,
	IN_PROGRESS: -2,
	ERROR: -3,
	COMPLETE: -4,
	CANCELLED: -5
};
SWFUpload.BUTTON_ACTION = {
	SELECT_FILE: -100,
	SELECT_FILES: -110,
	START_UPLOAD: -120
};
SWFUpload.CURSOR = {
	ARROW: -1,
	HAND: -2
};
SWFUpload.WINDOW_MODE = {
	WINDOW: "window",
	TRANSPARENT: "transparent",
	OPAQUE: "opaque"
};
SWFUpload.completeURL = function(a) {
	if(typeof(a) !== "string" || a.match(/^https?:\/\//i) || a.match(/^\//)) {
		return a
	}
	var c = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ":" + window.location.port : "");
	var b = window.location.pathname.lastIndexOf("/");
	if(b <= 0) {
		path = "/"
	} else {
		path = window.location.pathname.substr(0, b) + "/"
	}
	return path + a
};
SWFUpload.prototype.initSettings = function() {
	this.ensureDefault = function(b, a) {
		this.settings[b] = (this.settings[b] == undefined) ? a : this.settings[b]
	};
	this.ensureDefault("upload_url", "");
	this.ensureDefault("preserve_relative_urls", false);
	this.ensureDefault("file_post_name", "Filedata");
	this.ensureDefault("post_params", {});
	this.ensureDefault("use_query_string", false);
	this.ensureDefault("requeue_on_error", false);
	this.ensureDefault("http_success", []);
	this.ensureDefault("assume_success_timeout", 0);
	this.ensureDefault("file_types", "*.*");
	this.ensureDefault("file_types_description", "All Files");
	this.ensureDefault("file_size_limit", 0);
	this.ensureDefault("file_upload_limit", 0);
	this.ensureDefault("file_queue_limit", 0);
	this.ensureDefault("flash_url", "swfupload.swf");
	this.ensureDefault("prevent_swf_caching", true);
	this.ensureDefault("button_image_url", "");
	this.ensureDefault("button_width", 1);
	this.ensureDefault("button_height", 1);
	this.ensureDefault("button_text", "");
	this.ensureDefault("button_text_style", "color: #000000; font-size: 16pt;");
	this.ensureDefault("button_text_top_padding", 0);
	this.ensureDefault("button_text_left_padding", 0);
	this.ensureDefault("button_action", SWFUpload.BUTTON_ACTION.SELECT_FILES);
	this.ensureDefault("button_disabled", false);
	this.ensureDefault("button_placeholder_id", "");
	this.ensureDefault("button_placeholder", null);
	this.ensureDefault("button_cursor", SWFUpload.CURSOR.ARROW);
	this.ensureDefault("button_window_mode", SWFUpload.WINDOW_MODE.WINDOW);
	this.ensureDefault("debug", false);
	this.settings.debug_enabled = this.settings.debug;
	this.settings.return_upload_start_handler = this.returnUploadStart;
	this.ensureDefault("swfupload_loaded_handler", null);
	this.ensureDefault("file_dialog_start_handler", null);
	this.ensureDefault("file_queued_handler", null);
	this.ensureDefault("file_queue_error_handler", null);
	this.ensureDefault("file_dialog_complete_handler", null);
	this.ensureDefault("upload_start_handler", null);
	this.ensureDefault("upload_progress_handler", null);
	this.ensureDefault("upload_error_handler", null);
	this.ensureDefault("upload_success_handler", null);
	this.ensureDefault("upload_complete_handler", null);
	this.ensureDefault("debug_handler", this.debugMessage);
	this.ensureDefault("custom_settings", {});
	this.customSettings = this.settings.custom_settings;
	if(!!this.settings.prevent_swf_caching) {
		this.settings.flash_url = this.settings.flash_url + (this.settings.flash_url.indexOf("?") < 0 ? "?" : "&") + "preventswfcaching=" + new Date().getTime()
	}
	if(!this.settings.preserve_relative_urls) {
		this.settings.upload_url = SWFUpload.completeURL(this.settings.upload_url);
		this.settings.button_image_url = SWFUpload.completeURL(this.settings.button_image_url)
	}
	delete this.ensureDefault
};
SWFUpload.prototype.loadFlash = function() {
	var a, b;
	if(document.getElementById(this.movieName) !== null) {
		throw "ID " + this.movieName + " is already in use. The Flash Object could not be added"
	}
	a = document.getElementById(this.settings.button_placeholder_id) || this.settings.button_placeholder;
	if(a == undefined) {
		throw "Could not find the placeholder element: " + this.settings.button_placeholder_id
	}
	b = document.createElement("div");
	b.innerHTML = this.getFlashHTML();
	a.parentNode.replaceChild(b.firstChild, a);
	if(window[this.movieName] == undefined) {
		window[this.movieName] = this.getMovieElement()
	}
};
SWFUpload.prototype.getFlashHTML = function() {
	return ['<object id="', this.movieName, '" type="application/x-shockwave-flash" data="', this.settings.flash_url, '" width="', this.settings.button_width, '" height="', this.settings.button_height, '" class="swfupload">', '<param name="wmode" value="', this.settings.button_window_mode, '" />', '<param name="movie" value="', this.settings.flash_url, '" />', '<param name="quality" value="high" />', '<param name="menu" value="false" />', '<param name="allowScriptAccess" value="always" />', '<param name="flashvars" value="' + this.getFlashVars() + '" />', "</object>"].join("")
};
SWFUpload.prototype.getFlashVars = function() {
	var b = this.buildParamString();
	var a = this.settings.http_success.join(",");
	return ["movieName=", encodeURIComponent(this.movieName), "&amp;uploadURL=", encodeURIComponent(this.settings.upload_url), "&amp;useQueryString=", encodeURIComponent(this.settings.use_query_string), "&amp;requeueOnError=", encodeURIComponent(this.settings.requeue_on_error), "&amp;httpSuccess=", encodeURIComponent(a), "&amp;assumeSuccessTimeout=", encodeURIComponent(this.settings.assume_success_timeout), "&amp;params=", encodeURIComponent(b), "&amp;filePostName=", encodeURIComponent(this.settings.file_post_name), "&amp;fileTypes=", encodeURIComponent(this.settings.file_types), "&amp;fileTypesDescription=", encodeURIComponent(this.settings.file_types_description), "&amp;fileSizeLimit=", encodeURIComponent(this.settings.file_size_limit), "&amp;fileUploadLimit=", encodeURIComponent(this.settings.file_upload_limit), "&amp;fileQueueLimit=", encodeURIComponent(this.settings.file_queue_limit), "&amp;debugEnabled=", encodeURIComponent(this.settings.debug_enabled), "&amp;buttonImageURL=", encodeURIComponent(this.settings.button_image_url), "&amp;buttonWidth=", encodeURIComponent(this.settings.button_width), "&amp;buttonHeight=", encodeURIComponent(this.settings.button_height), "&amp;buttonText=", encodeURIComponent(this.settings.button_text), "&amp;buttonTextTopPadding=", encodeURIComponent(this.settings.button_text_top_padding), "&amp;buttonTextLeftPadding=", encodeURIComponent(this.settings.button_text_left_padding), "&amp;buttonTextStyle=", encodeURIComponent(this.settings.button_text_style), "&amp;buttonAction=", encodeURIComponent(this.settings.button_action), "&amp;buttonDisabled=", encodeURIComponent(this.settings.button_disabled), "&amp;buttonCursor=", encodeURIComponent(this.settings.button_cursor)].join("")
};
SWFUpload.prototype.getMovieElement = function() {
	if(this.movieElement == undefined) {
		this.movieElement = document.getElementById(this.movieName)
	}
	if(this.movieElement === null) {
		throw "Could not find Flash element"
	}
	return this.movieElement
};
SWFUpload.prototype.buildParamString = function() {
	var c = this.settings.post_params;
	var b = [];
	if(typeof(c) === "object") {
		for(var a in c) {
			if(c.hasOwnProperty(a)) {
				b.push(encodeURIComponent(a.toString()) + "=" + encodeURIComponent(c[a].toString()))
			}
		}
	}
	return b.join("&amp;")
};
SWFUpload.prototype.destroy = function() {
	try {
		this.cancelUpload(null, false);
		var a = null;
		a = this.getMovieElement();
		if(a && typeof(a.CallFunction) === "unknown") {
			for(var c in a) {
				try {
					if(typeof(a[c]) === "function") {
						a[c] = null
					}
				} catch(e) {}
			}
			try {
				a.parentNode.removeChild(a)
			} catch(b) {}
		}
		window[this.movieName] = null;
		SWFUpload.instances[this.movieName] = null;
		delete SWFUpload.instances[this.movieName];
		this.movieElement = null;
		this.settings = null;
		this.customSettings = null;
		this.eventQueue = null;
		this.movieName = null;
		return true
	} catch(d) {
		return false
	}
};
SWFUpload.prototype.displayDebugInfo = function() {
	this.debug(["---SWFUpload Instance Info---\n", "Version: ", SWFUpload.version, "\n", "Movie Name: ", this.movieName, "\n", "Settings:\n", "\t", "upload_url:               ", this.settings.upload_url, "\n", "\t", "flash_url:                ", this.settings.flash_url, "\n", "\t", "use_query_string:         ", this.settings.use_query_string.toString(), "\n", "\t", "requeue_on_error:         ", this.settings.requeue_on_error.toString(), "\n", "\t", "http_success:             ", this.settings.http_success.join(", "), "\n", "\t", "assume_success_timeout:   ", this.settings.assume_success_timeout, "\n", "\t", "file_post_name:           ", this.settings.file_post_name, "\n", "\t", "post_params:              ", this.settings.post_params.toString(), "\n", "\t", "file_types:               ", this.settings.file_types, "\n", "\t", "file_types_description:   ", this.settings.file_types_description, "\n", "\t", "file_size_limit:          ", this.settings.file_size_limit, "\n", "\t", "file_upload_limit:        ", this.settings.file_upload_limit, "\n", "\t", "file_queue_limit:         ", this.settings.file_queue_limit, "\n", "\t", "debug:                    ", this.settings.debug.toString(), "\n", "\t", "prevent_swf_caching:      ", this.settings.prevent_swf_caching.toString(), "\n", "\t", "button_placeholder_id:    ", this.settings.button_placeholder_id.toString(), "\n", "\t", "button_placeholder:       ", (this.settings.button_placeholder ? "Set" : "Not Set"), "\n", "\t", "button_image_url:         ", this.settings.button_image_url.toString(), "\n", "\t", "button_width:             ", this.settings.button_width.toString(), "\n", "\t", "button_height:            ", this.settings.button_height.toString(), "\n", "\t", "button_text:              ", this.settings.button_text.toString(), "\n", "\t", "button_text_style:        ", this.settings.button_text_style.toString(), "\n", "\t", "button_text_top_padding:  ", this.settings.button_text_top_padding.toString(), "\n", "\t", "button_text_left_padding: ", this.settings.button_text_left_padding.toString(), "\n", "\t", "button_action:            ", this.settings.button_action.toString(), "\n", "\t", "button_disabled:          ", this.settings.button_disabled.toString(), "\n", "\t", "custom_settings:          ", this.settings.custom_settings.toString(), "\n", "Event Handlers:\n", "\t", "swfupload_loaded_handler assigned:  ", (typeof this.settings.swfupload_loaded_handler === "function").toString(), "\n", "\t", "file_dialog_start_handler assigned: ", (typeof this.settings.file_dialog_start_handler === "function").toString(), "\n", "\t", "file_queued_handler assigned:       ", (typeof this.settings.file_queued_handler === "function").toString(), "\n", "\t", "file_queue_error_handler assigned:  ", (typeof this.settings.file_queue_error_handler === "function").toString(), "\n", "\t", "upload_start_handler assigned:      ", (typeof this.settings.upload_start_handler === "function").toString(), "\n", "\t", "upload_progress_handler assigned:   ", (typeof this.settings.upload_progress_handler === "function").toString(), "\n", "\t", "upload_error_handler assigned:      ", (typeof this.settings.upload_error_handler === "function").toString(), "\n", "\t", "upload_success_handler assigned:    ", (typeof this.settings.upload_success_handler === "function").toString(), "\n", "\t", "upload_complete_handler assigned:   ", (typeof this.settings.upload_complete_handler === "function").toString(), "\n", "\t", "debug_handler assigned:             ", (typeof this.settings.debug_handler === "function").toString(), "\n"].join(""))
};
SWFUpload.prototype.addSetting = function(b, c, a) {
	if(c == undefined) {
		return(this.settings[b] = a)
	} else {
		return(this.settings[b] = c)
	}
};
SWFUpload.prototype.getSetting = function(a) {
	if(this.settings[a] != undefined) {
		return this.settings[a]
	}
	return ""
};
SWFUpload.prototype.callFlash = function(functionName, argumentArray) {
	argumentArray = argumentArray || [];
	var movieElement = this.getMovieElement();
	var returnValue, returnString;
	try {
		returnString = movieElement.CallFunction('<invoke name="' + functionName + '" returntype="javascript">' + __flash__argumentsToXML(argumentArray, 0) + "</invoke>");
		returnValue = eval(returnString)
	} catch(ex) {
		throw "Call to " + functionName + " failed"
	}
	if(returnValue != undefined && typeof returnValue.post === "object") {
		returnValue = this.unescapeFilePostParams(returnValue)
	}
	return returnValue
};
SWFUpload.prototype.selectFile = function() {
	this.callFlash("SelectFile")
};
SWFUpload.prototype.selectFiles = function() {
	this.callFlash("SelectFiles")
};
SWFUpload.prototype.startUpload = function(a) {
	this.callFlash("StartUpload", [a])
};
SWFUpload.prototype.cancelUpload = function(a, b) {
	if(b !== false) {
		b = true
	}
	this.callFlash("CancelUpload", [a, b])
};
SWFUpload.prototype.stopUpload = function() {
	this.callFlash("StopUpload")
};
SWFUpload.prototype.getStats = function() {
	return this.callFlash("GetStats")
};
SWFUpload.prototype.setStats = function(a) {
	this.callFlash("SetStats", [a])
};
SWFUpload.prototype.getFile = function(a) {
	if(typeof(a) === "number") {
		return this.callFlash("GetFileByIndex", [a])
	} else {
		return this.callFlash("GetFile", [a])
	}
};
SWFUpload.prototype.addFileParam = function(a, b, c) {
	return this.callFlash("AddFileParam", [a, b, c])
};
SWFUpload.prototype.removeFileParam = function(a, b) {
	this.callFlash("RemoveFileParam", [a, b])
};
SWFUpload.prototype.setUploadURL = function(a) {
	this.settings.upload_url = a.toString();
	this.callFlash("SetUploadURL", [a])
};
SWFUpload.prototype.setPostParams = function(a) {
	this.settings.post_params = a;
	this.callFlash("SetPostParams", [a])
};
SWFUpload.prototype.addPostParam = function(a, b) {
	this.settings.post_params[a] = b;
	this.callFlash("SetPostParams", [this.settings.post_params])
};
SWFUpload.prototype.removePostParam = function(a) {
	delete this.settings.post_params[a];
	this.callFlash("SetPostParams", [this.settings.post_params])
};
SWFUpload.prototype.setFileTypes = function(a, b) {
	this.settings.file_types = a;
	this.settings.file_types_description = b;
	this.callFlash("SetFileTypes", [a, b])
};
SWFUpload.prototype.setFileSizeLimit = function(a) {
	this.settings.file_size_limit = a;
	this.callFlash("SetFileSizeLimit", [a])
};
SWFUpload.prototype.setFileUploadLimit = function(a) {
	this.settings.file_upload_limit = a;
	this.callFlash("SetFileUploadLimit", [a])
};
SWFUpload.prototype.setFileQueueLimit = function(a) {
	this.settings.file_queue_limit = a;
	this.callFlash("SetFileQueueLimit", [a])
};
SWFUpload.prototype.setFilePostName = function(a) {
	this.settings.file_post_name = a;
	this.callFlash("SetFilePostName", [a])
};
SWFUpload.prototype.setUseQueryString = function(a) {
	this.settings.use_query_string = a;
	this.callFlash("SetUseQueryString", [a])
};
SWFUpload.prototype.setRequeueOnError = function(a) {
	this.settings.requeue_on_error = a;
	this.callFlash("SetRequeueOnError", [a])
};
SWFUpload.prototype.setHTTPSuccess = function(a) {
	if(typeof a === "string") {
		a = a.replace(" ", "").split(",")
	}
	this.settings.http_success = a;
	this.callFlash("SetHTTPSuccess", [a])
};
SWFUpload.prototype.setAssumeSuccessTimeout = function(a) {
	this.settings.assume_success_timeout = a;
	this.callFlash("SetAssumeSuccessTimeout", [a])
};
SWFUpload.prototype.setDebugEnabled = function(a) {
	this.settings.debug_enabled = a;
	this.callFlash("SetDebugEnabled", [a])
};
SWFUpload.prototype.setButtonImageURL = function(a) {
	if(a == undefined) {
		a = ""
	}
	this.settings.button_image_url = a;
	this.callFlash("SetButtonImageURL", [a])
};
SWFUpload.prototype.setButtonDimensions = function(c, a) {
	this.settings.button_width = c;
	this.settings.button_height = a;
	var b = this.getMovieElement();
	if(b != undefined) {
		b.style.width = c + "px";
		b.style.height = a + "px"
	}
	this.callFlash("SetButtonDimensions", [c, a])
};
SWFUpload.prototype.setButtonText = function(a) {
	this.settings.button_text = a;
	this.callFlash("SetButtonText", [a])
};
SWFUpload.prototype.setButtonTextPadding = function(b, a) {
	this.settings.button_text_top_padding = a;
	this.settings.button_text_left_padding = b;
	this.callFlash("SetButtonTextPadding", [b, a])
};
SWFUpload.prototype.setButtonTextStyle = function(a) {
	this.settings.button_text_style = a;
	this.callFlash("SetButtonTextStyle", [a])
};
SWFUpload.prototype.setButtonDisabled = function(a) {
	this.settings.button_disabled = a;
	this.callFlash("SetButtonDisabled", [a])
};
SWFUpload.prototype.setButtonAction = function(a) {
	this.settings.button_action = a;
	this.callFlash("SetButtonAction", [a])
};
SWFUpload.prototype.setButtonCursor = function(a) {
	this.settings.button_cursor = a;
	this.callFlash("SetButtonCursor", [a])
};
SWFUpload.prototype.queueEvent = function(b, c) {
	if(c == undefined) {
		c = []
	} else {
		if(!(c instanceof Array)) {
			c = [c]
		}
	}
	var a = this;
	if(typeof this.settings[b] === "function") {
		this.eventQueue.push(function() {
			this.settings[b].apply(this, c)
		});
		setTimeout(function() {
			a.executeNextEvent()
		}, 0)
	} else {
		if(this.settings[b] !== null) {
			throw "Event handler " + b + " is unknown or is not a function"
		}
	}
};
SWFUpload.prototype.executeNextEvent = function() {
	var a = this.eventQueue ? this.eventQueue.shift() : null;
	if(typeof(a) === "function") {
		a.apply(this)
	}
};
SWFUpload.prototype.unescapeFilePostParams = function(c) {
	var e = /[$]([0-9a-f]{4})/i;
	var f = {};
	var d;
	if(c != undefined) {
		for(var a in c.post) {
			if(c.post.hasOwnProperty(a)) {
				d = a;
				var b;
				while((b = e.exec(d)) !== null) {
					d = d.replace(b[0], String.fromCharCode(parseInt("0x" + b[1], 16)))
				}
				f[d] = c.post[a]
			}
		}
		c.post = f
	}
	return c
};
SWFUpload.prototype.testExternalInterface = function() {
	try {
		return this.callFlash("TestExternalInterface")
	} catch(a) {
		return false
	}
};
SWFUpload.prototype.flashReady = function() {
	var a = this.getMovieElement();
	if(!a) {
		this.debug("Flash called back ready but the flash movie can't be found.");
		return
	}
	this.cleanUp(a);
	this.queueEvent("swfupload_loaded_handler")
};
SWFUpload.prototype.cleanUp = function(a) {
	try {
		if(this.movieElement && typeof(a.CallFunction) === "unknown") {
			this.debug("Removing Flash functions hooks (this should only run in IE and should prevent memory leaks)");
			for(var c in a) {
				try {
					if(typeof(a[c]) === "function") {
						a[c] = null
					}
				} catch(b) {}
			}
		}
	} catch(d) {}
	window.__flash__removeCallback = function(e, f) {
		try {
			if(e) {
				e[f] = null
			}
		} catch(g) {}
	}
};
SWFUpload.prototype.fileDialogStart = function() {
	this.queueEvent("file_dialog_start_handler")
};
SWFUpload.prototype.fileQueued = function(a) {
	a = this.unescapeFilePostParams(a);
	this.queueEvent("file_queued_handler", a)
};
SWFUpload.prototype.fileQueueError = function(a, c, b) {
	a = this.unescapeFilePostParams(a);
	this.queueEvent("file_queue_error_handler", [a, c, b])
};
SWFUpload.prototype.fileDialogComplete = function(b, c, a) {
	this.queueEvent("file_dialog_complete_handler", [b, c, a])
};
SWFUpload.prototype.uploadStart = function(a) {
	a = this.unescapeFilePostParams(a);
	this.queueEvent("return_upload_start_handler", a)
};
SWFUpload.prototype.returnUploadStart = function(a) {
	var b;
	if(typeof this.settings.upload_start_handler === "function") {
		a = this.unescapeFilePostParams(a);
		b = this.settings.upload_start_handler.call(this, a)
	} else {
		if(this.settings.upload_start_handler != undefined) {
			throw "upload_start_handler must be a function"
		}
	}
	if(b === undefined) {
		b = true
	}
	b = !!b;
	this.callFlash("ReturnUploadStart", [b])
};
SWFUpload.prototype.uploadProgress = function(a, c, b) {
	a = this.unescapeFilePostParams(a);
	this.queueEvent("upload_progress_handler", [a, c, b])
};
SWFUpload.prototype.uploadError = function(a, c, b) {
	a = this.unescapeFilePostParams(a);
	this.queueEvent("upload_error_handler", [a, c, b])
};
SWFUpload.prototype.uploadSuccess = function(b, a, c) {
	b = this.unescapeFilePostParams(b);
	this.queueEvent("upload_success_handler", [b, a, c])
};
SWFUpload.prototype.uploadComplete = function(a) {
	a = this.unescapeFilePostParams(a);
	this.queueEvent("upload_complete_handler", a)
};
SWFUpload.prototype.debug = function(a) {
	this.queueEvent("debug_handler", a)
};
SWFUpload.prototype.debugMessage = function(c) {
	if(this.settings.debug) {
		var a, d = [];
		if(typeof c === "object" && typeof c.name === "string" && typeof c.message === "string") {
			for(var b in c) {
				if(c.hasOwnProperty(b)) {
					d.push(b + ": " + c[b])
				}
			}
			a = d.join("\n") || "";
			d = a.split("\n");
			a = "EXCEPTION: " + d.join("\nEXCEPTION: ");
			SWFUpload.Console.writeLine(a)
		} else {
			SWFUpload.Console.writeLine(c)
		}
	}
};
SWFUpload.Console = {};
SWFUpload.Console.writeLine = function(d) {
	var b, a;
	try {
		b = document.getElementById("SWFUpload_Console");
		if(!b) {
			a = document.createElement("form");
			document.getElementsByTagName("body")[0].appendChild(a);
			b = document.createElement("textarea");
			b.id = "SWFUpload_Console";
			b.style.fontFamily = "monospace";
			b.setAttribute("wrap", "off");
			b.wrap = "off";
			b.style.overflow = "auto";
			b.style.width = "700px";
			b.style.height = "350px";
			b.style.margin = "5px";
			a.appendChild(b)
		}
		b.value += d + "\n";
		b.scrollTop = b.scrollHeight - b.clientHeight
	} catch(c) {
		alert("Exception: " + c.name + " Message: " + c.message)
	}
};

/*
Uploadify v3.2.1
Copyright (c) 2012 Reactive Apps, Ronnie Garcia
Released under the MIT License <http://www.opensource.org/licenses/mit-license.php> 
*/

(function($) {

	// These methods can be called by adding them as the first argument in the uploadify plugin call
	var methods = {

		init: function(options, swfUploadOptions) {

			return this.each(function() {

				// Create a reference to the jQuery DOM object
				var $this = $(this);

				// Clone the original DOM object
				var $clone = $this.clone();

				// Setup the default options
				var settings = $.extend({
					// Required Settings
					id: $this.attr('id'), // The ID of the DOM object
					swf: 'uploadify.swf', // The path to the uploadify SWF file
					uploader: 'uploadify.php', // The path to the server-side upload script

					// Options
					auto: true, // Automatically upload files when added to the queue
					buttonClass: '', // A class name to add to the browse button DOM object
					buttonCursor: 'hand', // The cursor to use with the browse button
					buttonImage: null, // (String or null) The path to an image to use for the Flash browse button if not using CSS to style the button
					buttonText: 'SELECT FILES', // The text to use for the browse button
					checkExisting: false, // The path to a server-side script that checks for existing files on the server
					debug: false, // Turn on swfUpload debugging mode
					fileObjName: 'Filedata', // The name of the file object to use in your server-side script
					fileSizeLimit: 0, // The maximum size of an uploadable file in KB (Accepts units B KB MB GB if string, 0 for no limit)
					fileTypeDesc: 'All Files', // The description for file types in the browse dialog
					fileTypeExts: '*.*', // Allowed extensions in the browse dialog (server-side validation should also be used)
					height: 30, // The height of the browse button
					itemTemplate: false, // The template for the file item in the queue
					method: 'post', // The method to use when sending files to the server-side upload script
					multi: true, // Allow multiple file selection in the browse dialog
					formData: {}, // An object with additional data to send to the server-side upload script with every file upload
					preventCaching: true, // Adds a random value to the Flash URL to prevent caching of it (conflicts with existing parameters)
					progressData: 'percentage', // ('percentage' or 'speed') Data to show in the queue item during a file upload
					queueID: false, // The ID of the DOM object to use as a file queue (without the #)
					queueSizeLimit: 999, // The maximum number of files that can be in the queue at one time
					removeCompleted: true, // Remove queue items from the queue when they are done uploading
					removeTimeout: 3, // The delay in seconds before removing a queue item if removeCompleted is set to true
					requeueErrors: false, // Keep errored files in the queue and keep trying to upload them
					successTimeout: 30, // The number of seconds to wait for Flash to detect the server's response after the file has finished uploading
					uploadLimit: 0, // The maximum number of files you can upload
					width: 120, // The width of the browse button

					// Events
					overrideEvents: [] // (Array) A list of default event handlers to skip
						/*
						onCancel         // Triggered when a file is cancelled from the queue
						onClearQueue     // Triggered during the 'clear queue' method
						onDestroy        // Triggered when the uploadify object is destroyed
						onDialogClose    // Triggered when the browse dialog is closed
						onDialogOpen     // Triggered when the browse dialog is opened
						onDisable        // Triggered when the browse button gets disabled
						onEnable         // Triggered when the browse button gets enabled
						onFallback       // Triggered is Flash is not detected    
						onInit           // Triggered when Uploadify is initialized
						onQueueComplete  // Triggered when all files in the queue have been uploaded
						onSelectError    // Triggered when an error occurs while selecting a file (file size, queue size limit, etc.)
						onSelect         // Triggered for each file that is selected
						onSWFReady       // Triggered when the SWF button is loaded
						onUploadComplete // Triggered when a file upload completes (success or error)
						onUploadError    // Triggered when a file upload returns an error
						onUploadSuccess  // Triggered when a file is uploaded successfully
						onUploadProgress // Triggered every time a file progress is updated
						onUploadStart    // Triggered immediately before a file upload starts
						*/
				}, options);

				// Prepare settings for SWFUpload
				var swfUploadSettings = {
					assume_success_timeout: settings.successTimeout,
					button_placeholder_id: settings.id,
					button_width: settings.width,
					button_height: settings.height,
					button_text: null,
					button_text_style: null,
					button_text_top_padding: 0,
					button_text_left_padding: 0,
					button_action: (settings.multi ? SWFUpload.BUTTON_ACTION.SELECT_FILES : SWFUpload.BUTTON_ACTION.SELECT_FILE),
					button_disabled: false,
					button_cursor: (settings.buttonCursor == 'arrow' ? SWFUpload.CURSOR.ARROW : SWFUpload.CURSOR.HAND),
					button_window_mode: SWFUpload.WINDOW_MODE.TRANSPARENT,
					debug: settings.debug,
					requeue_on_error: settings.requeueErrors,
					file_post_name: settings.fileObjName,
					file_size_limit: settings.fileSizeLimit,
					file_types: settings.fileTypeExts,
					file_types_description: settings.fileTypeDesc,
					file_queue_limit: settings.queueSizeLimit,
					file_upload_limit: settings.uploadLimit,
					flash_url: settings.swf,
					prevent_swf_caching: settings.preventCaching,
					post_params: settings.formData,
					upload_url: settings.uploader,
					use_query_string: (settings.method == 'get'),

					// Event Handlers 
					file_dialog_complete_handler: handlers.onDialogClose,
					file_dialog_start_handler: handlers.onDialogOpen,
					file_queued_handler: handlers.onSelect,
					file_queue_error_handler: handlers.onSelectError,
					swfupload_loaded_handler: settings.onSWFReady,
					upload_complete_handler: handlers.onUploadComplete,
					upload_error_handler: handlers.onUploadError,
					upload_progress_handler: handlers.onUploadProgress,
					upload_start_handler: handlers.onUploadStart,
					upload_success_handler: handlers.onUploadSuccess
				}

				// Merge the user-defined options with the defaults
				if(swfUploadOptions) {
					swfUploadSettings = $.extend(swfUploadSettings, swfUploadOptions);
				}
				// Add the user-defined settings to the swfupload object
				swfUploadSettings = $.extend(swfUploadSettings, settings);

				// Detect if Flash is available
				var playerVersion = swfobject.getFlashPlayerVersion();
				var flashInstalled = (playerVersion.major >= 9);

				if(flashInstalled) {
					// Create the swfUpload instance
					window['uploadify_' + settings.id] = new SWFUpload(swfUploadSettings);
					var swfuploadify = window['uploadify_' + settings.id];

					// Add the SWFUpload object to the elements data object
					$this.data('uploadify', swfuploadify);

					// Wrap the instance
					var $wrapper = $('<div />', {
						'id': settings.id,
						'class': 'uploadify',
						'css': {
							'height': settings.height + 'px',
							'width': settings.width + 'px'
						}
					});
					$('#' + swfuploadify.movieName).wrap($wrapper);
					// Recreate the reference to wrapper
					$wrapper = $('#' + settings.id);
					// Add the data object to the wrapper 
					$wrapper.data('uploadify', swfuploadify);

					// Create the button
					var $button = $('<div />', {
						'id': settings.id + '-button',
						'class': 'uploadify-button ' + settings.buttonClass
					});
					if(settings.buttonImage) {
						$button.css({
							'background-image': "url('" + settings.buttonImage + "')",
							'text-indent': '-9999px'
						});
					}
					$button.html('<span class="uploadify-button-text">' + settings.buttonText + '</span>')
						.css({
							'height': settings.height + 'px',
							'line-height': settings.height + 'px',
							'width': settings.width + 'px'
						});
					// Append the button to the wrapper
					$wrapper.append($button);

					// Adjust the styles of the movie
					$('#' + swfuploadify.movieName).css({
						'position': 'absolute',
						'z-index': 1
					});

					// Create the file queue
					if(!settings.queueID) {
						var $queue = $('<div />', {
							'id': settings.id + '-queue',
							'class': 'uploadify-queue'
						});
						$wrapper.after($queue);
						swfuploadify.settings.queueID = settings.id + '-queue';
						swfuploadify.settings.defaultQueue = true;
					}

					// Create some queue related objects and variables
					swfuploadify.queueData = {
						files: {}, // The files in the queue
						filesSelected: 0, // The number of files selected in the last select operation
						filesQueued: 0, // The number of files added to the queue in the last select operation
						filesReplaced: 0, // The number of files replaced in the last select operation
						filesCancelled: 0, // The number of files that were cancelled instead of replaced
						filesErrored: 0, // The number of files that caused error in the last select operation
						uploadsSuccessful: 0, // The number of files that were successfully uploaded
						uploadsErrored: 0, // The number of files that returned errors during upload
						averageSpeed: 0, // The average speed of the uploads in KB
						queueLength: 0, // The number of files in the queue
						queueSize: 0, // The size in bytes of the entire queue
						uploadSize: 0, // The size in bytes of the upload queue
						queueBytesUploaded: 0, // The size in bytes that have been uploaded for the current upload queue
						uploadQueue: [], // The files currently to be uploaded
						errorMsg: 'Some files were not added to the queue:'
					};

					// Save references to all the objects
					swfuploadify.original = $clone;
					swfuploadify.wrapper = $wrapper;
					swfuploadify.button = $button;
					swfuploadify.queue = $queue;

					// Call the user-defined init event handler
					if(settings.onInit) settings.onInit.call($this, swfuploadify);

				} else {

					// Call the fallback function
					if(settings.onFallback) settings.onFallback.call($this);

				}
			});

		},

		// Stop a file upload and remove it from the queue 
		cancel: function(fileID, supressEvent) {

			var args = arguments;

			this.each(function() {
				// Create a reference to the jQuery DOM object
				var $this = $(this),
					swfuploadify = $this.data('uploadify'),
					settings = swfuploadify.settings,
					delay = -1;

				if(args[0]) {
					// Clear the queue
					if(args[0] == '*') {
						var queueItemCount = swfuploadify.queueData.queueLength;
						$('#' + settings.queueID).find('.uploadify-queue-item').each(function() {
							delay++;
							if(args[1] === true) {
								swfuploadify.cancelUpload($(this).attr('id'), false);
							} else {
								swfuploadify.cancelUpload($(this).attr('id'));
							}
							$(this).find('.data').removeClass('data').html(' - Cancelled');
							$(this).find('.uploadify-progress-bar').remove();
							$(this).delay(1000 + 100 * delay).fadeOut(500, function() {
								$(this).remove();
							});
						});
						swfuploadify.queueData.queueSize = 0;
						swfuploadify.queueData.queueLength = 0;
						// Trigger the onClearQueue event
						if(settings.onClearQueue) settings.onClearQueue.call($this, queueItemCount);
					} else {
						for(var n = 0; n < args.length; n++) {
							swfuploadify.cancelUpload(args[n]);
							$('#' + args[n]).find('.data').removeClass('data').html(' - Cancelled');
							$('#' + args[n]).find('.uploadify-progress-bar').remove();
							$('#' + args[n]).delay(1000 + 100 * n).fadeOut(500, function() {
								$(this).remove();
							});
						}
					}
				} else {
					var item = $('#' + settings.queueID).find('.uploadify-queue-item').get(0);
					$item = $(item);
					swfuploadify.cancelUpload($item.attr('id'));
					$item.find('.data').removeClass('data').html(' - Cancelled');
					$item.find('.uploadify-progress-bar').remove();
					$item.delay(1000).fadeOut(500, function() {
						$(this).remove();
					});
				}
			});

		},

		// Revert the DOM object back to its original state
		destroy: function() {

			this.each(function() {
				// Create a reference to the jQuery DOM object
				var $this = $(this),
					swfuploadify = $this.data('uploadify'),
					settings = swfuploadify.settings;

				// Destroy the SWF object and 
				swfuploadify.destroy();

				// Destroy the queue
				if(settings.defaultQueue) {
					$('#' + settings.queueID).remove();
				}

				// Reload the original DOM element
				$('#' + settings.id).replaceWith(swfuploadify.original);

				// Call the user-defined event handler
				if(settings.onDestroy) settings.onDestroy.call(this);

				delete swfuploadify;
			});

		},

		// Disable the select button
		disable: function(isDisabled) {

			this.each(function() {
				// Create a reference to the jQuery DOM object
				var $this = $(this),
					swfuploadify = $this.data('uploadify'),
					settings = swfuploadify.settings;

				// Call the user-defined event handlers
				if(isDisabled) {
					swfuploadify.button.addClass('disabled');
					if(settings.onDisable) settings.onDisable.call(this);
				} else {
					swfuploadify.button.removeClass('disabled');
					if(settings.onEnable) settings.onEnable.call(this);
				}

				// Enable/disable the browse button
				swfuploadify.setButtonDisabled(isDisabled);
			});

		},

		// Get or set the settings data
		settings: function(name, value, resetObjects) {

			var args = arguments;
			var returnValue = value;

			this.each(function() {
				// Create a reference to the jQuery DOM object
				var $this = $(this),
					swfuploadify = $this.data('uploadify'),
					settings = swfuploadify.settings;

				if(typeof(args[0]) == 'object') {
					for(var n in value) {
						setData(n, value[n]);
					}
				}
				if(args.length === 1) {
					returnValue = settings[name];
				} else {
					switch(name) {
						case 'uploader':
							swfuploadify.setUploadURL(value);
							break;
						case 'formData':
							if(!resetObjects) {
								value = $.extend(settings.formData, value);
							}
							swfuploadify.setPostParams(settings.formData);
							break;
						case 'method':
							if(value == 'get') {
								swfuploadify.setUseQueryString(true);
							} else {
								swfuploadify.setUseQueryString(false);
							}
							break;
						case 'fileObjName':
							swfuploadify.setFilePostName(value);
							break;
						case 'fileTypeExts':
							swfuploadify.setFileTypes(value, settings.fileTypeDesc);
							break;
						case 'fileTypeDesc':
							swfuploadify.setFileTypes(settings.fileTypeExts, value);
							break;
						case 'fileSizeLimit':
							swfuploadify.setFileSizeLimit(value);
							break;
						case 'uploadLimit':
							swfuploadify.setFileUploadLimit(value);
							break;
						case 'queueSizeLimit':
							swfuploadify.setFileQueueLimit(value);
							break;
						case 'buttonImage':
							swfuploadify.button.css('background-image', settingValue);
							break;
						case 'buttonCursor':
							if(value == 'arrow') {
								swfuploadify.setButtonCursor(SWFUpload.CURSOR.ARROW);
							} else {
								swfuploadify.setButtonCursor(SWFUpload.CURSOR.HAND);
							}
							break;
						case 'buttonText':
							$('#' + settings.id + '-button').find('.uploadify-button-text').html(value);
							break;
						case 'width':
							swfuploadify.setButtonDimensions(value, settings.height);
							break;
						case 'height':
							swfuploadify.setButtonDimensions(settings.width, value);
							break;
						case 'multi':
							if(value) {
								swfuploadify.setButtonAction(SWFUpload.BUTTON_ACTION.SELECT_FILES);
							} else {
								swfuploadify.setButtonAction(SWFUpload.BUTTON_ACTION.SELECT_FILE);
							}
							break;
					}
					settings[name] = value;
				}
			});

			if(args.length === 1) {
				return returnValue;
			}

		},

		// Stop the current uploads and requeue what is in progress
		stop: function() {

			this.each(function() {
				// Create a reference to the jQuery DOM object
				var $this = $(this),
					swfuploadify = $this.data('uploadify');

				// Reset the queue information
				swfuploadify.queueData.averageSpeed = 0;
				swfuploadify.queueData.uploadSize = 0;
				swfuploadify.queueData.bytesUploaded = 0;
				swfuploadify.queueData.uploadQueue = [];

				swfuploadify.stopUpload();
			});

		},

		// Start uploading files in the queue
		upload: function() {

			var args = arguments;

			this.each(function() {
				// Create a reference to the jQuery DOM object
				var $this = $(this),
					swfuploadify = $this.data('uploadify');

				// Reset the queue information
				swfuploadify.queueData.averageSpeed = 0;
				swfuploadify.queueData.uploadSize = 0;
				swfuploadify.queueData.bytesUploaded = 0;
				swfuploadify.queueData.uploadQueue = [];

				// Upload the files
				if(args[0]) {
					if(args[0] == '*') {
						swfuploadify.queueData.uploadSize = swfuploadify.queueData.queueSize;
						swfuploadify.queueData.uploadQueue.push('*');
						swfuploadify.startUpload();
					} else {
						for(var n = 0; n < args.length; n++) {
							swfuploadify.queueData.uploadSize += swfuploadify.queueData.files[args[n]].size;
							swfuploadify.queueData.uploadQueue.push(args[n]);
						}
						swfuploadify.startUpload(swfuploadify.queueData.uploadQueue.shift());
					}
				} else {
					swfuploadify.startUpload();
				}

			});

		}

	}

	// These functions handle all the events that occur with the file uploader
	var handlers = {

		// Triggered when the file dialog is opened
		onDialogOpen: function() {
			// Load the swfupload settings
			var settings = this.settings;

			// Reset some queue info
			this.queueData.errorMsg = 'Some files were not added to the queue:';
			this.queueData.filesReplaced = 0;
			this.queueData.filesCancelled = 0;

			// Call the user-defined event handler
			if(settings.onDialogOpen) settings.onDialogOpen.call(this);
		},

		// Triggered when the browse dialog is closed
		onDialogClose: function(filesSelected, filesQueued, queueLength) {
			// Load the swfupload settings
			var settings = this.settings;

			// Update the queue information
			this.queueData.filesErrored = filesSelected - filesQueued;
			this.queueData.filesSelected = filesSelected;
			this.queueData.filesQueued = filesQueued - this.queueData.filesCancelled;
			this.queueData.queueLength = queueLength;

			// Run the default event handler
			if($.inArray('onDialogClose', settings.overrideEvents) < 0) {
				if(this.queueData.filesErrored > 0) {
					alert(this.queueData.errorMsg);
				}
			}

			// Call the user-defined event handler
			if(settings.onDialogClose) settings.onDialogClose.call(this, this.queueData);

			// Upload the files if auto is true
			if(settings.auto) $('#' + settings.id).uploadify('upload', '*');
		},

		// Triggered once for each file added to the queue
		onSelect: function(file) {
			// Load the swfupload settings
			var settings = this.settings;

			// Check if a file with the same name exists in the queue
			var queuedFile = {};
			for(var n in this.queueData.files) {
				queuedFile = this.queueData.files[n];
				if(queuedFile.uploaded != true && queuedFile.name == file.name) {
					var replaceQueueItem = confirm('The file named "' + file.name + '" is already in the queue.\nDo you want to replace the existing item in the queue?');
					if(!replaceQueueItem) {
						this.cancelUpload(file.id);
						this.queueData.filesCancelled++;
						return false;
					} else {
						$('#' + queuedFile.id).remove();
						this.cancelUpload(queuedFile.id);
						this.queueData.filesReplaced++;
					}
				}
			}

			// Get the size of the file
			var fileSize = Math.round(file.size / 1024);
			var suffix = 'KB';
			if(fileSize > 1000) {
				fileSize = Math.round(fileSize / 1000);
				suffix = 'MB';
			}
			var fileSizeParts = fileSize.toString().split('.');
			fileSize = fileSizeParts[0];
			if(fileSizeParts.length > 1) {
				fileSize += '.' + fileSizeParts[1].substr(0, 2);
			}
			fileSize += suffix;

			// Truncate the filename if it's too long
			var fileName = file.name;
			if(fileName.length > 25) {
				fileName = fileName.substr(0, 25) + '...';
			}

			// Create the file data object
			itemData = {
				'fileID': file.id,
				'instanceID': settings.id,
				'fileName': fileName,
				'fileSize': fileSize
			}

			// Create the file item template
			if(settings.itemTemplate == false) {
				settings.itemTemplate = '<div id="${fileID}" class="uploadify-queue-item">\
					<div class="cancel">\
						<a href="javascript:$(\'#${instanceID}\').uploadify(\'cancel\', \'${fileID}\')">X</a>\
					</div>\
					<span class="fileName">${fileName} (${fileSize})</span><span class="data"></span>\
					<div class="uploadify-progress">\
						<div class="uploadify-progress-bar"><!--Progress Bar--></div>\
					</div>\
				</div>';
			}

			// Run the default event handler
			if($.inArray('onSelect', settings.overrideEvents) < 0) {

				// Replace the item data in the template
				itemHTML = settings.itemTemplate;
				for(var d in itemData) {
					itemHTML = itemHTML.replace(new RegExp('\\$\\{' + d + '\\}', 'g'), itemData[d]);
				}

				// Add the file item to the queue
				$('#' + settings.queueID).append(itemHTML);
			}

			this.queueData.queueSize += file.size;
			this.queueData.files[file.id] = file;

			// Call the user-defined event handler
			if(settings.onSelect) settings.onSelect.apply(this, arguments);
		},

		// Triggered when a file is not added to the queue
		onSelectError: function(file, errorCode, errorMsg) {
			// Load the swfupload settings
			var settings = this.settings;

			// Run the default event handler
			if($.inArray('onSelectError', settings.overrideEvents) < 0) {
				switch(errorCode) {
					case SWFUpload.QUEUE_ERROR.QUEUE_LIMIT_EXCEEDED:
						if(settings.queueSizeLimit > errorMsg) {
							this.queueData.errorMsg += '\nThe number of files selected exceeds the remaining upload limit (' + errorMsg + ').';
						} else {
							this.queueData.errorMsg += '\nThe number of files selected exceeds the queue size limit (' + settings.queueSizeLimit + ').';
						}
						break;
					case SWFUpload.QUEUE_ERROR.FILE_EXCEEDS_SIZE_LIMIT:
						this.queueData.errorMsg += '\nThe file "' + file.name + '" exceeds the size limit (' + settings.fileSizeLimit + ').';
						break;
					case SWFUpload.QUEUE_ERROR.ZERO_BYTE_FILE:
						this.queueData.errorMsg += '\nThe file "' + file.name + '" is empty.';
						break;
					case SWFUpload.QUEUE_ERROR.FILE_EXCEEDS_SIZE_LIMIT:
						this.queueData.errorMsg += '\nThe file "' + file.name + '" is not an accepted file type (' + settings.fileTypeDesc + ').';
						break;
				}
			}
			if(errorCode != SWFUpload.QUEUE_ERROR.QUEUE_LIMIT_EXCEEDED) {
				delete this.queueData.files[file.id];
			}

			// Call the user-defined event handler
			if(settings.onSelectError) settings.onSelectError.apply(this, arguments);
		},

		// Triggered when all the files in the queue have been processed
		onQueueComplete: function() {
			if(this.settings.onQueueComplete) this.settings.onQueueComplete.call(this, this.settings.queueData);
		},

		// Triggered when a file upload successfully completes
		onUploadComplete: function(file) {
			// Load the swfupload settings
			var settings = this.settings,
				swfuploadify = this;

			// Check if all the files have completed uploading
			var stats = this.getStats();
			this.queueData.queueLength = stats.files_queued;
			if(this.queueData.uploadQueue[0] == '*') {
				if(this.queueData.queueLength > 0) {
					this.startUpload();
				} else {
					this.queueData.uploadQueue = [];

					// Call the user-defined event handler for queue complete
					if(settings.onQueueComplete) settings.onQueueComplete.call(this, this.queueData);
				}
			} else {
				if(this.queueData.uploadQueue.length > 0) {
					this.startUpload(this.queueData.uploadQueue.shift());
				} else {
					this.queueData.uploadQueue = [];

					// Call the user-defined event handler for queue complete
					if(settings.onQueueComplete) settings.onQueueComplete.call(this, this.queueData);
				}
			}

			// Call the default event handler
			if($.inArray('onUploadComplete', settings.overrideEvents) < 0) {
				if(settings.removeCompleted) {
					switch(file.filestatus) {
						case SWFUpload.FILE_STATUS.COMPLETE:
							setTimeout(function() {
								if($('#' + file.id)) {
									swfuploadify.queueData.queueSize -= file.size;
									swfuploadify.queueData.queueLength -= 1;
									delete swfuploadify.queueData.files[file.id]
									$('#' + file.id).fadeOut(500, function() {
										$(this).remove();
									});
								}
							}, settings.removeTimeout * 1000);
							break;
						case SWFUpload.FILE_STATUS.ERROR:
							if(!settings.requeueErrors) {
								setTimeout(function() {
									if($('#' + file.id)) {
										swfuploadify.queueData.queueSize -= file.size;
										swfuploadify.queueData.queueLength -= 1;
										delete swfuploadify.queueData.files[file.id];
										$('#' + file.id).fadeOut(500, function() {
											$(this).remove();
										});
									}
								}, settings.removeTimeout * 1000);
							}
							break;
					}
				} else {
					file.uploaded = true;
				}
			}

			// Call the user-defined event handler
			if(settings.onUploadComplete) settings.onUploadComplete.call(this, file);
		},

		// Triggered when a file upload returns an error
		onUploadError: function(file, errorCode, errorMsg) {
			// Load the swfupload settings
			var settings = this.settings;

			// Set the error string
			var errorString = 'Error';
			switch(errorCode) {
				case SWFUpload.UPLOAD_ERROR.HTTP_ERROR:
					errorString = 'HTTP Error (' + errorMsg + ')';
					break;
				case SWFUpload.UPLOAD_ERROR.MISSING_UPLOAD_URL:
					errorString = 'Missing Upload URL';
					break;
				case SWFUpload.UPLOAD_ERROR.IO_ERROR:
					errorString = 'IO Error';
					break;
				case SWFUpload.UPLOAD_ERROR.SECURITY_ERROR:
					errorString = 'Security Error';
					break;
				case SWFUpload.UPLOAD_ERROR.UPLOAD_LIMIT_EXCEEDED:
					alert('The upload limit has been reached (' + errorMsg + ').');
					errorString = 'Exceeds Upload Limit';
					break;
				case SWFUpload.UPLOAD_ERROR.UPLOAD_FAILED:
					errorString = 'Failed';
					break;
				case SWFUpload.UPLOAD_ERROR.SPECIFIED_FILE_ID_NOT_FOUND:
					break;
				case SWFUpload.UPLOAD_ERROR.FILE_VALIDATION_FAILED:
					errorString = 'Validation Error';
					break;
				case SWFUpload.UPLOAD_ERROR.FILE_CANCELLED:
					errorString = 'Cancelled';
					this.queueData.queueSize -= file.size;
					this.queueData.queueLength -= 1;
					if(file.status == SWFUpload.FILE_STATUS.IN_PROGRESS || $.inArray(file.id, this.queueData.uploadQueue) >= 0) {
						this.queueData.uploadSize -= file.size;
					}
					// Trigger the onCancel event
					if(settings.onCancel) settings.onCancel.call(this, file);
					delete this.queueData.files[file.id];
					break;
				case SWFUpload.UPLOAD_ERROR.UPLOAD_STOPPED:
					errorString = 'Stopped';
					break;
			}

			// Call the default event handler
			if($.inArray('onUploadError', settings.overrideEvents) < 0) {

				if(errorCode != SWFUpload.UPLOAD_ERROR.FILE_CANCELLED && errorCode != SWFUpload.UPLOAD_ERROR.UPLOAD_STOPPED) {
					$('#' + file.id).addClass('uploadify-error');
				}

				// Reset the progress bar
				$('#' + file.id).find('.uploadify-progress-bar').css('width', '1px');

				// Add the error message to the queue item
				if(errorCode != SWFUpload.UPLOAD_ERROR.SPECIFIED_FILE_ID_NOT_FOUND && file.status != SWFUpload.FILE_STATUS.COMPLETE) {
					$('#' + file.id).find('.data').html(' - ' + errorString);
				}
			}

			var stats = this.getStats();
			this.queueData.uploadsErrored = stats.upload_errors;

			// Call the user-defined event handler
			if(settings.onUploadError) settings.onUploadError.call(this, file, errorCode, errorMsg, errorString);
		},

		// Triggered periodically during a file upload
		onUploadProgress: function(file, fileBytesLoaded, fileTotalBytes) {
			// Load the swfupload settings
			var settings = this.settings;

			// Setup all the variables
			var timer = new Date();
			var newTime = timer.getTime();
			var lapsedTime = newTime - this.timer;
			if(lapsedTime > 500) {
				this.timer = newTime;
			}
			var lapsedBytes = fileBytesLoaded - this.bytesLoaded;
			this.bytesLoaded = fileBytesLoaded;
			var queueBytesLoaded = this.queueData.queueBytesUploaded + fileBytesLoaded;
			var percentage = Math.round(fileBytesLoaded / fileTotalBytes * 100);

			// Calculate the average speed
			var suffix = 'KB/s';
			var mbs = 0;
			var kbs = (lapsedBytes / 1024) / (lapsedTime / 1000);
			kbs = Math.floor(kbs * 10) / 10;
			if(this.queueData.averageSpeed > 0) {
				this.queueData.averageSpeed = Math.floor((this.queueData.averageSpeed + kbs) / 2);
			} else {
				this.queueData.averageSpeed = Math.floor(kbs);
			}
			if(kbs > 1000) {
				mbs = (kbs * .001);
				this.queueData.averageSpeed = Math.floor(mbs);
				suffix = 'MB/s';
			}

			// Call the default event handler
			if($.inArray('onUploadProgress', settings.overrideEvents) < 0) {
				if(settings.progressData == 'percentage') {
					$('#' + file.id).find('.data').html(' - ' + percentage + '%');
				} else if(settings.progressData == 'speed' && lapsedTime > 500) {
					$('#' + file.id).find('.data').html(' - ' + this.queueData.averageSpeed + suffix);
				}
				$('#' + file.id).find('.uploadify-progress-bar').css('width', percentage + '%');
			}

			// Call the user-defined event handler
			if(settings.onUploadProgress) settings.onUploadProgress.call(this, file, fileBytesLoaded, fileTotalBytes, queueBytesLoaded, this.queueData.uploadSize);
		},

		// Triggered right before a file is uploaded
		onUploadStart: function(file) {
			// Load the swfupload settings
			var settings = this.settings;

			var timer = new Date();
			this.timer = timer.getTime();
			this.bytesLoaded = 0;
			if(this.queueData.uploadQueue.length == 0) {
				this.queueData.uploadSize = file.size;
			}
			if(settings.checkExisting) {
				$.ajax({
					type: 'POST',
					async: false,
					url: settings.checkExisting,
					data: {
						filename: file.name
					},
					success: function(data) {
						if(data == 1) {
							var overwrite = confirm('A file with the name "' + file.name + '" already exists on the server.\nWould you like to replace the existing file?');
							if(!overwrite) {
								this.cancelUpload(file.id);
								$('#' + file.id).remove();
								if(this.queueData.uploadQueue.length > 0 && this.queueData.queueLength > 0) {
									if(this.queueData.uploadQueue[0] == '*') {
										this.startUpload();
									} else {
										this.startUpload(this.queueData.uploadQueue.shift());
									}
								}
							}
						}
					}
				});
			}

			// Call the user-defined event handler
			if(settings.onUploadStart) settings.onUploadStart.call(this, file);
		},

		// Triggered when a file upload returns a successful code
		onUploadSuccess: function(file, data, response) {
			// Load the swfupload settings
			var settings = this.settings;
			var stats = this.getStats();
			this.queueData.uploadsSuccessful = stats.successful_uploads;
			this.queueData.queueBytesUploaded += file.size;

			// Call the default event handler
			if($.inArray('onUploadSuccess', settings.overrideEvents) < 0) {
				$('#' + file.id).find('.data').html(' - Complete');
			}

			// Call the user-defined event handler
			if(settings.onUploadSuccess) settings.onUploadSuccess.call(this, file, data, response);
		}

	}

	$.fn.uploadify = function(method) {

		if(methods[method]) {
			return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
		} else if(typeof method === 'object' || !method) {
			return methods.init.apply(this, arguments);
		} else {
			$.error('The method ' + method + ' does not exist in $.uploadify');
		}

	}

})($);;
/*!
 * Bootstrap v3.3.4 (http://getbootstrap.com)
 * Copyright 2011-2015 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */
if("undefined" == typeof jQuery) throw new Error("Bootstrap's JavaScript requires jQuery"); + function(a) {
	"use strict";
	var b = a.fn.jquery.split(" ")[0].split(".");
	if(b[0] < 2 && b[1] < 9 || 1 == b[0] && 9 == b[1] && b[2] < 1) throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher")
}(jQuery), + function(a) {
	"use strict";

	function b() {
		var a = document.createElement("bootstrap"),
			b = {
				WebkitTransition: "webkitTransitionEnd",
				MozTransition: "transitionend",
				OTransition: "oTransitionEnd otransitionend",
				transition: "transitionend"
			};
		for(var c in b)
			if(void 0 !== a.style[c]) return {
				end: b[c]
			};
		return !1
	}
	a.fn.emulateTransitionEnd = function(b) {
		var c = !1,
			d = this;
		a(this).one("bsTransitionEnd", function() {
			c = !0
		});
		var e = function() {
			c || a(d).trigger(a.support.transition.end)
		};
		return setTimeout(e, b), this
	}, a(function() {
		a.support.transition = b(), a.support.transition && (a.event.special.bsTransitionEnd = {
			bindType: a.support.transition.end,
			delegateType: a.support.transition.end,
			handle: function(b) {
				return a(b.target).is(this) ? b.handleObj.handler.apply(this, arguments) : void 0
			}
		})
	})
}(jQuery), + function(a) {
	"use strict";

	function b(b) {
		return this.each(function() {
			var c = a(this),
				e = c.data("bs.alert");
			e || c.data("bs.alert", e = new d(this)), "string" == typeof b && e[b].call(c)
		})
	}
	var c = '[data-dismiss="alert"]',
		d = function(b) {
			a(b).on("click", c, this.close)
		};
	d.VERSION = "3.3.4", d.TRANSITION_DURATION = 150, d.prototype.close = function(b) {
		function c() {
			g.detach().trigger("closed.bs.alert").remove()
		}
		var e = a(this),
			f = e.attr("data-target");
		f || (f = e.attr("href"), f = f && f.replace(/.*(?=#[^\s]*$)/, ""));
		var g = a(f);
		b && b.preventDefault(), g.length || (g = e.closest(".alert")), g.trigger(b = a.Event("close.bs.alert")), b.isDefaultPrevented() || (g.removeClass("in"), a.support.transition && g.hasClass("fade") ? g.one("bsTransitionEnd", c).emulateTransitionEnd(d.TRANSITION_DURATION) : c())
	};
	var e = a.fn.alert;
	a.fn.alert = b, a.fn.alert.Constructor = d, a.fn.alert.noConflict = function() {
		return a.fn.alert = e, this
	}, a(document).on("click.bs.alert.data-api", c, d.prototype.close)
}(jQuery), + function(a) {
	"use strict";

	function b(b) {
		return this.each(function() {
			var d = a(this),
				e = d.data("bs.button"),
				f = "object" == typeof b && b;
			e || d.data("bs.button", e = new c(this, f)), "toggle" == b ? e.toggle() : b && e.setState(b)
		})
	}
	var c = function(b, d) {
		this.$element = a(b), this.options = a.extend({}, c.DEFAULTS, d), this.isLoading = !1
	};
	c.VERSION = "3.3.4", c.DEFAULTS = {
		loadingText: "loading..."
	}, c.prototype.setState = function(b) {
		var c = "disabled",
			d = this.$element,
			e = d.is("input") ? "val" : "html",
			f = d.data();
		b += "Text", null == f.resetText && d.data("resetText", d[e]()), setTimeout(a.proxy(function() {
			d[e](null == f[b] ? this.options[b] : f[b]), "loadingText" == b ? (this.isLoading = !0, d.addClass(c).attr(c, c)) : this.isLoading && (this.isLoading = !1, d.removeClass(c).removeAttr(c))
		}, this), 0)
	}, c.prototype.toggle = function() {
		var a = !0,
			b = this.$element.closest('[data-toggle="buttons"]');
		if(b.length) {
			var c = this.$element.find("input");
			"radio" == c.prop("type") && (c.prop("checked") && this.$element.hasClass("active") ? a = !1 : b.find(".active").removeClass("active")), a && c.prop("checked", !this.$element.hasClass("active")).trigger("change")
		} else this.$element.attr("aria-pressed", !this.$element.hasClass("active"));
		a && this.$element.toggleClass("active")
	};
	var d = a.fn.button;
	a.fn.button = b, a.fn.button.Constructor = c, a.fn.button.noConflict = function() {
		return a.fn.button = d, this
	}, a(document).on("click.bs.button.data-api", '[data-toggle^="button"]', function(c) {
		var d = a(c.target);
		d.hasClass("btn") || (d = d.closest(".btn")), b.call(d, "toggle"), c.preventDefault()
	}).on("focus.bs.button.data-api blur.bs.button.data-api", '[data-toggle^="button"]', function(b) {
		a(b.target).closest(".btn").toggleClass("focus", /^focus(in)?$/.test(b.type))
	})
}(jQuery), + function(a) {
	"use strict";

	function b(b) {
		return this.each(function() {
			var d = a(this),
				e = d.data("bs.carousel"),
				f = a.extend({}, c.DEFAULTS, d.data(), "object" == typeof b && b),
				g = "string" == typeof b ? b : f.slide;
			e || d.data("bs.carousel", e = new c(this, f)), "number" == typeof b ? e.to(b) : g ? e[g]() : f.interval && e.pause().cycle()
		})
	}
	var c = function(b, c) {
		this.$element = a(b), this.$indicators = this.$element.find(".carousel-indicators"), this.options = c, this.paused = null, this.sliding = null, this.interval = null, this.$active = null, this.$items = null, this.options.keyboard && this.$element.on("keydown.bs.carousel", a.proxy(this.keydown, this)), "hover" == this.options.pause && !("ontouchstart" in document.documentElement) && this.$element.on("mouseenter.bs.carousel", a.proxy(this.pause, this)).on("mouseleave.bs.carousel", a.proxy(this.cycle, this))
	};
	c.VERSION = "3.3.4", c.TRANSITION_DURATION = 600, c.DEFAULTS = {
		interval: 5e3,
		pause: "hover",
		wrap: !0,
		keyboard: !0
	}, c.prototype.keydown = function(a) {
		if(!/input|textarea/i.test(a.target.tagName)) {
			switch(a.which) {
				case 37:
					this.prev();
					break;
				case 39:
					this.next();
					break;
				default:
					return
			}
			a.preventDefault()
		}
	}, c.prototype.cycle = function(b) {
		return b || (this.paused = !1), this.interval && clearInterval(this.interval), this.options.interval && !this.paused && (this.interval = setInterval(a.proxy(this.next, this), this.options.interval)), this
	}, c.prototype.getItemIndex = function(a) {
		return this.$items = a.parent().children(".item"), this.$items.index(a || this.$active)
	}, c.prototype.getItemForDirection = function(a, b) {
		var c = this.getItemIndex(b),
			d = "prev" == a && 0 === c || "next" == a && c == this.$items.length - 1;
		if(d && !this.options.wrap) return b;
		var e = "prev" == a ? -1 : 1,
			f = (c + e) % this.$items.length;
		return this.$items.eq(f)
	}, c.prototype.to = function(a) {
		var b = this,
			c = this.getItemIndex(this.$active = this.$element.find(".item.active"));
		return a > this.$items.length - 1 || 0 > a ? void 0 : this.sliding ? this.$element.one("slid.bs.carousel", function() {
			b.to(a)
		}) : c == a ? this.pause().cycle() : this.slide(a > c ? "next" : "prev", this.$items.eq(a))
	}, c.prototype.pause = function(b) {
		return b || (this.paused = !0), this.$element.find(".next, .prev").length && a.support.transition && (this.$element.trigger(a.support.transition.end), this.cycle(!0)), this.interval = clearInterval(this.interval), this
	}, c.prototype.next = function() {
		return this.sliding ? void 0 : this.slide("next")
	}, c.prototype.prev = function() {
		return this.sliding ? void 0 : this.slide("prev")
	}, c.prototype.slide = function(b, d) {
		var e = this.$element.find(".item.active"),
			f = d || this.getItemForDirection(b, e),
			g = this.interval,
			h = "next" == b ? "left" : "right",
			i = this;
		if(f.hasClass("active")) return this.sliding = !1;
		var j = f[0],
			k = a.Event("slide.bs.carousel", {
				relatedTarget: j,
				direction: h
			});
		if(this.$element.trigger(k), !k.isDefaultPrevented()) {
			if(this.sliding = !0, g && this.pause(), this.$indicators.length) {
				this.$indicators.find(".active").removeClass("active");
				var l = a(this.$indicators.children()[this.getItemIndex(f)]);
				l && l.addClass("active")
			}
			var m = a.Event("slid.bs.carousel", {
				relatedTarget: j,
				direction: h
			});
			return a.support.transition && this.$element.hasClass("slide") ? (f.addClass(b), f[0].offsetWidth, e.addClass(h), f.addClass(h), e.one("bsTransitionEnd", function() {
				f.removeClass([b, h].join(" ")).addClass("active"), e.removeClass(["active", h].join(" ")), i.sliding = !1, setTimeout(function() {
					i.$element.trigger(m)
				}, 0)
			}).emulateTransitionEnd(c.TRANSITION_DURATION)) : (e.removeClass("active"), f.addClass("active"), this.sliding = !1, this.$element.trigger(m)), g && this.cycle(), this
		}
	};
	var d = a.fn.carousel;
	a.fn.carousel = b, a.fn.carousel.Constructor = c, a.fn.carousel.noConflict = function() {
		return a.fn.carousel = d, this
	};
	var e = function(c) {
		var d, e = a(this),
			f = a(e.attr("data-target") || (d = e.attr("href")) && d.replace(/.*(?=#[^\s]+$)/, ""));
		if(f.hasClass("carousel")) {
			var g = a.extend({}, f.data(), e.data()),
				h = e.attr("data-slide-to");
			h && (g.interval = !1), b.call(f, g), h && f.data("bs.carousel").to(h), c.preventDefault()
		}
	};
	a(document).on("click.bs.carousel.data-api", "[data-slide]", e).on("click.bs.carousel.data-api", "[data-slide-to]", e), a(window).on("load", function() {
		a('[data-ride="carousel"]').each(function() {
			var c = a(this);
			b.call(c, c.data())
		})
	})
}(jQuery), + function(a) {
	"use strict";

	function b(b) {
		var c, d = b.attr("data-target") || (c = b.attr("href")) && c.replace(/.*(?=#[^\s]+$)/, "");
		return a(d)
	}

	function c(b) {
		return this.each(function() {
			var c = a(this),
				e = c.data("bs.collapse"),
				f = a.extend({}, d.DEFAULTS, c.data(), "object" == typeof b && b);
			!e && f.toggle && /show|hide/.test(b) && (f.toggle = !1), e || c.data("bs.collapse", e = new d(this, f)), "string" == typeof b && e[b]()
		})
	}
	var d = function(b, c) {
		this.$element = a(b), this.options = a.extend({}, d.DEFAULTS, c), this.$trigger = a('[data-toggle="collapse"][href="#' + b.id + '"],[data-toggle="collapse"][data-target="#' + b.id + '"]'), this.transitioning = null, this.options.parent ? this.$parent = this.getParent() : this.addAriaAndCollapsedClass(this.$element, this.$trigger), this.options.toggle && this.toggle()
	};
	d.VERSION = "3.3.4", d.TRANSITION_DURATION = 350, d.DEFAULTS = {
		toggle: !0
	}, d.prototype.dimension = function() {
		var a = this.$element.hasClass("width");
		return a ? "width" : "height"
	}, d.prototype.show = function() {
		if(!this.transitioning && !this.$element.hasClass("in")) {
			var b, e = this.$parent && this.$parent.children(".panel").children(".in, .collapsing");
			if(!(e && e.length && (b = e.data("bs.collapse"), b && b.transitioning))) {
				var f = a.Event("show.bs.collapse");
				if(this.$element.trigger(f), !f.isDefaultPrevented()) {
					e && e.length && (c.call(e, "hide"), b || e.data("bs.collapse", null));
					var g = this.dimension();
					this.$element.removeClass("collapse").addClass("collapsing")[g](0).attr("aria-expanded", !0), this.$trigger.removeClass("collapsed").attr("aria-expanded", !0), this.transitioning = 1;
					var h = function() {
						this.$element.removeClass("collapsing").addClass("collapse in")[g](""), this.transitioning = 0, this.$element.trigger("shown.bs.collapse")
					};
					if(!a.support.transition) return h.call(this);
					var i = a.camelCase(["scroll", g].join("-"));
					this.$element.one("bsTransitionEnd", a.proxy(h, this)).emulateTransitionEnd(d.TRANSITION_DURATION)[g](this.$element[0][i])
				}
			}
		}
	}, d.prototype.hide = function() {
		if(!this.transitioning && this.$element.hasClass("in")) {
			var b = a.Event("hide.bs.collapse");
			if(this.$element.trigger(b), !b.isDefaultPrevented()) {
				var c = this.dimension();
				this.$element[c](this.$element[c]())[0].offsetHeight, this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded", !1), this.$trigger.addClass("collapsed").attr("aria-expanded", !1), this.transitioning = 1;
				var e = function() {
					this.transitioning = 0, this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")
				};
				return a.support.transition ? void this.$element[c](0).one("bsTransitionEnd", a.proxy(e, this)).emulateTransitionEnd(d.TRANSITION_DURATION) : e.call(this)
			}
		}
	}, d.prototype.toggle = function() {
		this[this.$element.hasClass("in") ? "hide" : "show"]()
	}, d.prototype.getParent = function() {
		return a(this.options.parent).find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]').each(a.proxy(function(c, d) {
			var e = a(d);
			this.addAriaAndCollapsedClass(b(e), e)
		}, this)).end()
	}, d.prototype.addAriaAndCollapsedClass = function(a, b) {
		var c = a.hasClass("in");
		a.attr("aria-expanded", c), b.toggleClass("collapsed", !c).attr("aria-expanded", c)
	};
	var e = a.fn.collapse;
	a.fn.collapse = c, a.fn.collapse.Constructor = d, a.fn.collapse.noConflict = function() {
		return a.fn.collapse = e, this
	}, a(document).on("click.bs.collapse.data-api", '[data-toggle="collapse"]', function(d) {
		var e = a(this);
		e.attr("data-target") || d.preventDefault();
		var f = b(e),
			g = f.data("bs.collapse"),
			h = g ? "toggle" : e.data();
		c.call(f, h)
	})
}(jQuery), + function(a) {
	"use strict";

	function b(b) {
		b && 3 === b.which || (a(e).remove(), a(f).each(function() {
			var d = a(this),
				e = c(d),
				f = {
					relatedTarget: this
				};
			e.hasClass("open") && (e.trigger(b = a.Event("hide.bs.dropdown", f)), b.isDefaultPrevented() || (d.attr("aria-expanded", "false"), e.removeClass("open").trigger("hidden.bs.dropdown", f)))
		}))
	}

	function c(b) {
		var c = b.attr("data-target");
		c || (c = b.attr("href"), c = c && /#[A-Za-z]/.test(c) && c.replace(/.*(?=#[^\s]*$)/, ""));
		var d = c && a(c);
		return d && d.length ? d : b.parent()
	}

	function d(b) {
		return this.each(function() {
			var c = a(this),
				d = c.data("bs.dropdown");
			d || c.data("bs.dropdown", d = new g(this)), "string" == typeof b && d[b].call(c)
		})
	}
	var e = ".dropdown-backdrop",
		f = '[data-toggle="dropdown"]',
		g = function(b) {
			a(b).on("click.bs.dropdown", this.toggle)
		};
	g.VERSION = "3.3.4", g.prototype.toggle = function(d) {
		var e = a(this);
		if(!e.is(".disabled, :disabled")) {
			var f = c(e),
				g = f.hasClass("open");
			if(b(), !g) {
				"ontouchstart" in document.documentElement && !f.closest(".navbar-nav").length && a('<div class="dropdown-backdrop"/>').insertAfter(a(this)).on("click", b);
				var h = {
					relatedTarget: this
				};
				if(f.trigger(d = a.Event("show.bs.dropdown", h)), d.isDefaultPrevented()) return;
				e.trigger("focus").attr("aria-expanded", "true"), f.toggleClass("open").trigger("shown.bs.dropdown", h)
			}
			return !1
		}
	}, g.prototype.keydown = function(b) {
		if(/(38|40|27|32)/.test(b.which) && !/input|textarea/i.test(b.target.tagName)) {
			var d = a(this);
			if(b.preventDefault(), b.stopPropagation(), !d.is(".disabled, :disabled")) {
				var e = c(d),
					g = e.hasClass("open");
				if(!g && 27 != b.which || g && 27 == b.which) return 27 == b.which && e.find(f).trigger("focus"), d.trigger("click");
				var h = " li:not(.disabled):visible a",
					i = e.find('[role="menu"]' + h + ', [role="listbox"]' + h);
				if(i.length) {
					var j = i.index(b.target);
					38 == b.which && j > 0 && j--, 40 == b.which && j < i.length - 1 && j++, ~j || (j = 0), i.eq(j).trigger("focus")
				}
			}
		}
	};
	var h = a.fn.dropdown;
	a.fn.dropdown = d, a.fn.dropdown.Constructor = g, a.fn.dropdown.noConflict = function() {
		return a.fn.dropdown = h, this
	}, a(document).on("click.bs.dropdown.data-api", b).on("click.bs.dropdown.data-api", ".dropdown form", function(a) {
		a.stopPropagation()
	}).on("click.bs.dropdown.data-api", f, g.prototype.toggle).on("keydown.bs.dropdown.data-api", f, g.prototype.keydown).on("keydown.bs.dropdown.data-api", '[role="menu"]', g.prototype.keydown).on("keydown.bs.dropdown.data-api", '[role="listbox"]', g.prototype.keydown)
}(jQuery), + function(a) {
	"use strict";

	function b(b, d) {
		return this.each(function() {
			var e = a(this),
				f = e.data("bs.modal"),
				g = a.extend({}, c.DEFAULTS, e.data(), "object" == typeof b && b);
			f || e.data("bs.modal", f = new c(this, g)), "string" == typeof b ? f[b](d) : g.show && f.show(d)
		})
	}
	var c = function(b, c) {
		this.options = c, this.$body = a(document.body), this.$element = a(b), this.$dialog = this.$element.find(".modal-dialog"), this.$backdrop = null, this.isShown = null, this.originalBodyPad = null, this.scrollbarWidth = 0, this.ignoreBackdropClick = !1, this.options.remote && this.$element.find(".modal-content").load(this.options.remote, a.proxy(function() {
			this.$element.trigger("loaded.bs.modal")
		}, this))
	};
	c.VERSION = "3.3.4", c.TRANSITION_DURATION = 300, c.BACKDROP_TRANSITION_DURATION = 150, c.DEFAULTS = {
		backdrop: !0,
		keyboard: !0,
		show: !0
	}, c.prototype.toggle = function(a) {
		return this.isShown ? this.hide() : this.show(a)
	}, c.prototype.show = function(b) {
		var d = this,
			e = a.Event("show.bs.modal", {
				relatedTarget: b
			});
		this.$element.trigger(e), this.isShown || e.isDefaultPrevented() || (this.isShown = !0, this.checkScrollbar(), this.setScrollbar(), this.$body.addClass("modal-open"), this.escape(), this.resize(), this.$element.on("click.dismiss.bs.modal", '[data-dismiss="modal"]', a.proxy(this.hide, this)), this.$dialog.on("mousedown.dismiss.bs.modal", function() {
			d.$element.one("mouseup.dismiss.bs.modal", function(b) {
				a(b.target).is(d.$element) && (d.ignoreBackdropClick = !0)
			})
		}), this.backdrop(function() {
			var e = a.support.transition && d.$element.hasClass("fade");
			d.$element.parent().length || d.$element.appendTo(d.$body), d.$element.show().scrollTop(0), d.adjustDialog(), e && d.$element[0].offsetWidth, d.$element.addClass("in").attr("aria-hidden", !1), d.enforceFocus();
			var f = a.Event("shown.bs.modal", {
				relatedTarget: b
			});
			e ? d.$dialog.one("bsTransitionEnd", function() {
				d.$element.trigger("focus").trigger(f)
			}).emulateTransitionEnd(c.TRANSITION_DURATION) : d.$element.trigger("focus").trigger(f)
		}))
	}, c.prototype.hide = function(b) {
		b && b.preventDefault(), b = a.Event("hide.bs.modal"), this.$element.trigger(b), this.isShown && !b.isDefaultPrevented() && (this.isShown = !1, this.escape(), this.resize(), a(document).off("focusin.bs.modal"), this.$element.removeClass("in").attr("aria-hidden", !0).off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"), this.$dialog.off("mousedown.dismiss.bs.modal"), a.support.transition && this.$element.hasClass("fade") ? this.$element.one("bsTransitionEnd", a.proxy(this.hideModal, this)).emulateTransitionEnd(c.TRANSITION_DURATION) : this.hideModal())
	}, c.prototype.enforceFocus = function() {
		a(document).off("focusin.bs.modal").on("focusin.bs.modal", a.proxy(function(a) {
			this.$element[0] === a.target || this.$element.has(a.target).length || this.$element.trigger("focus")
		}, this))
	}, c.prototype.escape = function() {
		this.isShown && this.options.keyboard ? this.$element.on("keydown.dismiss.bs.modal", a.proxy(function(a) {
			27 == a.which && this.hide()
		}, this)) : this.isShown || this.$element.off("keydown.dismiss.bs.modal")
	}, c.prototype.resize = function() {
		this.isShown ? a(window).on("resize.bs.modal", a.proxy(this.handleUpdate, this)) : a(window).off("resize.bs.modal")
	}, c.prototype.hideModal = function() {
		var a = this;
		this.$element.hide(), this.backdrop(function() {
			a.$body.removeClass("modal-open"), a.resetAdjustments(), a.resetScrollbar(), a.$element.trigger("hidden.bs.modal")
		})
	}, c.prototype.removeBackdrop = function() {
		this.$backdrop && this.$backdrop.remove(), this.$backdrop = null
	}, c.prototype.backdrop = function(b) {
		var d = this,
			e = this.$element.hasClass("fade") ? "fade" : "";
		if(this.isShown && this.options.backdrop) {
			var f = a.support.transition && e;
			if(this.$backdrop = a('<div class="modal-backdrop ' + e + '" />').appendTo(this.$body), this.$element.on("click.dismiss.bs.modal", a.proxy(function(a) {
					return this.ignoreBackdropClick ? void(this.ignoreBackdropClick = !1) : void(a.target === a.currentTarget && ("static" == this.options.backdrop ? this.$element[0].focus() : this.hide()))
				}, this)), f && this.$backdrop[0].offsetWidth, this.$backdrop.addClass("in"), !b) return;
			f ? this.$backdrop.one("bsTransitionEnd", b).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION) : b()
		} else if(!this.isShown && this.$backdrop) {
			this.$backdrop.removeClass("in");
			var g = function() {
				d.removeBackdrop(), b && b()
			};
			a.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one("bsTransitionEnd", g).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION) : g()
		} else b && b()
	}, c.prototype.handleUpdate = function() {
		this.adjustDialog()
	}, c.prototype.adjustDialog = function() {
		var a = this.$element[0].scrollHeight > document.documentElement.clientHeight;
		this.$element.css({
			paddingLeft: !this.bodyIsOverflowing && a ? this.scrollbarWidth : "",
			paddingRight: this.bodyIsOverflowing && !a ? this.scrollbarWidth : ""
		})
	}, c.prototype.resetAdjustments = function() {
		this.$element.css({
			paddingLeft: "",
			paddingRight: ""
		})
	}, c.prototype.checkScrollbar = function() {
		var a = window.innerWidth;
		if(!a) {
			var b = document.documentElement.getBoundingClientRect();
			a = b.right - Math.abs(b.left)
		}
		this.bodyIsOverflowing = document.body.clientWidth < a, this.scrollbarWidth = this.measureScrollbar()
	}, c.prototype.setScrollbar = function() {
		var a = parseInt(this.$body.css("padding-right") || 0, 10);
		this.originalBodyPad = document.body.style.paddingRight || "", this.bodyIsOverflowing && this.$body.css("padding-right", a + this.scrollbarWidth)
	}, c.prototype.resetScrollbar = function() {
		this.$body.css("padding-right", this.originalBodyPad)
	}, c.prototype.measureScrollbar = function() {
		var a = document.createElement("div");
		a.className = "modal-scrollbar-measure", this.$body.append(a);
		var b = a.offsetWidth - a.clientWidth;
		return this.$body[0].removeChild(a), b
	};
	var d = a.fn.modal;
	a.fn.modal = b, a.fn.modal.Constructor = c, a.fn.modal.noConflict = function() {
		return a.fn.modal = d, this
	}, a(document).on("click.bs.modal.data-api", '[data-toggle="modal"]', function(c) {
		var d = a(this),
			e = d.attr("href"),
			f = a(d.attr("data-target") || e && e.replace(/.*(?=#[^\s]+$)/, "")),
			g = f.data("bs.modal") ? "toggle" : a.extend({
				remote: !/#/.test(e) && e
			}, f.data(), d.data());
		d.is("a") && c.preventDefault(), f.one("show.bs.modal", function(a) {
			a.isDefaultPrevented() || f.one("hidden.bs.modal", function() {
				d.is(":visible") && d.trigger("focus")
			})
		}), b.call(f, g, this)
	})
}(jQuery), + function(a) {
	"use strict";

	function b(b) {
		return this.each(function() {
			var d = a(this),
				e = d.data("bs.tooltip"),
				f = "object" == typeof b && b;
			(e || !/destroy|hide/.test(b)) && (e || d.data("bs.tooltip", e = new c(this, f)), "string" == typeof b && e[b]())
		})
	}
	var c = function(a, b) {
		this.type = null, this.options = null, this.enabled = null, this.timeout = null, this.hoverState = null, this.$element = null, this.init("tooltip", a, b)
	};
	c.VERSION = "3.3.4", c.TRANSITION_DURATION = 150, c.DEFAULTS = {
		animation: !0,
		placement: "top",
		selector: !1,
		template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
		trigger: "hover focus",
		title: "",
		delay: 0,
		html: !1,
		container: !1,
		viewport: {
			selector: "body",
			padding: 0
		}
	}, c.prototype.init = function(b, c, d) {
		if(this.enabled = !0, this.type = b, this.$element = a(c), this.options = this.getOptions(d), this.$viewport = this.options.viewport && a(this.options.viewport.selector || this.options.viewport), this.$element[0] instanceof document.constructor && !this.options.selector) throw new Error("`selector` option must be specified when initializing " + this.type + " on the window.document object!");
		for(var e = this.options.trigger.split(" "), f = e.length; f--;) {
			var g = e[f];
			if("click" == g) this.$element.on("click." + this.type, this.options.selector, a.proxy(this.toggle, this));
			else if("manual" != g) {
				var h = "hover" == g ? "mouseenter" : "focusin",
					i = "hover" == g ? "mouseleave" : "focusout";
				this.$element.on(h + "." + this.type, this.options.selector, a.proxy(this.enter, this)), this.$element.on(i + "." + this.type, this.options.selector, a.proxy(this.leave, this))
			}
		}
		this.options.selector ? this._options = a.extend({}, this.options, {
			trigger: "manual",
			selector: ""
		}) : this.fixTitle()
	}, c.prototype.getDefaults = function() {
		return c.DEFAULTS
	}, c.prototype.getOptions = function(b) {
		return b = a.extend({}, this.getDefaults(), this.$element.data(), b), b.delay && "number" == typeof b.delay && (b.delay = {
			show: b.delay,
			hide: b.delay
		}), b
	}, c.prototype.getDelegateOptions = function() {
		var b = {},
			c = this.getDefaults();
		return this._options && a.each(this._options, function(a, d) {
			c[a] != d && (b[a] = d)
		}), b
	}, c.prototype.enter = function(b) {
		var c = b instanceof this.constructor ? b : a(b.currentTarget).data("bs." + this.type);
		return c && c.$tip && c.$tip.is(":visible") ? void(c.hoverState = "in") : (c || (c = new this.constructor(b.currentTarget, this.getDelegateOptions()), a(b.currentTarget).data("bs." + this.type, c)), clearTimeout(c.timeout), c.hoverState = "in", c.options.delay && c.options.delay.show ? void(c.timeout = setTimeout(function() {
			"in" == c.hoverState && c.show()
		}, c.options.delay.show)) : c.show())
	}, c.prototype.leave = function(b) {
		var c = b instanceof this.constructor ? b : a(b.currentTarget).data("bs." + this.type);
		return c || (c = new this.constructor(b.currentTarget, this.getDelegateOptions()), a(b.currentTarget).data("bs." + this.type, c)), clearTimeout(c.timeout), c.hoverState = "out", c.options.delay && c.options.delay.hide ? void(c.timeout = setTimeout(function() {
			"out" == c.hoverState && c.hide()
		}, c.options.delay.hide)) : c.hide()
	}, c.prototype.show = function() {
		var b = a.Event("show.bs." + this.type);
		if(this.hasContent() && this.enabled) {
			this.$element.trigger(b);
			var d = a.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]);
			if(b.isDefaultPrevented() || !d) return;
			var e = this,
				f = this.tip(),
				g = this.getUID(this.type);
			this.setContent(), f.attr("id", g), this.$element.attr("aria-describedby", g), this.options.animation && f.addClass("fade");
			var h = "function" == typeof this.options.placement ? this.options.placement.call(this, f[0], this.$element[0]) : this.options.placement,
				i = /\s?auto?\s?/i,
				j = i.test(h);
			j && (h = h.replace(i, "") || "top"), f.detach().css({
				top: 0,
				left: 0,
				display: "block"
			}).addClass(h).data("bs." + this.type, this), this.options.container ? f.appendTo(this.options.container) : f.insertAfter(this.$element);
			var k = this.getPosition(),
				l = f[0].offsetWidth,
				m = f[0].offsetHeight;
			if(j) {
				var n = h,
					o = this.options.container ? a(this.options.container) : this.$element.parent(),
					p = this.getPosition(o);
				h = "bottom" == h && k.bottom + m > p.bottom ? "top" : "top" == h && k.top - m < p.top ? "bottom" : "right" == h && k.right + l > p.width ? "left" : "left" == h && k.left - l < p.left ? "right" : h, f.removeClass(n).addClass(h)
			}
			var q = this.getCalculatedOffset(h, k, l, m);
			this.applyPlacement(q, h);
			var r = function() {
				var a = e.hoverState;
				e.$element.trigger("shown.bs." + e.type), e.hoverState = null, "out" == a && e.leave(e)
			};
			a.support.transition && this.$tip.hasClass("fade") ? f.one("bsTransitionEnd", r).emulateTransitionEnd(c.TRANSITION_DURATION) : r()
		}
	}, c.prototype.applyPlacement = function(b, c) {
		var d = this.tip(),
			e = d[0].offsetWidth,
			f = d[0].offsetHeight,
			g = parseInt(d.css("margin-top"), 10),
			h = parseInt(d.css("margin-left"), 10);
		isNaN(g) && (g = 0), isNaN(h) && (h = 0), b.top = b.top + g, b.left = b.left + h, a.offset.setOffset(d[0], a.extend({
			using: function(a) {
				d.css({
					top: Math.round(a.top),
					left: Math.round(a.left)
				})
			}
		}, b), 0), d.addClass("in");
		var i = d[0].offsetWidth,
			j = d[0].offsetHeight;
		"top" == c && j != f && (b.top = b.top + f - j);
		var k = this.getViewportAdjustedDelta(c, b, i, j);
		k.left ? b.left += k.left : b.top += k.top;
		var l = /top|bottom/.test(c),
			m = l ? 2 * k.left - e + i : 2 * k.top - f + j,
			n = l ? "offsetWidth" : "offsetHeight";
		d.offset(b), this.replaceArrow(m, d[0][n], l)
	}, c.prototype.replaceArrow = function(a, b, c) {
		this.arrow().css(c ? "left" : "top", 50 * (1 - a / b) + "%").css(c ? "top" : "left", "")
	}, c.prototype.setContent = function() {
		var a = this.tip(),
			b = this.getTitle();
		a.find(".tooltip-inner")[this.options.html ? "html" : "text"](b), a.removeClass("fade in top bottom left right")
	}, c.prototype.hide = function(b) {
		function d() {
			"in" != e.hoverState && f.detach(), e.$element.removeAttr("aria-describedby").trigger("hidden.bs." + e.type), b && b()
		}
		var e = this,
			f = a(this.$tip),
			g = a.Event("hide.bs." + this.type);
		return this.$element.trigger(g), g.isDefaultPrevented() ? void 0 : (f.removeClass("in"), a.support.transition && f.hasClass("fade") ? f.one("bsTransitionEnd", d).emulateTransitionEnd(c.TRANSITION_DURATION) : d(), this.hoverState = null, this)
	}, c.prototype.fixTitle = function() {
		var a = this.$element;
		(a.attr("title") || "string" != typeof a.attr("data-original-title")) && a.attr("data-original-title", a.attr("title") || "").attr("title", "")
	}, c.prototype.hasContent = function() {
		return this.getTitle()
	}, c.prototype.getPosition = function(b) {
		b = b || this.$element;
		var c = b[0],
			d = "BODY" == c.tagName,
			e = c.getBoundingClientRect();
		null == e.width && (e = a.extend({}, e, {
			width: e.right - e.left,
			height: e.bottom - e.top
		}));
		var f = d ? {
				top: 0,
				left: 0
			} : b.offset(),
			g = {
				scroll: d ? document.documentElement.scrollTop || document.body.scrollTop : b.scrollTop()
			},
			h = d ? {
				width: a(window).width(),
				height: a(window).height()
			} : null;
		return a.extend({}, e, g, h, f)
	}, c.prototype.getCalculatedOffset = function(a, b, c, d) {
		return "bottom" == a ? {
			top: b.top + b.height,
			left: b.left + b.width / 2 - c / 2
		} : "top" == a ? {
			top: b.top - d,
			left: b.left + b.width / 2 - c / 2
		} : "left" == a ? {
			top: b.top + b.height / 2 - d / 2,
			left: b.left - c
		} : {
			top: b.top + b.height / 2 - d / 2,
			left: b.left + b.width
		}
	}, c.prototype.getViewportAdjustedDelta = function(a, b, c, d) {
		var e = {
			top: 0,
			left: 0
		};
		if(!this.$viewport) return e;
		var f = this.options.viewport && this.options.viewport.padding || 0,
			g = this.getPosition(this.$viewport);
		if(/right|left/.test(a)) {
			var h = b.top - f - g.scroll,
				i = b.top + f - g.scroll + d;
			h < g.top ? e.top = g.top - h : i > g.top + g.height && (e.top = g.top + g.height - i)
		} else {
			var j = b.left - f,
				k = b.left + f + c;
			j < g.left ? e.left = g.left - j : k > g.width && (e.left = g.left + g.width - k)
		}
		return e
	}, c.prototype.getTitle = function() {
		var a, b = this.$element,
			c = this.options;
		return a = b.attr("data-original-title") || ("function" == typeof c.title ? c.title.call(b[0]) : c.title)
	}, c.prototype.getUID = function(a) {
		do a += ~~(1e6 * Math.random()); while (document.getElementById(a));
		return a
	}, c.prototype.tip = function() {
		return this.$tip = this.$tip || a(this.options.template)
	}, c.prototype.arrow = function() {
		return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow")
	}, c.prototype.enable = function() {
		this.enabled = !0
	}, c.prototype.disable = function() {
		this.enabled = !1
	}, c.prototype.toggleEnabled = function() {
		this.enabled = !this.enabled
	}, c.prototype.toggle = function(b) {
		var c = this;
		b && (c = a(b.currentTarget).data("bs." + this.type), c || (c = new this.constructor(b.currentTarget, this.getDelegateOptions()), a(b.currentTarget).data("bs." + this.type, c))), c.tip().hasClass("in") ? c.leave(c) : c.enter(c)
	}, c.prototype.destroy = function() {
		var a = this;
		clearTimeout(this.timeout), this.hide(function() {
			a.$element.off("." + a.type).removeData("bs." + a.type)
		})
	};
	var d = a.fn.tooltip;
	a.fn.tooltip = b, a.fn.tooltip.Constructor = c, a.fn.tooltip.noConflict = function() {
		return a.fn.tooltip = d, this
	}
}(jQuery), + function(a) {
	"use strict";

	function b(b) {
		return this.each(function() {
			var d = a(this),
				e = d.data("bs.popover"),
				f = "object" == typeof b && b;
			(e || !/destroy|hide/.test(b)) && (e || d.data("bs.popover", e = new c(this, f)), "string" == typeof b && e[b]())
		})
	}
	var c = function(a, b) {
		this.init("popover", a, b)
	};
	if(!a.fn.tooltip) throw new Error("Popover requires tooltip.js");
	c.VERSION = "3.3.4", c.DEFAULTS = a.extend({}, a.fn.tooltip.Constructor.DEFAULTS, {
		placement: "right",
		trigger: "click",
		content: "",
		template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
	}), c.prototype = a.extend({}, a.fn.tooltip.Constructor.prototype), c.prototype.constructor = c, c.prototype.getDefaults = function() {
		return c.DEFAULTS
	}, c.prototype.setContent = function() {
		var a = this.tip(),
			b = this.getTitle(),
			c = this.getContent();
		a.find(".popover-title")[this.options.html ? "html" : "text"](b), a.find(".popover-content").children().detach().end()[this.options.html ? "string" == typeof c ? "html" : "append" : "text"](c), a.removeClass("fade top bottom left right in"), a.find(".popover-title").html() || a.find(".popover-title").hide()
	}, c.prototype.hasContent = function() {
		return this.getTitle() || this.getContent()
	}, c.prototype.getContent = function() {
		var a = this.$element,
			b = this.options;
		return a.attr("data-content") || ("function" == typeof b.content ? b.content.call(a[0]) : b.content)
	}, c.prototype.arrow = function() {
		return this.$arrow = this.$arrow || this.tip().find(".arrow")
	};
	var d = a.fn.popover;
	a.fn.popover = b, a.fn.popover.Constructor = c, a.fn.popover.noConflict = function() {
		return a.fn.popover = d, this
	}
}(jQuery), + function(a) {
	"use strict";

	function b(c, d) {
		this.$body = a(document.body), this.$scrollElement = a(a(c).is(document.body) ? window : c), this.options = a.extend({}, b.DEFAULTS, d), this.selector = (this.options.target || "") + " .nav li > a", this.offsets = [], this.targets = [], this.activeTarget = null, this.scrollHeight = 0, this.$scrollElement.on("scroll.bs.scrollspy", a.proxy(this.process, this)), this.refresh(), this.process()
	}

	function c(c) {
		return this.each(function() {
			var d = a(this),
				e = d.data("bs.scrollspy"),
				f = "object" == typeof c && c;
			e || d.data("bs.scrollspy", e = new b(this, f)), "string" == typeof c && e[c]()
		})
	}
	b.VERSION = "3.3.4", b.DEFAULTS = {
		offset: 10
	}, b.prototype.getScrollHeight = function() {
		return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)
	}, b.prototype.refresh = function() {
		var b = this,
			c = "offset",
			d = 0;
		this.offsets = [], this.targets = [], this.scrollHeight = this.getScrollHeight(), a.isWindow(this.$scrollElement[0]) || (c = "position", d = this.$scrollElement.scrollTop()), this.$body.find(this.selector).map(function() {
			var b = a(this),
				e = b.data("target") || b.attr("href"),
				f = /^#./.test(e) && a(e);
			return f && f.length && f.is(":visible") && [
				[f[c]().top + d, e]
			] || null
		}).sort(function(a, b) {
			return a[0] - b[0]
		}).each(function() {
			b.offsets.push(this[0]), b.targets.push(this[1])
		})
	}, b.prototype.process = function() {
		var a, b = this.$scrollElement.scrollTop() + this.options.offset,
			c = this.getScrollHeight(),
			d = this.options.offset + c - this.$scrollElement.height(),
			e = this.offsets,
			f = this.targets,
			g = this.activeTarget;
		if(this.scrollHeight != c && this.refresh(), b >= d) return g != (a = f[f.length - 1]) && this.activate(a);
		if(g && b < e[0]) return this.activeTarget = null, this.clear();
		for(a = e.length; a--;) g != f[a] && b >= e[a] && (void 0 === e[a + 1] || b < e[a + 1]) && this.activate(f[a])
	}, b.prototype.activate = function(b) {
		this.activeTarget = b, this.clear();
		var c = this.selector + '[data-target="' + b + '"],' + this.selector + '[href="' + b + '"]',
			d = a(c).parents("li").addClass("active");
		d.parent(".dropdown-menu").length && (d = d.closest("li.dropdown").addClass("active")), d.trigger("activate.bs.scrollspy")
	}, b.prototype.clear = function() {
		a(this.selector).parentsUntil(this.options.target, ".active").removeClass("active")
	};
	var d = a.fn.scrollspy;
	a.fn.scrollspy = c, a.fn.scrollspy.Constructor = b, a.fn.scrollspy.noConflict = function() {
		return a.fn.scrollspy = d, this
	}, a(window).on("load.bs.scrollspy.data-api", function() {
		a('[data-spy="scroll"]').each(function() {
			var b = a(this);
			c.call(b, b.data())
		})
	})
}(jQuery), + function(a) {
	"use strict";

	function b(b) {
		return this.each(function() {
			var d = a(this),
				e = d.data("bs.tab");
			e || d.data("bs.tab", e = new c(this)), "string" == typeof b && e[b]()
		})
	}
	var c = function(b) {
		this.element = a(b)
	};
	c.VERSION = "3.3.4", c.TRANSITION_DURATION = 150, c.prototype.show = function() {
		var b = this.element,
			c = b.closest("ul:not(.dropdown-menu)"),
			d = b.data("target");
		if(d || (d = b.attr("href"), d = d && d.replace(/.*(?=#[^\s]*$)/, "")), !b.parent("li").hasClass("active")) {
			var e = c.find(".active:last a"),
				f = a.Event("hide.bs.tab", {
					relatedTarget: b[0]
				}),
				g = a.Event("show.bs.tab", {
					relatedTarget: e[0]
				});
			if(e.trigger(f), b.trigger(g), !g.isDefaultPrevented() && !f.isDefaultPrevented()) {
				var h = a(d);
				this.activate(b.closest("li"), c), this.activate(h, h.parent(), function() {
					e.trigger({
						type: "hidden.bs.tab",
						relatedTarget: b[0]
					}), b.trigger({
						type: "shown.bs.tab",
						relatedTarget: e[0]
					})
				})
			}
		}
	}, c.prototype.activate = function(b, d, e) {
		function f() {
			g.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", !1), b.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded", !0), h ? (b[0].offsetWidth, b.addClass("in")) : b.removeClass("fade"), b.parent(".dropdown-menu").length && b.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", !0), e && e()
		}
		var g = d.find("> .active"),
			h = e && a.support.transition && (g.length && g.hasClass("fade") || !!d.find("> .fade").length);
		g.length && h ? g.one("bsTransitionEnd", f).emulateTransitionEnd(c.TRANSITION_DURATION) : f(), g.removeClass("in")
	};
	var d = a.fn.tab;
	a.fn.tab = b, a.fn.tab.Constructor = c, a.fn.tab.noConflict = function() {
		return a.fn.tab = d, this
	};
	var e = function(c) {
		c.preventDefault(), b.call(a(this), "show")
	};
	a(document).on("click.bs.tab.data-api", '[data-toggle="tab"]', e).on("click.bs.tab.data-api", '[data-toggle="pill"]', e)
}(jQuery), + function(a) {
	"use strict";

	function b(b) {
		return this.each(function() {
			var d = a(this),
				e = d.data("bs.affix"),
				f = "object" == typeof b && b;
			e || d.data("bs.affix", e = new c(this, f)), "string" == typeof b && e[b]()
		})
	}
	var c = function(b, d) {
		this.options = a.extend({}, c.DEFAULTS, d), this.$target = a(this.options.target).on("scroll.bs.affix.data-api", a.proxy(this.checkPosition, this)).on("click.bs.affix.data-api", a.proxy(this.checkPositionWithEventLoop, this)), this.$element = a(b), this.affixed = null, this.unpin = null, this.pinnedOffset = null, this.checkPosition()
	};
	c.VERSION = "3.3.4", c.RESET = "affix affix-top affix-bottom", c.DEFAULTS = {
		offset: 0,
		target: window
	}, c.prototype.getState = function(a, b, c, d) {
		var e = this.$target.scrollTop(),
			f = this.$element.offset(),
			g = this.$target.height();
		if(null != c && "top" == this.affixed) return c > e ? "top" : !1;
		if("bottom" == this.affixed) return null != c ? e + this.unpin <= f.top ? !1 : "bottom" : a - d >= e + g ? !1 : "bottom";
		var h = null == this.affixed,
			i = h ? e : f.top,
			j = h ? g : b;
		return null != c && c >= e ? "top" : null != d && i + j >= a - d ? "bottom" : !1
	}, c.prototype.getPinnedOffset = function() {
		if(this.pinnedOffset) return this.pinnedOffset;
		this.$element.removeClass(c.RESET).addClass("affix");
		var a = this.$target.scrollTop(),
			b = this.$element.offset();
		return this.pinnedOffset = b.top - a
	}, c.prototype.checkPositionWithEventLoop = function() {
		setTimeout(a.proxy(this.checkPosition, this), 1)
	}, c.prototype.checkPosition = function() {
		if(this.$element.is(":visible")) {
			var b = this.$element.height(),
				d = this.options.offset,
				e = d.top,
				f = d.bottom,
				g = a(document.body).height();
			"object" != typeof d && (f = e = d), "function" == typeof e && (e = d.top(this.$element)), "function" == typeof f && (f = d.bottom(this.$element));
			var h = this.getState(g, b, e, f);
			if(this.affixed != h) {
				null != this.unpin && this.$element.css("top", "");
				var i = "affix" + (h ? "-" + h : ""),
					j = a.Event(i + ".bs.affix");
				if(this.$element.trigger(j), j.isDefaultPrevented()) return;
				this.affixed = h, this.unpin = "bottom" == h ? this.getPinnedOffset() : null, this.$element.removeClass(c.RESET).addClass(i).trigger(i.replace("affix", "affixed") + ".bs.affix")
			}
			"bottom" == h && this.$element.offset({
				top: g - b - f
			})
		}
	};
	var d = a.fn.affix;
	a.fn.affix = b, a.fn.affix.Constructor = c, a.fn.affix.noConflict = function() {
		return a.fn.affix = d, this
	}, a(window).on("load", function() {
		a('[data-spy="affix"]').each(function() {
			var c = a(this),
				d = c.data();
			d.offset = d.offset || {}, null != d.offsetBottom && (d.offset.bottom = d.offsetBottom), null != d.offsetTop && (d.offset.top = d.offsetTop), b.call(c, d)
		})
	})
}(jQuery);;
/*!art-template - Template Engine | http://aui.github.com/artTemplate/*/
! function() {
	function a(a) {
		return a.replace(t, "").replace(u, ",").replace(v, "").replace(w, "").replace(x, "").split(y)
	}

	function b(a) {
		return "'" + a.replace(/('|\\)/g, "\\$1").replace(/\r/g, "\\r").replace(/\n/g, "\\n") + "'"
	}

	function c(c, d) {
		function e(a) {
			return m += a.split(/\n/).length - 1, k && (a = a.replace(/\s+/g, " ").replace(/<!--[\w\W]*?-->/g, "")), a && (a = s[1] + b(a) + s[2] + "\n"), a
		}

		function f(b) {
			var c = m;
			if(j ? b = j(b, d) : g && (b = b.replace(/\n/g, function() {
					return m++, "$line=" + m + ";"
				})), 0 === b.indexOf("=")) {
				var e = l && !/^=[=#]/.test(b);
				if(b = b.replace(/^=[=#]?|[\s;]*$/g, ""), e) {
					var f = b.replace(/\s*\([^\)]+\)/, "");
					n[f] || /^(include|print)$/.test(f) || (b = "$escape(" + b + ")")
				} else b = "$string(" + b + ")";
				b = s[1] + b + s[2]
			}
			return g && (b = "$line=" + c + ";" + b), r(a(b), function(a) {
				if(a && !p[a]) {
					var b;
					b = "print" === a ? u : "include" === a ? v : n[a] ? "$utils." + a : o[a] ? "$helpers." + a : "$data." + a, w += a + "=" + b + ",", p[a] = !0
				}
			}), b + "\n"
		}
		var g = d.debug,
			h = d.openTag,
			i = d.closeTag,
			j = d.parser,
			k = d.compress,
			l = d.escape,
			m = 1,
			p = {
				$data: 1,
				$filename: 1,
				$utils: 1,
				$helpers: 1,
				$out: 1,
				$line: 1
			},
			q = "".trim,
			s = q ? ["$out='';", "$out+=", ";", "$out"] : ["$out=[];", "$out.push(", ");", "$out.join('')"],
			t = q ? "$out+=text;return $out;" : "$out.push(text);",
			u = "function(){var text=''.concat.apply('',arguments);" + t + "}",
			v = "function(filename,data){data=data||$data;var text=$utils.$include(filename,data,$filename);" + t + "}",
			w = "'use strict';var $utils=this,$helpers=$utils.$helpers," + (g ? "$line=0," : ""),
			x = s[0],
			y = "return new String(" + s[3] + ");";
		r(c.split(h), function(a) {
			a = a.split(i);
			var b = a[0],
				c = a[1];
			1 === a.length ? x += e(b) : (x += f(b), c && (x += e(c)))
		});
		var z = w + x + y;
		g && (z = "try{" + z + "}catch(e){throw {filename:$filename,name:'Render Error',message:e.message,line:$line,source:" + b(c) + ".split(/\\n/)[$line-1].replace(/^\\s+/,'')};}");
		try {
			var A = new Function("$data", "$filename", z);
			return A.prototype = n, A
		} catch(B) {
			throw B.temp = "function anonymous($data,$filename) {" + z + "}", B
		}
	}
	var d = function(a, b) {
		return "string" == typeof b ? q(b, {
			filename: a
		}) : g(a, b)
	};
	d.version = "3.0.0", d.config = function(a, b) {
		e[a] = b
	};
	var e = d.defaults = {
			openTag: "<%",
			closeTag: "%>",
			escape: !0,
			cache: !0,
			compress: !1,
			parser: null
		},
		f = d.cache = {};
	d.render = function(a, b) {
		return q(a, b)
	};
	var g = d.renderFile = function(a, b) {
		var c = d.get(a) || p({
			filename: a,
			name: "Render Error",
			message: "Template not found"
		});
		return b ? c(b) : c
	};
	d.get = function(a) {
		var b;
		if(f[a]) b = f[a];
		else if("object" == typeof document) {
			var c = document.getElementById(a);
			if(c) {
				var d = (c.value || c.innerHTML).replace(/^\s*|\s*$/g, "");
				b = q(d, {
					filename: a
				})
			}
		}
		return b
	};
	var h = function(a, b) {
			return "string" != typeof a && (b = typeof a, "number" === b ? a += "" : a = "function" === b ? h(a.call(a)) : ""), a
		},
		i = {
			"<": "&#60;",
			">": "&#62;",
			'"': "&#34;",
			"'": "&#39;",
			"&": "&#38;"
		},
		j = function(a) {
			return i[a]
		},
		k = function(a) {
			return h(a).replace(/&(?![\w#]+;)|[<>"']/g, j)
		},
		l = Array.isArray || function(a) {
			return "[object Array]" === {}.toString.call(a)
		},
		m = function(a, b) {
			var c, d;
			if(l(a))
				for(c = 0, d = a.length; d > c; c++) b.call(a, a[c], c, a);
			else
				for(c in a) b.call(a, a[c], c)
		},
		n = d.utils = {
			$helpers: {},
			$include: g,
			$string: h,
			$escape: k,
			$each: m
		};
	d.helper = function(a, b) {
		o[a] = b
	};
	var o = d.helpers = n.$helpers;
	d.onerror = function(a) {
		var b = "Template Error\n\n";
		for(var c in a) b += "<" + c + ">\n" + a[c] + "\n\n";
		"object" == typeof console && console.error(b)
	};
	var p = function(a) {
			return d.onerror(a),
				function() {
					return "{Template Error}"
				}
		},
		q = d.compile = function(a, b) {
			function d(c) {
				try {
					return new i(c, h) + ""
				} catch(d) {
					return b.debug ? p(d)() : (b.debug = !0, q(a, b)(c))
				}
			}
			b = b || {};
			for(var g in e) void 0 === b[g] && (b[g] = e[g]);
			var h = b.filename;
			try {
				var i = c(a, b)
			} catch(j) {
				return j.filename = h || "anonymous", j.name = "Syntax Error", p(j)
			}
			return d.prototype = i.prototype, d.toString = function() {
				return i.toString()
			}, h && b.cache && (f[h] = d), d
		},
		r = n.$each,
		s = "break,case,catch,continue,debugger,default,delete,do,else,false,finally,for,function,if,in,instanceof,new,null,return,switch,this,throw,true,try,typeof,var,void,while,with,abstract,boolean,byte,char,class,const,double,enum,export,extends,final,float,goto,implements,import,int,interface,long,native,package,private,protected,public,short,static,super,synchronized,throws,transient,volatile,arguments,let,yield,undefined",
		t = /\/\*[\w\W]*?\*\/|\/\/[^\n]*\n|\/\/[^\n]*$|"(?:[^"\\]|\\[\w\W])*"|'(?:[^'\\]|\\[\w\W])*'|\s*\.\s*[$\w\.]+/g,
		u = /[^\w$]+/g,
		v = new RegExp(["\\b" + s.replace(/,/g, "\\b|\\b") + "\\b"].join("|"), "g"),
		w = /^\d[^,]*|,\d[^,]*/g,
		x = /^,+|,+$/g,
		y = /^$|,+/;
	e.openTag = "{{", e.closeTag = "}}";
	var z = function(a, b) {
		var c = b.split(":"),
			d = c.shift(),
			e = c.join(":") || "";
		return e && (e = ", " + e), "$helpers." + d + "(" + a + e + ")"
	};
	e.parser = function(a) {
		a = a.replace(/^\s/, "");
		var b = a.split(" "),
			c = b.shift(),
			e = b.join(" ");
		switch(c) {
			case "if":
				a = "if(" + e + "){";
				break;
			case "else":
				b = "if" === b.shift() ? " if(" + b.join(" ") + ")" : "", a = "}else" + b + "{";
				break;
			case "/if":
				a = "}";
				break;
			case "each":
				var f = b[0] || "$data",
					g = b[1] || "as",
					h = b[2] || "$value",
					i = b[3] || "$index",
					j = h + "," + i;
				"as" !== g && (f = "[]"), a = "$each(" + f + ",function(" + j + "){";
				break;
			case "/each":
				a = "});";
				break;
			case "echo":
				a = "print(" + e + ");";
				break;
			case "print":
			case "include":
				a = c + "(" + b.join(",") + ");";
				break;
			default:
				if(/^\s*\|\s*[\w\$]/.test(e)) {
					var k = !0;
					0 === a.indexOf("#") && (a = a.substr(1), k = !1);
					for(var l = 0, m = a.split("|"), n = m.length, o = m[l++]; n > l; l++) o = z(o, m[l]);
					a = (k ? "=" : "=#") + o
				} else a = d.helpers[c] ? "=#" + c + "(" + b.join(",") + ");" : "=" + a
		}
		return a
	}, "function" == typeof define ? define(function() {
		return d
	}) : "undefined" != typeof exports ? module.exports = d : this.template = d
}();;
"use strict"
// Module export pattern from
// https://github.com/umdjs/umd/blob/master/returnExports.js
;
(function(root, factory) {
	if(typeof define === 'function' && define.amd) {
		// AMD. Register as an anonymous module.
		define([], factory);
	} else if(typeof exports === 'object') {
		// Node. Does not work with strict CommonJS, but
		// only CommonJS-like environments that support module.exports,
		// like Node.
		module.exports = factory();
	} else {
		// Browser globals (root is window)
		root.store = factory();
	}
}(this, function() {

	// Store.js
	var store = {},
		win = window,
		doc = win.document,
		localStorageName = 'localStorage',
		scriptTag = 'script',
		storage

	store.disabled = false
	store.version = '1.3.17'
	store.set = function(key, value) {}
	store.get = function(key, defaultVal) {}
	store.has = function(key) {
		return store.get(key) !== undefined
	}
	store.remove = function(key) {}
	store.clear = function() {}
	store.transact = function(key, defaultVal, transactionFn) {
		if(transactionFn == null) {
			transactionFn = defaultVal
			defaultVal = null
		}
		if(defaultVal == null) {
			defaultVal = {}
		}
		var val = store.get(key, defaultVal)
		transactionFn(val)
		store.set(key, val)
	}
	store.getAll = function() {}
	store.forEach = function() {}

	store.serialize = function(value) {
		return JSON.stringify(value)
	}
	store.deserialize = function(value) {
		if(typeof value != 'string') {
			return undefined
		}
		try {
			return JSON.parse(value)
		} catch(e) {
			return value || undefined
		}
	}

	// Functions to encapsulate questionable FireFox 3.6.13 behavior
	// when about.config::dom.storage.enabled === false
	// See https://github.com/marcuswestin/store.js/issues#issue/13
	function isLocalStorageNameSupported() {
		try {
			return(localStorageName in win && win[localStorageName])
		} catch(err) {
			return false
		}
	}

	if(isLocalStorageNameSupported()) {
		storage = win[localStorageName]
		store.set = function(key, val) {
			if(val === undefined) {
				return store.remove(key)
			}
			storage.setItem(key, store.serialize(val))
			return val
		}
		store.get = function(key, defaultVal) {
			var val = store.deserialize(storage.getItem(key))
			return(val === undefined ? defaultVal : val)
		}
		store.remove = function(key) {
			storage.removeItem(key)
		}
		store.clear = function() {
			storage.clear()
		}
		store.getAll = function() {
			var ret = {}
			store.forEach(function(key, val) {
				ret[key] = val
			})
			return ret
		}
		store.forEach = function(callback) {
			for(var i = 0; i < storage.length; i++) {
				var key = storage.key(i)
				callback(key, store.get(key))
			}
		}
	} else if(doc.documentElement.addBehavior) {
		var storageOwner,
			storageContainer
			// Since #userData storage applies only to specific paths, we need to
			// somehow link our data to a specific path.  We choose /favicon.ico
			// as a pretty safe option, since all browsers already make a request to
			// this URL anyway and being a 404 will not hurt us here.  We wrap an
			// iframe pointing to the favicon in an ActiveXObject(htmlfile) object
			// (see: http://msdn.microsoft.com/en-us/library/aa752574(v=VS.85).aspx)
			// since the iframe access rules appear to allow direct access and
			// manipulation of the document element, even for a 404 page.  This
			// document can be used instead of the current document (which would
			// have been limited to the current path) to perform #userData storage.
		try {
			storageContainer = new ActiveXObject('htmlfile')
			storageContainer.open()
			storageContainer.write('<' + scriptTag + '>document.w=window</' + scriptTag + '><iframe src="/favicon.ico"></iframe>')
			storageContainer.close()
			storageOwner = storageContainer.w.frames[0].document
			storage = storageOwner.createElement('div')
		} catch(e) {
			// somehow ActiveXObject instantiation failed (perhaps some special
			// security settings or otherwse), fall back to per-path storage
			storage = doc.createElement('div')
			storageOwner = doc.body
		}
		var withIEStorage = function(storeFunction) {
			return function() {
				var args = Array.prototype.slice.call(arguments, 0)
				args.unshift(storage)
					// See http://msdn.microsoft.com/en-us/library/ms531081(v=VS.85).aspx
					// and http://msdn.microsoft.com/en-us/library/ms531424(v=VS.85).aspx
				storageOwner.appendChild(storage)
				storage.addBehavior('#default#userData')
				storage.load(localStorageName)
				var result = storeFunction.apply(store, args)
				storageOwner.removeChild(storage)
				return result
			}
		}

		// In IE7, keys cannot start with a digit or contain certain chars.
		// See https://github.com/marcuswestin/store.js/issues/40
		// See https://github.com/marcuswestin/store.js/issues/83
		var forbiddenCharsRegex = new RegExp("[!\"#$%&'()*+,/\\\\:;<=>?@[\\]^`{|}~]", "g")
		var ieKeyFix = function(key) {
			return key.replace(/^d/, '___$&').replace(forbiddenCharsRegex, '___')
		}
		store.set = withIEStorage(function(storage, key, val) {
			key = ieKeyFix(key)
			if(val === undefined) {
				return store.remove(key)
			}
			storage.setAttribute(key, store.serialize(val))
			storage.save(localStorageName)
			return val
		})
		store.get = withIEStorage(function(storage, key, defaultVal) {
			key = ieKeyFix(key)
			var val = store.deserialize(storage.getAttribute(key))
			return(val === undefined ? defaultVal : val)
		})
		store.remove = withIEStorage(function(storage, key) {
			key = ieKeyFix(key)
			storage.removeAttribute(key)
			storage.save(localStorageName)
		})
		store.clear = withIEStorage(function(storage) {
			var attributes = storage.XMLDocument.documentElement.attributes
			storage.load(localStorageName)
			while(attributes.length) {
				storage.removeAttribute(attributes[0].name)
			}
			storage.save(localStorageName)
		})
		store.getAll = function(storage) {
			var ret = {}
			store.forEach(function(key, val) {
				ret[key] = val
			})
			return ret
		}
		store.forEach = withIEStorage(function(storage, callback) {
			var attributes = storage.XMLDocument.documentElement.attributes
			for(var i = 0, attr; attr = attributes[i]; ++i) {
				callback(attr.name, store.deserialize(storage.getAttribute(attr.name)))
			}
		})
	}

	try {
		var testKey = '__storejs__'
		store.set(testKey, testKey)
		if(store.get(testKey) != testKey) {
			store.disabled = true
		}
		store.remove(testKey)
	} catch(e) {
		store.disabled = true
	}
	store.enabled = !store.disabled

	return store
}));;
/*!
 * bootstrap-select v1.4.3
 * http://silviomoreto.github.io/bootstrap-select/
 *
 * Copyright 2013 bootstrap-select
 * Licensed under the MIT license
 */
;
! function(b) {
	b.expr[":"].icontains = function(e, c, d) {
		return b(e).text().toUpperCase().indexOf(d[3].toUpperCase()) >= 0
	};
	var a = function(d, c, f) {
		if(f) {
			f.stopPropagation();
			f.preventDefault()
		}
		this.$element = b(d);
		this.$newElement = null;
		this.$button = null;
		this.$menu = null;
		this.$lis = null;
		this.options = b.extend({}, b.fn.selectpicker.defaults, this.$element.data(), typeof c == "object" && c);
		if(this.options.title === null) {
			this.options.title = this.$element.attr("title")
		}
		this.val = a.prototype.val;
		this.render = a.prototype.render;
		this.refresh = a.prototype.refresh;
		this.setStyle = a.prototype.setStyle;
		this.selectAll = a.prototype.selectAll;
		this.deselectAll = a.prototype.deselectAll;
		this.init()
	};
	a.prototype = {
		constructor: a,
		init: function() {
			var c = this,
				d = this.$element.attr("id");
			this.$element.hide();
			this.multiple = this.$element.prop("multiple");
			this.autofocus = this.$element.prop("autofocus");
			this.$newElement = this.createView();
			this.$element.after(this.$newElement);
			this.$menu = this.$newElement.find("> .dropdown-menu");
			this.$button = this.$newElement.find("> button");
			this.$searchbox = this.$newElement.find("input");
			if(d !== undefined) {
				this.$button.attr("data-id", d);
				b('label[for="' + d + '"]').click(function(f) {
					f.preventDefault();
					c.$button.focus()
				})
			}
			this.checkDisabled();
			this.clickListener();
			if(this.options.liveSearch) {
				this.liveSearchListener()
			}
			this.render();
			this.liHeight();
			this.setStyle();
			this.setWidth();
			if(this.options.container) {
				this.selectPosition()
			}
			this.$menu.data("this", this);
			this.$newElement.data("this", this)
		},
		createDropdown: function() {
			var c = this.multiple ? " show-tick" : "";
			var g = this.autofocus ? " autofocus" : "";
			var f = this.options.header ? '<div class="popover-title"><button type="button" class="close" aria-hidden="true">&times;</button>' + this.options.header + "</div>" : "";
			var e = this.options.liveSearch ? '<div class="bootstrap-select-searchbox"><input type="text" class="input-block-level form-control" /></div>' : "";
			var d = '<div class="btn-group bootstrap-select' + c + '"><button type="button" class="btn dropdown-toggle selectpicker" data-toggle="dropdown"' + g + '><span class="filter-option pull-left"></span>&nbsp;<span class="caret"></span></button><div class="dropdown-menu open">' + f + e + '<ul class="dropdown-menu inner selectpicker" role="menu"></ul></div></div>';
			return b(d)
		},
		createView: function() {
			var c = this.createDropdown();
			var d = this.createLi();
			c.find("ul").append(d);
			return c
		},
		reloadLi: function() {
			this.destroyLi();
			var c = this.createLi();
			this.$menu.find("ul").append(c)
		},
		destroyLi: function() {
			this.$menu.find("li").remove()
		},
		createLi: function() {
			var d = this,
				e = [],
				c = "";
			this.$element.find("option").each(function() {
				var i = b(this);
				var g = i.attr("class") || "";
				var h = i.attr("style") || "";
				var m = i.data("content") ? i.data("content") : i.html();
				var k = i.data("subtext") !== undefined ? '<small class="muted text-muted">' + i.data("subtext") + "</small>" : "";
				var j = i.data("icon") !== undefined ? '<i class="' + d.options.iconBase + " " + i.data("icon") + '"></i> ' : "";
				if(j !== "" && (i.is(":disabled") || i.parent().is(":disabled"))) {
					j = "<span>" + j + "</span>"
				}
				if(!i.data("content")) {
					m = j + '<span class="text">' + m + k + "</span>"
				}
				if(d.options.hideDisabled && (i.is(":disabled") || i.parent().is(":disabled"))) {
					e.push('<a style="min-height: 0; padding: 0"></a>')
				} else {
					if(i.parent().is("optgroup") && i.data("divider") !== true) {
						if(i.index() === 0) {
							var l = i.parent().attr("label");
							var n = i.parent().data("subtext") !== undefined ? '<small class="muted text-muted">' + i.parent().data("subtext") + "</small>" : "";
							var f = i.parent().data("icon") ? '<i class="' + i.parent().data("icon") + '"></i> ' : "";
							l = f + '<span class="text">' + l + n + "</span>";
							if(i[0].index !== 0) {
								e.push('<div class="div-contain"><div class="divider"></div></div><dt>' + l + "</dt>" + d.createA(m, "opt " + g, h))
							} else {
								e.push("<dt>" + l + "</dt>" + d.createA(m, "opt " + g, h))
							}
						} else {
							e.push(d.createA(m, "opt " + g, h))
						}
					} else {
						if(i.data("divider") === true) {
							e.push('<div class="div-contain"><div class="divider"></div></div>')
						} else {
							if(b(this).data("hidden") === true) {
								e.push("")
							} else {
								e.push(d.createA(m, g, h))
							}
						}
					}
				}
			});
			b.each(e, function(f, g) {
				c += "<li rel=" + f + ">" + g + "</li>"
			});
			if(!this.multiple && this.$element.find("option:selected").length === 0 && !this.options.title) {
				this.$element.find("option").eq(0).prop("selected", true).attr("selected", "selected")
			}
			return b(c)
		},
		createA: function(e, c, d) {
			return '<a tabindex="0" class="' + c + '" style="' + d + '">' + e + '<i class="' + this.options.iconBase + " " + this.options.tickIcon + ' icon-ok check-mark"></i></a>'
		},
		render: function(e) {
			var d = this;
			if(e !== false) {
				this.$element.find("option").each(function(i) {
					d.setDisabled(i, b(this).is(":disabled") || b(this).parent().is(":disabled"));
					d.setSelected(i, b(this).is(":selected"))
				})
			}
			this.tabIndex();
			var h = this.$element.find("option:selected").map(function() {
				var k = b(this);
				var j = k.data("icon") && d.options.showIcon ? '<i class="' + d.options.iconBase + " " + k.data("icon") + '"></i> ' : "";
				var i;
				if(d.options.showSubtext && k.attr("data-subtext") && !d.multiple) {
					i = ' <small class="muted text-muted">' + k.data("subtext") + "</small>"
				} else {
					i = ""
				}
				if(k.data("content") && d.options.showContent) {
					return k.data("content")
				} else {
					if(k.attr("title") !== undefined) {
						return k.attr("title")
					} else {
						return j + k.html() + i
					}
				}
			}).toArray();
			var g = !this.multiple ? h[0] : h.join(this.options.multipleSeparator);
			if(this.multiple && this.options.selectedTextFormat.indexOf("count") > -1) {
				var c = this.options.selectedTextFormat.split(">");
				var f = this.options.hideDisabled ? ":not([disabled])" : "";
				if((c.length > 1 && h.length > c[1]) || (c.length == 1 && h.length >= 2)) {
					g = this.options.countSelectedText.replace("{0}", h.length).replace("{1}", this.$element.find('option:not([data-divider="true"]):not([data-hidden="true"])' + f).length)
				}
			}
			if(!g) {
				g = this.options.title !== undefined ? this.options.title : this.options.noneSelectedText
			}
			this.$button.attr("title", b.trim(g));
			this.$newElement.find(".filter-option").html(g)
		},
		setStyle: function(e, d) {
			if(this.$element.attr("class")) {
				this.$newElement.addClass(this.$element.attr("class").replace(/selectpicker|mobile-device/gi, ""))
			}
			var c = e ? e : this.options.style;
			if(d == "add") {
				this.$button.addClass(c)
			} else {
				if(d == "remove") {
					this.$button.removeClass(c)
				} else {
					this.$button.removeClass(this.options.style);
					this.$button.addClass(c)
				}
			}
		},
		liHeight: function() {
			var e = this.$menu.parent().clone().find("> .dropdown-toggle").prop("autofocus", false).end().appendTo("body"),
				f = e.addClass("open").find("> .dropdown-menu"),
				d = f.find("li > a").outerHeight(),
				c = this.options.header ? f.find(".popover-title").outerHeight() : 0,
				g = this.options.liveSearch ? f.find(".bootstrap-select-searchbox").outerHeight() : 0;
			e.remove();
			this.$newElement.data("liHeight", d).data("headerHeight", c).data("searchHeight", g)
		},
		setSize: function() {
			var h = this,
				d = this.$menu,
				i = d.find(".inner"),
				t = this.$newElement.outerHeight(),
				f = this.$newElement.data("liHeight"),
				r = this.$newElement.data("headerHeight"),
				l = this.$newElement.data("searchHeight"),
				k = d.find("li .divider").outerHeight(true),
				q = parseInt(d.css("padding-top")) + parseInt(d.css("padding-bottom")) + parseInt(d.css("border-top-width")) + parseInt(d.css("border-bottom-width")),
				o = this.options.hideDisabled ? ":not(.disabled)" : "",
				n = b(window),
				g = q + parseInt(d.css("margin-top")) + parseInt(d.css("margin-bottom")) + 2,
				p, u, s, j = function() {
					u = h.$newElement.offset().top - n.scrollTop();
					s = n.height() - u - t
				};
			j();
			if(this.options.header) {
				d.css("padding-top", 0)
			}
			if(this.options.size == "auto") {
				var e = function() {
					var v;
					j();
					p = s - g;
					if(h.options.dropupAuto) {
						h.$newElement.toggleClass("dropup", (u > s) && ((p - g) < d.height()))
					}
					if(h.$newElement.hasClass("dropup")) {
						p = u - g
					}
					if((d.find("li").length + d.find("dt").length) > 3) {
						v = f * 3 + g - 2
					} else {
						v = 0
					}
					d.css({
						"max-height": p + "px",
						overflow: "hidden",
						"min-height": v + "px"
					});
					i.css({
						"max-height": p - r - l - q + "px",
						"overflow-y": "auto",
						"min-height": v - q + "px"
					})
				};
				e();
				b(window).resize(e);
				b(window).scroll(e)
			} else {
				if(this.options.size && this.options.size != "auto" && d.find("li" + o).length > this.options.size) {
					var m = d.find("li" + o + " > *").filter(":not(.div-contain)").slice(0, this.options.size).last().parent().index();
					var c = d.find("li").slice(0, m + 1).find(".div-contain").length;
					p = f * this.options.size + c * k + q;
					if(h.options.dropupAuto) {
						this.$newElement.toggleClass("dropup", (u > s) && (p < d.height()))
					}
					d.css({
						"max-height": p + r + l + "px",
						overflow: "hidden"
					});
					i.css({
						"max-height": p - q + "px",
						"overflow-y": "auto"
					})
				}
			}
		},
		setWidth: function() {
			if(this.options.width == "auto") {
				this.$menu.css("min-width", "0");
				var d = this.$newElement.clone().appendTo("body");
				var c = d.find("> .dropdown-menu").css("width");
				d.remove();
				this.$newElement.css("width", c)
			} else {
				if(this.options.width == "fit") {
					this.$menu.css("min-width", "");
					this.$newElement.css("width", "").addClass("fit-width")
				} else {
					if(this.options.width) {
						this.$menu.css("min-width", "");
						this.$newElement.css("width", this.options.width)
					} else {
						this.$menu.css("min-width", "");
						this.$newElement.css("width", "")
					}
				}
			}
			if(this.$newElement.hasClass("fit-width") && this.options.width !== "fit") {
				this.$newElement.removeClass("fit-width")
			}
		},
		selectPosition: function() {
			var e = this,
				d = "<div />",
				f = b(d),
				h, g, c = function(i) {
					f.addClass(i.attr("class")).toggleClass("dropup", i.hasClass("dropup"));
					h = i.offset();
					g = i.hasClass("dropup") ? 0 : i[0].offsetHeight;
					f.css({
						top: h.top + g,
						left: h.left,
						width: i[0].offsetWidth,
						position: "absolute"
					})
				};
			this.$newElement.on("click", function() {
				c(b(this));
				f.appendTo(e.options.container);
				f.toggleClass("open", !b(this).hasClass("open"));
				f.append(e.$menu)
			});
			b(window).resize(function() {
				c(e.$newElement)
			});
			b(window).on("scroll", function() {
				c(e.$newElement)
			});
			b("html").on("click", function(i) {
				if(b(i.target).closest(e.$newElement).length < 1) {
					f.removeClass("open")
				}
			})
		},
		mobile: function() {
			this.$element.addClass("mobile-device").appendTo(this.$newElement);
			if(this.options.container) {
				this.$menu.hide()
			}
		},
		refresh: function() {
			this.$lis = null;
			this.reloadLi();
			this.render();
			this.setWidth();
			this.setStyle();
			this.checkDisabled();
			this.liHeight()
		},
		update: function() {
			this.reloadLi();
			this.setWidth();
			this.setStyle();
			this.checkDisabled();
			this.liHeight()
		},
		setSelected: function(c, d) {
			if(this.$lis == null) {
				this.$lis = this.$menu.find("li")
			}
			$('li').removeClass('selected');
			b(this.$lis[c]).addClass("selected")
		},
		setDisabled: function(c, d) {
			if(this.$lis == null) {
				this.$lis = this.$menu.find("li")
			}
			if(d) {
				b(this.$lis[c]).addClass("disabled").find("a").attr("href", "#").attr("tabindex", -1)
			} else {
				b(this.$lis[c]).removeClass("disabled").find("a").removeAttr("href").attr("tabindex", 0)
			}
		},
		isDisabled: function() {
			return this.$element.is(":disabled")
		},
		checkDisabled: function() {
			var c = this;
			if(this.isDisabled()) {
				this.$button.addClass("disabled").attr("tabindex", -1)
			} else {
				if(this.$button.hasClass("disabled")) {
					this.$button.removeClass("disabled")
				}
				if(this.$button.attr("tabindex") == -1) {
					if(!this.$element.data("tabindex")) {
						this.$button.removeAttr("tabindex")
					}
				}
			}
			this.$button.click(function() {
				return !c.isDisabled()
			})
		},
		tabIndex: function() {
			if(this.$element.is("[tabindex]")) {
				this.$element.data("tabindex", this.$element.attr("tabindex"));
				this.$button.attr("tabindex", this.$element.data("tabindex"))
			}
		},
		clickListener: function() {
			var c = this;
			b("body").on("touchstart.dropdown", ".dropdown-menu", function(d) {
				d.stopPropagation()
			});
			this.$newElement.on("click", function() {
				c.setSize();
				if(!c.options.liveSearch && !c.multiple) {
					setTimeout(function() {
						c.$menu.find(".selected a").focus()
					}, 10)
				}
			});
			this.$menu.on("click", "li a", function(k) {
				var g = b(this).parent().index(),
					j = c.$element.val(),
					f = c.$element.prop("selectedIndex");
				if(c.multiple) {
					k.stopPropagation()
				}
				k.preventDefault();
				if(!c.isDisabled() && !b(this).parent().hasClass("disabled")) {
					var d = c.$element.find("option"),
						i = d.eq(g),
						h = i.prop("selected");
					if(!c.multiple) {
						d.prop("selected", false);
						i.prop("selected", true);
						c.$menu.find(".selected").removeClass("selected");
						c.setSelected(g, true)
					} else {
						i.prop("selected", !h);
						c.setSelected(g, !h)
					}
					if(!c.multiple) {
						c.$button.focus()
					} else {
						if(c.options.liveSearch) {
							c.$searchbox.focus()
						}
					}
					if((j != c.$element.val() && c.multiple) || (f != c.$element.prop("selectedIndex") && !c.multiple)) {
						c.$element.change()
					}
				}
			});
			this.$menu.on("click", "li.disabled a, li dt, li .div-contain, .popover-title, .popover-title :not(.close)", function(d) {
				if(d.target == this) {
					d.preventDefault();
					d.stopPropagation();
					if(!c.options.liveSearch) {
						c.$button.focus()
					} else {
						c.$searchbox.focus()
					}
				}
			});
			this.$menu.on("click", ".popover-title .close", function() {
				c.$button.focus()
			});
			this.$searchbox.on("click", function(d) {
				d.stopPropagation()
			});
			this.$element.change(function() {
				c.render(false)
			})
		},
		liveSearchListener: function() {
			var d = this,
				c = b('<li class="no-results"></li>');
			this.$newElement.on("click.dropdown.data-api", function() {
				d.$menu.find(".active").removeClass("active");
				if(!!d.$searchbox.val()) {
					d.$searchbox.val("");
					d.$menu.find("li").show();
					if(!!c.parent().length) {
						c.remove()
					}
				}
				if(!d.multiple) {
					d.$menu.find(".selected").addClass("active")
				}
				setTimeout(function() {
					d.$searchbox.focus()
				}, 10)
			});
			this.$searchbox.on("input propertychange", function() {
				if(d.$searchbox.val()) {
					d.$menu.find("li").show().not(":icontains(" + d.$searchbox.val() + ")").hide();
					if(!d.$menu.find("li").filter(":visible:not(.no-results)").length) {
						if(!!c.parent().length) {
							c.remove()
						}
						c.html(d.options.noneResultsText + ' "' + d.$searchbox.val() + '"').show();
						d.$menu.find("li").last().after(c)
					} else {
						if(!!c.parent().length) {
							c.remove()
						}
					}
				} else {
					d.$menu.find("li").show();
					if(!!c.parent().length) {
						c.remove()
					}
				}
				d.$menu.find("li.active").removeClass("active");
				d.$menu.find("li").filter(":visible:not(.divider)").eq(0).addClass("active").find("a").focus();
				b(this).focus()
			});
			this.$menu.on("mouseenter", "a", function(f) {
				d.$menu.find(".active").removeClass("active");
				b(f.currentTarget).parent().not(".disabled").addClass("active")
			});
			this.$menu.on("mouseleave", "a", function() {
				d.$menu.find(".active").removeClass("active")
			})
		},
		val: function(c) {
			if(c !== undefined) {
				this.$element.val(c);
				this.$element.change();
				return this.$element
			} else {
				return this.$element.val()
			}
		},
		selectAll: function() {
			this.$element.find("option").prop("selected", true).attr("selected", "selected");
			this.render()
		},
		deselectAll: function() {
			this.$element.find("option").prop("selected", false).removeAttr("selected");
			this.render()
		},
		keydown: function(p) {
			var q, o, i, n, k, j, r, f, h, m, d, s, g = {
				32: " ",
				48: "0",
				49: "1",
				50: "2",
				51: "3",
				52: "4",
				53: "5",
				54: "6",
				55: "7",
				56: "8",
				57: "9",
				59: ";",
				65: "a",
				66: "b",
				67: "c",
				68: "d",
				69: "e",
				70: "f",
				71: "g",
				72: "h",
				73: "i",
				74: "j",
				75: "k",
				76: "l",
				77: "m",
				78: "n",
				79: "o",
				80: "p",
				81: "q",
				82: "r",
				83: "s",
				84: "t",
				85: "u",
				86: "v",
				87: "w",
				88: "x",
				89: "y",
				90: "z",
				96: "0",
				97: "1",
				98: "2",
				99: "3",
				100: "4",
				101: "5",
				102: "6",
				103: "7",
				104: "8",
				105: "9"
			};
			q = b(this);
			i = q.parent();
			if(q.is("input")) {
				i = q.parent().parent()
			}
			m = i.data("this");
			if(m.options.liveSearch) {
				i = q.parent().parent()
			}
			if(m.options.container) {
				i = m.$menu
			}
			o = b("[role=menu] li:not(.divider) a", i);
			s = m.$menu.parent().hasClass("open");
			if(m.options.liveSearch) {
				if(/(^9$|27)/.test(p.keyCode) && s && m.$menu.find(".active").length === 0) {
					p.preventDefault();
					m.$menu.parent().removeClass("open");
					m.$button.focus()
				}
				o = b("[role=menu] li:not(.divider):visible", i);
				if(!q.val() && !/(38|40)/.test(p.keyCode)) {
					if(o.filter(".active").length === 0) {
						o = m.$newElement.find("li").filter(":icontains(" + g[p.keyCode] + ")")
					}
				}
			}
			if(!o.length) {
				return
			}
			if(/(38|40)/.test(p.keyCode)) {
				if(!s) {
					m.$menu.parent().addClass("open")
				}
				n = o.index(o.filter(":focus"));
				j = o.parent(":not(.disabled):visible").first().index();
				r = o.parent(":not(.disabled):visible").last().index();
				k = o.eq(n).parent().nextAll(":not(.disabled):visible").eq(0).index();
				f = o.eq(n).parent().prevAll(":not(.disabled):visible").eq(0).index();
				h = o.eq(k).parent().prevAll(":not(.disabled):visible").eq(0).index();
				if(m.options.liveSearch) {
					o.each(function(e) {
						if(b(this).is(":not(.disabled)")) {
							b(this).data("index", e)
						}
					});
					n = o.index(o.filter(".active"));
					j = o.filter(":not(.disabled):visible").first().data("index");
					r = o.filter(":not(.disabled):visible").last().data("index");
					k = o.eq(n).nextAll(":not(.disabled):visible").eq(0).data("index");
					f = o.eq(n).prevAll(":not(.disabled):visible").eq(0).data("index");
					h = o.eq(k).prevAll(":not(.disabled):visible").eq(0).data("index")
				}
				d = q.data("prevIndex");
				if(p.keyCode == 38) {
					if(m.options.liveSearch) {
						n -= 1
					}
					if(n != h && n > f) {
						n = f
					}
					if(n < j) {
						n = j
					}
					if(n == d) {
						n = r
					}
				}
				if(p.keyCode == 40) {
					if(m.options.liveSearch) {
						n += 1
					}
					if(n == -1) {
						n = 0
					}
					if(n != h && n < k) {
						n = k
					}
					if(n > r) {
						n = r
					}
					if(n == d) {
						n = j
					}
				}
				q.data("prevIndex", n);
				if(!m.options.liveSearch) {
					o.eq(n).focus()
				} else {
					p.preventDefault();
					if(!q.is(".dropdown-toggle")) {
						o.removeClass("active");
						o.eq(n).addClass("active").find("a").focus();
						q.focus()
					}
				}
			} else {
				if(!q.is("input")) {
					var c = [],
						l, t;
					o.each(function() {
						if(b(this).parent().is(":not(.disabled)")) {
							if(b.trim(b(this).text().toLowerCase()).substring(0, 1) == g[p.keyCode]) {
								c.push(b(this).parent().index())
							}
						}
					});
					l = b(document).data("keycount");
					l++;
					b(document).data("keycount", l);
					t = b.trim(b(":focus").text().toLowerCase()).substring(0, 1);
					if(t != g[p.keyCode]) {
						l = 1;
						b(document).data("keycount", l)
					} else {
						if(l >= c.length) {
							b(document).data("keycount", 0);
							if(l > c.length) {
								l = 1
							}
						}
					}
					o.eq(c[l - 1]).focus()
				}
			}
			if(/(13|32|^9$)/.test(p.keyCode) && s) {
				if(!/(32)/.test(p.keyCode)) {
					p.preventDefault()
				}
				if(!m.options.liveSearch) {
					b(":focus").click()
				} else {
					if(!/(32)/.test(p.keyCode)) {
						m.$menu.find(".active a").click();
						q.focus()
					}
				}
				b(document).data("keycount", 0)
			}
			if((/(^9$|27)/.test(p.keyCode) && s && (m.multiple || m.options.liveSearch)) || (/(27)/.test(p.keyCode) && !s)) {
				m.$menu.parent().removeClass("open");
				m.$button.focus()
			}
		},
		hide: function() {
			this.$newElement.hide()
		},
		show: function() {
			this.$newElement.show()
		},
		destroy: function() {
			this.$newElement.remove();
			this.$element.remove()
		}
	};
	b.fn.selectpicker = function(e, f) {
		var c = arguments;
		var g;
		var d = this.each(function() {
			if(b(this).is("select")) {
				var m = b(this),
					l = m.data("selectpicker"),
					h = typeof e == "object" && e;
				if(!l) {
					m.data("selectpicker", (l = new a(this, h, f)))
				} else {
					if(h) {
						for(var j in h) {
							l.options[j] = h[j]
						}
					}
				}
				if(typeof e == "string") {
					var k = e;
					if(l[k] instanceof Function) {
						[].shift.apply(c);
						g = l[k].apply(l, c)
					} else {
						g = l.options[k]
					}
				}
			}
		});
		if(g !== undefined) {
			return g
		} else {
			return d
		}
	};
	b.fn.selectpicker.defaults = {
		style: "btn-default",
		size: "auto",
		title: null,
		selectedTextFormat: "values",
		noneSelectedText: "Nothing selected",
		noneResultsText: "No results match",
		countSelectedText: "{0} of {1} selected",
		width: false,
		container: false,
		hideDisabled: false,
		showSubtext: false,
		showIcon: true,
		showContent: true,
		dropupAuto: true,
		header: false,
		liveSearch: false,
		multipleSeparator: ", ",
		iconBase: "glyphicon",
		tickIcon: "glyphicon-ok"
	};
	b(document).data("keycount", 0).on("keydown", ".bootstrap-select [data-toggle=dropdown], .bootstrap-select [role=menu], .bootstrap-select-searchbox input", a.prototype.keydown).on("focusin.modal", ".bootstrap-select [data-toggle=dropdown], .bootstrap-select [role=menu], .bootstrap-select-searchbox input", function(c) {
		c.stopPropagation()
	})
}(window.jQuery);;﻿
(function(root, factory) {
	if(typeof module === 'object' && module && typeof module.exports === 'object') {
		module.exports = factory();
	} else if(typeof define === "function" && define.amd) {
		define("bs-chinese-region", ["jquery", "bootstrap"], factory);
	} else {
		factory(root.jQuery);
	}
})(window, function($) {
	var ChineseRegion = function($el) {
		this._areas = [];
		this._defaultId = "";
		this.$el = $el;
		this.$input = this.$el.find('input[type=text]');
		this.$tabContent = this.$el.find('.tab-content');
		this.$tabContent.children().first().on('click', 'a', $.proxy(this.onClearAreas, this));
		this.$tabContent.children().on('click', 'a', $.proxy(this.onAreasChanged, this));
		this.$tabContent.children().last().on('click', 'a', $.proxy(this.onClose, this));
		this.$el.parents('form').on('submit', $.proxy(this.onSubmit, this));
		if(!!$.fn.dropdown.Constructor) this.initDropdownModule();
		this._defaultId = this.$el.data('def-val') !== undefined ? this.$el.find(this.$el.data('def-val')).val() : this.$input.val();
		this.submitType = this.$el.data('submit-type');
		this.level(this.$el.data('min-level'), this.$el.data('max-level'));
	};
	ChineseRegion.prototype = new $.fn.dropdown.Constructor();
	ChineseRegion.prototype._toggle = ChineseRegion.prototype.toggle;
	ChineseRegion.prototype.toggle = function() {
		ChineseRegion.prototype._toggle.call(this.$input);
	};
	ChineseRegion.prototype.initDropdownModule = function() {
		this.$el.on('click', '.dropdown-menu', function(e) {
			$(e.target).trigger('click.bs.tab.data-api');
			e.stopPropagation();
		});
	};
	ChineseRegion.prototype.onClearAreas = function(e) {
		this.areas = [];
	};
	ChineseRegion.prototype.onClose = function(e) {
		this.toggle();
		var data = this.getAreaData($(e.target));
		this.$el.trigger('completed.bs.chinese-region', [this.areas]);
	};
	ChineseRegion.prototype.onSubmit = function(e) {
		if(this.submitType == 'id') {
			this.$input.val(this.areas[this.areas.length - 1].id);
		}
	};
	ChineseRegion.prototype.getAreaData = function($el) {
		var data = $el.data();
		data.name = $el.text();
		return data;
	};
	ChineseRegion.prototype.onAreasChanged = function(e) {
		var currentId = $(e.target).attr('data-id');
		this.areas = this.getCurrentAreas(currentId);
		this.renderAreasPanel(this.getAreasByParentId(currentId));
		this.$el.trigger('changed.bs.chinese-region', [this.areas]);
	};
	ChineseRegion.prototype.getAreasByParentId = function(id) {
		var result = [];
		for(var i = 0; i < this._source.length; i++) {
			if(this._source[i].level > this.maxLevel || this._source[i].level < this.minLevel) continue;
			if(this._source[i].parentId != id) continue;
			result.push(this._source[i]);
		}
		return result;
	};
	ChineseRegion.prototype.getAreasByLevel = function(level) {
		var result = [];
		for(var i = 0; i < this._source.length; i++) {
			if(this._source[i].level > this.maxLevel || this._source[i].level < this.minLevel) continue;
			if(this._source[i].level != level) continue;
			result.push(this._source[i]);
		}
		return result;
	};
	ChineseRegion.prototype.getAreaById = function(id) {
		var result;
		for(var i = 0; i < this._source.length; i++) {
			if(this._source[i].id == id) {
				result = this._source[i];
				break;
			}
		}
		return result;
	};
	ChineseRegion.prototype.getCurrentAreas = function(lastId) {
		var result = [];
		for(var i = this.minLevel; i <= this.maxLevel; i++) {
			var area = this.getAreaById(lastId);
			if(area === undefined) break;
			if(area.level > this.maxLevel || area.level < this.minLevel) continue;
			result.unshift(area);
			lastId = area.parentId;
		}
		return result;
	};
	ChineseRegion.prototype.renderAreasPanel = function(data, first) {
		var $panel, $navbarButton;
		if(first) {
			$panel = this.$tabContent.children(':first');
			$navbarButton = this.$el.find('.nav-tabs li:first');
		} else {
			$panel = this.$tabContent.children('.active').next();
			$navbarButton = this.$el.find('.nav-tabs li.active').next();
		}
		if(data && data.length) {
			$panel.empty();
			for(var i = 0; i < data.length; i++) {
				var area = data[i];
				$panel.append('<a href="javascript:;" class="areas-item" data-id="' + area.id + '" data-type="' + area.type + '">' + area.name + '</a> ');
			}
		}
		$navbarButton.children('a').tab('show');
		this.$el.children('input').val('');
		this.$tabContent.children().find('a').removeClass('current');
		for(var i = 0; i < this.areas.length; i++) {
			this.$input.val(this.$input.val() + this.areas[i].name + ' ');
			this.$tabContent.find('a[data-id=' + this.areas[i].id + ']').addClass('current');
			this.$el.children('input').eq(i + 1).val(this.areas[i].id);
		}
	};
	ChineseRegion.prototype.render = function(id) {
		this.renderAreasPanel(this.getAreasByLevel(this.minLevel), true);
		this.areas = this.getCurrentAreas(id);
		for(var i = 0; i < this.areas.length; i++) {
			var area = this.areas[i];
			this.renderAreasPanel(this.getAreasByParentId(area.id));
		}
	};
	ChineseRegion.prototype.source = function(data, filter) {
		if(arguments.length <= 0) return this._source;
		this._source = typeof filter == 'function' ? filter(data) : data;
		this.render(this._defaultId);
	};
	ChineseRegion.prototype.level = function(min, max) {
		this.minLevel = min;
		this.maxLevel = max;
	};
	Object.defineProperty(ChineseRegion.prototype, 'areas', {
		configurable: false,
		get: function() {
			return this._areas;
		},
		set: function(value) {
			this._areas = value;
		}
	});
	Object.defineProperty(ChineseRegion.prototype, 'minLevel', {
		configurable: false,
		get: function() {
			return this._minLevel;
		},
		set: function(value) {
			this._minLevel = value;
		}
	});
	Object.defineProperty(ChineseRegion.prototype, 'maxLevel', {
		configurable: false,
		get: function() {
			return this._maxLevel;
		},
		set: function(value) {
			this._maxLevel = value;
		}
	});
	$.fn.chineseRegion = function() {
		var options = Array.prototype.shift.apply(arguments),
			arg = arguments,
			chineseRegion = this.data('bs-chinese-region');
		if(chineseRegion === undefined) this.data('bs-chinese-region', (chineseRegion = new ChineseRegion(this)));
		if(typeof options == 'string') chineseRegion[options].apply(chineseRegion, arg);
		return this;
	};
	$.fn.chineseRegion.Constructor = ChineseRegion;
});;
/*! jsTree - v3.1.0 - 2015-03-24 - (MIT) */
! function(a) {
	"use strict";
	"function" == typeof define && define.amd ? define(["jquery"], a) : a("object" == typeof exports ? require("jquery") : jQuery)
}(function(a, b) {
	"use strict";
	if(!a.jstree) {
		var c = 0,
			d = !1,
			e = !1,
			f = !1,
			g = [],
			h = a("script:last").attr("src"),
			i = window.document,
			j = i.createElement("LI"),
			k, l;
		j.setAttribute("role", "treeitem"), k = i.createElement("I"), k.className = "jstree-icon jstree-ocl", k.setAttribute("role", "presentation"), j.appendChild(k), k = i.createElement("A"), k.className = "jstree-anchor", k.setAttribute("href", "#"), k.setAttribute("tabindex", "-1"), l = i.createElement("I"), l.className = "jstree-icon jstree-themeicon", l.setAttribute("role", "presentation"), k.appendChild(l), j.appendChild(k), k = l = null, a.jstree = {
			version: "3.1.0",
			defaults: {
				plugins: []
			},
			plugins: {},
			path: h && -1 !== h.indexOf("/") ? h.replace(/\/[^\/]+$/, "") : "",
			idregex: /[\\:&!^|()\[\]<>@*'+~#";.,=\- \/${}%?`]/g
		}, a.jstree.create = function(b, d) {
			var e = new a.jstree.core(++c),
				f = d;
			return d = a.extend(!0, {}, a.jstree.defaults, d), f && f.plugins && (d.plugins = f.plugins), a.each(d.plugins, function(a, b) {
				"core" !== a && (e = e.plugin(b, d[b]))
			}), a(b).data("jstree", e), e.init(b, d), e
		}, a.jstree.destroy = function() {
			a(".jstree:jstree").jstree("destroy"), a(i).off(".jstree")
		}, a.jstree.core = function(a) {
			this._id = a, this._cnt = 0, this._wrk = null, this._data = {
				core: {
					themes: {
						name: !1,
						dots: !1,
						icons: !1
					},
					selected: [],
					last_error: {},
					working: !1,
					worker_queue: [],
					focused: null
				}
			}
		}, a.jstree.reference = function(b) {
			var c = null,
				d = null;
			if(!b || !b.id || b.tagName && b.nodeType || (b = b.id), !d || !d.length) try {
				d = a(b)
			} catch(e) {}
			if(!d || !d.length) try {
				d = a("#" + b.replace(a.jstree.idregex, "\\$&"))
			} catch(e) {}
			return d && d.length && (d = d.closest(".jstree")).length && (d = d.data("jstree")) ? c = d : a(".jstree").each(function() {
				var d = a(this).data("jstree");
				return d && d._model.data[b] ? (c = d, !1) : void 0
			}), c
		}, a.fn.jstree = function(c) {
			var d = "string" == typeof c,
				e = Array.prototype.slice.call(arguments, 1),
				f = null;
			return c !== !0 || this.length ? (this.each(function() {
				var g = a.jstree.reference(this),
					h = d && g ? g[c] : null;
				return f = d && h ? h.apply(g, e) : null, g || d || c !== b && !a.isPlainObject(c) || a.jstree.create(this, c), (g && !d || c === !0) && (f = g || !1), null !== f && f !== b ? !1 : void 0
			}), null !== f && f !== b ? f : this) : !1
		}, a.expr[":"].jstree = a.expr.createPseudo(function(c) {
			return function(c) {
				return a(c).hasClass("jstree") && a(c).data("jstree") !== b
			}
		}), a.jstree.defaults.core = {
			data: !1,
			strings: !1,
			check_callback: !1,
			error: a.noop,
			animation: 200,
			multiple: !0,
			themes: {
				name: !1,
				url: !1,
				dir: !1,
				dots: !0,
				icons: !0,
				stripes: !1,
				variant: !1,
				responsive: !1
			},
			expand_selected_onload: !0,
			worker: !0,
			force_text: !1,
			dblclick_toggle: !0
		}, a.jstree.core.prototype = {
			plugin: function(b, c) {
				var d = a.jstree.plugins[b];
				return d ? (this._data[b] = {}, d.prototype = this, new d(c, this)) : this
			},
			init: function(b, c) {
				this._model = {
					data: {
						"#": {
							id: "#",
							parent: null,
							parents: [],
							children: [],
							children_d: [],
							state: {
								loaded: !1
							}
						}
					},
					changed: [],
					force_full_redraw: !1,
					redraw_timeout: !1,
					default_state: {
						loaded: !0,
						opened: !1,
						selected: !1,
						disabled: !1
					}
				}, this.element = a(b).addClass("jstree jstree-" + this._id), this.settings = c, this._data.core.ready = !1, this._data.core.loaded = !1, this._data.core.rtl = "rtl" === this.element.css("direction"), this.element[this._data.core.rtl ? "addClass" : "removeClass"]("jstree-rtl"), this.element.attr("role", "tree"), this.settings.core.multiple && this.element.attr("aria-multiselectable", !0), this.element.attr("tabindex") || this.element.attr("tabindex", "0"), this.bind(), this.trigger("init"), this._data.core.original_container_html = this.element.find(" > ul > li").clone(!0), this._data.core.original_container_html.find("li").addBack().contents().filter(function() {
					return 3 === this.nodeType && (!this.nodeValue || /^\s+$/.test(this.nodeValue))
				}).remove(), this.element.html("<ul class='jstree-container-ul jstree-children' role='group'><li id='j" + this._id + "_loading' class='jstree-initial-node jstree-loading jstree-leaf jstree-last' role='tree-item'><i class='jstree-icon jstree-ocl'></i><a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>" + this.get_string("Loading ...") + "</a></li></ul>"), this.element.attr("aria-activedescendant", "j" + this._id + "_loading"), this._data.core.li_height = this.get_container_ul().children("li").first().height() || 24, this.trigger("loading"), this.load_node("#")
			},
			destroy: function(a) {
				if(this._wrk) try {
					window.URL.revokeObjectURL(this._wrk), this._wrk = null
				} catch(b) {}
				a || this.element.empty(), this.teardown()
			},
			teardown: function() {
				this.unbind(), this.element.removeClass("jstree").removeData("jstree").find("[class^='jstree']").addBack().attr("class", function() {
					return this.className.replace(/jstree[^ ]*|$/gi, "")
				}), this.element = null
			},
			bind: function() {
				var b = "",
					c = null,
					d = 0;
				this.element.on("dblclick.jstree", function() {
					if(i.selection && i.selection.empty) i.selection.empty();
					else if(window.getSelection) {
						var a = window.getSelection();
						try {
							a.removeAllRanges(), a.collapse()
						} catch(b) {}
					}
				}).on("mousedown.jstree", a.proxy(function(a) {
					a.target === this.element[0] && (a.preventDefault(), d = +new Date)
				}, this)).on("mousedown.jstree", ".jstree-ocl", function(a) {
					a.preventDefault()
				}).on("click.jstree", ".jstree-ocl", a.proxy(function(a) {
					this.toggle_node(a.target)
				}, this)).on("dblclick.jstree", ".jstree-anchor", a.proxy(function(a) {
					this.settings.core.dblclick_toggle && this.toggle_node(a.target)
				}, this)).on("click.jstree", ".jstree-anchor", a.proxy(function(b) {
					b.preventDefault(), b.currentTarget !== i.activeElement && a(b.currentTarget).focus(), this.activate_node(b.currentTarget, b)
				}, this)).on("keydown.jstree", ".jstree-anchor", a.proxy(function(b) {
					if("INPUT" === b.target.tagName) return !0;
					if(32 !== b.which && 13 !== b.which && (b.shiftKey || b.ctrlKey || b.altKey || b.metaKey)) return !0;
					var c = null;
					switch(this._data.core.rtl && (37 === b.which ? b.which = 39 : 39 === b.which && (b.which = 37)), b.which) {
						case 32:
							b.ctrlKey && (b.type = "click", a(b.currentTarget).trigger(b));
							break;
						case 13:
							b.type = "click", a(b.currentTarget).trigger(b);
							break;
						case 37:
							b.preventDefault(), this.is_open(b.currentTarget) ? this.close_node(b.currentTarget) : (c = this.get_parent(b.currentTarget), c && "#" !== c.id && this.get_node(c, !0).children(".jstree-anchor").focus());
							break;
						case 38:
							b.preventDefault(), c = this.get_prev_dom(b.currentTarget), c && c.length && c.children(".jstree-anchor").focus();
							break;
						case 39:
							b.preventDefault(), this.is_closed(b.currentTarget) ? this.open_node(b.currentTarget, function(a) {
								this.get_node(a, !0).children(".jstree-anchor").focus()
							}) : this.is_open(b.currentTarget) && (c = this.get_node(b.currentTarget, !0).children(".jstree-children")[0], c && a(this._firstChild(c)).children(".jstree-anchor").focus());
							break;
						case 40:
							b.preventDefault(), c = this.get_next_dom(b.currentTarget), c && c.length && c.children(".jstree-anchor").focus();
							break;
						case 106:
							this.open_all();
							break;
						case 36:
							b.preventDefault(), c = this._firstChild(this.get_container_ul()[0]), c && a(c).children(".jstree-anchor").filter(":visible").focus();
							break;
						case 35:
							b.preventDefault(), this.element.find(".jstree-anchor").filter(":visible").last().focus()
					}
				}, this)).on("load_node.jstree", a.proxy(function(b, c) {
					c.status && ("#" !== c.node.id || this._data.core.loaded || (this._data.core.loaded = !0, this._firstChild(this.get_container_ul()[0]) && this.element.attr("aria-activedescendant", this._firstChild(this.get_container_ul()[0]).id), this.trigger("loaded")), this._data.core.ready || setTimeout(a.proxy(function() {
						if(!this.get_container_ul().find(".jstree-loading").length) {
							if(this._data.core.ready = !0, this._data.core.selected.length) {
								if(this.settings.core.expand_selected_onload) {
									var b = [],
										c, d;
									for(c = 0, d = this._data.core.selected.length; d > c; c++) b = b.concat(this._model.data[this._data.core.selected[c]].parents);
									for(b = a.vakata.array_unique(b), c = 0, d = b.length; d > c; c++) this.open_node(b[c], !1, 0)
								}
								this.trigger("changed", {
									action: "ready",
									selected: this._data.core.selected
								})
							}
							this.trigger("ready")
						}
					}, this), 0))
				}, this)).on("keypress.jstree", a.proxy(function(d) {
					if("INPUT" === d.target.tagName) return !0;
					c && clearTimeout(c), c = setTimeout(function() {
						b = ""
					}, 500);
					var e = String.fromCharCode(d.which).toLowerCase(),
						f = this.element.find(".jstree-anchor").filter(":visible"),
						g = f.index(i.activeElement) || 0,
						h = !1;
					if(b += e, b.length > 1) {
						if(f.slice(g).each(a.proxy(function(c, d) {
								return 0 === a(d).text().toLowerCase().indexOf(b) ? (a(d).focus(), h = !0, !1) : void 0
							}, this)), h) return;
						if(f.slice(0, g).each(a.proxy(function(c, d) {
								return 0 === a(d).text().toLowerCase().indexOf(b) ? (a(d).focus(), h = !0, !1) : void 0
							}, this)), h) return
					}
					if(new RegExp("^" + e + "+$").test(b)) {
						if(f.slice(g + 1).each(a.proxy(function(b, c) {
								return a(c).text().toLowerCase().charAt(0) === e ? (a(c).focus(), h = !0, !1) : void 0
							}, this)), h) return;
						if(f.slice(0, g + 1).each(a.proxy(function(b, c) {
								return a(c).text().toLowerCase().charAt(0) === e ? (a(c).focus(), h = !0, !1) : void 0
							}, this)), h) return
					}
				}, this)).on("init.jstree", a.proxy(function() {
					var a = this.settings.core.themes;
					this._data.core.themes.dots = a.dots, this._data.core.themes.stripes = a.stripes, this._data.core.themes.icons = a.icons, this.set_theme(a.name || "default", a.url), this.set_theme_variant(a.variant)
				}, this)).on("loading.jstree", a.proxy(function() {
					this[this._data.core.themes.dots ? "show_dots" : "hide_dots"](), this[this._data.core.themes.icons ? "show_icons" : "hide_icons"](), this[this._data.core.themes.stripes ? "show_stripes" : "hide_stripes"]()
				}, this)).on("blur.jstree", ".jstree-anchor", a.proxy(function(b) {
					this._data.core.focused = null, a(b.currentTarget).filter(".jstree-hovered").mouseleave(), this.element.attr("tabindex", "0")
				}, this)).on("focus.jstree", ".jstree-anchor", a.proxy(function(b) {
					var c = this.get_node(b.currentTarget);
					c && c.id && (this._data.core.focused = c.id), this.element.find(".jstree-hovered").not(b.currentTarget).mouseleave(), a(b.currentTarget).mouseenter(), this.element.attr("tabindex", "-1")
				}, this)).on("focus.jstree", a.proxy(function() {
					+new Date - d > 500 && !this._data.core.focused && (d = 0, this.get_node(this.element.attr("aria-activedescendant"), !0).find("> .jstree-anchor").focus())
				}, this)).on("mouseenter.jstree", ".jstree-anchor", a.proxy(function(a) {
					this.hover_node(a.currentTarget)
				}, this)).on("mouseleave.jstree", ".jstree-anchor", a.proxy(function(a) {
					this.dehover_node(a.currentTarget)
				}, this))
			},
			unbind: function() {
				this.element.off(".jstree"), a(i).off(".jstree-" + this._id)
			},
			trigger: function(a, b) {
				b || (b = {}), b.instance = this, this.element.triggerHandler(a.replace(".jstree", "") + ".jstree", b)
			},
			get_container: function() {
				return this.element
			},
			get_container_ul: function() {
				return this.element.children(".jstree-children").first()
			},
			get_string: function(b) {
				var c = this.settings.core.strings;
				return a.isFunction(c) ? c.call(this, b) : c && c[b] ? c[b] : b
			},
			_firstChild: function(a) {
				a = a ? a.firstChild : null;
				while(null !== a && 1 !== a.nodeType) a = a.nextSibling;
				return a
			},
			_nextSibling: function(a) {
				a = a ? a.nextSibling : null;
				while(null !== a && 1 !== a.nodeType) a = a.nextSibling;
				return a
			},
			_previousSibling: function(a) {
				a = a ? a.previousSibling : null;
				while(null !== a && 1 !== a.nodeType) a = a.previousSibling;
				return a
			},
			get_node: function(b, c) {
				b && b.id && (b = b.id);
				var d;
				try {
					if(this._model.data[b]) b = this._model.data[b];
					else if("string" == typeof b && this._model.data[b.replace(/^#/, "")]) b = this._model.data[b.replace(/^#/, "")];
					else if("string" == typeof b && (d = a("#" + b.replace(a.jstree.idregex, "\\$&"), this.element)).length && this._model.data[d.closest(".jstree-node").attr("id")]) b = this._model.data[d.closest(".jstree-node").attr("id")];
					else if((d = a(b, this.element)).length && this._model.data[d.closest(".jstree-node").attr("id")]) b = this._model.data[d.closest(".jstree-node").attr("id")];
					else {
						if(!(d = a(b, this.element)).length || !d.hasClass("jstree")) return !1;
						b = this._model.data["#"]
					}
					return c && (b = "#" === b.id ? this.element : a("#" + b.id.replace(a.jstree.idregex, "\\$&"), this.element)), b
				} catch(e) {
					return !1
				}
			},
			get_path: function(a, b, c) {
				if(a = a.parents ? a : this.get_node(a), !a || "#" === a.id || !a.parents) return !1;
				var d, e, f = [];
				for(f.push(c ? a.id : a.text), d = 0, e = a.parents.length; e > d; d++) f.push(c ? a.parents[d] : this.get_text(a.parents[d]));
				return f = f.reverse().slice(1), b ? f.join(b) : f
			},
			get_next_dom: function(b, c) {
				var d;
				if(b = this.get_node(b, !0), b[0] === this.element[0]) {
					d = this._firstChild(this.get_container_ul()[0]);
					while(d && 0 === d.offsetHeight) d = this._nextSibling(d);
					return d ? a(d) : !1
				}
				if(!b || !b.length) return !1;
				if(c) {
					d = b[0];
					do d = this._nextSibling(d); while (d && 0 === d.offsetHeight);
					return d ? a(d) : !1
				}
				if(b.hasClass("jstree-open")) {
					d = this._firstChild(b.children(".jstree-children")[0]);
					while(d && 0 === d.offsetHeight) d = this._nextSibling(d);
					if(null !== d) return a(d)
				}
				d = b[0];
				do d = this._nextSibling(d); while (d && 0 === d.offsetHeight);
				return null !== d ? a(d) : b.parentsUntil(".jstree", ".jstree-node").nextAll(".jstree-node:visible").first()
			},
			get_prev_dom: function(b, c) {
				var d;
				if(b = this.get_node(b, !0), b[0] === this.element[0]) {
					d = this.get_container_ul()[0].lastChild;
					while(d && 0 === d.offsetHeight) d = this._previousSibling(d);
					return d ? a(d) : !1
				}
				if(!b || !b.length) return !1;
				if(c) {
					d = b[0];
					do d = this._previousSibling(d); while (d && 0 === d.offsetHeight);
					return d ? a(d) : !1
				}
				d = b[0];
				do d = this._previousSibling(d); while (d && 0 === d.offsetHeight);
				if(null !== d) {
					b = a(d);
					while(b.hasClass("jstree-open")) b = b.children(".jstree-children").first().children(".jstree-node:visible:last");
					return b
				}
				return d = b[0].parentNode.parentNode, d && d.className && -1 !== d.className.indexOf("jstree-node") ? a(d) : !1
			},
			get_parent: function(a) {
				return a = this.get_node(a), a && "#" !== a.id ? a.parent : !1
			},
			get_children_dom: function(a) {
				return a = this.get_node(a, !0), a[0] === this.element[0] ? this.get_container_ul().children(".jstree-node") : a && a.length ? a.children(".jstree-children").children(".jstree-node") : !1
			},
			is_parent: function(a) {
				return a = this.get_node(a), a && (a.state.loaded === !1 || a.children.length > 0)
			},
			is_loaded: function(a) {
				return a = this.get_node(a), a && a.state.loaded
			},
			is_loading: function(a) {
				return a = this.get_node(a), a && a.state && a.state.loading
			},
			is_open: function(a) {
				return a = this.get_node(a), a && a.state.opened
			},
			is_closed: function(a) {
				return a = this.get_node(a), a && this.is_parent(a) && !a.state.opened
			},
			is_leaf: function(a) {
				return !this.is_parent(a)
			},
			load_node: function(b, c) {
				var d, e, f, g, h;
				if(a.isArray(b)) return this._load_nodes(b.slice(), c), !0;
				if(b = this.get_node(b), !b) return c && c.call(this, b, !1), !1;
				if(b.state.loaded) {
					for(b.state.loaded = !1, d = 0, e = b.children_d.length; e > d; d++) {
						for(f = 0, g = b.parents.length; g > f; f++) this._model.data[b.parents[f]].children_d = a.vakata.array_remove_item(this._model.data[b.parents[f]].children_d, b.children_d[d]);
						this._model.data[b.children_d[d]].state.selected && (h = !0, this._data.core.selected = a.vakata.array_remove_item(this._data.core.selected, b.children_d[d])), delete this._model.data[b.children_d[d]]
					}
					b.children = [], b.children_d = [], h && this.trigger("changed", {
						action: "load_node",
						node: b,
						selected: this._data.core.selected
					})
				}
				return b.state.failed = !1, b.state.loading = !0, this.get_node(b, !0).addClass("jstree-loading").attr("aria-busy", !0), this._load_node(b, a.proxy(function(a) {
					b = this._model.data[b.id], b.state.loading = !1, b.state.loaded = a, b.state.failed = !b.state.loaded;
					var d = this.get_node(b, !0);
					b.state.loaded && !b.children.length && d && d.length && !d.hasClass("jstree-leaf") && d.removeClass("jstree-closed jstree-open").addClass("jstree-leaf"), d.removeClass("jstree-loading").attr("aria-busy", !1), this.trigger("load_node", {
						node: b,
						status: a
					}), c && c.call(this, b, a)
				}, this)), !0
			},
			_load_nodes: function(a, b, c) {
				var d = !0,
					e = function() {
						this._load_nodes(a, b, !0)
					},
					f = this._model.data,
					g, h, i = [];
				for(g = 0, h = a.length; h > g; g++) !f[a[g]] || (f[a[g]].state.loaded || f[a[g]].state.failed) && c || (this.is_loading(a[g]) || this.load_node(a[g], e), d = !1);
				if(d) {
					for(g = 0, h = a.length; h > g; g++) f[a[g]] && f[a[g]].state.loaded && i.push(a[g]);
					b && !b.done && (b.call(this, i), b.done = !0)
				}
			},
			load_all: function(a, b) {
				if(a || (a = "#"), a = this.get_node(a), !a) return !1;
				var c = [],
					d = this._model.data,
					e = d[a.id].children_d,
					f, g;
				for(a.state && !a.state.loaded && c.push(a.id), f = 0, g = e.length; g > f; f++) d[e[f]] && d[e[f]].state && !d[e[f]].state.loaded && c.push(e[f]);
				c.length ? this._load_nodes(c, function() {
					this.load_all(a, b)
				}) : (b && b.call(this, a), this.trigger("load_all", {
					node: a
				}))
			},
			_load_node: function(b, c) {
				var d = this.settings.core.data,
					e;
				return d ? a.isFunction(d) ? d.call(this, b, a.proxy(function(d) {
					d === !1 && c.call(this, !1), this["string" == typeof d ? "_append_html_data" : "_append_json_data"](b, "string" == typeof d ? a(a.parseHTML(d)).filter(function() {
						return 3 !== this.nodeType
					}) : d, function(a) {
						c.call(this, a)
					})
				}, this)) : "object" == typeof d ? d.url ? (d = a.extend(!0, {}, d), a.isFunction(d.url) && (d.url = d.url.call(this, b)), a.isFunction(d.data) && (d.data = d.data.call(this, b)), a.ajax(d).done(a.proxy(function(d, e, f) {
					var g = f.getResponseHeader("Content-Type");
					return g && -1 !== g.indexOf("json") || "object" == typeof d ? this._append_json_data(b, d, function(a) {
						c.call(this, a)
					}) : g && -1 !== g.indexOf("html") || "string" == typeof d ? this._append_html_data(b, a(a.parseHTML(d)).filter(function() {
						return 3 !== this.nodeType
					}), function(a) {
						c.call(this, a)
					}) : (this._data.core.last_error = {
						error: "ajax",
						plugin: "core",
						id: "core_04",
						reason: "Could not load node",
						data: JSON.stringify({
							id: b.id,
							xhr: f
						})
					}, this.settings.core.error.call(this, this._data.core.last_error), c.call(this, !1))
				}, this)).fail(a.proxy(function(a) {
					c.call(this, !1), this._data.core.last_error = {
						error: "ajax",
						plugin: "core",
						id: "core_04",
						reason: "Could not load node",
						data: JSON.stringify({
							id: b.id,
							xhr: a
						})
					}, this.settings.core.error.call(this, this._data.core.last_error)
				}, this))) : (e = a.isArray(d) || a.isPlainObject(d) ? JSON.parse(JSON.stringify(d)) : d, "#" === b.id ? this._append_json_data(b, e, function(a) {
					c.call(this, a)
				}) : (this._data.core.last_error = {
					error: "nodata",
					plugin: "core",
					id: "core_05",
					reason: "Could not load node",
					data: JSON.stringify({
						id: b.id
					})
				}, this.settings.core.error.call(this, this._data.core.last_error), c.call(this, !1))) : "string" == typeof d ? "#" === b.id ? this._append_html_data(b, a(a.parseHTML(d)).filter(function() {
					return 3 !== this.nodeType
				}), function(a) {
					c.call(this, a)
				}) : (this._data.core.last_error = {
					error: "nodata",
					plugin: "core",
					id: "core_06",
					reason: "Could not load node",
					data: JSON.stringify({
						id: b.id
					})
				}, this.settings.core.error.call(this, this._data.core.last_error), c.call(this, !1)) : c.call(this, !1) : "#" === b.id ? this._append_html_data(b, this._data.core.original_container_html.clone(!0), function(a) {
					c.call(this, a)
				}) : c.call(this, !1)
			},
			_node_changed: function(a) {
				a = this.get_node(a), a && this._model.changed.push(a.id)
			},
			_append_html_data: function(b, c, d) {
				b = this.get_node(b), b.children = [], b.children_d = [];
				var e = c.is("ul") ? c.children() : c,
					f = b.id,
					g = [],
					h = [],
					i = this._model.data,
					j = i[f],
					k = this._data.core.selected.length,
					l, m, n;
				for(e.each(a.proxy(function(b, c) {
						l = this._parse_model_from_html(a(c), f, j.parents.concat()), l && (g.push(l), h.push(l), i[l].children_d.length && (h = h.concat(i[l].children_d)))
					}, this)), j.children = g, j.children_d = h, m = 0, n = j.parents.length; n > m; m++) i[j.parents[m]].children_d = i[j.parents[m]].children_d.concat(h);
				this.trigger("model", {
					nodes: h,
					parent: f
				}), "#" !== f ? (this._node_changed(f), this.redraw()) : (this.get_container_ul().children(".jstree-initial-node").remove(), this.redraw(!0)), this._data.core.selected.length !== k && this.trigger("changed", {
					action: "model",
					selected: this._data.core.selected
				}), d.call(this, !0)
			},
			_append_json_data: function(b, c, d, e) {
				b = this.get_node(b), b.children = [], b.children_d = [], c.d && (c = c.d, "string" == typeof c && (c = JSON.parse(c))), a.isArray(c) || (c = [c]);
				var f = null,
					g = {
						df: this._model.default_state,
						dat: c,
						par: b.id,
						m: this._model.data,
						t_id: this._id,
						t_cnt: this._cnt,
						sel: this._data.core.selected
					},
					h = function(a, b) {
						a.data && (a = a.data);
						var c = a.dat,
							d = a.par,
							e = [],
							f = [],
							g = [],
							h = a.df,
							i = a.t_id,
							j = a.t_cnt,
							k = a.m,
							l = k[d],
							m = a.sel,
							n, o, p, q, r = function(a, c, d) {
								d = d ? d.concat() : [], c && d.unshift(c);
								var e = a.id.toString(),
									f, i, j, l, m = {
										id: e,
										text: a.text || "",
										icon: a.icon !== b ? a.icon : !0,
										parent: c,
										parents: d,
										children: a.children || [],
										children_d: a.children_d || [],
										data: a.data,
										state: {},
										li_attr: {
											id: !1
										},
										a_attr: {
											href: "#"
										},
										original: !1
									};
								for(f in h) h.hasOwnProperty(f) && (m.state[f] = h[f]);
								if(a && a.data && a.data.jstree && a.data.jstree.icon && (m.icon = a.data.jstree.icon), (m.icon === b || null === m.icon || "" === m.icon) && (m.icon = !0), a && a.data && (m.data = a.data, a.data.jstree))
									for(f in a.data.jstree) a.data.jstree.hasOwnProperty(f) && (m.state[f] = a.data.jstree[f]);
								if(a && "object" == typeof a.state)
									for(f in a.state) a.state.hasOwnProperty(f) && (m.state[f] = a.state[f]);
								if(a && "object" == typeof a.li_attr)
									for(f in a.li_attr) a.li_attr.hasOwnProperty(f) && (m.li_attr[f] = a.li_attr[f]);
								if(m.li_attr.id || (m.li_attr.id = e), a && "object" == typeof a.a_attr)
									for(f in a.a_attr) a.a_attr.hasOwnProperty(f) && (m.a_attr[f] = a.a_attr[f]);
								for(a && a.children && a.children === !0 && (m.state.loaded = !1, m.children = [], m.children_d = []), k[m.id] = m, f = 0, i = m.children.length; i > f; f++) j = r(k[m.children[f]], m.id, d), l = k[j], m.children_d.push(j), l.children_d.length && (m.children_d = m.children_d.concat(l.children_d));
								return delete a.data, delete a.children, k[m.id].original = a, m.state.selected && g.push(m.id), m.id
							},
							s = function(a, c, d) {
								d = d ? d.concat() : [], c && d.unshift(c);
								var e = !1,
									f, l, m, n, o;
								do e = "j" + i + "_" + ++j; while (k[e]);
								o = {
									id: !1,
									text: "string" == typeof a ? a : "",
									icon: "object" == typeof a && a.icon !== b ? a.icon : !0,
									parent: c,
									parents: d,
									children: [],
									children_d: [],
									data: null,
									state: {},
									li_attr: {
										id: !1
									},
									a_attr: {
										href: "#"
									},
									original: !1
								};
								for(f in h) h.hasOwnProperty(f) && (o.state[f] = h[f]);
								if(a && a.id && (o.id = a.id.toString()), a && a.text && (o.text = a.text), a && a.data && a.data.jstree && a.data.jstree.icon && (o.icon = a.data.jstree.icon), (o.icon === b || null === o.icon || "" === o.icon) && (o.icon = !0), a && a.data && (o.data = a.data, a.data.jstree))
									for(f in a.data.jstree) a.data.jstree.hasOwnProperty(f) && (o.state[f] = a.data.jstree[f]);
								if(a && "object" == typeof a.state)
									for(f in a.state) a.state.hasOwnProperty(f) && (o.state[f] = a.state[f]);
								if(a && "object" == typeof a.li_attr)
									for(f in a.li_attr) a.li_attr.hasOwnProperty(f) && (o.li_attr[f] = a.li_attr[f]);
								if(o.li_attr.id && !o.id && (o.id = o.li_attr.id.toString()), o.id || (o.id = e), o.li_attr.id || (o.li_attr.id = o.id), a && "object" == typeof a.a_attr)
									for(f in a.a_attr) a.a_attr.hasOwnProperty(f) && (o.a_attr[f] = a.a_attr[f]);
								if(a && a.children && a.children.length) {
									for(f = 0, l = a.children.length; l > f; f++) m = s(a.children[f], o.id, d), n = k[m], o.children.push(m), n.children_d.length && (o.children_d = o.children_d.concat(n.children_d));
									o.children_d = o.children_d.concat(o.children)
								}
								return a && a.children && a.children === !0 && (o.state.loaded = !1, o.children = [], o.children_d = []), delete a.data, delete a.children, o.original = a, k[o.id] = o, o.state.selected && g.push(o.id), o.id
							};
						if(c.length && c[0].id !== b && c[0].parent !== b) {
							for(o = 0, p = c.length; p > o; o++) c[o].children || (c[o].children = []), k[c[o].id.toString()] = c[o];
							for(o = 0, p = c.length; p > o; o++) k[c[o].parent.toString()].children.push(c[o].id.toString()), l.children_d.push(c[o].id.toString());
							for(o = 0, p = l.children.length; p > o; o++) n = r(k[l.children[o]], d, l.parents.concat()), f.push(n), k[n].children_d.length && (f = f.concat(k[n].children_d));
							for(o = 0, p = l.parents.length; p > o; o++) k[l.parents[o]].children_d = k[l.parents[o]].children_d.concat(f);
							q = {
								cnt: j,
								mod: k,
								sel: m,
								par: d,
								dpc: f,
								add: g
							}
						} else {
							for(o = 0, p = c.length; p > o; o++) n = s(c[o], d, l.parents.concat()), n && (e.push(n), f.push(n), k[n].children_d.length && (f = f.concat(k[n].children_d)));
							for(l.children = e, l.children_d = f, o = 0, p = l.parents.length; p > o; o++) k[l.parents[o]].children_d = k[l.parents[o]].children_d.concat(f);
							q = {
								cnt: j,
								mod: k,
								sel: m,
								par: d,
								dpc: f,
								add: g
							}
						}
						return "undefined" != typeof window && "undefined" != typeof window.document ? q : void postMessage(q)
					},
					i = function(b, c) {
						if(this._cnt = b.cnt, this._model.data = b.mod, c) {
							var e, f, g = b.add,
								h = b.sel,
								i = this._data.core.selected.slice(),
								j = this._model.data;
							if(h.length !== i.length || a.vakata.array_unique(h.concat(i)).length !== h.length) {
								for(e = 0, f = h.length; f > e; e++) - 1 === a.inArray(h[e], g) && -1 === a.inArray(h[e], i) && (j[h[e]].state.selected = !1);
								for(e = 0, f = i.length; f > e; e++) - 1 === a.inArray(i[e], h) && (j[i[e]].state.selected = !0)
							}
						}
						b.add.length && (this._data.core.selected = this._data.core.selected.concat(b.add)), this.trigger("model", {
							nodes: b.dpc,
							parent: b.par
						}), "#" !== b.par ? (this._node_changed(b.par), this.redraw()) : this.redraw(!0), b.add.length && this.trigger("changed", {
							action: "model",
							selected: this._data.core.selected
						}), d.call(this, !0)
					};
				if(this.settings.core.worker && window.Blob && window.URL && window.Worker) try {
					null === this._wrk && (this._wrk = window.URL.createObjectURL(new window.Blob(["self.onmessage = " + h.toString()], {
						type: "text/javascript"
					}))), !this._data.core.working || e ? (this._data.core.working = !0, f = new window.Worker(this._wrk), f.onmessage = a.proxy(function(a) {
						i.call(this, a.data, !0);
						try {
							f.terminate(), f = null
						} catch(b) {}
						this._data.core.worker_queue.length ? this._append_json_data.apply(this, this._data.core.worker_queue.shift()) : this._data.core.working = !1
					}, this), g.par ? f.postMessage(g) : this._data.core.worker_queue.length ? this._append_json_data.apply(this, this._data.core.worker_queue.shift()) : this._data.core.working = !1) : this._data.core.worker_queue.push([b, c, d, !0])
				} catch(j) {
					i.call(this, h(g), !1), this._data.core.worker_queue.length ? this._append_json_data.apply(this, this._data.core.worker_queue.shift()) : this._data.core.working = !1
				} else i.call(this, h(g), !1)
			},
			_parse_model_from_html: function(c, d, e) {
				e = e ? [].concat(e) : [], d && e.unshift(d);
				var f, g, h = this._model.data,
					i = {
						id: !1,
						text: !1,
						icon: !0,
						parent: d,
						parents: e,
						children: [],
						children_d: [],
						data: null,
						state: {},
						li_attr: {
							id: !1
						},
						a_attr: {
							href: "#"
						},
						original: !1
					},
					j, k, l;
				for(j in this._model.default_state) this._model.default_state.hasOwnProperty(j) && (i.state[j] = this._model.default_state[j]);
				if(k = a.vakata.attributes(c, !0), a.each(k, function(b, c) {
						return c = a.trim(c), c.length ? (i.li_attr[b] = c, void("id" === b && (i.id = c.toString()))) : !0
					}), k = c.children("a").first(), k.length && (k = a.vakata.attributes(k, !0), a.each(k, function(b, c) {
						c = a.trim(c), c.length && (i.a_attr[b] = c)
					})), k = c.children("a").first().length ? c.children("a").first().clone() : c.clone(), k.children("ins, i, ul").remove(), k = k.html(), k = a("<div />").html(k), i.text = this.settings.core.force_text ? k.text() : k.html(), k = c.data(), i.data = k ? a.extend(!0, {}, k) : null, i.state.opened = c.hasClass("jstree-open"), i.state.selected = c.children("a").hasClass("jstree-clicked"), i.state.disabled = c.children("a").hasClass("jstree-disabled"), i.data && i.data.jstree)
					for(j in i.data.jstree) i.data.jstree.hasOwnProperty(j) && (i.state[j] = i.data.jstree[j]);
				k = c.children("a").children(".jstree-themeicon"), k.length && (i.icon = k.hasClass("jstree-themeicon-hidden") ? !1 : k.attr("rel")), i.state.icon && (i.icon = i.state.icon), (i.icon === b || null === i.icon || "" === i.icon) && (i.icon = !0), k = c.children("ul").children("li");
				do l = "j" + this._id + "_" + ++this._cnt; while (h[l]);
				return i.id = i.li_attr.id ? i.li_attr.id.toString() : l, k.length ? (k.each(a.proxy(function(b, c) {
					f = this._parse_model_from_html(a(c), i.id, e), g = this._model.data[f], i.children.push(f), g.children_d.length && (i.children_d = i.children_d.concat(g.children_d))
				}, this)), i.children_d = i.children_d.concat(i.children)) : c.hasClass("jstree-closed") && (i.state.loaded = !1), i.li_attr["class"] && (i.li_attr["class"] = i.li_attr["class"].replace("jstree-closed", "").replace("jstree-open", "")), i.a_attr["class"] && (i.a_attr["class"] = i.a_attr["class"].replace("jstree-clicked", "").replace("jstree-disabled", "")), h[i.id] = i, i.state.selected && this._data.core.selected.push(i.id), i.id
			},
			_parse_model_from_flat_json: function(a, c, d) {
				d = d ? d.concat() : [], c && d.unshift(c);
				var e = a.id.toString(),
					f = this._model.data,
					g = this._model.default_state,
					h, i, j, k, l = {
						id: e,
						text: a.text || "",
						icon: a.icon !== b ? a.icon : !0,
						parent: c,
						parents: d,
						children: a.children || [],
						children_d: a.children_d || [],
						data: a.data,
						state: {},
						li_attr: {
							id: !1
						},
						a_attr: {
							href: "#"
						},
						original: !1
					};
				for(h in g) g.hasOwnProperty(h) && (l.state[h] = g[h]);
				if(a && a.data && a.data.jstree && a.data.jstree.icon && (l.icon = a.data.jstree.icon), (l.icon === b || null === l.icon || "" === l.icon) && (l.icon = !0), a && a.data && (l.data = a.data, a.data.jstree))
					for(h in a.data.jstree) a.data.jstree.hasOwnProperty(h) && (l.state[h] = a.data.jstree[h]);
				if(a && "object" == typeof a.state)
					for(h in a.state) a.state.hasOwnProperty(h) && (l.state[h] = a.state[h]);
				if(a && "object" == typeof a.li_attr)
					for(h in a.li_attr) a.li_attr.hasOwnProperty(h) && (l.li_attr[h] = a.li_attr[h]);
				if(l.li_attr.id || (l.li_attr.id = e), a && "object" == typeof a.a_attr)
					for(h in a.a_attr) a.a_attr.hasOwnProperty(h) && (l.a_attr[h] = a.a_attr[h]);
				for(a && a.children && a.children === !0 && (l.state.loaded = !1, l.children = [], l.children_d = []), f[l.id] = l, h = 0, i = l.children.length; i > h; h++) j = this._parse_model_from_flat_json(f[l.children[h]], l.id, d), k = f[j], l.children_d.push(j), k.children_d.length && (l.children_d = l.children_d.concat(k.children_d));
				return delete a.data, delete a.children, f[l.id].original = a, l.state.selected && this._data.core.selected.push(l.id), l.id
			},
			_parse_model_from_json: function(a, c, d) {
				d = d ? d.concat() : [], c && d.unshift(c);
				var e = !1,
					f, g, h, i, j = this._model.data,
					k = this._model.default_state,
					l;
				do e = "j" + this._id + "_" + ++this._cnt; while (j[e]);
				l = {
					id: !1,
					text: "string" == typeof a ? a : "",
					icon: "object" == typeof a && a.icon !== b ? a.icon : !0,
					parent: c,
					parents: d,
					children: [],
					children_d: [],
					data: null,
					state: {},
					li_attr: {
						id: !1
					},
					a_attr: {
						href: "#"
					},
					original: !1
				};
				for(f in k) k.hasOwnProperty(f) && (l.state[f] = k[f]);
				if(a && a.id && (l.id = a.id.toString()), a && a.text && (l.text = a.text), a && a.data && a.data.jstree && a.data.jstree.icon && (l.icon = a.data.jstree.icon), (l.icon === b || null === l.icon || "" === l.icon) && (l.icon = !0), a && a.data && (l.data = a.data, a.data.jstree))
					for(f in a.data.jstree) a.data.jstree.hasOwnProperty(f) && (l.state[f] = a.data.jstree[f]);
				if(a && "object" == typeof a.state)
					for(f in a.state) a.state.hasOwnProperty(f) && (l.state[f] = a.state[f]);
				if(a && "object" == typeof a.li_attr)
					for(f in a.li_attr) a.li_attr.hasOwnProperty(f) && (l.li_attr[f] = a.li_attr[f]);
				if(l.li_attr.id && !l.id && (l.id = l.li_attr.id.toString()), l.id || (l.id = e), l.li_attr.id || (l.li_attr.id = l.id), a && "object" == typeof a.a_attr)
					for(f in a.a_attr) a.a_attr.hasOwnProperty(f) && (l.a_attr[f] = a.a_attr[f]);
				if(a && a.children && a.children.length) {
					for(f = 0, g = a.children.length; g > f; f++) h = this._parse_model_from_json(a.children[f], l.id, d), i = j[h], l.children.push(h), i.children_d.length && (l.children_d = l.children_d.concat(i.children_d));
					l.children_d = l.children_d.concat(l.children)
				}
				return a && a.children && a.children === !0 && (l.state.loaded = !1, l.children = [], l.children_d = []), delete a.data, delete a.children, l.original = a, j[l.id] = l, l.state.selected && this._data.core.selected.push(l.id), l.id
			},
			_redraw: function() {
				var a = this._model.force_full_redraw ? this._model.data["#"].children.concat([]) : this._model.changed.concat([]),
					b = i.createElement("UL"),
					c, d, e, f = this._data.core.focused;
				for(d = 0, e = a.length; e > d; d++) c = this.redraw_node(a[d], !0, this._model.force_full_redraw), c && this._model.force_full_redraw && b.appendChild(c);
				this._model.force_full_redraw && (b.className = this.get_container_ul()[0].className, b.setAttribute("role", "group"), this.element.empty().append(b)), null !== f && (c = this.get_node(f, !0), c && c.length && c.children(".jstree-anchor")[0] !== i.activeElement ? c.children(".jstree-anchor").focus() : this._data.core.focused = null), this._model.force_full_redraw = !1, this._model.changed = [], this.trigger("redraw", {
					nodes: a
				})
			},
			redraw: function(a) {
				a && (this._model.force_full_redraw = !0), this._redraw()
			},
			draw_children: function(a) {
				var b = this.get_node(a),
					c = !1,
					d = !1,
					e = !1,
					f = i;
				if(!b) return !1;
				if("#" === b.id) return this.redraw(!0);
				if(a = this.get_node(a, !0), !a || !a.length) return !1;
				if(a.children(".jstree-children").remove(), a = a[0], b.children.length && b.state.loaded) {
					for(e = f.createElement("UL"), e.setAttribute("role", "group"), e.className = "jstree-children", c = 0, d = b.children.length; d > c; c++) e.appendChild(this.redraw_node(b.children[c], !0, !0));
					a.appendChild(e)
				}
			},
			redraw_node: function(b, c, d, e) {
				var f = this.get_node(b),
					g = !1,
					h = !1,
					k = !1,
					l = !1,
					m = !1,
					n = !1,
					o = "",
					p = i,
					q = this._model.data,
					r = !1,
					s = !1,
					t = null,
					u = 0,
					v = 0;
				if(!f) return !1;
				if("#" === f.id) return this.redraw(!0);
				if(c = c || 0 === f.children.length, b = i.querySelector ? this.element[0].querySelector("#" + (-1 !== "0123456789".indexOf(f.id[0]) ? "\\3" + f.id[0] + " " + f.id.substr(1).replace(a.jstree.idregex, "\\$&") : f.id.replace(a.jstree.idregex, "\\$&"))) : i.getElementById(f.id)) b = a(b), d || (g = b.parent().parent()[0], g === this.element[0] && (g = null), h = b.index()), c || !f.children.length || b.children(".jstree-children").length || (c = !0), c || (k = b.children(".jstree-children")[0]), r = b.children(".jstree-anchor")[0] === i.activeElement, b.remove();
				else if(c = !0, !d) {
					if(g = "#" !== f.parent ? a("#" + f.parent.replace(a.jstree.idregex, "\\$&"), this.element)[0] : null, !(null === g || g && q[f.parent].state.opened)) return !1;
					h = a.inArray(f.id, null === g ? q["#"].children : q[f.parent].children)
				}
				b = j.cloneNode(!0), o = "jstree-node ";
				for(l in f.li_attr)
					if(f.li_attr.hasOwnProperty(l)) {
						if("id" === l) continue;
						"class" !== l ? b.setAttribute(l, f.li_attr[l]) : o += f.li_attr[l]
					}
				f.a_attr.id || (f.a_attr.id = f.id + "_anchor"), b.setAttribute("aria-selected", !!f.state.selected), b.setAttribute("aria-level", f.parents.length), b.setAttribute("aria-labelledby", f.a_attr.id), f.state.disabled && b.setAttribute("aria-disabled", !0), f.state.loaded && !f.children.length ? o += " jstree-leaf" : (o += f.state.opened && f.state.loaded ? " jstree-open" : " jstree-closed", b.setAttribute("aria-expanded", f.state.opened && f.state.loaded)), null !== f.parent && q[f.parent].children[q[f.parent].children.length - 1] === f.id && (o += " jstree-last"), b.id = f.id, b.className = o, o = (f.state.selected ? " jstree-clicked" : "") + (f.state.disabled ? " jstree-disabled" : "");
				for(m in f.a_attr)
					if(f.a_attr.hasOwnProperty(m)) {
						if("href" === m && "#" === f.a_attr[m]) continue;
						"class" !== m ? b.childNodes[1].setAttribute(m, f.a_attr[m]) : o += " " + f.a_attr[m]
					}
				if(o.length && (b.childNodes[1].className = "jstree-anchor " + o), (f.icon && f.icon !== !0 || f.icon === !1) && (f.icon === !1 ? b.childNodes[1].childNodes[0].className += " jstree-themeicon-hidden" : -1 === f.icon.indexOf("/") && -1 === f.icon.indexOf(".") ? b.childNodes[1].childNodes[0].className += " " + f.icon + " jstree-themeicon-custom" : (b.childNodes[1].childNodes[0].style.backgroundImage = "url(" + f.icon + ")", b.childNodes[1].childNodes[0].style.backgroundPosition = "center center", b.childNodes[1].childNodes[0].style.backgroundSize = "auto", b.childNodes[1].childNodes[0].className += " jstree-themeicon-custom")), this.settings.core.force_text ? b.childNodes[1].appendChild(p.createTextNode(f.text)) : b.childNodes[1].innerHTML += f.text, c && f.children.length && (f.state.opened || e) && f.state.loaded) {
					for(n = p.createElement("UL"), n.setAttribute("role", "group"), n.className = "jstree-children", l = 0, m = f.children.length; m > l; l++) n.appendChild(this.redraw_node(f.children[l], c, !0));
					b.appendChild(n)
				}
				if(k && b.appendChild(k), !d) {
					for(g || (g = this.element[0]), l = 0, m = g.childNodes.length; m > l; l++)
						if(g.childNodes[l] && g.childNodes[l].className && -1 !== g.childNodes[l].className.indexOf("jstree-children")) {
							t = g.childNodes[l];
							break
						}
					t || (t = p.createElement("UL"), t.setAttribute("role", "group"), t.className = "jstree-children", g.appendChild(t)), g = t, h < g.childNodes.length ? g.insertBefore(b, g.childNodes[h]) : g.appendChild(b), r && (u = this.element[0].scrollTop, v = this.element[0].scrollLeft, b.childNodes[1].focus(), this.element[0].scrollTop = u, this.element[0].scrollLeft = v)
				}
				return f.state.opened && !f.state.loaded && (f.state.opened = !1, setTimeout(a.proxy(function() {
					this.open_node(f.id, !1, 0)
				}, this), 0)), b
			},
			open_node: function(c, d, e) {
				var f, g, h, i;
				if(a.isArray(c)) {
					for(c = c.slice(), f = 0, g = c.length; g > f; f++) this.open_node(c[f], d, e);
					return !0
				}
				if(c = this.get_node(c), !c || "#" === c.id) return !1;
				if(e = e === b ? this.settings.core.animation : e, !this.is_closed(c)) return d && d.call(this, c, !1), !1;
				if(this.is_loaded(c)) h = this.get_node(c, !0), i = this, h.length && (e && h.children(".jstree-children").length && h.children(".jstree-children").stop(!0, !0), c.children.length && !this._firstChild(h.children(".jstree-children")[0]) && this.draw_children(c), e ? (this.trigger("before_open", {
					node: c
				}), h.children(".jstree-children").css("display", "none").end().removeClass("jstree-closed").addClass("jstree-open").attr("aria-expanded", !0).children(".jstree-children").stop(!0, !0).slideDown(e, function() {
					this.style.display = "", i.trigger("after_open", {
						node: c
					})
				})) : (this.trigger("before_open", {
					node: c
				}), h[0].className = h[0].className.replace("jstree-closed", "jstree-open"), h[0].setAttribute("aria-expanded", !0))), c.state.opened = !0, d && d.call(this, c, !0), h.length || this.trigger("before_open", {
					node: c
				}), this.trigger("open_node", {
					node: c
				}), e && h.length || this.trigger("after_open", {
					node: c
				});
				else {
					if(this.is_loading(c)) return setTimeout(a.proxy(function() {
						this.open_node(c, d, e)
					}, this), 500);
					this.load_node(c, function(a, b) {
						return b ? this.open_node(a, d, e) : d ? d.call(this, a, !1) : !1
					})
				}
			},
			_open_to: function(b) {
				if(b = this.get_node(b), !b || "#" === b.id) return !1;
				var c, d, e = b.parents;
				for(c = 0, d = e.length; d > c; c += 1) "#" !== c && this.open_node(e[c], !1, 0);
				return a("#" + b.id.replace(a.jstree.idregex, "\\$&"), this.element)
			},
			close_node: function(c, d) {
				var e, f, g, h;
				if(a.isArray(c)) {
					for(c = c.slice(), e = 0, f = c.length; f > e; e++) this.close_node(c[e], d);
					return !0
				}
				return c = this.get_node(c), c && "#" !== c.id ? this.is_closed(c) ? !1 : (d = d === b ? this.settings.core.animation : d, g = this, h = this.get_node(c, !0), h.length && (d ? h.children(".jstree-children").attr("style", "display:block !important").end().removeClass("jstree-open").addClass("jstree-closed").attr("aria-expanded", !1).children(".jstree-children").stop(!0, !0).slideUp(d, function() {
					this.style.display = "", h.children(".jstree-children").remove(), g.trigger("after_close", {
						node: c
					})
				}) : (h[0].className = h[0].className.replace("jstree-open", "jstree-closed"), h.attr("aria-expanded", !1).children(".jstree-children").remove())), c.state.opened = !1, this.trigger("close_node", {
					node: c
				}), void(d && h.length || this.trigger("after_close", {
					node: c
				}))) : !1
			},
			toggle_node: function(b) {
				var c, d;
				if(a.isArray(b)) {
					for(b = b.slice(), c = 0, d = b.length; d > c; c++) this.toggle_node(b[c]);
					return !0
				}
				return this.is_closed(b) ? this.open_node(b) : this.is_open(b) ? this.close_node(b) : void 0
			},
			open_all: function(a, b, c) {
				if(a || (a = "#"), a = this.get_node(a), !a) return !1;
				var d = "#" === a.id ? this.get_container_ul() : this.get_node(a, !0),
					e, f, g;
				if(!d.length) {
					for(e = 0, f = a.children_d.length; f > e; e++) this.is_closed(this._model.data[a.children_d[e]]) && (this._model.data[a.children_d[e]].state.opened = !0);
					return this.trigger("open_all", {
						node: a
					})
				}
				c = c || d, g = this, d = this.is_closed(a) ? d.find(".jstree-closed").addBack() : d.find(".jstree-closed"), d.each(function() {
					g.open_node(this, function(a, d) {
						d && this.is_parent(a) && this.open_all(a, b, c)
					}, b || 0)
				}), 0 === c.find(".jstree-closed").length && this.trigger("open_all", {
					node: this.get_node(c)
				})
			},
			close_all: function(b, c) {
				if(b || (b = "#"), b = this.get_node(b), !b) return !1;
				var d = "#" === b.id ? this.get_container_ul() : this.get_node(b, !0),
					e = this,
					f, g;
				if(!d.length) {
					for(f = 0, g = b.children_d.length; g > f; f++) this._model.data[b.children_d[f]].state.opened = !1;
					return this.trigger("close_all", {
						node: b
					})
				}
				d = this.is_open(b) ? d.find(".jstree-open").addBack() : d.find(".jstree-open"), a(d.get().reverse()).each(function() {
					e.close_node(this, c || 0)
				}), this.trigger("close_all", {
					node: b
				})
			},
			is_disabled: function(a) {
				return a = this.get_node(a), a && a.state && a.state.disabled
			},
			enable_node: function(b) {
				var c, d;
				if(a.isArray(b)) {
					for(b = b.slice(), c = 0, d = b.length; d > c; c++) this.enable_node(b[c]);
					return !0
				}
				return b = this.get_node(b), b && "#" !== b.id ? (b.state.disabled = !1, this.get_node(b, !0).children(".jstree-anchor").removeClass("jstree-disabled").attr("aria-disabled", !1), void this.trigger("enable_node", {
					node: b
				})) : !1
			},
			disable_node: function(b) {
				var c, d;
				if(a.isArray(b)) {
					for(b = b.slice(), c = 0, d = b.length; d > c; c++) this.disable_node(b[c]);
					return !0
				}
				return b = this.get_node(b), b && "#" !== b.id ? (b.state.disabled = !0, this.get_node(b, !0).children(".jstree-anchor").addClass("jstree-disabled").attr("aria-disabled", !0), void this.trigger("disable_node", {
					node: b
				})) : !1
			},
			activate_node: function(a, c) {
				if(this.is_disabled(a)) return !1;
				if(this._data.core.last_clicked = this._data.core.last_clicked && this._data.core.last_clicked.id !== b ? this.get_node(this._data.core.last_clicked.id) : null, this._data.core.last_clicked && !this._data.core.last_clicked.state.selected && (this._data.core.last_clicked = null), !this._data.core.last_clicked && this._data.core.selected.length && (this._data.core.last_clicked = this.get_node(this._data.core.selected[this._data.core.selected.length - 1])), this.settings.core.multiple && (c.metaKey || c.ctrlKey || c.shiftKey) && (!c.shiftKey || this._data.core.last_clicked && this.get_parent(a) && this.get_parent(a) === this._data.core.last_clicked.parent))
					if(c.shiftKey) {
						var d = this.get_node(a).id,
							e = this._data.core.last_clicked.id,
							f = this.get_node(this._data.core.last_clicked.parent).children,
							g = !1,
							h, i;
						for(h = 0, i = f.length; i > h; h += 1) f[h] === d && (g = !g), f[h] === e && (g = !g), g || f[h] === d || f[h] === e ? this.select_node(f[h], !0, !1, c) : this.deselect_node(f[h], !0, c);
						this.trigger("changed", {
							action: "select_node",
							node: this.get_node(a),
							selected: this._data.core.selected,
							event: c
						})
					} else this.is_selected(a) ? this.deselect_node(a, !1, c) : this.select_node(a, !1, !1, c);
				else !this.settings.core.multiple && (c.metaKey || c.ctrlKey || c.shiftKey) && this.is_selected(a) ? this.deselect_node(a, !1, c) : (this.deselect_all(!0), this.select_node(a, !1, !1, c), this._data.core.last_clicked = this.get_node(a));
				this.trigger("activate_node", {
					node: this.get_node(a)
				})
			},
			hover_node: function(a) {
				if(a = this.get_node(a, !0), !a || !a.length || a.children(".jstree-hovered").length) return !1;
				var b = this.element.find(".jstree-hovered"),
					c = this.element;
				b && b.length && this.dehover_node(b), a.children(".jstree-anchor").addClass("jstree-hovered"), this.trigger("hover_node", {
					node: this.get_node(a)
				}), setTimeout(function() {
					c.attr("aria-activedescendant", a[0].id)
				}, 0)
			},
			dehover_node: function(a) {
				return a = this.get_node(a, !0), a && a.length && a.children(".jstree-hovered").length ? (a.children(".jstree-anchor").removeClass("jstree-hovered"), void this.trigger("dehover_node", {
					node: this.get_node(a)
				})) : !1
			},
			select_node: function(b, c, d, e) {
				var f, g, h, i;
				if(a.isArray(b)) {
					for(b = b.slice(), g = 0, h = b.length; h > g; g++) this.select_node(b[g], c, d, e);
					return !0
				}
				return b = this.get_node(b), b && "#" !== b.id ? (f = this.get_node(b, !0), void(b.state.selected || (b.state.selected = !0, this._data.core.selected.push(b.id), d || (f = this._open_to(b)), f && f.length && f.attr("aria-selected", !0).children(".jstree-anchor").addClass("jstree-clicked"), this.trigger("select_node", {
					node: b,
					selected: this._data.core.selected,
					event: e
				}), c || this.trigger("changed", {
					action: "select_node",
					node: b,
					selected: this._data.core.selected,
					event: e
				})))) : !1
			},
			deselect_node: function(b, c, d) {
				var e, f, g;
				if(a.isArray(b)) {
					for(b = b.slice(), e = 0, f = b.length; f > e; e++) this.deselect_node(b[e], c, d);
					return !0
				}
				return b = this.get_node(b), b && "#" !== b.id ? (g = this.get_node(b, !0), void(b.state.selected && (b.state.selected = !1, this._data.core.selected = a.vakata.array_remove_item(this._data.core.selected, b.id), g.length && g.attr("aria-selected", !1).children(".jstree-anchor").removeClass("jstree-clicked"), this.trigger("deselect_node", {
					node: b,
					selected: this._data.core.selected,
					event: d
				}), c || this.trigger("changed", {
					action: "deselect_node",
					node: b,
					selected: this._data.core.selected,
					event: d
				})))) : !1
			},
			select_all: function(a) {
				var b = this._data.core.selected.concat([]),
					c, d;
				for(this._data.core.selected = this._model.data["#"].children_d.concat(), c = 0, d = this._data.core.selected.length; d > c; c++) this._model.data[this._data.core.selected[c]] && (this._model.data[this._data.core.selected[c]].state.selected = !0);
				this.redraw(!0), this.trigger("select_all", {
					selected: this._data.core.selected
				}), a || this.trigger("changed", {
					action: "select_all",
					selected: this._data.core.selected,
					old_selection: b
				})
			},
			deselect_all: function(a) {
				var b = this._data.core.selected.concat([]),
					c, d;
				for(c = 0, d = this._data.core.selected.length; d > c; c++) this._model.data[this._data.core.selected[c]] && (this._model.data[this._data.core.selected[c]].state.selected = !1);
				this._data.core.selected = [], this.element.find(".jstree-clicked").removeClass("jstree-clicked").parent().attr("aria-selected", !1), this.trigger("deselect_all", {
					selected: this._data.core.selected,
					node: b
				}), a || this.trigger("changed", {
					action: "deselect_all",
					selected: this._data.core.selected,
					old_selection: b
				})
			},
			is_selected: function(a) {
				return a = this.get_node(a), a && "#" !== a.id ? a.state.selected : !1
			},
			get_selected: function(b) {
				return b ? a.map(this._data.core.selected, a.proxy(function(a) {
					return this.get_node(a)
				}, this)) : this._data.core.selected.slice()
			},
			get_top_selected: function(b) {
				var c = this.get_selected(!0),
					d = {},
					e, f, g, h;
				for(e = 0, f = c.length; f > e; e++) d[c[e].id] = c[e];
				for(e = 0, f = c.length; f > e; e++)
					for(g = 0, h = c[e].children_d.length; h > g; g++) d[c[e].children_d[g]] && delete d[c[e].children_d[g]];
				c = [];
				for(e in d) d.hasOwnProperty(e) && c.push(e);
				return b ? a.map(c, a.proxy(function(a) {
					return this.get_node(a)
				}, this)) : c
			},
			get_bottom_selected: function(b) {
				var c = this.get_selected(!0),
					d = [],
					e, f;
				for(e = 0, f = c.length; f > e; e++) c[e].children.length || d.push(c[e].id);
				return b ? a.map(d, a.proxy(function(a) {
					return this.get_node(a)
				}, this)) : d
			},
			get_state: function() {
				var a = {
						core: {
							open: [],
							scroll: {
								left: this.element.scrollLeft(),
								top: this.element.scrollTop()
							},
							selected: []
						}
					},
					b;
				for(b in this._model.data) this._model.data.hasOwnProperty(b) && "#" !== b && (this._model.data[b].state.opened && a.core.open.push(b), this._model.data[b].state.selected && a.core.selected.push(b));
				return a
			},
			set_state: function(c, d) {
				if(c) {
					if(c.core) {
						var e, f, g, h, i;
						if(c.core.open) return a.isArray(c.core.open) && c.core.open.length ? this._load_nodes(c.core.open, function(a) {
							this.open_node(a, !1, 0), delete c.core.open, this.set_state(c, d)
						}, !0) : (delete c.core.open, this.set_state(c, d)), !1;
						if(c.core.scroll) return c.core.scroll && c.core.scroll.left !== b && this.element.scrollLeft(c.core.scroll.left), c.core.scroll && c.core.scroll.top !== b && this.element.scrollTop(c.core.scroll.top), delete c.core.scroll, this.set_state(c, d), !1;
						if(c.core.selected) return h = this, this.deselect_all(), a.each(c.core.selected, function(a, b) {
							h.select_node(b, !1, !0)
						}), delete c.core.selected, this.set_state(c, d), !1;
						for(i in c) c.hasOwnProperty(i) && "core" !== i && -1 === a.inArray(i, this.settings.plugins) && delete c[i];
						if(a.isEmptyObject(c.core)) return delete c.core, this.set_state(c, d), !1
					}
					return a.isEmptyObject(c) ? (c = null, d && d.call(this), this.trigger("set_state"), !1) : !0
				}
				return !1
			},
			refresh: function(b, c) {
				this._data.core.state = c === !0 ? {} : this.get_state(), c && a.isFunction(c) && (this._data.core.state = c.call(this, this._data.core.state)), this._cnt = 0, this._model.data = {
					"#": {
						id: "#",
						parent: null,
						parents: [],
						children: [],
						children_d: [],
						state: {
							loaded: !1
						}
					}
				};
				var d = this.get_container_ul()[0].className;
				b || (this.element.html("<ul class='" + d + "' role='group'><li class='jstree-initial-node jstree-loading jstree-leaf jstree-last' role='treeitem' id='j" + this._id + "_loading'><i class='jstree-icon jstree-ocl'></i><a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>" + this.get_string("Loading ...") + "</a></li></ul>"), this.element.attr("aria-activedescendant", "j" + this._id + "_loading")), this.load_node("#", function(b, c) {
					c && (this.get_container_ul()[0].className = d, this._firstChild(this.get_container_ul()[0]) && this.element.attr("aria-activedescendant", this._firstChild(this.get_container_ul()[0]).id), this.set_state(a.extend(!0, {}, this._data.core.state), function() {
						this.trigger("refresh")
					})), this._data.core.state = null
				})
			},
			refresh_node: function(b) {
				if(b = this.get_node(b), !b || "#" === b.id) return !1;
				var c = [],
					d = [],
					e = this._data.core.selected.concat([]);
				d.push(b.id), b.state.opened === !0 && c.push(b.id), this.get_node(b, !0).find(".jstree-open").each(function() {
					c.push(this.id)
				}), this._load_nodes(d, a.proxy(function(a) {
					this.open_node(c, !1, 0), this.select_node(this._data.core.selected), this.trigger("refresh_node", {
						node: b,
						nodes: a
					})
				}, this))
			},
			set_id: function(b, c) {
				if(b = this.get_node(b), !b || "#" === b.id) return !1;
				var d, e, f = this._model.data;
				for(c = c.toString(), f[b.parent].children[a.inArray(b.id, f[b.parent].children)] = c, d = 0, e = b.parents.length; e > d; d++) f[b.parents[d]].children_d[a.inArray(b.id, f[b.parents[d]].children_d)] = c;
				for(d = 0, e = b.children.length; e > d; d++) f[b.children[d]].parent = c;
				for(d = 0, e = b.children_d.length; e > d; d++) f[b.children_d[d]].parents[a.inArray(b.id, f[b.children_d[d]].parents)] = c;
				return d = a.inArray(b.id, this._data.core.selected), -1 !== d && (this._data.core.selected[d] = c), d = this.get_node(b.id, !0), d && (d.attr("id", c).children(".jstree-anchor").attr("id", c + "_anchor").end().attr("aria-labelledby", c + "_anchor"), this.element.attr("aria-activedescendant") === b.id && this.element.attr("aria-activedescendant", c)), delete f[b.id], b.id = c, b.li_attr.id = c, f[c] = b, !0
			},
			get_text: function(a) {
				return a = this.get_node(a), a && "#" !== a.id ? a.text : !1
			},
			set_text: function(b, c) {
				var d, e;
				if(a.isArray(b)) {
					for(b = b.slice(), d = 0, e = b.length; e > d; d++) this.set_text(b[d], c);
					return !0
				}
				return b = this.get_node(b), b && "#" !== b.id ? (b.text = c, this.get_node(b, !0).length && this.redraw_node(b.id), this.trigger("set_text", {
					obj: b,
					text: c
				}), !0) : !1
			},
			get_json: function(b, c, d) {
				if(b = this.get_node(b || "#"), !b) return !1;
				c && c.flat && !d && (d = []);
				var e = {
						id: b.id,
						text: b.text,
						icon: this.get_icon(b),
						li_attr: a.extend(!0, {}, b.li_attr),
						a_attr: a.extend(!0, {}, b.a_attr),
						state: {},
						data: c && c.no_data ? !1 : a.extend(!0, {}, b.data)
					},
					f, g;
				if(c && c.flat ? e.parent = b.parent : e.children = [], !c || !c.no_state)
					for(f in b.state) b.state.hasOwnProperty(f) && (e.state[f] = b.state[f]);
				if(c && c.no_id && (delete e.id, e.li_attr && e.li_attr.id && delete e.li_attr.id, e.a_attr && e.a_attr.id && delete e.a_attr.id), c && c.flat && "#" !== b.id && d.push(e), !c || !c.no_children)
					for(f = 0, g = b.children.length; g > f; f++) c && c.flat ? this.get_json(b.children[f], c, d) : e.children.push(this.get_json(b.children[f], c));
				return c && c.flat ? d : "#" === b.id ? e.children : e
			},
			create_node: function(c, d, e, f, g) {
				if(null === c && (c = "#"), c = this.get_node(c), !c) return !1;
				if(e = e === b ? "last" : e, !e.toString().match(/^(before|after)$/) && !g && !this.is_loaded(c)) return this.load_node(c, function() {
					this.create_node(c, d, e, f, !0)
				});
				d || (d = {
					text: this.get_string("New node")
				}), "string" == typeof d && (d = {
					text: d
				}), d.text === b && (d.text = this.get_string("New node"));
				var h, i, j, k;
				switch("#" === c.id && ("before" === e && (e = "first"), "after" === e && (e = "last")), e) {
					case "before":
						h = this.get_node(c.parent), e = a.inArray(c.id, h.children), c = h;
						break;
					case "after":
						h = this.get_node(c.parent), e = a.inArray(c.id, h.children) + 1, c = h;
						break;
					case "inside":
					case "first":
						e = 0;
						break;
					case "last":
						e = c.children.length;
						break;
					default:
						e || (e = 0)
				}
				if(e > c.children.length && (e = c.children.length), d.id || (d.id = !0), !this.check("create_node", d, c, e)) return this.settings.core.error.call(this, this._data.core.last_error), !1;
				if(d.id === !0 && delete d.id, d = this._parse_model_from_json(d, c.id, c.parents.concat()), !d) return !1;
				for(h = this.get_node(d), i = [], i.push(d), i = i.concat(h.children_d), this.trigger("model", {
						nodes: i,
						parent: c.id
					}), c.children_d = c.children_d.concat(i), j = 0, k = c.parents.length; k > j; j++) this._model.data[c.parents[j]].children_d = this._model.data[c.parents[j]].children_d.concat(i);
				for(d = h, h = [], j = 0, k = c.children.length; k > j; j++) h[j >= e ? j + 1 : j] = c.children[j];
				return h[e] = d.id, c.children = h, this.redraw_node(c, !0), f && f.call(this, this.get_node(d)), this.trigger("create_node", {
					node: this.get_node(d),
					parent: c.id,
					position: e
				}), d.id
			},
			rename_node: function(b, c) {
				var d, e, f;
				if(a.isArray(b)) {
					for(b = b.slice(), d = 0, e = b.length; e > d; d++) this.rename_node(b[d], c);
					return !0
				}
				return b = this.get_node(b), b && "#" !== b.id ? (f = b.text, this.check("rename_node", b, this.get_parent(b), c) ? (this.set_text(b, c), this.trigger("rename_node", {
					node: b,
					text: c,
					old: f
				}), !0) : (this.settings.core.error.call(this, this._data.core.last_error), !1)) : !1
			},
			delete_node: function(b) {
				var c, d, e, f, g, h, i, j, k, l;
				if(a.isArray(b)) {
					for(b = b.slice(), c = 0, d = b.length; d > c; c++) this.delete_node(b[c]);
					return !0
				}
				if(b = this.get_node(b), !b || "#" === b.id) return !1;
				if(e = this.get_node(b.parent), f = a.inArray(b.id, e.children), l = !1, !this.check("delete_node", b, e, f)) return this.settings.core.error.call(this, this._data.core.last_error), !1;
				for(-1 !== f && (e.children = a.vakata.array_remove(e.children, f)), g = b.children_d.concat([]), g.push(b.id), j = 0, k = g.length; k > j; j++) {
					for(h = 0, i = b.parents.length; i > h; h++) f = a.inArray(g[j], this._model.data[b.parents[h]].children_d), -1 !== f && (this._model.data[b.parents[h]].children_d = a.vakata.array_remove(this._model.data[b.parents[h]].children_d, f));
					this._model.data[g[j]].state.selected && (l = !0, f = a.inArray(g[j], this._data.core.selected), -1 !== f && (this._data.core.selected = a.vakata.array_remove(this._data.core.selected, f)))
				}
				for(this.trigger("delete_node", {
						node: b,
						parent: e.id
					}), l && this.trigger("changed", {
						action: "delete_node",
						node: b,
						selected: this._data.core.selected,
						parent: e.id
					}), j = 0, k = g.length; k > j; j++) delete this._model.data[g[j]];
				return this.redraw_node(e, !0), !0
			},
			check: function(b, c, d, e, f) {
				c = c && c.id ? c : this.get_node(c), d = d && d.id ? d : this.get_node(d);
				var g = b.match(/^move_node|copy_node|create_node$/i) ? d : c,
					h = this.settings.core.check_callback;
				return "move_node" !== b && "copy_node" !== b || f && f.is_multi || c.id !== d.id && a.inArray(c.id, d.children) !== e && -1 === a.inArray(d.id, c.children_d) ? (g && g.data && (g = g.data), g && g.functions && (g.functions[b] === !1 || g.functions[b] === !0) ? (g.functions[b] === !1 && (this._data.core.last_error = {
					error: "check",
					plugin: "core",
					id: "core_02",
					reason: "Node data prevents function: " + b,
					data: JSON.stringify({
						chk: b,
						pos: e,
						obj: c && c.id ? c.id : !1,
						par: d && d.id ? d.id : !1
					})
				}), g.functions[b]) : h === !1 || a.isFunction(h) && h.call(this, b, c, d, e, f) === !1 || h && h[b] === !1 ? (this._data.core.last_error = {
					error: "check",
					plugin: "core",
					id: "core_03",
					reason: "User config for core.check_callback prevents function: " + b,
					data: JSON.stringify({
						chk: b,
						pos: e,
						obj: c && c.id ? c.id : !1,
						par: d && d.id ? d.id : !1
					})
				}, !1) : !0) : (this._data.core.last_error = {
					error: "check",
					plugin: "core",
					id: "core_01",
					reason: "Moving parent inside child",
					data: JSON.stringify({
						chk: b,
						pos: e,
						obj: c && c.id ? c.id : !1,
						par: d && d.id ? d.id : !1
					})
				}, !1)
			},
			last_error: function() {
				return this._data.core.last_error
			},
			move_node: function(c, d, e, f, g, h, i) {
				var j, k, l, m, n, o, p, q, r, s, t, u, v, w;
				if(d = this.get_node(d), e = e === b ? 0 : e, !d) return !1;
				if(!e.toString().match(/^(before|after)$/) && !g && !this.is_loaded(d)) return this.load_node(d, function() {
					this.move_node(c, d, e, f, !0, !1, i)
				});
				if(a.isArray(c)) {
					if(1 !== c.length) {
						for(j = 0, k = c.length; k > j; j++)(r = this.move_node(c[j], d, e, f, g, !1, i)) && (d = r, e = "after");
						return this.redraw(), !0
					}
					c = c[0]
				}
				if(c = c && c.id ? c : this.get_node(c), !c || "#" === c.id) return !1;
				if(l = (c.parent || "#").toString(), n = e.toString().match(/^(before|after)$/) && "#" !== d.id ? this.get_node(d.parent) : d, o = i ? i : this._model.data[c.id] ? this : a.jstree.reference(c.id), p = !o || !o._id || this._id !== o._id, m = o && o._id && l && o._model.data[l] && o._model.data[l].children ? a.inArray(c.id, o._model.data[l].children) : -1, (o || o._id) && (c = o._model.data[c.id]), p) return(r = this.copy_node(c, d, e, f, g, !1, i)) ? (o && o.delete_node(c), r) : !1;
				switch("#" === d.id && ("before" === e && (e = "first"), "after" === e && (e = "last")), e) {
					case "before":
						e = a.inArray(d.id, n.children);
						break;
					case "after":
						e = a.inArray(d.id, n.children) + 1;
						break;
					case "inside":
					case "first":
						e = 0;
						break;
					case "last":
						e = n.children.length;
						break;
					default:
						e || (e = 0)
				}
				if(e > n.children.length && (e = n.children.length), !this.check("move_node", c, n, e, {
						core: !0,
						origin: i,
						is_multi: o && o._id && o._id !== this._id,
						is_foreign: !o || !o._id
					})) return this.settings.core.error.call(this, this._data.core.last_error), !1;
				if(c.parent === n.id) {
					for(q = n.children.concat(), r = a.inArray(c.id, q), -1 !== r && (q = a.vakata.array_remove(q, r), e > r && e--), r = [], s = 0, t = q.length; t > s; s++) r[s >= e ? s + 1 : s] = q[s];
					r[e] = c.id, n.children = r, this._node_changed(n.id), this.redraw("#" === n.id)
				} else {
					for(r = c.children_d.concat(), r.push(c.id), s = 0, t = c.parents.length; t > s; s++) {
						for(q = [], w = o._model.data[c.parents[s]].children_d, u = 0, v = w.length; v > u; u++) - 1 === a.inArray(w[u], r) && q.push(w[u]);
						o._model.data[c.parents[s]].children_d = q
					}
					for(o._model.data[l].children = a.vakata.array_remove_item(o._model.data[l].children, c.id), s = 0, t = n.parents.length; t > s; s++) this._model.data[n.parents[s]].children_d = this._model.data[n.parents[s]].children_d.concat(r);
					for(q = [], s = 0, t = n.children.length; t > s; s++) q[s >= e ? s + 1 : s] = n.children[s];
					for(q[e] = c.id, n.children = q, n.children_d.push(c.id), n.children_d = n.children_d.concat(c.children_d), c.parent = n.id, r = n.parents.concat(), r.unshift(n.id), w = c.parents.length, c.parents = r, r = r.concat(), s = 0, t = c.children_d.length; t > s; s++) this._model.data[c.children_d[s]].parents = this._model.data[c.children_d[s]].parents.slice(0, -1 * w), Array.prototype.push.apply(this._model.data[c.children_d[s]].parents, r);
					("#" === l || "#" === n.id) && (this._model.force_full_redraw = !0), this._model.force_full_redraw || (this._node_changed(l), this._node_changed(n.id)), h || this.redraw()
				}
				return f && f.call(this, c, n, e), this.trigger("move_node", {
					node: c,
					parent: n.id,
					position: e,
					old_parent: l,
					old_position: m,
					is_multi: o && o._id && o._id !== this._id,
					is_foreign: !o || !o._id,
					old_instance: o,
					new_instance: this
				}), c.id
			},
			copy_node: function(c, d, e, f, g, h, i) {
				var j, k, l, m, n, o, p, q, r, s, t;
				if(d = this.get_node(d), e = e === b ? 0 : e, !d) return !1;
				if(!e.toString().match(/^(before|after)$/) && !g && !this.is_loaded(d)) return this.load_node(d, function() {
					this.copy_node(c, d, e, f, !0, !1, i)
				});
				if(a.isArray(c)) {
					if(1 !== c.length) {
						for(j = 0, k = c.length; k > j; j++)(m = this.copy_node(c[j], d, e, f, g, !0, i)) && (d = m, e = "after");
						return this.redraw(), !0
					}
					c = c[0]
				}
				if(c = c && c.id ? c : this.get_node(c), !c || "#" === c.id) return !1;
				switch(q = (c.parent || "#").toString(), r = e.toString().match(/^(before|after)$/) && "#" !== d.id ? this.get_node(d.parent) : d, s = i ? i : this._model.data[c.id] ? this : a.jstree.reference(c.id), t = !s || !s._id || this._id !== s._id, (s || s._id) && (c = s._model.data[c.id]), "#" === d.id && ("before" === e && (e = "first"), "after" === e && (e = "last")), e) {
					case "before":
						e = a.inArray(d.id, r.children);
						break;
					case "after":
						e = a.inArray(d.id, r.children) + 1;
						break;
					case "inside":
					case "first":
						e = 0;
						break;
					case "last":
						e = r.children.length;
						break;
					default:
						e || (e = 0)
				}
				if(e > r.children.length && (e = r.children.length), !this.check("copy_node", c, r, e, {
						core: !0,
						origin: i,
						is_multi: s && s._id && s._id !== this._id,
						is_foreign: !s || !s._id
					})) return this.settings.core.error.call(this, this._data.core.last_error), !1;
				if(p = s ? s.get_json(c, {
						no_id: !0,
						no_data: !0,
						no_state: !0
					}) : c, !p) return !1;
				if(p.id === !0 && delete p.id, p = this._parse_model_from_json(p, r.id, r.parents.concat()), !p) return !1;
				for(m = this.get_node(p), c && c.state && c.state.loaded === !1 && (m.state.loaded = !1), l = [], l.push(p), l = l.concat(m.children_d), this.trigger("model", {
						nodes: l,
						parent: r.id
					}), n = 0, o = r.parents.length; o > n; n++) this._model.data[r.parents[n]].children_d = this._model.data[r.parents[n]].children_d.concat(l);
				for(l = [], n = 0, o = r.children.length; o > n; n++) l[n >= e ? n + 1 : n] = r.children[n];
				return l[e] = m.id, r.children = l, r.children_d.push(m.id), r.children_d = r.children_d.concat(m.children_d), "#" === r.id && (this._model.force_full_redraw = !0), this._model.force_full_redraw || this._node_changed(r.id), h || this.redraw("#" === r.id), f && f.call(this, m, r, e), this.trigger("copy_node", {
					node: m,
					original: c,
					parent: r.id,
					position: e,
					old_parent: q,
					old_position: s && s._id && q && s._model.data[q] && s._model.data[q].children ? a.inArray(c.id, s._model.data[q].children) : -1,
					is_multi: s && s._id && s._id !== this._id,
					is_foreign: !s || !s._id,
					old_instance: s,
					new_instance: this
				}), m.id
			},
			cut: function(b) {
				if(b || (b = this._data.core.selected.concat()), a.isArray(b) || (b = [b]), !b.length) return !1;
				var c = [],
					g, h, i;
				for(h = 0, i = b.length; i > h; h++) g = this.get_node(b[h]), g && g.id && "#" !== g.id && c.push(g);
				return c.length ? (d = c, f = this, e = "move_node", void this.trigger("cut", {
					node: b
				})) : !1
			},
			copy: function(b) {
				if(b || (b = this._data.core.selected.concat()), a.isArray(b) || (b = [b]), !b.length) return !1;
				var c = [],
					g, h, i;
				for(h = 0, i = b.length; i > h; h++) g = this.get_node(b[h]), g && g.id && "#" !== g.id && c.push(g);
				return c.length ? (d = c, f = this, e = "copy_node", void this.trigger("copy", {
					node: b
				})) : !1
			},
			get_buffer: function() {
				return {
					mode: e,
					node: d,
					inst: f
				}
			},
			can_paste: function() {
				return e !== !1 && d !== !1
			},
			paste: function(a, b) {
				return a = this.get_node(a), a && e && e.match(/^(copy_node|move_node)$/) && d ? (this[e](d, a, b, !1, !1, !1, f) && this.trigger("paste", {
					parent: a.id,
					node: d,
					mode: e
				}), d = !1, e = !1, void(f = !1)) : !1
			},
			clear_buffer: function() {
				d = !1, e = !1, f = !1, this.trigger("clear_buffer")
			},
			edit: function(b, c) {
				var d, e, f, g, h, i, j, k, l;
				return(b = this.get_node(b)) ? this.settings.core.check_callback === !1 ? (this._data.core.last_error = {
					error: "check",
					plugin: "core",
					id: "core_07",
					reason: "Could not edit node because of check_callback"
				}, this.settings.core.error.call(this, this._data.core.last_error), !1) : (l = b, c = "string" == typeof c ? c : b.text, this.set_text(b, ""), b = this._open_to(b), l.text = c, d = this._data.core.rtl, e = this.element.width(), f = b.children(".jstree-anchor"), g = a("<span>"), h = c, i = a("<div />", {
					css: {
						position: "absolute",
						top: "-200px",
						left: d ? "0px" : "-1000px",
						visibility: "hidden"
					}
				}).appendTo("body"), j = a("<input />", {
					value: h,
					"class": "jstree-rename-input",
					css: {
						padding: "0",
						border: "1px solid silver",
						"box-sizing": "border-box",
						display: "inline-block",
						height: this._data.core.li_height + "px",
						lineHeight: this._data.core.li_height + "px",
						width: "150px"
					},
					blur: a.proxy(function() {
						var c = g.children(".jstree-rename-input"),
							d = c.val();
						"" === d && (d = h), i.remove(), g.replaceWith(f), g.remove(), this.set_text(b, h), this.rename_node(b, a("<div></div>").text(d)[this.settings.core.force_text ? "text" : "html"]()) === !1 && this.set_text(b, h)
					}, this),
					keydown: function(a) {
						var b = a.which;
						27 === b && (this.value = h), (27 === b || 13 === b || 37 === b || 38 === b || 39 === b || 40 === b || 32 === b) && a.stopImmediatePropagation(), (27 === b || 13 === b) && (a.preventDefault(), this.blur())
					},
					click: function(a) {
						a.stopImmediatePropagation()
					},
					mousedown: function(a) {
						a.stopImmediatePropagation()
					},
					keyup: function(a) {
						j.width(Math.min(i.text("pW" + this.value).width(), e))
					},
					keypress: function(a) {
						return 13 === a.which ? !1 : void 0
					}
				}), k = {
					fontFamily: f.css("fontFamily") || "",
					fontSize: f.css("fontSize") || "",
					fontWeight: f.css("fontWeight") || "",
					fontStyle: f.css("fontStyle") || "",
					fontStretch: f.css("fontStretch") || "",
					fontVariant: f.css("fontVariant") || "",
					letterSpacing: f.css("letterSpacing") || "",
					wordSpacing: f.css("wordSpacing") || ""
				}, g.attr("class", f.attr("class")).append(f.contents().clone()).append(j), f.replaceWith(g), i.css(k), void j.css(k).width(Math.min(i.text("pW" + j[0].value).width(), e))[0].select()) : !1
			},
			set_theme: function(b, c) {
				if(!b) return !1;
				if(c === !0) {
					var d = this.settings.core.themes.dir;
					d || (d = a.jstree.path + "/themes"), c = d + "/" + b + "/style.css"
				}
				c && -1 === a.inArray(c, g) && (a("head").append('<link rel="stylesheet" href="' + c + '" type="text/css" />'), g.push(c)), this._data.core.themes.name && this.element.removeClass("jstree-" + this._data.core.themes.name), this._data.core.themes.name = b, this.element.addClass("jstree-" + b), this.element[this.settings.core.themes.responsive ? "addClass" : "removeClass"]("jstree-" + b + "-responsive"), this.trigger("set_theme", {
					theme: b
				})
			},
			get_theme: function() {
				return this._data.core.themes.name
			},
			set_theme_variant: function(a) {
				this._data.core.themes.variant && this.element.removeClass("jstree-" + this._data.core.themes.name + "-" + this._data.core.themes.variant), this._data.core.themes.variant = a, a && this.element.addClass("jstree-" + this._data.core.themes.name + "-" + this._data.core.themes.variant)
			},
			get_theme_variant: function() {
				return this._data.core.themes.variant
			},
			show_stripes: function() {
				this._data.core.themes.stripes = !0, this.get_container_ul().addClass("jstree-striped")
			},
			hide_stripes: function() {
				this._data.core.themes.stripes = !1, this.get_container_ul().removeClass("jstree-striped")
			},
			toggle_stripes: function() {
				this._data.core.themes.stripes ? this.hide_stripes() : this.show_stripes()
			},
			show_dots: function() {
				this._data.core.themes.dots = !0, this.get_container_ul().removeClass("jstree-no-dots")
			},
			hide_dots: function() {
				this._data.core.themes.dots = !1, this.get_container_ul().addClass("jstree-no-dots")
			},
			toggle_dots: function() {
				this._data.core.themes.dots ? this.hide_dots() : this.show_dots()
			},
			show_icons: function() {
				this._data.core.themes.icons = !0, this.get_container_ul().removeClass("jstree-no-icons")
			},
			hide_icons: function() {
				this._data.core.themes.icons = !1, this.get_container_ul().addClass("jstree-no-icons")
			},
			toggle_icons: function() {
				this._data.core.themes.icons ? this.hide_icons() : this.show_icons()
			},
			set_icon: function(c, d) {
				var e, f, g, h;
				if(a.isArray(c)) {
					for(c = c.slice(), e = 0, f = c.length; f > e; e++) this.set_icon(c[e], d);
					return !0
				}
				return c = this.get_node(c), c && "#" !== c.id ? (h = c.icon, c.icon = d === !0 || null === d || d === b || "" === d ? !0 : d, g = this.get_node(c, !0).children(".jstree-anchor").children(".jstree-themeicon"), d === !1 ? this.hide_icon(c) : d === !0 || null === d || d === b || "" === d ? (g.removeClass("jstree-themeicon-custom " + h).css("background", "").removeAttr("rel"), h === !1 && this.show_icon(c)) : -1 === d.indexOf("/") && -1 === d.indexOf(".") ? (g.removeClass(h).css("background", ""), g.addClass(d + " jstree-themeicon-custom").attr("rel", d), h === !1 && this.show_icon(c)) : (g.removeClass(h).css("background", ""), g.addClass("jstree-themeicon-custom").css("background", "url('" + d + "') center center no-repeat").attr("rel", d), h === !1 && this.show_icon(c)), !0) : !1
			},
			get_icon: function(a) {
				return a = this.get_node(a), a && "#" !== a.id ? a.icon : !1
			},
			hide_icon: function(b) {
				var c, d;
				if(a.isArray(b)) {
					for(b = b.slice(), c = 0, d = b.length; d > c; c++) this.hide_icon(b[c]);
					return !0
				}
				return b = this.get_node(b), b && "#" !== b ? (b.icon = !1, this.get_node(b, !0).children(".jstree-anchor").children(".jstree-themeicon").addClass("jstree-themeicon-hidden"), !0) : !1
			},
			show_icon: function(b) {
				var c, d, e;
				if(a.isArray(b)) {
					for(b = b.slice(), c = 0, d = b.length; d > c; c++) this.show_icon(b[c]);
					return !0
				}
				return b = this.get_node(b), b && "#" !== b ? (e = this.get_node(b, !0), b.icon = e.length ? e.children(".jstree-anchor").children(".jstree-themeicon").attr("rel") : !0, b.icon || (b.icon = !0), e.children(".jstree-anchor").children(".jstree-themeicon").removeClass("jstree-themeicon-hidden"), !0) : !1
			}
		}, a.vakata = {}, a.vakata.attributes = function(b, c) {
			b = a(b)[0];
			var d = c ? {} : [];
			return b && b.attributes && a.each(b.attributes, function(b, e) {
				-1 === a.inArray(e.name.toLowerCase(), ["style", "contenteditable", "hasfocus", "tabindex"]) && null !== e.value && "" !== a.trim(e.value) && (c ? d[e.name] = e.value : d.push(e.name))
			}), d
		}, a.vakata.array_unique = function(a) {
			var c = [],
				d, e, f, g = {};
			for(d = 0, f = a.length; f > d; d++) g[a[d]] === b && (c.push(a[d]), g[a[d]] = !0);
			return c
		}, a.vakata.array_remove = function(a, b, c) {
			var d = a.slice((c || b) + 1 || a.length);
			return a.length = 0 > b ? a.length + b : b, a.push.apply(a, d), a
		}, a.vakata.array_remove_item = function(b, c) {
			var d = a.inArray(c, b);
			return -1 !== d ? a.vakata.array_remove(b, d) : b
		};
		var m = i.createElement("I");
		m.className = "jstree-icon jstree-checkbox", m.setAttribute("role", "presentation"), a.jstree.defaults.checkbox = {
				visible: !0,
				three_state: !0,
				whole_node: !0,
				keep_selected_style: !0,
				cascade: "",
				tie_selection: !0
			}, a.jstree.plugins.checkbox = function(c, d) {
				this.bind = function() {
					d.bind.call(this), this._data.checkbox.uto = !1, this._data.checkbox.selected = [], this.settings.checkbox.three_state && (this.settings.checkbox.cascade = "up+down+undetermined"), this.element.on("init.jstree", a.proxy(function() {
						this._data.checkbox.visible = this.settings.checkbox.visible, this.settings.checkbox.keep_selected_style || this.element.addClass("jstree-checkbox-no-clicked"), this.settings.checkbox.tie_selection && this.element.addClass("jstree-checkbox-selection")
					}, this)).on("loading.jstree", a.proxy(function() {
						this[this._data.checkbox.visible ? "show_checkboxes" : "hide_checkboxes"]()
					}, this)), -1 !== this.settings.checkbox.cascade.indexOf("undetermined") && this.element.on("changed.jstree uncheck_node.jstree check_node.jstree uncheck_all.jstree check_all.jstree move_node.jstree copy_node.jstree redraw.jstree open_node.jstree", a.proxy(function() {
						this._data.checkbox.uto && clearTimeout(this._data.checkbox.uto), this._data.checkbox.uto = setTimeout(a.proxy(this._undetermined, this), 50)
					}, this)), this.settings.checkbox.tie_selection || this.element.on("model.jstree", a.proxy(function(a, b) {
						var c = this._model.data,
							d = c[b.parent],
							e = b.nodes,
							f, g;
						for(f = 0, g = e.length; g > f; f++) c[e[f]].state.checked = c[e[f]].original && c[e[f]].original.state && c[e[f]].original.state.checked, c[e[f]].state.checked && this._data.checkbox.selected.push(e[f])
					}, this)), (-1 !== this.settings.checkbox.cascade.indexOf("up") || -1 !== this.settings.checkbox.cascade.indexOf("down")) && this.element.on("model.jstree", a.proxy(function(b, c) {
						var d = this._model.data,
							e = d[c.parent],
							f = c.nodes,
							g = [],
							h, i, j, k, l, m, n = this.settings.checkbox.cascade,
							o = this.settings.checkbox.tie_selection;
						if(-1 !== n.indexOf("down"))
							if(e.state[o ? "selected" : "checked"]) {
								for(i = 0, j = f.length; j > i; i++) d[f[i]].state[o ? "selected" : "checked"] = !0;
								this._data[o ? "core" : "checkbox"].selected = this._data[o ? "core" : "checkbox"].selected.concat(f)
							} else
								for(i = 0, j = f.length; j > i; i++)
									if(d[f[i]].state[o ? "selected" : "checked"]) {
										for(k = 0, l = d[f[i]].children_d.length; l > k; k++) d[d[f[i]].children_d[k]].state[o ? "selected" : "checked"] = !0;
										this._data[o ? "core" : "checkbox"].selected = this._data[o ? "core" : "checkbox"].selected.concat(d[f[i]].children_d)
									}
						if(-1 !== n.indexOf("up")) {
							for(i = 0, j = e.children_d.length; j > i; i++) d[e.children_d[i]].children.length || g.push(d[e.children_d[i]].parent);
							for(g = a.vakata.array_unique(g), k = 0, l = g.length; l > k; k++) {
								e = d[g[k]];
								while(e && "#" !== e.id) {
									for(h = 0, i = 0, j = e.children.length; j > i; i++) h += d[e.children[i]].state[o ? "selected" : "checked"];
									if(h !== j) break;
									e.state[o ? "selected" : "checked"] = !0, this._data[o ? "core" : "checkbox"].selected.push(e.id), m = this.get_node(e, !0), m && m.length && m.attr("aria-selected", !0).children(".jstree-anchor").addClass(o ? "jstree-clicked" : "jstree-checked"), e = this.get_node(e.parent)
								}
							}
						}
						this._data[o ? "core" : "checkbox"].selected = a.vakata.array_unique(this._data[o ? "core" : "checkbox"].selected)
					}, this)).on(this.settings.checkbox.tie_selection ? "select_node.jstree" : "check_node.jstree", a.proxy(function(b, c) {
						var d = c.node,
							e = this._model.data,
							f = this.get_node(d.parent),
							g = this.get_node(d, !0),
							h, i, j, k, l = this.settings.checkbox.cascade,
							m = this.settings.checkbox.tie_selection;
						if(-1 !== l.indexOf("down"))
							for(this._data[m ? "core" : "checkbox"].selected = a.vakata.array_unique(this._data[m ? "core" : "checkbox"].selected.concat(d.children_d)), h = 0, i = d.children_d.length; i > h; h++) k = e[d.children_d[h]], k.state[m ? "selected" : "checked"] = !0, k && k.original && k.original.state && k.original.state.undetermined && (k.original.state.undetermined = !1);
						if(-1 !== l.indexOf("up"))
							while(f && "#" !== f.id) {
								for(j = 0, h = 0, i = f.children.length; i > h; h++) j += e[f.children[h]].state[m ? "selected" : "checked"];
								if(j !== i) break;
								f.state[m ? "selected" : "checked"] = !0, this._data[m ? "core" : "checkbox"].selected.push(f.id), k = this.get_node(f, !0), k && k.length && k.attr("aria-selected", !0).children(".jstree-anchor").addClass(m ? "jstree-clicked" : "jstree-checked"), f = this.get_node(f.parent)
							} - 1 !== l.indexOf("down") && g.length && g.find(".jstree-anchor").addClass(m ? "jstree-clicked" : "jstree-checked").parent().attr("aria-selected", !0)
					}, this)).on(this.settings.checkbox.tie_selection ? "deselect_all.jstree" : "uncheck_all.jstree", a.proxy(function(a, b) {
						var c = this.get_node("#"),
							d = this._model.data,
							e, f, g;
						for(e = 0, f = c.children_d.length; f > e; e++) g = d[c.children_d[e]], g && g.original && g.original.state && g.original.state.undetermined && (g.original.state.undetermined = !1)
					}, this)).on(this.settings.checkbox.tie_selection ? "deselect_node.jstree" : "uncheck_node.jstree", a.proxy(function(b, c) {
						var d = c.node,
							e = this.get_node(d, !0),
							f, g, h, i = this.settings.checkbox.cascade,
							j = this.settings.checkbox.tie_selection;
						if(d && d.original && d.original.state && d.original.state.undetermined && (d.original.state.undetermined = !1), -1 !== i.indexOf("down"))
							for(f = 0, g = d.children_d.length; g > f; f++) h = this._model.data[d.children_d[f]], h.state[j ? "selected" : "checked"] = !1, h && h.original && h.original.state && h.original.state.undetermined && (h.original.state.undetermined = !1);
						if(-1 !== i.indexOf("up"))
							for(f = 0, g = d.parents.length; g > f; f++) h = this._model.data[d.parents[f]], h.state[j ? "selected" : "checked"] = !1, h && h.original && h.original.state && h.original.state.undetermined && (h.original.state.undetermined = !1), h = this.get_node(d.parents[f], !0), h && h.length && h.attr("aria-selected", !1).children(".jstree-anchor").removeClass(j ? "jstree-clicked" : "jstree-checked");
						for(h = [], f = 0, g = this._data[j ? "core" : "checkbox"].selected.length; g > f; f++) - 1 !== i.indexOf("down") && -1 !== a.inArray(this._data[j ? "core" : "checkbox"].selected[f], d.children_d) || -1 !== i.indexOf("up") && -1 !== a.inArray(this._data[j ? "core" : "checkbox"].selected[f], d.parents) || h.push(this._data[j ? "core" : "checkbox"].selected[f]);
						this._data[j ? "core" : "checkbox"].selected = a.vakata.array_unique(h), -1 !== i.indexOf("down") && e.length && e.find(".jstree-anchor").removeClass(j ? "jstree-clicked" : "jstree-checked").parent().attr("aria-selected", !1)
					}, this)), -1 !== this.settings.checkbox.cascade.indexOf("up") && this.element.on("delete_node.jstree", a.proxy(function(a, b) {
						var c = this.get_node(b.parent),
							d = this._model.data,
							e, f, g, h, i = this.settings.checkbox.tie_selection;
						while(c && "#" !== c.id) {
							for(g = 0, e = 0, f = c.children.length; f > e; e++) g += d[c.children[e]].state[i ? "selected" : "checked"];
							if(g !== f) break;
							c.state[i ? "selected" : "checked"] = !0, this._data[i ? "core" : "checkbox"].selected.push(c.id), h = this.get_node(c, !0), h && h.length && h.attr("aria-selected", !0).children(".jstree-anchor").addClass(i ? "jstree-clicked" : "jstree-checked"), c = this.get_node(c.parent)
						}
					}, this)).on("move_node.jstree", a.proxy(function(b, c) {
						var d = c.is_multi,
							e = c.old_parent,
							f = this.get_node(c.parent),
							g = this._model.data,
							h, i, j, k, l, m = this.settings.checkbox.tie_selection;
						if(!d) {
							h = this.get_node(e);
							while(h && "#" !== h.id) {
								for(i = 0, j = 0, k = h.children.length; k > j; j++) i += g[h.children[j]].state[m ? "selected" : "checked"];
								if(i !== k) break;
								h.state[m ? "selected" : "checked"] = !0, this._data[m ? "core" : "checkbox"].selected.push(h.id), l = this.get_node(h, !0), l && l.length && l.attr("aria-selected", !0).children(".jstree-anchor").addClass(m ? "jstree-clicked" : "jstree-checked"), h = this.get_node(h.parent)
							}
						}
						h = f;
						while(h && "#" !== h.id) {
							for(i = 0, j = 0, k = h.children.length; k > j; j++) i += g[h.children[j]].state[m ? "selected" : "checked"];
							if(i === k) h.state[m ? "selected" : "checked"] || (h.state[m ? "selected" : "checked"] = !0, this._data[m ? "core" : "checkbox"].selected.push(h.id), l = this.get_node(h, !0), l && l.length && l.attr("aria-selected", !0).children(".jstree-anchor").addClass(m ? "jstree-clicked" : "jstree-checked"));
							else {
								if(!h.state[m ? "selected" : "checked"]) break;
								h.state[m ? "selected" : "checked"] = !1, this._data[m ? "core" : "checkbox"].selected = a.vakata.array_remove_item(this._data[m ? "core" : "checkbox"].selected, h.id), l = this.get_node(h, !0), l && l.length && l.attr("aria-selected", !1).children(".jstree-anchor").removeClass(m ? "jstree-clicked" : "jstree-checked")
							}
							h = this.get_node(h.parent)
						}
					}, this))
				}, this._undetermined = function() {
					var a, c, d, e, f = {},
						g = this._model.data,
						h = this.settings.checkbox.tie_selection,
						i = this._data[h ? "core" : "checkbox"].selected,
						j = [],
						k = this;
					for(a = 0, c = i.length; c > a; a++)
						if(g[i[a]] && g[i[a]].parents)
							for(d = 0, e = g[i[a]].parents.length; e > d; d++) f[g[i[a]].parents[d]] === b && "#" !== g[i[a]].parents[d] && (f[g[i[a]].parents[d]] = !0, j.push(g[i[a]].parents[d]));
					for(this.element.find(".jstree-closed").not(":has(.jstree-children)").each(function() {
							var h = k.get_node(this),
								i;
							if(h.state.loaded) {
								for(a = 0, c = h.children_d.length; c > a; a++)
									if(i = g[h.children_d[a]], !i.state.loaded && i.original && i.original.state && i.original.state.undetermined && i.original.state.undetermined === !0)
										for(f[i.id] === b && "#" !== i.id && (f[i.id] = !0, j.push(i.id)), d = 0, e = i.parents.length; e > d; d++) f[i.parents[d]] === b && "#" !== i.parents[d] && (f[i.parents[d]] = !0, j.push(i.parents[d]))
							} else if(h.original && h.original.state && h.original.state.undetermined && h.original.state.undetermined === !0)
								for(f[h.id] === b && "#" !== h.id && (f[h.id] = !0, j.push(h.id)), d = 0, e = h.parents.length; e > d; d++) f[h.parents[d]] === b && "#" !== h.parents[d] && (f[h.parents[d]] = !0, j.push(h.parents[d]))
						}), this.element.find(".jstree-undetermined").removeClass("jstree-undetermined"), a = 0, c = j.length; c > a; a++) g[j[a]].state[h ? "selected" : "checked"] || (i = this.get_node(j[a], !0), i && i.length && i.children(".jstree-anchor").children(".jstree-checkbox").addClass("jstree-undetermined"))
				}, this.redraw_node = function(b, c, e, f) {
					if(b = d.redraw_node.apply(this, arguments)) {
						var g, h, i = null;
						for(g = 0, h = b.childNodes.length; h > g; g++)
							if(b.childNodes[g] && b.childNodes[g].className && -1 !== b.childNodes[g].className.indexOf("jstree-anchor")) {
								i = b.childNodes[g];
								break
							}
						i && (!this.settings.checkbox.tie_selection && this._model.data[b.id].state.checked && (i.className += " jstree-checked"), i.insertBefore(m.cloneNode(!1), i.childNodes[0]))
					}
					return e || -1 === this.settings.checkbox.cascade.indexOf("undetermined") || (this._data.checkbox.uto && clearTimeout(this._data.checkbox.uto), this._data.checkbox.uto = setTimeout(a.proxy(this._undetermined, this), 50)), b
				}, this.show_checkboxes = function() {
					this._data.core.themes.checkboxes = !0, this.get_container_ul().removeClass("jstree-no-checkboxes")
				}, this.hide_checkboxes = function() {
					this._data.core.themes.checkboxes = !1, this.get_container_ul().addClass("jstree-no-checkboxes")
				}, this.toggle_checkboxes = function() {
					this._data.core.themes.checkboxes ? this.hide_checkboxes() : this.show_checkboxes()
				}, this.is_undetermined = function(b) {
					b = this.get_node(b);
					var c = this.settings.checkbox.cascade,
						d, e, f = this.settings.checkbox.tie_selection,
						g = this._data[f ? "core" : "checkbox"].selected,
						h = this._model.data;
					if(!b || b.state[f ? "selected" : "checked"] === !0 || -1 === c.indexOf("undetermined") || -1 === c.indexOf("down") && -1 === c.indexOf("up")) return !1;
					if(!b.state.loaded && b.original.state.undetermined === !0) return !0;
					for(d = 0, e = b.children_d.length; e > d; d++)
						if(-1 !== a.inArray(b.children_d[d], g) || !h[b.children_d[d]].state.loaded && h[b.children_d[d]].original.state.undetermined) return !0;
					return !1
				}, this.activate_node = function(b, c) {
					return this.settings.checkbox.tie_selection && (this.settings.checkbox.whole_node || a(c.target).hasClass("jstree-checkbox")) && (c.ctrlKey = !0), this.settings.checkbox.tie_selection || !this.settings.checkbox.whole_node && !a(c.target).hasClass("jstree-checkbox") ? d.activate_node.call(this, b, c) : this.is_disabled(b) ? !1 : (this.is_checked(b) ? this.uncheck_node(b, c) : this.check_node(b, c), void this.trigger("activate_node", {
						node: this.get_node(b)
					}))
				}, this.check_node = function(b, c) {
					if(this.settings.checkbox.tie_selection) return this.select_node(b, !1, !0, c);
					var d, e, f, g;
					if(a.isArray(b)) {
						for(b = b.slice(), e = 0, f = b.length; f > e; e++) this.check_node(b[e], c);
						return !0
					}
					return b = this.get_node(b), b && "#" !== b.id ? (d = this.get_node(b, !0), void(b.state.checked || (b.state.checked = !0, this._data.checkbox.selected.push(b.id), d && d.length && d.children(".jstree-anchor").addClass("jstree-checked"), this.trigger("check_node", {
						node: b,
						selected: this._data.checkbox.selected,
						event: c
					})))) : !1
				}, this.uncheck_node = function(b, c) {
					if(this.settings.checkbox.tie_selection) return this.deselect_node(b, !1, c);
					var d, e, f;
					if(a.isArray(b)) {
						for(b = b.slice(), d = 0, e = b.length; e > d; d++) this.uncheck_node(b[d], c);
						return !0
					}
					return b = this.get_node(b), b && "#" !== b.id ? (f = this.get_node(b, !0), void(b.state.checked && (b.state.checked = !1, this._data.checkbox.selected = a.vakata.array_remove_item(this._data.checkbox.selected, b.id), f.length && f.children(".jstree-anchor").removeClass("jstree-checked"), this.trigger("uncheck_node", {
						node: b,
						selected: this._data.checkbox.selected,
						event: c
					})))) : !1
				}, this.check_all = function() {
					if(this.settings.checkbox.tie_selection) return this.select_all();
					var a = this._data.checkbox.selected.concat([]),
						b, c;
					for(this._data.checkbox.selected = this._model.data["#"].children_d.concat(), b = 0, c = this._data.checkbox.selected.length; c > b; b++) this._model.data[this._data.checkbox.selected[b]] && (this._model.data[this._data.checkbox.selected[b]].state.checked = !0);
					this.redraw(!0), this.trigger("check_all", {
						selected: this._data.checkbox.selected
					})
				}, this.uncheck_all = function() {
					if(this.settings.checkbox.tie_selection) return this.deselect_all();
					var a = this._data.checkbox.selected.concat([]),
						b, c;
					for(b = 0, c = this._data.checkbox.selected.length; c > b; b++) this._model.data[this._data.checkbox.selected[b]] && (this._model.data[this._data.checkbox.selected[b]].state.checked = !1);
					this._data.checkbox.selected = [], this.element.find(".jstree-checked").removeClass("jstree-checked"), this.trigger("uncheck_all", {
						selected: this._data.checkbox.selected,
						node: a
					})
				}, this.is_checked = function(a) {
					return this.settings.checkbox.tie_selection ? this.is_selected(a) : (a = this.get_node(a), a && "#" !== a.id ? a.state.checked : !1)
				}, this.get_checked = function(b) {
					return this.settings.checkbox.tie_selection ? this.get_selected(b) : b ? a.map(this._data.checkbox.selected, a.proxy(function(a) {
						return this.get_node(a)
					}, this)) : this._data.checkbox.selected
				}, this.get_top_checked = function(b) {
					if(this.settings.checkbox.tie_selection) return this.get_top_selected(b);
					var c = this.get_checked(!0),
						d = {},
						e, f, g, h;
					for(e = 0, f = c.length; f > e; e++) d[c[e].id] = c[e];
					for(e = 0, f = c.length; f > e; e++)
						for(g = 0, h = c[e].children_d.length; h > g; g++) d[c[e].children_d[g]] && delete d[c[e].children_d[g]];
					c = [];
					for(e in d) d.hasOwnProperty(e) && c.push(e);
					return b ? a.map(c, a.proxy(function(a) {
						return this.get_node(a)
					}, this)) : c
				}, this.get_bottom_checked = function(b) {
					if(this.settings.checkbox.tie_selection) return this.get_bottom_selected(b);
					var c = this.get_checked(!0),
						d = [],
						e, f;
					for(e = 0, f = c.length; f > e; e++) c[e].children.length || d.push(c[e].id);
					return b ? a.map(d, a.proxy(function(a) {
						return this.get_node(a)
					}, this)) : d
				}, this.load_node = function(b, c) {
					var e, f, g, h, i, j;
					if(!a.isArray(b) && !this.settings.checkbox.tie_selection && (j = this.get_node(b), j && j.state.loaded))
						for(e = 0, f = j.children_d.length; f > e; e++) this._model.data[j.children_d[e]].state.checked && (i = !0, this._data.checkbox.selected = a.vakata.array_remove_item(this._data.checkbox.selected, j.children_d[e]));
					return d.load_node.apply(this, arguments)
				}, this.get_state = function() {
					var a = d.get_state.apply(this, arguments);
					return this.settings.checkbox.tie_selection ? a : (a.checkbox = this._data.checkbox.selected.slice(), a)
				}, this.set_state = function(b, c) {
					var e = d.set_state.apply(this, arguments);
					if(e && b.checkbox) {
						if(!this.settings.checkbox.tie_selection) {
							this.uncheck_all();
							var f = this;
							a.each(b.checkbox, function(a, b) {
								f.check_node(b)
							})
						}
						return delete b.checkbox, this.set_state(b, c), !1
					}
					return e
				}
			}, a.jstree.defaults.contextmenu = {
				select_node: !0,
				show_at_node: !0,
				items: function(b, c) {
					return {
						create: {
							separator_before: !1,
							separator_after: !0,
							_disabled: !1,
							label: "Create",
							action: function(b) {
								var c = a.jstree.reference(b.reference),
									d = c.get_node(b.reference);
								c.create_node(d, {}, "last", function(a) {
									setTimeout(function() {
										c.edit(a)
									}, 0)
								})
							}
						},
						rename: {
							separator_before: !1,
							separator_after: !1,
							_disabled: !1,
							label: "Rename",
							action: function(b) {
								var c = a.jstree.reference(b.reference),
									d = c.get_node(b.reference);
								c.edit(d)
							}
						},
						remove: {
							separator_before: !1,
							icon: !1,
							separator_after: !1,
							_disabled: !1,
							label: "Delete",
							action: function(b) {
								var c = a.jstree.reference(b.reference),
									d = c.get_node(b.reference);
								c.delete_node(c.is_selected(d) ? c.get_selected() : d)
							}
						},
						ccp: {
							separator_before: !0,
							icon: !1,
							separator_after: !1,
							label: "Edit",
							action: !1,
							submenu: {
								cut: {
									separator_before: !1,
									separator_after: !1,
									label: "Cut",
									action: function(b) {
										var c = a.jstree.reference(b.reference),
											d = c.get_node(b.reference);
										c.cut(c.is_selected(d) ? c.get_top_selected() : d)
									}
								},
								copy: {
									separator_before: !1,
									icon: !1,
									separator_after: !1,
									label: "Copy",
									action: function(b) {
										var c = a.jstree.reference(b.reference),
											d = c.get_node(b.reference);
										c.copy(c.is_selected(d) ? c.get_top_selected() : d)
									}
								},
								paste: {
									separator_before: !1,
									icon: !1,
									_disabled: function(b) {
										return !a.jstree.reference(b.reference).can_paste()
									},
									separator_after: !1,
									label: "Paste",
									action: function(b) {
										var c = a.jstree.reference(b.reference),
											d = c.get_node(b.reference);
										c.paste(d)
									}
								}
							}
						}
					}
				}
			}, a.jstree.plugins.contextmenu = function(c, d) {
				this.bind = function() {
					d.bind.call(this);
					var b = 0,
						c = null,
						e, f;
					this.element.on("contextmenu.jstree", ".jstree-anchor", a.proxy(function(a, d) {
						a.preventDefault(), b = a.ctrlKey ? +new Date : 0, (d || c) && (b = +new Date + 1e4), c && clearTimeout(c), this.is_loading(a.currentTarget) || this.show_contextmenu(a.currentTarget, a.pageX, a.pageY, a)
					}, this)).on("click.jstree", ".jstree-anchor", a.proxy(function(c) {
						this._data.contextmenu.visible && (!b || +new Date - b > 250) && a.vakata.context.hide(), b = 0
					}, this)).on("touchstart.jstree", ".jstree-anchor", function(b) {
						b.originalEvent && b.originalEvent.changedTouches && b.originalEvent.changedTouches[0] && (e = b.pageX, f = b.pageY, c = setTimeout(function() {
							a(b.currentTarget).trigger("contextmenu", !0)
						}, 750))
					}).on("touchmove.vakata.jstree", function(a) {
						c && a.originalEvent && a.originalEvent.changedTouches && a.originalEvent.changedTouches[0] && (Math.abs(e - a.pageX) > 50 || Math.abs(f - a.pageY) > 50) && clearTimeout(c)
					}).on("touchend.vakata.jstree", function(a) {
						c && clearTimeout(c)
					}), a(i).on("context_hide.vakata.jstree", a.proxy(function() {
						this._data.contextmenu.visible = !1
					}, this))
				}, this.teardown = function() {
					this._data.contextmenu.visible && a.vakata.context.hide(), d.teardown.call(this)
				}, this.show_contextmenu = function(c, d, e, f) {
					if(c = this.get_node(c), !c || "#" === c.id) return !1;
					var g = this.settings.contextmenu,
						h = this.get_node(c, !0),
						i = h.children(".jstree-anchor"),
						j = !1,
						k = !1;
					(g.show_at_node || d === b || e === b) && (j = i.offset(), d = j.left, e = j.top + this._data.core.li_height), this.settings.contextmenu.select_node && !this.is_selected(c) && this.activate_node(c, f), k = g.items, a.isFunction(k) && (k = k.call(this, c, a.proxy(function(a) {
						this._show_contextmenu(c, d, e, a)
					}, this))), a.isPlainObject(k) && this._show_contextmenu(c, d, e, k)
				}, this._show_contextmenu = function(b, c, d, e) {
					var f = this.get_node(b, !0),
						g = f.children(".jstree-anchor");
					a(i).one("context_show.vakata.jstree", a.proxy(function(b, c) {
						var d = "jstree-contextmenu jstree-" + this.get_theme() + "-contextmenu";
						a(c.element).addClass(d)
					}, this)), this._data.contextmenu.visible = !0, a.vakata.context.show(g, {
						x: c,
						y: d
					}, e), this.trigger("show_contextmenu", {
						node: b,
						x: c,
						y: d
					})
				}
			},
			function(a) {
				var b = !1,
					c = {
						element: !1,
						reference: !1,
						position_x: 0,
						position_y: 0,
						items: [],
						html: "",
						is_visible: !1
					};
				a.vakata.context = {
					settings: {
						hide_onmouseleave: 0,
						icons: !0
					},
					_trigger: function(b) {
						a(i).triggerHandler("context_" + b + ".vakata", {
							reference: c.reference,
							element: c.element,
							position: {
								x: c.position_x,
								y: c.position_y
							}
						})
					},
					_execute: function(b) {
						return b = c.items[b], b && (!b._disabled || a.isFunction(b._disabled) && !b._disabled({
							item: b,
							reference: c.reference,
							element: c.element
						})) && b.action ? b.action.call(null, {
							item: b,
							reference: c.reference,
							element: c.element,
							position: {
								x: c.position_x,
								y: c.position_y
							}
						}) : !1
					},
					_parse: function(b, d) {
						if(!b) return !1;
						d || (c.html = "", c.items = []);
						var e = "",
							f = !1,
							g;
						return d && (e += "<ul>"), a.each(b, function(b, d) {
							return d ? (c.items.push(d), !f && d.separator_before && (e += "<li class='vakata-context-separator'><a href='#' " + (a.vakata.context.settings.icons ? "" : 'style="margin-left:0px;"') + ">&#160;</a></li>"), f = !1, e += "<li class='" + (d._class || "") + (d._disabled === !0 || a.isFunction(d._disabled) && d._disabled({
								item: d,
								reference: c.reference,
								element: c.element
							}) ? " vakata-contextmenu-disabled " : "") + "' " + (d.shortcut ? " data-shortcut='" + d.shortcut + "' " : "") + ">", e += "<a href='#' rel='" + (c.items.length - 1) + "'>", a.vakata.context.settings.icons && (e += "<i ", d.icon && (e += -1 !== d.icon.indexOf("/") || -1 !== d.icon.indexOf(".") ? " style='background:url(\"" + d.icon + "\") center center no-repeat' " : " class='" + d.icon + "' "), e += "></i><span class='vakata-contextmenu-sep'>&#160;</span>"), e += (a.isFunction(d.label) ? d.label({
								item: b,
								reference: c.reference,
								element: c.element
							}) : d.label) + (d.shortcut ? ' <span class="vakata-contextmenu-shortcut vakata-contextmenu-shortcut-' + d.shortcut + '">' + (d.shortcut_label || "") + "</span>" : "") + "</a>", d.submenu && (g = a.vakata.context._parse(d.submenu, !0), g && (e += g)), e += "</li>", void(d.separator_after && (e += "<li class='vakata-context-separator'><a href='#' " + (a.vakata.context.settings.icons ? "" : 'style="margin-left:0px;"') + ">&#160;</a></li>", f = !0))) : !0
						}), e = e.replace(/<li class\='vakata-context-separator'\><\/li\>$/, ""), d && (e += "</ul>"), d || (c.html = e, a.vakata.context._trigger("parse")), e.length > 10 ? e : !1
					},
					_show_submenu: function(c) {
						if(c = a(c), c.length && c.children("ul").length) {
							var d = c.children("ul"),
								e = c.offset().left + c.outerWidth(),
								f = c.offset().top,
								g = d.width(),
								h = d.height(),
								i = a(window).width() + a(window).scrollLeft(),
								j = a(window).height() + a(window).scrollTop();
							b ? c[e - (g + 10 + c.outerWidth()) < 0 ? "addClass" : "removeClass"]("vakata-context-left") : c[e + g + 10 > i ? "addClass" : "removeClass"]("vakata-context-right"), f + h + 10 > j && d.css("bottom", "-1px"), d.show()
						}
					},
					show: function(d, e, f) {
						var g, h, i, j, k, l, m, n, o = !0;
						switch(c.element && c.element.length && c.element.width(""), o) {
							case !e && !d:
								return !1;
							case !!e && !!d:
								c.reference = d, c.position_x = e.x, c.position_y = e.y;
								break;
							case !e && !!d:
								c.reference = d, g = d.offset(), c.position_x = g.left + d.outerHeight(), c.position_y = g.top;
								break;
							case !!e && !d:
								c.position_x = e.x, c.position_y = e.y
						}
						d && !f && a(d).data("vakata_contextmenu") && (f = a(d).data("vakata_contextmenu")), a.vakata.context._parse(f) && c.element.html(c.html), c.items.length && (c.element.appendTo("body"), h = c.element, i = c.position_x, j = c.position_y, k = h.width(), l = h.height(), m = a(window).width() + a(window).scrollLeft(), n = a(window).height() + a(window).scrollTop(), b && (i -= h.outerWidth() - a(d).outerWidth(), i < a(window).scrollLeft() + 20 && (i = a(window).scrollLeft() + 20)), i + k + 20 > m && (i = m - (k + 20)), j + l + 20 > n && (j = n - (l + 20)), c.element.css({
							left: i,
							top: j
						}).show().find("a").first().focus().parent().addClass("vakata-context-hover"), c.is_visible = !0, a.vakata.context._trigger("show"))
					},
					hide: function() {
						c.is_visible && (c.element.hide().find("ul").hide().end().find(":focus").blur().end().detach(), c.is_visible = !1, a.vakata.context._trigger("hide"))
					}
				}, a(function() {
					b = "rtl" === a("body").css("direction");
					var d = !1;
					c.element = a("<ul class='vakata-context'></ul>"), c.element.on("mouseenter", "li", function(b) {
						b.stopImmediatePropagation(), a.contains(this, b.relatedTarget) || (d && clearTimeout(d), c.element.find(".vakata-context-hover").removeClass("vakata-context-hover").end(), a(this).siblings().find("ul").hide().end().end().parentsUntil(".vakata-context", "li").addBack().addClass("vakata-context-hover"), a.vakata.context._show_submenu(this))
					}).on("mouseleave", "li", function(b) {
						a.contains(this, b.relatedTarget) || a(this).find(".vakata-context-hover").addBack().removeClass("vakata-context-hover")
					}).on("mouseleave", function(b) {
						a(this).find(".vakata-context-hover").removeClass("vakata-context-hover"), a.vakata.context.settings.hide_onmouseleave && (d = setTimeout(function(b) {
							return function() {
								a.vakata.context.hide()
							}
						}(this), a.vakata.context.settings.hide_onmouseleave))
					}).on("click", "a", function(b) {
						b.preventDefault(), a(this).blur().parent().hasClass("vakata-context-disabled") || a.vakata.context._execute(a(this).attr("rel")) === !1 || a.vakata.context.hide()
					}).on("keydown", "a", function(b) {
						var d = null;
						switch(b.which) {
							case 13:
							case 32:
								b.type = "mouseup", b.preventDefault(), a(b.currentTarget).trigger(b);
								break;
							case 37:
								c.is_visible && (c.element.find(".vakata-context-hover").last().closest("li").first().find("ul").hide().find(".vakata-context-hover").removeClass("vakata-context-hover").end().end().children("a").focus(), b.stopImmediatePropagation(), b.preventDefault());
								break;
							case 38:
								c.is_visible && (d = c.element.find("ul:visible").addBack().last().children(".vakata-context-hover").removeClass("vakata-context-hover").prevAll("li:not(.vakata-context-separator)").first(), d.length || (d = c.element.find("ul:visible").addBack().last().children("li:not(.vakata-context-separator)").last()), d.addClass("vakata-context-hover").children("a").focus(), b.stopImmediatePropagation(), b.preventDefault());
								break;
							case 39:
								c.is_visible && (c.element.find(".vakata-context-hover").last().children("ul").show().children("li:not(.vakata-context-separator)").removeClass("vakata-context-hover").first().addClass("vakata-context-hover").children("a").focus(), b.stopImmediatePropagation(), b.preventDefault());
								break;
							case 40:
								c.is_visible && (d = c.element.find("ul:visible").addBack().last().children(".vakata-context-hover").removeClass("vakata-context-hover").nextAll("li:not(.vakata-context-separator)").first(), d.length || (d = c.element.find("ul:visible").addBack().last().children("li:not(.vakata-context-separator)").first()), d.addClass("vakata-context-hover").children("a").focus(), b.stopImmediatePropagation(), b.preventDefault());
								break;
							case 27:
								a.vakata.context.hide(), b.preventDefault()
						}
					}).on("keydown", function(a) {
						a.preventDefault();
						var b = c.element.find(".vakata-contextmenu-shortcut-" + a.which).parent();
						b.parent().not(".vakata-context-disabled") && b.click()
					}), a(i).on("mousedown.vakata.jstree", function(b) {
						c.is_visible && !a.contains(c.element[0], b.target) && a.vakata.context.hide()
					}).on("context_show.vakata.jstree", function(a, d) {
						c.element.find("li:has(ul)").children("a").addClass("vakata-context-parent"), b && c.element.addClass("vakata-context-rtl").css("direction", "rtl"), c.element.find("ul").hide().end()
					})
				})
			}(a), a.jstree.defaults.dnd = {
				copy: !0,
				open_timeout: 500,
				is_draggable: !0,
				check_while_dragging: !0,
				always_copy: !1,
				inside_pos: 0,
				drag_selection: !0,
				touch: !0,
				large_drop_target: !1,
				large_drag_target: !1
			}, a.jstree.plugins.dnd = function(b, c) {
				this.bind = function() {
					c.bind.call(this), this.element.on("mousedown.jstree touchstart.jstree", this.settings.dnd.large_drag_target ? ".jstree-node" : ".jstree-anchor", a.proxy(function(b) {
						if(this.settings.dnd.large_drag_target && a(b.target).closest(".jstree-node")[0] !== b.currentTarget) return !0;
						if("touchstart" === b.type && (!this.settings.dnd.touch || "selected" === this.settings.dnd.touch && !a(b.currentTarget).closest(".jstree-node").children(".jstree-anchor").hasClass("jstree-clicked"))) return !0;
						var c = this.get_node(b.target),
							d = this.is_selected(c) && this.settings.dnd.drag_selection ? this.get_top_selected().length : 1,
							e = d > 1 ? d + " " + this.get_string("nodes") : this.get_text(b.currentTarget);
						return this.settings.core.force_text && (e = a.vakata.html.escape(e)), c && c.id && "#" !== c.id && (1 === b.which || "touchstart" === b.type) && (this.settings.dnd.is_draggable === !0 || a.isFunction(this.settings.dnd.is_draggable) && this.settings.dnd.is_draggable.call(this, d > 1 ? this.get_top_selected(!0) : [c])) ? (this.element.trigger("mousedown.jstree"), a.vakata.dnd.start(b, {
							jstree: !0,
							origin: this,
							obj: this.get_node(c, !0),
							nodes: d > 1 ? this.get_top_selected() : [c.id]
						}, '<div id="jstree-dnd" class="jstree-' + this.get_theme() + " jstree-" + this.get_theme() + "-" + this.get_theme_variant() + " " + (this.settings.core.themes.responsive ? " jstree-dnd-responsive" : "") + '"><i class="jstree-icon jstree-er"></i>' + e + '<ins class="jstree-copy" style="display:none;">+</ins></div>')) : void 0
					}, this))
				}
			}, a(function() {
				var b = !1,
					c = !1,
					d = !1,
					e = a('<div id="jstree-marker">&#160;</div>').hide();
				a(i).on("dnd_start.vakata.jstree", function(a, c) {
					b = !1, c && c.data && c.data.jstree && e.appendTo("body")
				}).on("dnd_move.vakata.jstree", function(f, g) {
					if(d && clearTimeout(d), g && g.data && g.data.jstree && (!g.event.target.id || "jstree-marker" !== g.event.target.id)) {
						var h = a.jstree.reference(g.event.target),
							i = !1,
							j = !1,
							k = !1,
							l, m, n, o, p, q, r, s, t, u, v, w, x, y, z;
						if(h && h._data && h._data.dnd)
							if(e.attr("class", "jstree-" + h.get_theme() + (h.settings.core.themes.responsive ? " jstree-dnd-responsive" : "")), g.helper.children().attr("class", "jstree-" + h.get_theme() + " jstree-" + h.get_theme() + "-" + h.get_theme_variant() + " " + (h.settings.core.themes.responsive ? " jstree-dnd-responsive" : "")).find(".jstree-copy").first()[g.data.origin && (g.data.origin.settings.dnd.always_copy || g.data.origin.settings.dnd.copy && (g.event.metaKey || g.event.ctrlKey)) ? "show" : "hide"](), g.event.target !== h.element[0] && g.event.target !== h.get_container_ul()[0] || 0 !== h.get_container_ul().children().length) {
								if(i = h.settings.dnd.large_drop_target ? a(g.event.target).closest(".jstree-node").children(".jstree-anchor") : a(g.event.target).closest(".jstree-anchor"), i && i.length && i.parent().is(".jstree-closed, .jstree-open, .jstree-leaf") && (j = i.offset(), k = g.event.pageY - j.top, o = i.outerHeight(), r = o / 3 > k ? ["b", "i", "a"] : k > o - o / 3 ? ["a", "i", "b"] : k > o / 2 ? ["i", "a", "b"] : ["i", "b", "a"], a.each(r, function(f, k) {
										switch(k) {
											case "b":
												m = j.left - 6, n = j.top, p = h.get_parent(i), q = i.parent().index();
												break;
											case "i":
												y = h.settings.dnd.inside_pos, z = h.get_node(i.parent()), m = j.left - 2, n = j.top + o / 2 + 1, p = z.id, q = "first" === y ? 0 : "last" === y ? z.children.length : Math.min(y, z.children.length);
												break;
											case "a":
												m = j.left - 6, n = j.top + o, p = h.get_parent(i), q = i.parent().index() + 1
										}
										for(s = !0, t = 0, u = g.data.nodes.length; u > t; t++)
											if(v = g.data.origin && (g.data.origin.settings.dnd.always_copy || g.data.origin.settings.dnd.copy && (g.event.metaKey || g.event.ctrlKey)) ? "copy_node" : "move_node", w = q, "move_node" === v && "a" === k && g.data.origin && g.data.origin === h && p === h.get_parent(g.data.nodes[t]) && (x = h.get_node(p), w > a.inArray(g.data.nodes[t], x.children) && (w -= 1)), s = s && (h && h.settings && h.settings.dnd && h.settings.dnd.check_while_dragging === !1 || h.check(v, g.data.origin && g.data.origin !== h ? g.data.origin.get_node(g.data.nodes[t]) : g.data.nodes[t], p, w, {
													dnd: !0,
													ref: h.get_node(i.parent()),
													pos: k,
													origin: g.data.origin,
													is_multi: g.data.origin && g.data.origin !== h,
													is_foreign: !g.data.origin
												})), !s) {
												h && h.last_error && (c = h.last_error());
												break
											}
										return "i" === k && i.parent().is(".jstree-closed") && h.settings.dnd.open_timeout && (d = setTimeout(function(a, b) {
											return function() {
												a.open_node(b)
											}
										}(h, i), h.settings.dnd.open_timeout)), s ? (b = {
											ins: h,
											par: p,
											pos: "i" !== k || "last" !== y || 0 !== q || h.is_loaded(z) ? q : "last"
										}, e.css({
											left: m + "px",
											top: n + "px"
										}).show(), g.helper.find(".jstree-icon").first().removeClass("jstree-er").addClass("jstree-ok"), c = {}, r = !0, !1) : void 0
									}), r === !0)) return
							} else {
								for(s = !0, t = 0, u = g.data.nodes.length; u > t; t++)
									if(s = s && h.check(g.data.origin && (g.data.origin.settings.dnd.always_copy || g.data.origin.settings.dnd.copy && (g.event.metaKey || g.event.ctrlKey)) ? "copy_node" : "move_node", g.data.origin && g.data.origin !== h ? g.data.origin.get_node(g.data.nodes[t]) : g.data.nodes[t], "#", "last", {
											dnd: !0,
											ref: h.get_node("#"),
											pos: "i",
											origin: g.data.origin,
											is_multi: g.data.origin && g.data.origin !== h,
											is_foreign: !g.data.origin
										}), !s) break;
								if(s) return b = {
									ins: h,
									par: "#",
									pos: "last"
								}, e.hide(), void g.helper.find(".jstree-icon").first().removeClass("jstree-er").addClass("jstree-ok")
							}
						b = !1, g.helper.find(".jstree-icon").removeClass("jstree-ok").addClass("jstree-er"), e.hide()
					}
				}).on("dnd_scroll.vakata.jstree", function(a, c) {
					c && c.data && c.data.jstree && (e.hide(), b = !1, c.helper.find(".jstree-icon").first().removeClass("jstree-ok").addClass("jstree-er"))
				}).on("dnd_stop.vakata.jstree", function(f, g) {
					if(d && clearTimeout(d), g && g.data && g.data.jstree) {
						e.hide().detach();
						var h, i, j = [];
						if(b) {
							for(h = 0, i = g.data.nodes.length; i > h; h++) j[h] = g.data.origin ? g.data.origin.get_node(g.data.nodes[h]) : g.data.nodes[h];
							b.ins[g.data.origin && (g.data.origin.settings.dnd.always_copy || g.data.origin.settings.dnd.copy && (g.event.metaKey || g.event.ctrlKey)) ? "copy_node" : "move_node"](j, b.par, b.pos, !1, !1, !1, g.data.origin)
						} else h = a(g.event.target).closest(".jstree"), h.length && c && c.error && "check" === c.error && (h = h.jstree(!0), h && h.settings.core.error.call(this, c))
					}
				}).on("keyup.jstree keydown.jstree", function(b, c) {
					c = a.vakata.dnd._get(), c && c.data && c.data.jstree && c.helper.find(".jstree-copy").first()[c.data.origin && (c.data.origin.settings.dnd.always_copy || c.data.origin.settings.dnd.copy && (b.metaKey || b.ctrlKey)) ? "show" : "hide"]()
				})
			}),
			function(a) {
				a.vakata.html = {
					div: a("<div />"),
					escape: function(b) {
						return a.vakata.html.div.text(b).html()
					},
					strip: function(b) {
						return a.vakata.html.div.empty().append(a.parseHTML(b)).text()
					}
				};
				var b = {
					element: !1,
					target: !1,
					is_down: !1,
					is_drag: !1,
					helper: !1,
					helper_w: 0,
					data: !1,
					init_x: 0,
					init_y: 0,
					scroll_l: 0,
					scroll_t: 0,
					scroll_e: !1,
					scroll_i: !1,
					is_touch: !1
				};
				a.vakata.dnd = {
					settings: {
						scroll_speed: 10,
						scroll_proximity: 20,
						helper_left: 5,
						helper_top: 10,
						threshold: 5,
						threshold_touch: 50
					},
					_trigger: function(b, c) {
						var d = a.vakata.dnd._get();
						d.event = c, a(i).triggerHandler("dnd_" + b + ".vakata", d)
					},
					_get: function() {
						return {
							data: b.data,
							element: b.element,
							helper: b.helper
						}
					},
					_clean: function() {
						b.helper && b.helper.remove(), b.scroll_i && (clearInterval(b.scroll_i), b.scroll_i = !1), b = {
							element: !1,
							target: !1,
							is_down: !1,
							is_drag: !1,
							helper: !1,
							helper_w: 0,
							data: !1,
							init_x: 0,
							init_y: 0,
							scroll_l: 0,
							scroll_t: 0,
							scroll_e: !1,
							scroll_i: !1,
							is_touch: !1
						}, a(i).off("mousemove.vakata.jstree touchmove.vakata.jstree", a.vakata.dnd.drag), a(i).off("mouseup.vakata.jstree touchend.vakata.jstree", a.vakata.dnd.stop)
					},
					_scroll: function(c) {
						if(!b.scroll_e || !b.scroll_l && !b.scroll_t) return b.scroll_i && (clearInterval(b.scroll_i), b.scroll_i = !1), !1;
						if(!b.scroll_i) return b.scroll_i = setInterval(a.vakata.dnd._scroll, 100), !1;
						if(c === !0) return !1;
						var d = b.scroll_e.scrollTop(),
							e = b.scroll_e.scrollLeft();
						b.scroll_e.scrollTop(d + b.scroll_t * a.vakata.dnd.settings.scroll_speed), b.scroll_e.scrollLeft(e + b.scroll_l * a.vakata.dnd.settings.scroll_speed), (d !== b.scroll_e.scrollTop() || e !== b.scroll_e.scrollLeft()) && a.vakata.dnd._trigger("scroll", b.scroll_e)
					},
					start: function(c, d, e) {
						"touchstart" === c.type && c.originalEvent && c.originalEvent.changedTouches && c.originalEvent.changedTouches[0] && (c.pageX = c.originalEvent.changedTouches[0].pageX, c.pageY = c.originalEvent.changedTouches[0].pageY, c.target = i.elementFromPoint(c.originalEvent.changedTouches[0].pageX - window.pageXOffset, c.originalEvent.changedTouches[0].pageY - window.pageYOffset)), b.is_drag && a.vakata.dnd.stop({});
						try {
							c.currentTarget.unselectable = "on", c.currentTarget.onselectstart = function() {
								return !1
							}, c.currentTarget.style && (c.currentTarget.style.MozUserSelect = "none")
						} catch(f) {}
						return b.init_x = c.pageX, b.init_y = c.pageY, b.data = d, b.is_down = !0, b.element = c.currentTarget, b.target = c.target, b.is_touch = "touchstart" === c.type, e !== !1 && (b.helper = a("<div id='vakata-dnd'></div>").html(e).css({
							display: "block",
							margin: "0",
							padding: "0",
							position: "absolute",
							top: "-2000px",
							lineHeight: "16px",
							zIndex: "10000"
						})), a(i).on("mousemove.vakata.jstree touchmove.vakata.jstree", a.vakata.dnd.drag), a(i).on("mouseup.vakata.jstree touchend.vakata.jstree", a.vakata.dnd.stop), !1
					},
					drag: function(c) {
						if("touchmove" === c.type && c.originalEvent && c.originalEvent.changedTouches && c.originalEvent.changedTouches[0] && (c.pageX = c.originalEvent.changedTouches[0].pageX, c.pageY = c.originalEvent.changedTouches[0].pageY, c.target = i.elementFromPoint(c.originalEvent.changedTouches[0].pageX - window.pageXOffset, c.originalEvent.changedTouches[0].pageY - window.pageYOffset)), b.is_down) {
							if(!b.is_drag) {
								if(!(Math.abs(c.pageX - b.init_x) > (b.is_touch ? a.vakata.dnd.settings.threshold_touch : a.vakata.dnd.settings.threshold) || Math.abs(c.pageY - b.init_y) > (b.is_touch ? a.vakata.dnd.settings.threshold_touch : a.vakata.dnd.settings.threshold))) return;
								b.helper && (b.helper.appendTo("body"), b.helper_w = b.helper.outerWidth()), b.is_drag = !0, a.vakata.dnd._trigger("start", c)
							}
							var d = !1,
								e = !1,
								f = !1,
								g = !1,
								h = !1,
								j = !1,
								k = !1,
								l = !1,
								m = !1,
								n = !1;
							return b.scroll_t = 0, b.scroll_l = 0, b.scroll_e = !1, a(a(c.target).parentsUntil("body").addBack().get().reverse()).filter(function() {
								return /^auto|scroll$/.test(a(this).css("overflow")) && (this.scrollHeight > this.offsetHeight || this.scrollWidth > this.offsetWidth)
							}).each(function() {
								var d = a(this),
									e = d.offset();
								return this.scrollHeight > this.offsetHeight && (e.top + d.height() - c.pageY < a.vakata.dnd.settings.scroll_proximity && (b.scroll_t = 1), c.pageY - e.top < a.vakata.dnd.settings.scroll_proximity && (b.scroll_t = -1)), this.scrollWidth > this.offsetWidth && (e.left + d.width() - c.pageX < a.vakata.dnd.settings.scroll_proximity && (b.scroll_l = 1), c.pageX - e.left < a.vakata.dnd.settings.scroll_proximity && (b.scroll_l = -1)), b.scroll_t || b.scroll_l ? (b.scroll_e = a(this), !1) : void 0
							}), b.scroll_e || (d = a(i), e = a(window), f = d.height(), g = e.height(), h = d.width(), j = e.width(), k = d.scrollTop(), l = d.scrollLeft(), f > g && c.pageY - k < a.vakata.dnd.settings.scroll_proximity && (b.scroll_t = -1), f > g && g - (c.pageY - k) < a.vakata.dnd.settings.scroll_proximity && (b.scroll_t = 1), h > j && c.pageX - l < a.vakata.dnd.settings.scroll_proximity && (b.scroll_l = -1), h > j && j - (c.pageX - l) < a.vakata.dnd.settings.scroll_proximity && (b.scroll_l = 1), (b.scroll_t || b.scroll_l) && (b.scroll_e = d)), b.scroll_e && a.vakata.dnd._scroll(!0), b.helper && (m = parseInt(c.pageY + a.vakata.dnd.settings.helper_top, 10), n = parseInt(c.pageX + a.vakata.dnd.settings.helper_left, 10), f && m + 25 > f && (m = f - 50), h && n + b.helper_w > h && (n = h - (b.helper_w + 2)), b.helper.css({
								left: n + "px",
								top: m + "px"
							})), a.vakata.dnd._trigger("move", c), !1
						}
					},
					stop: function(c) {
						if("touchend" === c.type && c.originalEvent && c.originalEvent.changedTouches && c.originalEvent.changedTouches[0] && (c.pageX = c.originalEvent.changedTouches[0].pageX, c.pageY = c.originalEvent.changedTouches[0].pageY, c.target = i.elementFromPoint(c.originalEvent.changedTouches[0].pageX - window.pageXOffset, c.originalEvent.changedTouches[0].pageY - window.pageYOffset)), b.is_drag) a.vakata.dnd._trigger("stop", c);
						else if("touchend" === c.type && c.target === b.target) {
							var d = setTimeout(function() {
								a(c.target).click()
							}, 100);
							a(c.target).one("click", function() {
								d && clearTimeout(d)
							})
						}
						return a.vakata.dnd._clean(), !1
					}
				}
			}(a), a.jstree.defaults.massload = null, a.jstree.plugins.massload = function(b, c) {
				this.init = function(a, b) {
					c.init.call(this, a, b), this._data.massload = {}
				}, this._load_nodes = function(b, d, e) {
					var f = this.settings.massload;
					return e && !a.isEmptyObject(this._data.massload) ? c._load_nodes.call(this, b, d, e) : a.isFunction(f) ? f.call(this, b, a.proxy(function(a) {
						if(a)
							for(var f in a) a.hasOwnProperty(f) && (this._data.massload[f] = a[f]);
						c._load_nodes.call(this, b, d, e)
					}, this)) : "object" == typeof f && f && f.url ? (f = a.extend(!0, {}, f), a.isFunction(f.url) && (f.url = f.url.call(this, b)), a.isFunction(f.data) && (f.data = f.data.call(this, b)), a.ajax(f).done(a.proxy(function(a, f, g) {
						if(a)
							for(var h in a) a.hasOwnProperty(h) && (this._data.massload[h] = a[h]);
						c._load_nodes.call(this, b, d, e)
					}, this)).fail(a.proxy(function(a) {
						c._load_nodes.call(this, b, d, e)
					}, this))) : c._load_nodes.call(this, b, d, e)
				}, this._load_node = function(b, d) {
					var e = this._data.massload[b.id];
					return e ? this["string" == typeof e ? "_append_html_data" : "_append_json_data"](b, "string" == typeof e ? a(a.parseHTML(e)).filter(function() {
						return 3 !== this.nodeType
					}) : e, function(a) {
						d.call(this, a), delete this._data.massload[b.id]
					}) : c._load_node.call(this, b, d)
				}
			}, a.jstree.defaults.search = {
				ajax: !1,
				fuzzy: !1,
				case_sensitive: !1,
				show_only_matches: !1,
				close_opened_onclear: !0,
				search_leaves_only: !1,
				search_callback: !1
			}, a.jstree.plugins.search = function(c, d) {
				this.bind = function() {
					d.bind.call(this), this._data.search.str = "", this._data.search.dom = a(), this._data.search.res = [], this._data.search.opn = [], this._data.search.som = !1, this.element.on("before_open.jstree", a.proxy(function(b, c) {
						var d, e, f, g = this._data.search.res,
							h = [],
							i = a();
						if(g && g.length && (this._data.search.dom = a(this.element[0].querySelectorAll("#" + a.map(g, function(b) {
								return -1 !== "0123456789".indexOf(b[0]) ? "\\3" + b[0] + " " + b.substr(1).replace(a.jstree.idregex, "\\$&") : b.replace(a.jstree.idregex, "\\$&")
							}).join(", #"))), this._data.search.dom.children(".jstree-anchor").addClass("jstree-search"), this._data.search.som && this._data.search.res.length)) {
							for(d = 0, e = g.length; e > d; d++) h = h.concat(this.get_node(g[d]).parents);
							h = a.vakata.array_remove_item(a.vakata.array_unique(h), "#"), i = h.length ? a(this.element[0].querySelectorAll("#" + a.map(h, function(b) {
								return -1 !== "0123456789".indexOf(b[0]) ? "\\3" + b[0] + " " + b.substr(1).replace(a.jstree.idregex, "\\$&") : b.replace(a.jstree.idregex, "\\$&")
							}).join(", #"))) : a(), this.element.find(".jstree-node").hide().filter(".jstree-last").filter(function() {
								return this.nextSibling
							}).removeClass("jstree-last"), i = i.add(this._data.search.dom), i.parentsUntil(".jstree").addBack().show().filter(".jstree-children").each(function() {
								a(this).children(".jstree-node:visible").eq(-1).addClass("jstree-last")
							})
						}
					}, this)).on("search.jstree", a.proxy(function(b, c) {
						this._data.search.som && c.nodes.length && (this.element.find(".jstree-node").hide().filter(".jstree-last").filter(function() {
							return this.nextSibling
						}).removeClass("jstree-last"), c.nodes.parentsUntil(".jstree").addBack().show().filter(".jstree-children").each(function() {
							a(this).children(".jstree-node:visible").eq(-1).addClass("jstree-last")
						}))
					}, this)).on("clear_search.jstree", a.proxy(function(a, b) {
						this._data.search.som && b.nodes.length && this.element.find(".jstree-node").css("display", "").filter(".jstree-last").filter(function() {
							return this.nextSibling
						}).removeClass("jstree-last")
					}, this))
				}, this.search = function(c, d, e, f, g) {
					if(c === !1 || "" === a.trim(c.toString())) return this.clear_search();
					f = this.get_node(f), f = f && f.id ? f.id : null, c = c.toString();
					var h = this.settings.search,
						i = h.ajax ? h.ajax : !1,
						j = this._model.data,
						k = null,
						l = [],
						m = [],
						n, o;
					return this._data.search.res.length && !g && this.clear_search(), e === b && (e = h.show_only_matches), d || i === !1 ? (g || (this._data.search.str = c, this._data.search.dom = a(), this._data.search.res = [], this._data.search.opn = [], this._data.search.som = e), k = new a.vakata.search(c, !0, {
						caseSensitive: h.case_sensitive,
						fuzzy: h.fuzzy
					}), a.each(j[f ? f : "#"].children_d, function(a, b) {
						var d = j[b];
						d.text && (h.search_callback && h.search_callback.call(this, c, d) || !h.search_callback && k.search(d.text).isMatch) && (!h.search_leaves_only || d.state.loaded && 0 === d.children.length) && (l.push(b), m = m.concat(d.parents))
					}), l.length && (m = a.vakata.array_unique(m), this._search_open(m), g ? (this._data.search.dom = this._data.search.dom.add(a(this.element[0].querySelectorAll("#" + a.map(l, function(b) {
						return -1 !== "0123456789".indexOf(b[0]) ? "\\3" + b[0] + " " + b.substr(1).replace(a.jstree.idregex, "\\$&") : b.replace(a.jstree.idregex, "\\$&")
					}).join(", #")))), this._data.search.res = a.vakata.array_unique(this._data.search.res.concat(l))) : (this._data.search.dom = a(this.element[0].querySelectorAll("#" + a.map(l, function(b) {
						return -1 !== "0123456789".indexOf(b[0]) ? "\\3" + b[0] + " " + b.substr(1).replace(a.jstree.idregex, "\\$&") : b.replace(a.jstree.idregex, "\\$&")
					}).join(", #"))), this._data.search.res = l), this._data.search.dom.children(".jstree-anchor").addClass("jstree-search")), void this.trigger("search", {
						nodes: this._data.search.dom,
						str: c,
						res: this._data.search.res,
						show_only_matches: e
					})) : a.isFunction(i) ? i.call(this, c, a.proxy(function(b) {
						b && b.d && (b = b.d), this._load_nodes(a.isArray(b) ? a.vakata.array_unique(b) : [], function() {
							this.search(c, !0, e, f, g)
						}, !0)
					}, this), f) : (i = a.extend({}, i), i.data || (i.data = {}), i.data.str = c, f && (i.data.inside = f), a.ajax(i).fail(a.proxy(function() {
						this._data.core.last_error = {
							error: "ajax",
							plugin: "search",
							id: "search_01",
							reason: "Could not load search parents",
							data: JSON.stringify(i)
						}, this.settings.core.error.call(this, this._data.core.last_error)
					}, this)).done(a.proxy(function(b) {
						b && b.d && (b = b.d), this._load_nodes(a.isArray(b) ? a.vakata.array_unique(b) : [], function() {
							this.search(c, !0, e, f, g)
						}, !0)
					}, this)))
				}, this.clear_search = function() {
					this._data.search.dom.children(".jstree-anchor").removeClass("jstree-search"), this.settings.search.close_opened_onclear && this.close_node(this._data.search.opn, 0), this.trigger("clear_search", {
						nodes: this._data.search.dom,
						str: this._data.search.str,
						res: this._data.search.res
					}), this._data.search.str = "", this._data.search.res = [], this._data.search.opn = [], this._data.search.dom = a()
				}, this._search_open = function(b) {
					var c = this;
					a.each(b.concat([]), function(d, e) {
						if("#" === e) return !0;
						try {
							e = a("#" + e.replace(a.jstree.idregex, "\\$&"), c.element)
						} catch(f) {}
						e && e.length && c.is_closed(e) && (c._data.search.opn.push(e[0].id), c.open_node(e, function() {
							c._search_open(b)
						}, 0))
					})
				}
			},
			function(a) {
				a.vakata.search = function(b, c, d) {
					d = d || {}, d = a.extend({}, a.vakata.search.defaults, d), d.fuzzy !== !1 && (d.fuzzy = !0), b = d.caseSensitive ? b : b.toLowerCase();
					var e = d.location,
						f = d.distance,
						g = d.threshold,
						h = b.length,
						i, j, k, l;
					return h > 32 && (d.fuzzy = !1), d.fuzzy && (i = 1 << h - 1, j = function() {
						var a = {},
							c = 0;
						for(c = 0; h > c; c++) a[b.charAt(c)] = 0;
						for(c = 0; h > c; c++) a[b.charAt(c)] |= 1 << h - c - 1;
						return a
					}(), k = function(a, b) {
						var c = a / h,
							d = Math.abs(e - b);
						return f ? c + d / f : d ? 1 : c
					}), l = function(a) {
						if(a = d.caseSensitive ? a : a.toLowerCase(), b === a || -1 !== a.indexOf(b)) return {
							isMatch: !0,
							score: 0
						};
						if(!d.fuzzy) return {
							isMatch: !1,
							score: 1
						};
						var c, f, l = a.length,
							m = g,
							n = a.indexOf(b, e),
							o, p, q = h + l,
							r, s, t, u, v, w = 1,
							x = [];
						for(-1 !== n && (m = Math.min(k(0, n), m), n = a.lastIndexOf(b, e + h), -1 !== n && (m = Math.min(k(0, n), m))), n = -1, c = 0; h > c; c++) {
							o = 0, p = q;
							while(p > o) k(c, e + p) <= m ? o = p : q = p, p = Math.floor((q - o) / 2 + o);
							for(q = p, s = Math.max(1, e - p + 1), t = Math.min(e + p, l) + h, u = new Array(t + 2), u[t + 1] = (1 << c) - 1, f = t; f >= s; f--)
								if(v = j[a.charAt(f - 1)], u[f] = 0 === c ? (u[f + 1] << 1 | 1) & v : (u[f + 1] << 1 | 1) & v | ((r[f + 1] | r[f]) << 1 | 1) | r[f + 1], u[f] & i && (w = k(c, f - 1), m >= w)) {
									if(m = w, n = f - 1, x.push(n), !(n > e)) break;
									s = Math.max(1, 2 * e - n)
								}
							if(k(c + 1, e) > m) break;
							r = u
						}
						return {
							isMatch: n >= 0,
							score: w
						}
					}, c === !0 ? {
						search: l
					} : l(c)
				}, a.vakata.search.defaults = {
					location: 0,
					distance: 100,
					threshold: .6,
					fuzzy: !1,
					caseSensitive: !1
				}
			}(a), a.jstree.defaults.sort = function(a, b) {
				return this.get_text(a) > this.get_text(b) ? 1 : -1
			}, a.jstree.plugins.sort = function(b, c) {
				this.bind = function() {
					c.bind.call(this), this.element.on("model.jstree", a.proxy(function(a, b) {
						this.sort(b.parent, !0)
					}, this)).on("rename_node.jstree create_node.jstree", a.proxy(function(a, b) {
						this.sort(b.parent || b.node.parent, !1), this.redraw_node(b.parent || b.node.parent, !0)
					}, this)).on("move_node.jstree copy_node.jstree", a.proxy(function(a, b) {
						this.sort(b.parent, !1), this.redraw_node(b.parent, !0)
					}, this))
				}, this.sort = function(b, c) {
					var d, e;
					if(b = this.get_node(b), b && b.children && b.children.length && (b.children.sort(a.proxy(this.settings.sort, this)), c))
						for(d = 0, e = b.children_d.length; e > d; d++) this.sort(b.children_d[d], !1)
				}
			};
		var n = !1;
		a.jstree.defaults.state = {
				key: "jstree",
				events: "changed.jstree open_node.jstree close_node.jstree check_node.jstree uncheck_node.jstree",
				ttl: !1,
				filter: !1
			}, a.jstree.plugins.state = function(b, c) {
				this.bind = function() {
					c.bind.call(this);
					var b = a.proxy(function() {
						this.element.on(this.settings.state.events, a.proxy(function() {
							n && clearTimeout(n), n = setTimeout(a.proxy(function() {
								this.save_state()
							}, this), 100)
						}, this)), this.trigger("state_ready")
					}, this);
					this.element.on("ready.jstree", a.proxy(function(a, c) {
						this.element.one("restore_state.jstree", b), this.restore_state() || b()
					}, this))
				}, this.save_state = function() {
					var b = {
						state: this.get_state(),
						ttl: this.settings.state.ttl,
						sec: +new Date
					};
					a.vakata.storage.set(this.settings.state.key, JSON.stringify(b))
				}, this.restore_state = function() {
					var b = a.vakata.storage.get(this.settings.state.key);
					if(b) try {
						b = JSON.parse(b)
					} catch(c) {
						return !1
					}
					return b && b.ttl && b.sec && +new Date - b.sec > b.ttl ? !1 : (b && b.state && (b = b.state), b && a.isFunction(this.settings.state.filter) && (b = this.settings.state.filter.call(this, b)), b ? (this.element.one("set_state.jstree", function(c, d) {
						d.instance.trigger("restore_state", {
							state: a.extend(!0, {}, b)
						})
					}), this.set_state(b), !0) : !1)
				}, this.clear_state = function() {
					return a.vakata.storage.del(this.settings.state.key)
				}
			},
			function(a, b) {
				a.vakata.storage = {
					set: function(a, b) {
						return window.localStorage.setItem(a, b)
					},
					get: function(a) {
						return window.localStorage.getItem(a)
					},
					del: function(a) {
						return window.localStorage.removeItem(a)
					}
				}
			}(a), a.jstree.defaults.types = {
				"#": {},
				"default": {}
			}, a.jstree.plugins.types = function(c, d) {
				this.init = function(a, c) {
					var e, f;
					if(c && c.types && c.types["default"])
						for(e in c.types)
							if("default" !== e && "#" !== e && c.types.hasOwnProperty(e))
								for(f in c.types["default"]) c.types["default"].hasOwnProperty(f) && c.types[e][f] === b && (c.types[e][f] = c.types["default"][f]);
					d.init.call(this, a, c), this._model.data["#"].type = "#"
				}, this.refresh = function(a, b) {
					d.refresh.call(this, a, b), this._model.data["#"].type = "#"
				}, this.bind = function() {
					this.element.on("model.jstree", a.proxy(function(a, c) {
						var d = this._model.data,
							e = c.nodes,
							f = this.settings.types,
							g, h, i = "default";
						for(g = 0, h = e.length; h > g; g++) i = "default", d[e[g]].original && d[e[g]].original.type && f[d[e[g]].original.type] && (i = d[e[g]].original.type), d[e[g]].data && d[e[g]].data.jstree && d[e[g]].data.jstree.type && f[d[e[g]].data.jstree.type] && (i = d[e[g]].data.jstree.type), d[e[g]].type = i, d[e[g]].icon === !0 && f[i].icon !== b && (d[e[g]].icon = f[i].icon);
						d["#"].type = "#"
					}, this)), d.bind.call(this)
				}, this.get_json = function(b, c, e) {
					var f, g, h = this._model.data,
						i = c ? a.extend(!0, {}, c, {
							no_id: !1
						}) : {},
						j = d.get_json.call(this, b, i, e);
					if(j === !1) return !1;
					if(a.isArray(j))
						for(f = 0, g = j.length; g > f; f++) j[f].type = j[f].id && h[j[f].id] && h[j[f].id].type ? h[j[f].id].type : "default", c && c.no_id && (delete j[f].id, j[f].li_attr && j[f].li_attr.id && delete j[f].li_attr.id, j[f].a_attr && j[f].a_attr.id && delete j[f].a_attr.id);
					else j.type = j.id && h[j.id] && h[j.id].type ? h[j.id].type : "default", c && c.no_id && (j = this._delete_ids(j));
					return j
				}, this._delete_ids = function(b) {
					if(a.isArray(b)) {
						for(var c = 0, d = b.length; d > c; c++) b[c] = this._delete_ids(b[c]);
						return b
					}
					return delete b.id, b.li_attr && b.li_attr.id && delete b.li_attr.id, b.a_attr && b.a_attr.id && delete b.a_attr.id, b.children && a.isArray(b.children) && (b.children = this._delete_ids(b.children)), b
				}, this.check = function(c, e, f, g, h) {
					if(d.check.call(this, c, e, f, g, h) === !1) return !1;
					e = e && e.id ? e : this.get_node(e), f = f && f.id ? f : this.get_node(f);
					var i = e && e.id ? h && h.origin ? h.origin : a.jstree.reference(e.id) : null,
						j, k, l, m;
					switch(i = i && i._model && i._model.data ? i._model.data : null, c) {
						case "create_node":
						case "move_node":
						case "copy_node":
							if("move_node" !== c || -1 === a.inArray(e.id, f.children)) {
								if(j = this.get_rules(f), j.max_children !== b && -1 !== j.max_children && j.max_children === f.children.length) return this._data.core.last_error = {
									error: "check",
									plugin: "types",
									id: "types_01",
									reason: "max_children prevents function: " + c,
									data: JSON.stringify({
										chk: c,
										pos: g,
										obj: e && e.id ? e.id : !1,
										par: f && f.id ? f.id : !1
									})
								}, !1;
								if(j.valid_children !== b && -1 !== j.valid_children && -1 === a.inArray(e.type || "default", j.valid_children)) return this._data.core.last_error = {
									error: "check",
									plugin: "types",
									id: "types_02",
									reason: "valid_children prevents function: " + c,
									data: JSON.stringify({
										chk: c,
										pos: g,
										obj: e && e.id ? e.id : !1,
										par: f && f.id ? f.id : !1
									})
								}, !1;
								if(i && e.children_d && e.parents) {
									for(k = 0, l = 0, m = e.children_d.length; m > l; l++) k = Math.max(k, i[e.children_d[l]].parents.length);
									k = k - e.parents.length + 1
								}(0 >= k || k === b) && (k = 1);
								do {
									if(j.max_depth !== b && -1 !== j.max_depth && j.max_depth < k) return this._data.core.last_error = {
										error: "check",
										plugin: "types",
										id: "types_03",
										reason: "max_depth prevents function: " + c,
										data: JSON.stringify({
											chk: c,
											pos: g,
											obj: e && e.id ? e.id : !1,
											par: f && f.id ? f.id : !1
										})
									}, !1;
									f = this.get_node(f.parent), j = this.get_rules(f), k++
								} while (f)
							}
					}
					return !0
				}, this.get_rules = function(a) {
					if(a = this.get_node(a), !a) return !1;
					var c = this.get_type(a, !0);
					return c.max_depth === b && (c.max_depth = -1), c.max_children === b && (c.max_children = -1), c.valid_children === b && (c.valid_children = -1), c
				}, this.get_type = function(b, c) {
					return b = this.get_node(b), b ? c ? a.extend({
						type: b.type
					}, this.settings.types[b.type]) : b.type : !1
				}, this.set_type = function(c, d) {
					var e, f, g, h, i;
					if(a.isArray(c)) {
						for(c = c.slice(), f = 0, g = c.length; g > f; f++) this.set_type(c[f], d);
						return !0
					}
					return e = this.settings.types, c = this.get_node(c), e[d] && c ? (h = c.type, i = this.get_icon(c), c.type = d, (i === !0 || e[h] && e[h].icon !== b && i === e[h].icon) && this.set_icon(c, e[d].icon !== b ? e[d].icon : !0), !0) : !1
				}
			}, a.jstree.defaults.unique = {
				case_sensitive: !1,
				duplicate: function(a, b) {
					return a + " (" + b + ")"
				}
			}, a.jstree.plugins.unique = function(c, d) {
				this.check = function(b, c, e, f, g) {
					if(d.check.call(this, b, c, e, f, g) === !1) return !1;
					if(c = c && c.id ? c : this.get_node(c), e = e && e.id ? e : this.get_node(e), !e || !e.children) return !0;
					var h = "rename_node" === b ? f : c.text,
						i = [],
						j = this.settings.unique.case_sensitive,
						k = this._model.data,
						l, m;
					for(l = 0, m = e.children.length; m > l; l++) i.push(j ? k[e.children[l]].text : k[e.children[l]].text.toLowerCase());
					switch(j || (h = h.toLowerCase()), b) {
						case "delete_node":
							return !0;
						case "rename_node":
							return l = -1 === a.inArray(h, i) || c.text && c.text[j ? "toString" : "toLowerCase"]() === h, l || (this._data.core.last_error = {
								error: "check",
								plugin: "unique",
								id: "unique_01",
								reason: "Child with name " + h + " already exists. Preventing: " + b,
								data: JSON.stringify({
									chk: b,
									pos: f,
									obj: c && c.id ? c.id : !1,
									par: e && e.id ? e.id : !1
								})
							}), l;
						case "create_node":
							return l = -1 === a.inArray(h, i), l || (this._data.core.last_error = {
								error: "check",
								plugin: "unique",
								id: "unique_04",
								reason: "Child with name " + h + " already exists. Preventing: " + b,
								data: JSON.stringify({
									chk: b,
									pos: f,
									obj: c && c.id ? c.id : !1,
									par: e && e.id ? e.id : !1
								})
							}), l;
						case "copy_node":
							return l = -1 === a.inArray(h, i), l || (this._data.core.last_error = {
								error: "check",
								plugin: "unique",
								id: "unique_02",
								reason: "Child with name " + h + " already exists. Preventing: " + b,
								data: JSON.stringify({
									chk: b,
									pos: f,
									obj: c && c.id ? c.id : !1,
									par: e && e.id ? e.id : !1
								})
							}), l;
						case "move_node":
							return l = c.parent === e.id && (!g || !g.is_multi) || -1 === a.inArray(h, i), l || (this._data.core.last_error = {
								error: "check",
								plugin: "unique",
								id: "unique_03",
								reason: "Child with name " + h + " already exists. Preventing: " + b,
								data: JSON.stringify({
									chk: b,
									pos: f,
									obj: c && c.id ? c.id : !1,
									par: e && e.id ? e.id : !1
								})
							}), l
					}
					return !0
				}, this.create_node = function(c, e, f, g, h) {
					if(!e || e.text === b) {
						if(null === c && (c = "#"), c = this.get_node(c), !c) return d.create_node.call(this, c, e, f, g, h);
						if(f = f === b ? "last" : f, !f.toString().match(/^(before|after)$/) && !h && !this.is_loaded(c)) return d.create_node.call(this, c, e, f, g, h);
						e || (e = {});
						var i, j, k, l, m, n = this._model.data,
							o = this.settings.unique.case_sensitive,
							p = this.settings.unique.duplicate;
						for(j = i = this.get_string("New node"), k = [], l = 0, m = c.children.length; m > l; l++) k.push(o ? n[c.children[l]].text : n[c.children[l]].text.toLowerCase());
						l = 1;
						while(-1 !== a.inArray(o ? j : j.toLowerCase(), k)) j = p.call(this, i, ++l).toString();
						e.text = j
					}
					return d.create_node.call(this, c, e, f, g, h)
				}
			};
		var o = i.createElement("DIV");
		if(o.setAttribute("unselectable", "on"), o.setAttribute("role", "presentation"), o.className = "jstree-wholerow", o.innerHTML = "&#160;", a.jstree.plugins.wholerow = function(b, c) {
				this.bind = function() {
					c.bind.call(this), this.element.on("ready.jstree set_state.jstree", a.proxy(function() {
						this.hide_dots()
					}, this)).on("init.jstree loading.jstree ready.jstree", a.proxy(function() {
						this.get_container_ul().addClass("jstree-wholerow-ul")
					}, this)).on("deselect_all.jstree", a.proxy(function(a, b) {
						this.element.find(".jstree-wholerow-clicked").removeClass("jstree-wholerow-clicked")
					}, this)).on("changed.jstree", a.proxy(function(a, b) {
						this.element.find(".jstree-wholerow-clicked").removeClass("jstree-wholerow-clicked");
						var c = !1,
							d, e;
						for(d = 0, e = b.selected.length; e > d; d++) c = this.get_node(b.selected[d], !0), c && c.length && c.children(".jstree-wholerow").addClass("jstree-wholerow-clicked")
					}, this)).on("open_node.jstree", a.proxy(function(a, b) {
						this.get_node(b.node, !0).find(".jstree-clicked").parent().children(".jstree-wholerow").addClass("jstree-wholerow-clicked")
					}, this)).on("hover_node.jstree dehover_node.jstree", a.proxy(function(a, b) {
						"hover_node" === a.type && this.is_disabled(b.node) || this.get_node(b.node, !0).children(".jstree-wholerow")["hover_node" === a.type ? "addClass" : "removeClass"]("jstree-wholerow-hovered")
					}, this)).on("contextmenu.jstree", ".jstree-wholerow", a.proxy(function(b) {
						b.preventDefault();
						var c = a.Event("contextmenu", {
							metaKey: b.metaKey,
							ctrlKey: b.ctrlKey,
							altKey: b.altKey,
							shiftKey: b.shiftKey,
							pageX: b.pageX,
							pageY: b.pageY
						});
						a(b.currentTarget).closest(".jstree-node").children(".jstree-anchor").first().trigger(c)
					}, this)).on("click.jstree", ".jstree-wholerow", function(b) {
						b.stopImmediatePropagation();
						var c = a.Event("click", {
							metaKey: b.metaKey,
							ctrlKey: b.ctrlKey,
							altKey: b.altKey,
							shiftKey: b.shiftKey
						});
						a(b.currentTarget).closest(".jstree-node").children(".jstree-anchor").first().trigger(c).focus()
					}).on("click.jstree", ".jstree-leaf > .jstree-ocl", a.proxy(function(b) {
						b.stopImmediatePropagation();
						var c = a.Event("click", {
							metaKey: b.metaKey,
							ctrlKey: b.ctrlKey,
							altKey: b.altKey,
							shiftKey: b.shiftKey
						});
						a(b.currentTarget).closest(".jstree-node").children(".jstree-anchor").first().trigger(c).focus()
					}, this)).on("mouseover.jstree", ".jstree-wholerow, .jstree-icon", a.proxy(function(a) {
						return a.stopImmediatePropagation(), this.is_disabled(a.currentTarget) || this.hover_node(a.currentTarget), !1
					}, this)).on("mouseleave.jstree", ".jstree-node", a.proxy(function(a) {
						this.dehover_node(a.currentTarget)
					}, this))
				}, this.teardown = function() {
					this.settings.wholerow && this.element.find(".jstree-wholerow").remove(), c.teardown.call(this)
				}, this.redraw_node = function(b, d, e, f) {
					if(b = c.redraw_node.apply(this, arguments)) {
						var g = o.cloneNode(!0); - 1 !== a.inArray(b.id, this._data.core.selected) && (g.className += " jstree-wholerow-clicked"), this._data.core.focused && this._data.core.focused === b.id && (g.className += " jstree-wholerow-hovered"), b.insertBefore(g, b.childNodes[0])
					}
					return b
				}
			}, i.registerElement && Object && Object.create) {
			var p = Object.create(HTMLElement.prototype);
			p.createdCallback = function() {
				var b = {
						core: {},
						plugins: []
					},
					c;
				for(c in a.jstree.plugins) a.jstree.plugins.hasOwnProperty(c) && this.attributes[c] && (b.plugins.push(c), this.getAttribute(c) && JSON.parse(this.getAttribute(c)) && (b[c] = JSON.parse(this.getAttribute(c))));
				for(c in a.jstree.defaults.core) a.jstree.defaults.core.hasOwnProperty(c) && this.attributes[c] && (b.core[c] = JSON.parse(this.getAttribute(c)) || this.getAttribute(c));
				a(this).jstree(b)
			};
			try {
				i.registerElement("vakata-jstree", {
					prototype: p
				})
			} catch(q) {}
		}
	}
});;﻿
/**
 
 @Name : layDate v1.1 日期控件
 @Author: 贤心
 @Date: 2014-06-25
 @QQ群：176047195
 @Site：http://sentsin.com/layui/laydate
 
 */
var layBase = 'plugins/layDate/';

;
! function(a) {
	var b = {
			path: "",
			defSkin: "default",
			format: "YYYY-MM-DD hh:mm:ss",
			min: "1900-01-01 00:00:00",
			max: "2099-12-31 23:59:59",
			isv: !1
		},
		c = {},
		d = document,
		e = "createElement",
		f = "getElementById",
		g = "getElementsByTagName",
		h = ["laydate_box", "laydate_void", "laydate_click", "LayDateSkin", layBase + "skins/", "/laydate.css"];
	a.laydate = function(b) {
			b = b || {};
			try {
				h.event = a.event ? a.event : laydate.caller.arguments[0]
			} catch(d) {}
			return c.run(b), laydate
		}, laydate.v = "1.1",
		c.getPath = function() {
			var a = document.scripts,
				c = a[a.length - 1].src;
			return b.path ? b.path : c.substring(0, c.lastIndexOf("/") + 1)
		}(),
		c.use = function(a, b) {
			var f = d[e]("link");
			f.type = "text/css",
				f.rel = "stylesheet",
				f.href = c.getPath + a + h[5], b && (f.id = b), d[g]("head")[0].appendChild(f), f = null
		}, c.trim = function(a) {
			return a = a || "", a.replace(/^\s|\s$/g, "").replace(/\s+/g, " ")
		}, c.digit = function(a) {
			return 10 > a ? "0" + (0 | a) : a
		}, c.stopmp = function(b) {
			return b = b || a.event, b.stopPropagation ? b.stopPropagation() : b.cancelBubble = !0, this
		}, c.each = function(a, b) {
			for(var c = 0, d = a.length; d > c && b(c, a[c]) !== !1; c++);
		}, c.hasClass = function(a, b) {
			return a = a || {}, new RegExp("\\b" + b + "\\b").test(a.className)
		}, c.addClass = function(a, b) {
			return a = a || {}, c.hasClass(a, b) || (a.className += " " + b), a.className = c.trim(a.className), this
		}, c.removeClass = function(a, b) {
			if(a = a || {}, c.hasClass(a, b)) {
				var d = new RegExp("\\b" + b + "\\b");
				a.className = a.className.replace(d, "")
			}
			return this
		}, c.removeCssAttr = function(a, b) {
			var c = a.style;
			c.removeProperty ? c.removeProperty(b) : c.removeAttribute(b)
		}, c.shde = function(a, b) {
			a.style.display = b ? "none" : "block"
		}, c.query = function(a) {
			var e, b, h, i, j;
			return a = c.trim(a).split(" "), b = d[f](a[0].substr(1)), b ? a[1] ? /^\./.test(a[1]) ? (i = a[1].substr(1), j = new RegExp("\\b" + i + "\\b"), e = [], h = d.getElementsByClassName ? b.getElementsByClassName(i) : b[g]("*"), c.each(h, function(a, b) {
				j.test(b.className) && e.push(b)
			}), e[0] ? e : "") : (e = b[g](a[1]), e[0] ? b[g](a[1]) : "") : b : void 0
		}, c.on = function(b, d, e) {
			return b.attachEvent ? b.attachEvent("on" + d, function() {
				e.call(b, a.even)
			}) : b.addEventListener(d, e, !1), c
		}, c.stopMosup = function(a, b) {
			"mouseup" !== a && c.on(b, "mouseup", function(a) {
				c.stopmp(a)
			})
		}, c.run = function(a) {
			var d, e, g, b = c.query,
				f = h.event;
			try {
				g = f.target || f.srcElement || {}
			} catch(i) {
				g = {}
			}
			if(d = a.elem ? b(a.elem) : g, f && g.tagName) {
				if(!d || d === c.elem) return;
				c.stopMosup(f.type, d), c.stopmp(f), c.view(d, a), c.reshow()
			} else e = a.event || "click", c.each((0 | d.length) > 0 ? d : [d], function(b, d) {
				c.stopMosup(e, d), c.on(d, e, function(b) {
					c.stopmp(b), d !== c.elem && (c.view(d, a), c.reshow())
				})
			})
		}, c.scroll = function(a) {
			return a = a ? "scrollLeft" : "scrollTop", d.body[a] | d.documentElement[a]
		}, c.winarea = function(a) {
			return document.documentElement[a ? "clientWidth" : "clientHeight"]
		}, c.isleap = function(a) {
			return 0 === a % 4 && 0 !== a % 100 || 0 === a % 400
		}, c.checkVoid = function(a, b, d) {
			var e = [];
			return a = 0 | a, b = 0 | b, d = 0 | d, a < c.mins[0] ? e = ["y"] : a > c.maxs[0] ? e = ["y", 1] : a >= c.mins[0] && a <= c.maxs[0] && (a == c.mins[0] && (b < c.mins[1] ? e = ["m"] : b == c.mins[1] && d < c.mins[2] && (e = ["d"])), a == c.maxs[0] && (b > c.maxs[1] ? e = ["m", 1] : b == c.maxs[1] && d > c.maxs[2] && (e = ["d", 1]))), e
		}, c.timeVoid = function(a, b) {
			if(c.ymd[1] + 1 == c.mins[1] && c.ymd[2] == c.mins[2]) {
				if(0 === b && a < c.mins[3]) return 1;
				if(1 === b && a < c.mins[4]) return 1;
				if(2 === b && a < c.mins[5]) return 1
			} else if(c.ymd[1] + 1 == c.maxs[1] && c.ymd[2] == c.maxs[2]) {
				if(0 === b && a > c.maxs[3]) return 1;
				if(1 === b && a > c.maxs[4]) return 1;
				if(2 === b && a > c.maxs[5]) return 1
			}
			return a > (b ? 59 : 23) ? 1 : void 0
		}, c.check = function() {
			var a = c.options.format.replace(/YYYY|MM|DD|hh|mm|ss/g, "\\d+\\").replace(/\\$/g, ""),
				b = new RegExp(a),
				d = c.elem[h.elemv],
				e = d.match(/\d+/g) || [],
				f = c.checkVoid(e[0], e[1], e[2]);
			if("" !== d.replace(/\s/g, "")) {
				if(!b.test(d)) return c.elem[h.elemv] = "", c.msg("日期不符合格式，请重新选择。"), 1;
				if(f[0]) return c.elem[h.elemv] = "", c.msg("日期不在有效期内，请重新选择。"), 1;
				f.value = c.elem[h.elemv].match(b).join(), e = f.value.match(/\d+/g), e[1] < 1 ? (e[1] = 1, f.auto = 1) : e[1] > 12 ? (e[1] = 12, f.auto = 1) : e[1].length < 2 && (f.auto = 1), e[2] < 1 ? (e[2] = 1, f.auto = 1) : e[2] > c.months[(0 | e[1]) - 1] ? (e[2] = 31, f.auto = 1) : e[2].length < 2 && (f.auto = 1), e.length > 3 && (c.timeVoid(e[3], 0) && (f.auto = 1), c.timeVoid(e[4], 1) && (f.auto = 1), c.timeVoid(e[5], 2) && (f.auto = 1)), f.auto ? c.creation([e[0], 0 | e[1], 0 | e[2]], 1) : f.value !== c.elem[h.elemv] && (c.elem[h.elemv] = f.value)
			}
		}, c.months = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], c.viewDate = function(a, b, d) {
			var f = (c.query, {}),
				g = new Date;
			a < (0 | c.mins[0]) && (a = 0 | c.mins[0]), a > (0 | c.maxs[0]) && (a = 0 | c.maxs[0]), g.setFullYear(a, b, d), f.ymd = [g.getFullYear(), g.getMonth(), g.getDate()], c.months[1] = c.isleap(f.ymd[0]) ? 29 : 28, g.setFullYear(f.ymd[0], f.ymd[1], 1), f.FDay = g.getDay(), f.PDay = c.months[0 === b ? 11 : b - 1] - f.FDay + 1, f.NDay = 1, c.each(h.tds, function(a, b) {
				var g, d = f.ymd[0],
					e = f.ymd[1] + 1;
				b.className = "", a < f.FDay ? (b.innerHTML = g = a + f.PDay, c.addClass(b, "laydate_nothis"), 1 === e && (d -= 1), e = 1 === e ? 12 : e - 1) : a >= f.FDay && a < f.FDay + c.months[f.ymd[1]] ? (b.innerHTML = g = a - f.FDay + 1, a - f.FDay + 1 === f.ymd[2] && (c.addClass(b, h[2]), f.thisDay = b)) : (b.innerHTML = g = f.NDay++, c.addClass(b, "laydate_nothis"), 12 === e && (d += 1), e = 12 === e ? 1 : e + 1), c.checkVoid(d, e, g)[0] && c.addClass(b, h[1]), c.options.festival && c.festival(b, e + "." + g), b.setAttribute("y", d), b.setAttribute("m", e), b.setAttribute("d", g), d = e = g = null
			}), c.valid = !c.hasClass(f.thisDay, h[1]), c.ymd = f.ymd, h.year.value = c.ymd[0] + "年", h.month.value = c.digit(c.ymd[1] + 1) + "月", c.each(h.mms, function(a, b) {
				var d = c.checkVoid(c.ymd[0], (0 | b.getAttribute("m")) + 1);
				"y" === d[0] || "m" === d[0] ? c.addClass(b, h[1]) : c.removeClass(b, h[1]), c.removeClass(b, h[2]), d = null
			}), c.addClass(h.mms[c.ymd[1]], h[2]), f.times = [0 | c.inymd[3] || 0, 0 | c.inymd[4] || 0, 0 | c.inymd[5] || 0], c.each(new Array(3), function(a) {
				c.hmsin[a].value = c.digit(c.timeVoid(f.times[a], a) ? 0 | c.mins[a + 3] : 0 | f.times[a])
			}), c[c.valid ? "removeClass" : "addClass"](h.ok, h[1])
		}, c.festival = function(a, b) {
			var c;
			switch(b) {
				case "1.1":
					c = "元旦";
					break;
				case "3.8":
					c = "妇女";
					break;
				case "4.5":
					c = "清明";
					break;
				case "5.1":
					c = "劳动";
					break;
				case "6.1":
					c = "儿童";
					break;
				case "9.10":
					c = "教师";
					break;
				case "10.1":
					c = "国庆"
			}
			c && (a.innerHTML = c), c = null
		}, c.viewYears = function(a) {
			var b = c.query,
				d = "";
			c.each(new Array(14), function(b) {
				d += 7 === b ? "<li " + (parseInt(h.year.value) === a ? 'class="' + h[2] + '"' : "") + ' y="' + a + '">' + a + "年</li>" : '<li y="' + (a - 7 + b) + '">' + (a - 7 + b) + "年</li>"
			}), b("#laydate_ys").innerHTML = d, c.each(b("#laydate_ys li"), function(a, b) {
				"y" === c.checkVoid(b.getAttribute("y"))[0] ? c.addClass(b, h[1]) : c.on(b, "click", function(a) {
					c.stopmp(a).reshow(), c.viewDate(0 | this.getAttribute("y"), c.ymd[1], c.ymd[2])
				})
			})
		}, c.initDate = function() {
			var d = (c.query, new Date),
				e = c.elem[h.elemv].match(/\d+/g) || [];
			e.length < 3 && (e = c.options.start.match(/\d+/g) || [], e.length < 3 && (e = [d.getFullYear(), d.getMonth() + 1, d.getDate()])), c.inymd = e, c.viewDate(e[0], e[1] - 1, e[2])
		}, c.iswrite = function() {
			var a = c.query,
				b = {
					time: a("#laydate_hms")
				};
			c.shde(b.time, !c.options.istime), c.shde(h.oclear, !("isclear" in c.options ? c.options.isclear : 1)), c.shde(h.otoday, !("istoday" in c.options ? c.options.istoday : 1)), c.shde(h.ok, !("issure" in c.options ? c.options.issure : 1))
		}, c.orien = function(a, b) {
			var d, e = c.elem.getBoundingClientRect();
			a.style.left = e.left + (b ? 0 : c.scroll(1)) + "px", d = e.bottom + a.offsetHeight / 1.5 <= c.winarea() ? e.bottom - 1 : e.top > a.offsetHeight / 1.5 ? e.top - a.offsetHeight + 1 : c.winarea() - a.offsetHeight, a.style.top = d + (b ? 0 : c.scroll()) + "px"
		}, c.follow = function(a) {
			c.options.fixed ? (a.style.position = "fixed", c.orien(a, 1)) : (a.style.position = "absolute", c.orien(a))
		}, c.viewtb = function() {
			var a, b = [],
				f = ["日", "一", "二", "三", "四", "五", "六"],
				h = {},
				i = d[e]("table"),
				j = d[e]("thead");
			return j.appendChild(d[e]("tr")), h.creath = function(a) {
				var b = d[e]("th");
				b.innerHTML = f[a], j[g]("tr")[0].appendChild(b), b = null
			}, c.each(new Array(6), function(d) {
				b.push([]), a = i.insertRow(0), c.each(new Array(7), function(c) {
					b[d][c] = 0, 0 === d && h.creath(c), a.insertCell(c)
				})
			}), i.insertBefore(j, i.children[0]), i.id = i.className = "laydate_table", a = b = null, i.outerHTML.toLowerCase()
		}(), c.view = function(a, f) {
			var i, g = c.query,
				j = {};
			f = f || a, c.elem = a, c.options = f, c.options.format || (c.options.format = b.format), c.options.start = c.options.start || "", c.mm = j.mm = [c.options.min || b.min, c.options.max || b.max], c.mins = j.mm[0].match(/\d+/g), c.maxs = j.mm[1].match(/\d+/g), h.elemv = /textarea|input/.test(c.elem.tagName.toLocaleLowerCase()) ? "value" : "innerHTML", c.box ? c.shde(c.box) : (i = d[e]("div"), i.id = h[0], i.className = h[0], i.style.cssText = "position: absolute;", i.setAttribute("name", "laydate-v" + laydate.v), i.innerHTML = j.html = '<div class="laydate_top"><div class="laydate_ym laydate_y" id="laydate_YY"><a class="laydate_choose laydate_chprev laydate_tab"><cite></cite></a><input id="laydate_y" readonly><label></label><a class="laydate_choose laydate_chnext laydate_tab"><cite></cite></a><div class="laydate_yms"><a class="laydate_tab laydate_chtop"><cite></cite></a><ul id="laydate_ys"></ul><a class="laydate_tab laydate_chdown"><cite></cite></a></div></div><div class="laydate_ym laydate_m" id="laydate_MM"><a class="laydate_choose laydate_chprev laydate_tab"><cite></cite></a><input id="laydate_m" readonly><label></label><a class="laydate_choose laydate_chnext laydate_tab"><cite></cite></a><div class="laydate_yms" id="laydate_ms">' + function() {
				var a = "";
				return c.each(new Array(12), function(b) {
					a += '<span m="' + b + '">' + c.digit(b + 1) + "月</span>"
				}), a
			}() + "</div>" + "</div>" + "</div>" + c.viewtb + '<div class="laydate_bottom">' + '<ul id="laydate_hms">' + '<li class="laydate_sj">时间</li>' + "<li><input readonly>:</li>" + "<li><input readonly>:</li>" + "<li><input readonly></li>" + "</ul>" + '<div class="laydate_time" id="laydate_time"></div>' + '<div class="laydate_btn">' + '<a id="laydate_clear">清空</a>' + '<a id="laydate_today">今天</a>' + '<a id="laydate_ok">确认</a>' + "</div>" + (b.isv ? '<a href="http://sentsin.com/layui/laydate/" class="laydate_v" target="_blank">laydate-v' + laydate.v + "</a>" : "") + "</div>", d.body.appendChild(i), c.box = g("#" + h[0]), c.events(), i = null), c.follow(c.box), f.zIndex ? c.box.style.zIndex = f.zIndex : c.removeCssAttr(c.box, "z-index"), c.stopMosup("click", c.box), c.initDate(), c.iswrite(), c.check()
		}, c.reshow = function() {
			return c.each(c.query("#" + h[0] + " .laydate_show"), function(a, b) {
				c.removeClass(b, "laydate_show")
			}), this
		}, c.close = function() {
			c.reshow(), c.shde(c.query("#" + h[0]), 1), c.elem = null
		}, c.parse = function(a, d, e) {
			return a = a.concat(d), e = e || (c.options ? c.options.format : b.format), e.replace(/YYYY|MM|DD|hh|mm|ss/g, function() {
				return a.index = 0 | ++a.index, c.digit(a[a.index])
			})
		}, c.creation = function(a, b) {
			var e = (c.query, c.hmsin),
				f = c.parse(a, [e[0].value, e[1].value, e[2].value]);
			c.elem[h.elemv] = f, b || (c.close(), "function" == typeof c.options.choose && c.options.choose(f))
		}, c.events = function() {
			var b = c.query,
				e = {
					box: "#" + h[0]
				};
			c.addClass(d.body, "laydate_body"), h.tds = b("#laydate_table td"), h.mms = b("#laydate_ms span"), h.year = b("#laydate_y"), h.month = b("#laydate_m"), c.each(b(e.box + " .laydate_ym"), function(a, b) {
				c.on(b, "click", function(b) {
					c.stopmp(b).reshow(), c.addClass(this[g]("div")[0], "laydate_show"), a || (e.YY = parseInt(h.year.value), c.viewYears(e.YY))
				})
			}), c.on(b(e.box), "click", function() {
				c.reshow()
			}), e.tabYear = function(a) {
				0 === a ? c.ymd[0]-- : 1 === a ? c.ymd[0]++ : 2 === a ? e.YY -= 14 : e.YY += 14, 2 > a ? (c.viewDate(c.ymd[0], c.ymd[1], c.ymd[2]), c.reshow()) : c.viewYears(e.YY)
			}, c.each(b("#laydate_YY .laydate_tab"), function(a, b) {
				c.on(b, "click", function(b) {
					c.stopmp(b), e.tabYear(a)
				})
			}), e.tabMonth = function(a) {
				a ? (c.ymd[1]++, 12 === c.ymd[1] && (c.ymd[0]++, c.ymd[1] = 0)) : (c.ymd[1]--, -1 === c.ymd[1] && (c.ymd[0]--, c.ymd[1] = 11)), c.viewDate(c.ymd[0], c.ymd[1], c.ymd[2])
			}, c.each(b("#laydate_MM .laydate_tab"), function(a, b) {
				c.on(b, "click", function(b) {
					c.stopmp(b).reshow(), e.tabMonth(a)
				})
			}), c.each(b("#laydate_ms span"), function(a, b) {
				c.on(b, "click", function(a) {
					c.stopmp(a).reshow(), c.hasClass(this, h[1]) || c.viewDate(c.ymd[0], 0 | this.getAttribute("m"), c.ymd[2])
				})
			}), c.each(b("#laydate_table td"), function(a, b) {
				c.on(b, "click", function(a) {
					c.hasClass(this, h[1]) || (c.stopmp(a), c.creation([0 | this.getAttribute("y"), 0 | this.getAttribute("m"), 0 | this.getAttribute("d")]))
				})
			}), h.oclear = b("#laydate_clear"), c.on(h.oclear, "click", function() {
				c.elem[h.elemv] = "", c.close()
			}), h.otoday = b("#laydate_today"), c.on(h.otoday, "click", function() {
				c.elem[h.elemv] = laydate.now(0, c.options.format), c.close()
			}), h.ok = b("#laydate_ok"), c.on(h.ok, "click", function() {
				c.valid && c.creation([c.ymd[0], c.ymd[1] + 1, c.ymd[2]])
			}), e.times = b("#laydate_time"), c.hmsin = e.hmsin = b("#laydate_hms input"), e.hmss = ["小时", "分钟", "秒数"], e.hmsarr = [], c.msg = function(a, d) {
				var f = '<div class="laydte_hsmtex">' + (d || "提示") + "<span>×</span></div>";
				"string" == typeof a ? (f += "<p>" + a + "</p>", c.shde(b("#" + h[0])), c.removeClass(e.times, "laydate_time1").addClass(e.times, "laydate_msg")) : (e.hmsarr[a] ? f = e.hmsarr[a] : (f += '<div id="laydate_hmsno" class="laydate_hmsno">', c.each(new Array(0 === a ? 24 : 60), function(a) {
					f += "<span>" + a + "</span>"
				}), f += "</div>", e.hmsarr[a] = f), c.removeClass(e.times, "laydate_msg"), c[0 === a ? "removeClass" : "addClass"](e.times, "laydate_time1")), c.addClass(e.times, "laydate_show"), e.times.innerHTML = f
			}, e.hmson = function(a, d) {
				var e = b("#laydate_hmsno span"),
					f = c.valid ? null : 1;
				c.each(e, function(b, e) {
					f ? c.addClass(e, h[1]) : c.timeVoid(b, d) ? c.addClass(e, h[1]) : c.on(e, "click", function() {
						c.hasClass(this, h[1]) || (a.value = c.digit(0 | this.innerHTML))
					})
				}), c.addClass(e[0 | a.value], "laydate_click")
			}, c.each(e.hmsin, function(a, b) {
				c.on(b, "click", function(b) {
					c.stopmp(b).reshow(), c.msg(a, e.hmss[a]), e.hmson(this, a)
				})
			}), c.on(d, "mouseup", function() {
				var a = b("#" + h[0]);
				a && "none" !== a.style.display && (c.check() || c.close())
			}).on(d, "keydown", function(b) {
				b = b || a.event;
				var d = b.keyCode;
				13 === d && c.creation([c.ymd[0], c.ymd[1] + 1, c.ymd[2]])
			})
		},
		c.init = function() {
			c.use(layBase + "need"), c.use(h[4] + b.defSkin, h[3]), c.skinLink = c.query("#" + h[3])
		}(), laydate.reset = function() {
			c.box && c.elem && c.follow(c.box)
		}, laydate.now = function(a, b) {
			var d = new Date(0 | a ? function(a) {
				return 864e5 > a ? +new Date + 864e5 * a : a
			}(parseInt(a)) : +new Date);
			return c.parse([d.getFullYear(), d.getMonth() + 1, d.getDate()], [d.getHours(), d.getMinutes(), d.getSeconds()], b)
		},
		laydate.skin = function(a) {
			c.skinLink.href = c.getPath + h[4] + a + h[5]
		}

}(window);;
(function($) {
	var s;
	// Methods
	var m = {
		init: function() {},
		start: function() {},
		complete: function() {},
		error: function() {
			return 0;
		},
		traverse: function(files, input, area) {
			if(typeof files !== "undefined") {
				for(var i = 0, l = files.length; i < l; i++) {
					m.control(files[i], input, area);
				}
			} else {
				area.html(nosupport);
			}
		},
		control: function(file, input, area) {

			var tld = file.name.toLowerCase().split(/\./);
			tld = tld[tld.length - 1];

			//var types = $(area).data('type').split(/,/);

			// File type control
			//for(var i = types.length; i >= 0; i--){
			//typeof FileReader === "undefined" ||
			if(input.data('type') && !types.indexOf(file.type)) {
				//area.html(file.type,s.noimage);
				//var types = $(area).data('type') ? $(area).data('type') : 'jpg, png, gif';
				//alert('only image files: ' + types);
				s.error({
					'error': 'only image files: ' + input.data('type')
				}, input, area);
				return false;
			}
			//}

			// File size control
			if(file.size > (s.maxsize * 1048576)) {
				//area.html(file.type,s.maxsize);
				s.error({
					'error': 'max upload size: ' + s.maxsize + 'Mb'
				}, input, area);
				return false;
			}

			// If the file is an image and data-resize paramater is true, 
			// before the uploading resize the imege on browser.
			if((/image/i).test(file.type) && input.data('canvas'))
				m.resize(file, input, area);
			else
				m.upload(file, input, area);
		},
		resize: function(file, input, area) {

			// for using after the resize
			var name = file.name;

			// Create new objects
			var canvas = document.createElement("canvas");
			//$(canvas).appendTo(area);
			var img = document.createElement("img");

			var WIDTH = 0 | input.data('width');
			var HEIGHT = 0 | input.data('height');

			// Read the file
			var reader = new FileReader();
			reader.onloadend = function(e) {
				img.src = e.target.result;

				// Calculate new sizes
				// Get dimensions
				var width = img.width;
				var height = img.height;
				var crop = input.data('crop');
				if((WIDTH && width > WIDTH) || (HEIGHT && height > HEIGHT)) {
					ratio = width / height;
					if((ratio >= 1 || HEIGHT == 0) && WIDTH && !crop) {
						width = WIDTH;
						height = WIDTH / ratio;
					} else if(crop && ratio <= (WIDTH / HEIGHT)) {
						width = WIDTH;
						height = WIDTH / ratio;
					} else {
						width = HEIGHT * ratio;
						height = HEIGHT;
					}
				}

				// Draw new image
				canvas.width = width;
				canvas.height = height;
				var ctx = canvas.getContext("2d");
				ctx.drawImage(img, 0, 0, width, height);

				var data = canvas.toDataURL("image/jpeg");

				// Data checking
				if(data.length <= 6) {
					s.error({
						'error': 'Image did not created. Please, try again.'
					}, input, area);
					return 0;
				} else {

					// Get new file data from canvas and convert to blob
					file = m.dataURItoBlob(data);
					file.name = name;

					if(input.data('post')) {
						// Start upload new file
						m.upload(file, input, area);
					} else {
						$(canvas).appendTo(area);
						input.attr('disabled', 'disabled');
						$('<input>').attr('name', input.attr('name'))
							.val(data).insertAfter(input);
					}
				}
			}
			reader.readAsDataURL(file);
		},
		upload: function(file, input, area) {

			area.find('div').empty();
			var progress = $('<div>', {
				'class': 'progress'
			});
			area.append(progress);

			// Uploading - for Firefox, Google Chrome and Safari
			var xhr = new XMLHttpRequest();
			xhr.open("post", input.data('post'), true);
			xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");
			// Update progress bar
			xhr.upload.addEventListener("progress", function(e) {
				if(e.lengthComputable) {
					var loaded = Math.ceil((e.loaded / e.total) * 100);
					progress.css({
						'height': loaded + "%",
						'line-height': (area.height() * loaded / 100) + 'px'
					}).html(loaded + "%");
				}
			}, false);
			// File uploaded
			xhr.addEventListener("load", function(e) {

				var result = jQuery.parseJSON(e.target.responseText);

				// Calling complete function

				s.complete(result, file, input, area);

				progress.addClass('uploaded');
				progress.html(s.uploaded).fadeOut('slow');
			}, false);
			/*
			// Manual Sending
			var boundary = '----dropareaBoundry' + Math.random(1000000,9999999);
			xhr.setRequestHeader('Content-Type','multipart/form-data; boundary='+boundary); // simulate a file MIME POST request.  
			var body = '';
			for (var i in input.data())
			    if (typeof input.data(i) !== "object")
			        body += '--' + boundary + "\r\n"
			        + 'Content-Disposition: form-data; name="' + i + "\"\r\n\r\n"  
			        + input.data(i)+ "\r\n";
			var read = function(e){                
			    body += '--' + boundary + "\r\n"
			    + 'Content-Disposition: form-data; name="' + input.attr('name') + '"; filename="' + file.name + '"'+"\r\n"
			    + 'Content-Type: ' + file.type + "\r\n\r\n"
			    + e.target.result + "\r\n"
			    + '--' + boundary + '--';  
			    console.log(body);
			    xhr.send(body);
			};
			var reader = new FileReader();
			// Firefox 3.6, WebKit
			if(reader.addEventListener) {
			    reader.addEventListener('loadend', read, false);
			// Chrome 7
			} else {
			    reader.onloadend = read;
			}
			reader.readAsBinaryString(file);
			*/
			// Create a new formdata
			var fd = new FormData();
			// Add optional form data
			for(var i in input.data())
				if(typeof input.data(i) !== "object")
					fd.append(i, input.data(i));
				// Add file data
			fd.append(input.attr('name'), file);
			// Send data
			xhr.send(fd);
		},
		dataURItoBlob: function(dataURI) {
			// for check the original function: http://stackoverflow.com/questions/4998908/
			// convert base64 to raw binary data held in a string
			// doesn't handle URLEncoded DataURIs
			var byteString = atob(dataURI.split(',')[1]);
			// separate out the mime component
			var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]
				// write the bytes of the string to an ArrayBuffer
			var ab = new ArrayBuffer(byteString.length);
			var ia = new Uint8Array(ab);
			for(var i = 0; i < byteString.length; i++) {
				ia[i] = byteString.charCodeAt(i);
			}
			// write the ArrayBuffer to a blob, and you're done
			var bb = new(window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder)();
			bb.append(ab);
			return bb.getBlob(mimeString);
		}
	};
	$.fn.droparea = function(o) {
		// Settings
		s = {
			'init': m.init,
			'start': m.start,
			'complete': m.complete,
			'instructions': 'drop a file to here',
			'over': 'drop file here!',
			'nosupport': 'No support for the File API in this web browser',
			'noimage': 'Unsupported file type!',
			'uploaded': 'Uploaded',
			'maxsize': '10' //Mb
		};
		if(o) $.extend(s, o);
		this.each(function() {
			var area = $('<div class="' + $(this).attr('class') + '">').insertAfter($(this));
			var instructions = $('<div>').appendTo(area);
			var input = $(this).appendTo(area);
			//var input = $('<input type="file" multiple>').appendTo($(this));

			s.init($(this));
			area.width(input.data('width'));
			area.height(input.data('height'));
			if(input.data('value') && input.data('value').length)
				$('<img src="' + input.data('value') + '">').appendTo(area);
			else
				instructions.addClass('instructions').html(s.instructions);

			// Drag events
			$(document).bind({
				dragleave: function(e) {
					e.preventDefault();
					if(input.data('value') || area.find('img').length)
						instructions.removeClass().empty();
					else
						instructions.removeClass('over').html(s.instructions);
				},
				drop: function(e) {
					e.preventDefault();
					if(input.data('value') || area.find('img').length)
						instructions.removeClass().empty();
					else
						instructions.removeClass('over').html(s.instructions);
				},
				dragenter: function(e) {
					e.preventDefault();
					instructions.addClass('instructions over').html(s.over);
				},
				dragover: function(e) {
					e.preventDefault();
					instructions.addClass('instructions over').html(s.over);
				}
			});

			// Drop file event
			this.addEventListener("drop", function(e) {
				e.preventDefault();
				s.start($(this));
				m.traverse(e.dataTransfer.files, input, area);
				instructions.removeClass().empty();
			}, false);

			// Browse file event
			input.change(function(e) {
				m.traverse(e.target.files, input, area);
			});

		});
	};
})(jQuery);;
/**
 * @license wysihtml5 v0.3.0
 * https://github.com/xing/wysihtml5
 *
 * Author: Christopher Blum (https://github.com/tiff)
 *
 * Copyright (C) 2012 XING AG
 * Licensed under the MIT license (MIT)
 *
 */
var wysihtml5 = {
	version: "0.3.0",

	// namespaces
	commands: {},
	dom: {},
	quirks: {},
	toolbar: {},
	lang: {},
	selection: {},
	views: {},

	INVISIBLE_SPACE: "\uFEFF",

	EMPTY_FUNCTION: function() {},

	ELEMENT_NODE: 1,
	TEXT_NODE: 3,

	BACKSPACE_KEY: 8,
	ENTER_KEY: 13,
	ESCAPE_KEY: 27,
	SPACE_KEY: 32,
	DELETE_KEY: 46
};
/**
 * @license Rangy, a cross-browser JavaScript range and selection library
 * http://code.google.com/p/rangy/
 *
 * Copyright 2011, Tim Down
 * Licensed under the MIT license.
 * Version: 1.2.2
 * Build date: 13 November 2011
 */
window['rangy'] = (function() {

	var OBJECT = "object",
		FUNCTION = "function",
		UNDEFINED = "undefined";

	var domRangeProperties = ["startContainer", "startOffset", "endContainer", "endOffset", "collapsed",
		"commonAncestorContainer", "START_TO_START", "START_TO_END", "END_TO_START", "END_TO_END"
	];

	var domRangeMethods = ["setStart", "setStartBefore", "setStartAfter", "setEnd", "setEndBefore",
		"setEndAfter", "collapse", "selectNode", "selectNodeContents", "compareBoundaryPoints", "deleteContents",
		"extractContents", "cloneContents", "insertNode", "surroundContents", "cloneRange", "toString", "detach"
	];

	var textRangeProperties = ["boundingHeight", "boundingLeft", "boundingTop", "boundingWidth", "htmlText", "text"];

	// Subset of TextRange's full set of methods that we're interested in
	var textRangeMethods = ["collapse", "compareEndPoints", "duplicate", "getBookmark", "moveToBookmark",
		"moveToElementText", "parentElement", "pasteHTML", "select", "setEndPoint", "getBoundingClientRect"
	];

	/*----------------------------------------------------------------------------------------------------------------*/

	// Trio of functions taken from Peter Michaux's article:
	// http://peter.michaux.ca/articles/feature-detection-state-of-the-art-browser-scripting
	function isHostMethod(o, p) {
		var t = typeof o[p];
		return t == FUNCTION || (!!(t == OBJECT && o[p])) || t == "unknown";
	}

	function isHostObject(o, p) {
		return !!(typeof o[p] == OBJECT && o[p]);
	}

	function isHostProperty(o, p) {
		return typeof o[p] != UNDEFINED;
	}

	// Creates a convenience function to save verbose repeated calls to tests functions
	function createMultiplePropertyTest(testFunc) {
		return function(o, props) {
			var i = props.length;
			while(i--) {
				if(!testFunc(o, props[i])) {
					return false;
				}
			}
			return true;
		};
	}

	// Next trio of functions are a convenience to save verbose repeated calls to previous two functions
	var areHostMethods = createMultiplePropertyTest(isHostMethod);
	var areHostObjects = createMultiplePropertyTest(isHostObject);
	var areHostProperties = createMultiplePropertyTest(isHostProperty);

	function isTextRange(range) {
		return range && areHostMethods(range, textRangeMethods) && areHostProperties(range, textRangeProperties);
	}

	var api = {
		version: "1.2.2",
		initialized: false,
		supported: true,

		util: {
			isHostMethod: isHostMethod,
			isHostObject: isHostObject,
			isHostProperty: isHostProperty,
			areHostMethods: areHostMethods,
			areHostObjects: areHostObjects,
			areHostProperties: areHostProperties,
			isTextRange: isTextRange
		},

		features: {},

		modules: {},
		config: {
			alertOnWarn: false,
			preferTextRange: false
		}
	};

	function fail(reason) {
		window.alert("Rangy not supported in your browser. Reason: " + reason);
		api.initialized = true;
		api.supported = false;
	}

	api.fail = fail;

	function warn(msg) {
		var warningMessage = "Rangy warning: " + msg;
		if(api.config.alertOnWarn) {
			window.alert(warningMessage);
		} else if(typeof window.console != UNDEFINED && typeof window.console.log != UNDEFINED) {
			window.console.log(warningMessage);
		}
	}

	api.warn = warn;

	if({}.hasOwnProperty) {
		api.util.extend = function(o, props) {
			for(var i in props) {
				if(props.hasOwnProperty(i)) {
					o[i] = props[i];
				}
			}
		};
	} else {
		fail("hasOwnProperty not supported");
	}

	var initListeners = [];
	var moduleInitializers = [];

	// Initialization
	function init() {
		if(api.initialized) {
			return;
		}
		var testRange;
		var implementsDomRange = false,
			implementsTextRange = false;

		// First, perform basic feature tests

		if(isHostMethod(document, "createRange")) {
			testRange = document.createRange();
			if(areHostMethods(testRange, domRangeMethods) && areHostProperties(testRange, domRangeProperties)) {
				implementsDomRange = true;
			}
			testRange.detach();
		}

		var body = isHostObject(document, "body") ? document.body : document.getElementsByTagName("body")[0];

		if(body && isHostMethod(body, "createTextRange")) {
			testRange = body.createTextRange();
			if(isTextRange(testRange)) {
				implementsTextRange = true;
			}
		}

		if(!implementsDomRange && !implementsTextRange) {
			fail("Neither Range nor TextRange are implemented");
		}

		api.initialized = true;
		api.features = {
			implementsDomRange: implementsDomRange,
			implementsTextRange: implementsTextRange
		};

		// Initialize modules and call init listeners
		var allListeners = moduleInitializers.concat(initListeners);
		for(var i = 0, len = allListeners.length; i < len; ++i) {
			try {
				allListeners[i](api);
			} catch(ex) {
				if(isHostObject(window, "console") && isHostMethod(window.console, "log")) {
					window.console.log("Init listener threw an exception. Continuing.", ex);
				}

			}
		}
	}

	// Allow external scripts to initialize this library in case it's loaded after the document has loaded
	api.init = init;

	// Execute listener immediately if already initialized
	api.addInitListener = function(listener) {
		if(api.initialized) {
			listener(api);
		} else {
			initListeners.push(listener);
		}
	};

	var createMissingNativeApiListeners = [];

	api.addCreateMissingNativeApiListener = function(listener) {
		createMissingNativeApiListeners.push(listener);
	};

	function createMissingNativeApi(win) {
		win = win || window;
		init();

		// Notify listeners
		for(var i = 0, len = createMissingNativeApiListeners.length; i < len; ++i) {
			createMissingNativeApiListeners[i](win);
		}
	}

	api.createMissingNativeApi = createMissingNativeApi;

	/**
	 * @constructor
	 */
	function Module(name) {
		this.name = name;
		this.initialized = false;
		this.supported = false;
	}

	Module.prototype.fail = function(reason) {
		this.initialized = true;
		this.supported = false;

		throw new Error("Module '" + this.name + "' failed to load: " + reason);
	};

	Module.prototype.warn = function(msg) {
		api.warn("Module " + this.name + ": " + msg);
	};

	Module.prototype.createError = function(msg) {
		return new Error("Error in Rangy " + this.name + " module: " + msg);
	};

	api.createModule = function(name, initFunc) {
		var module = new Module(name);
		api.modules[name] = module;

		moduleInitializers.push(function(api) {
			initFunc(api, module);
			module.initialized = true;
			module.supported = true;
		});
	};

	api.requireModules = function(modules) {
		for(var i = 0, len = modules.length, module, moduleName; i < len; ++i) {
			moduleName = modules[i];
			module = api.modules[moduleName];
			if(!module || !(module instanceof Module)) {
				throw new Error("Module '" + moduleName + "' not found");
			}
			if(!module.supported) {
				throw new Error("Module '" + moduleName + "' not supported");
			}
		}
	};

	/*----------------------------------------------------------------------------------------------------------------*/

	// Wait for document to load before running tests

	var docReady = false;

	var loadHandler = function(e) {

		if(!docReady) {
			docReady = true;
			if(!api.initialized) {
				init();
			}
		}
	};

	// Test whether we have window and document objects that we will need
	if(typeof window == UNDEFINED) {
		fail("No window found");
		return;
	}
	if(typeof document == UNDEFINED) {
		fail("No document found");
		return;
	}

	if(isHostMethod(document, "addEventListener")) {
		document.addEventListener("DOMContentLoaded", loadHandler, false);
	}

	// Add a fallback in case the DOMContentLoaded event isn't supported
	if(isHostMethod(window, "addEventListener")) {
		window.addEventListener("load", loadHandler, false);
	} else if(isHostMethod(window, "attachEvent")) {
		window.attachEvent("onload", loadHandler);
	} else {
		fail("Window does not have required addEventListener or attachEvent method");
	}

	return api;
})();
rangy.createModule("DomUtil", function(api, module) {

	var UNDEF = "undefined";
	var util = api.util;

	// Perform feature tests
	if(!util.areHostMethods(document, ["createDocumentFragment", "createElement", "createTextNode"])) {
		module.fail("document missing a Node creation method");
	}

	if(!util.isHostMethod(document, "getElementsByTagName")) {
		module.fail("document missing getElementsByTagName method");
	}

	var el = document.createElement("div");
	if(!util.areHostMethods(el, ["insertBefore", "appendChild", "cloneNode"] ||
			!util.areHostObjects(el, ["previousSibling", "nextSibling", "childNodes", "parentNode"]))) {
		module.fail("Incomplete Element implementation");
	}

	// innerHTML is required for Range's createContextualFragment method
	if(!util.isHostProperty(el, "innerHTML")) {
		module.fail("Element is missing innerHTML property");
	}

	var textNode = document.createTextNode("test");
	if(!util.areHostMethods(textNode, ["splitText", "deleteData", "insertData", "appendData", "cloneNode"] ||
			!util.areHostObjects(el, ["previousSibling", "nextSibling", "childNodes", "parentNode"]) ||
			!util.areHostProperties(textNode, ["data"]))) {
		module.fail("Incomplete Text Node implementation");
	}

	/*----------------------------------------------------------------------------------------------------------------*/

	// Removed use of indexOf because of a bizarre bug in Opera that is thrown in one of the Acid3 tests. I haven't been
	// able to replicate it outside of the test. The bug is that indexOf returns -1 when called on an Array that
	// contains just the document as a single element and the value searched for is the document.
	var arrayContains =
		/*Array.prototype.indexOf ?
		       function(arr, val) {
		           return arr.indexOf(val) > -1;
		       }:*/

		function(arr, val) {
			var i = arr.length;
			while(i--) {
				if(arr[i] === val) {
					return true;
				}
			}
			return false;
		};

	// Opera 11 puts HTML elements in the null namespace, it seems, and IE 7 has undefined namespaceURI
	function isHtmlNamespace(node) {
		var ns;
		return typeof node.namespaceURI == UNDEF || ((ns = node.namespaceURI) === null || ns == "http://www.w3.org/1999/xhtml");
	}

	function parentElement(node) {
		var parent = node.parentNode;
		return(parent.nodeType == 1) ? parent : null;
	}

	function getNodeIndex(node) {
		var i = 0;
		while((node = node.previousSibling)) {
			i++;
		}
		return i;
	}

	function getNodeLength(node) {
		var childNodes;
		return isCharacterDataNode(node) ? node.length : ((childNodes = node.childNodes) ? childNodes.length : 0);
	}

	function getCommonAncestor(node1, node2) {
		var ancestors = [],
			n;
		for(n = node1; n; n = n.parentNode) {
			ancestors.push(n);
		}

		for(n = node2; n; n = n.parentNode) {
			if(arrayContains(ancestors, n)) {
				return n;
			}
		}

		return null;
	}

	function isAncestorOf(ancestor, descendant, selfIsAncestor) {
		var n = selfIsAncestor ? descendant : descendant.parentNode;
		while(n) {
			if(n === ancestor) {
				return true;
			} else {
				n = n.parentNode;
			}
		}
		return false;
	}

	function getClosestAncestorIn(node, ancestor, selfIsAncestor) {
		var p, n = selfIsAncestor ? node : node.parentNode;
		while(n) {
			p = n.parentNode;
			if(p === ancestor) {
				return n;
			}
			n = p;
		}
		return null;
	}

	function isCharacterDataNode(node) {
		var t = node.nodeType;
		return t == 3 || t == 4 || t == 8; // Text, CDataSection or Comment
	}

	function insertAfter(node, precedingNode) {
		var nextNode = precedingNode.nextSibling,
			parent = precedingNode.parentNode;
		if(nextNode) {
			parent.insertBefore(node, nextNode);
		} else {
			parent.appendChild(node);
		}
		return node;
	}

	// Note that we cannot use splitText() because it is bugridden in IE 9.
	function splitDataNode(node, index) {
		var newNode = node.cloneNode(false);
		newNode.deleteData(0, index);
		node.deleteData(index, node.length - index);
		insertAfter(newNode, node);
		return newNode;
	}

	function getDocument(node) {
		if(node.nodeType == 9) {
			return node;
		} else if(typeof node.ownerDocument != UNDEF) {
			return node.ownerDocument;
		} else if(typeof node.document != UNDEF) {
			return node.document;
		} else if(node.parentNode) {
			return getDocument(node.parentNode);
		} else {
			throw new Error("getDocument: no document found for node");
		}
	}

	function getWindow(node) {
		var doc = getDocument(node);
		if(typeof doc.defaultView != UNDEF) {
			return doc.defaultView;
		} else if(typeof doc.parentWindow != UNDEF) {
			return doc.parentWindow;
		} else {
			throw new Error("Cannot get a window object for node");
		}
	}

	function getIframeDocument(iframeEl) {
		if(typeof iframeEl.contentDocument != UNDEF) {
			return iframeEl.contentDocument;
		} else if(typeof iframeEl.contentWindow != UNDEF) {
			return iframeEl.contentWindow.document;
		} else {
			throw new Error("getIframeWindow: No Document object found for iframe element");
		}
	}

	function getIframeWindow(iframeEl) {
		if(typeof iframeEl.contentWindow != UNDEF) {
			return iframeEl.contentWindow;
		} else if(typeof iframeEl.contentDocument != UNDEF) {
			return iframeEl.contentDocument.defaultView;
		} else {
			throw new Error("getIframeWindow: No Window object found for iframe element");
		}
	}

	function getBody(doc) {
		return util.isHostObject(doc, "body") ? doc.body : doc.getElementsByTagName("body")[0];
	}

	function getRootContainer(node) {
		var parent;
		while((parent = node.parentNode)) {
			node = parent;
		}
		return node;
	}

	function comparePoints(nodeA, offsetA, nodeB, offsetB) {
		// See http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-Comparing
		var nodeC, root, childA, childB, n;
		if(nodeA == nodeB) {

			// Case 1: nodes are the same
			return offsetA === offsetB ? 0 : (offsetA < offsetB) ? -1 : 1;
		} else if((nodeC = getClosestAncestorIn(nodeB, nodeA, true))) {

			// Case 2: node C (container B or an ancestor) is a child node of A
			return offsetA <= getNodeIndex(nodeC) ? -1 : 1;
		} else if((nodeC = getClosestAncestorIn(nodeA, nodeB, true))) {

			// Case 3: node C (container A or an ancestor) is a child node of B
			return getNodeIndex(nodeC) < offsetB ? -1 : 1;
		} else {

			// Case 4: containers are siblings or descendants of siblings
			root = getCommonAncestor(nodeA, nodeB);
			childA = (nodeA === root) ? root : getClosestAncestorIn(nodeA, root, true);
			childB = (nodeB === root) ? root : getClosestAncestorIn(nodeB, root, true);

			if(childA === childB) {
				// This shouldn't be possible

				throw new Error("comparePoints got to case 4 and childA and childB are the same!");
			} else {
				n = root.firstChild;
				while(n) {
					if(n === childA) {
						return -1;
					} else if(n === childB) {
						return 1;
					}
					n = n.nextSibling;
				}
				throw new Error("Should not be here!");
			}
		}
	}

	function fragmentFromNodeChildren(node) {
		var fragment = getDocument(node).createDocumentFragment(),
			child;
		while((child = node.firstChild)) {
			fragment.appendChild(child);
		}
		return fragment;
	}

	function inspectNode(node) {
		if(!node) {
			return "[No node]";
		}
		if(isCharacterDataNode(node)) {
			return '"' + node.data + '"';
		} else if(node.nodeType == 1) {
			var idAttr = node.id ? ' id="' + node.id + '"' : "";
			return "<" + node.nodeName + idAttr + ">[" + node.childNodes.length + "]";
		} else {
			return node.nodeName;
		}
	}

	/**
	 * @constructor
	 */
	function NodeIterator(root) {
		this.root = root;
		this._next = root;
	}

	NodeIterator.prototype = {
		_current: null,

		hasNext: function() {
			return !!this._next;
		},

		next: function() {
			var n = this._current = this._next;
			var child, next;
			if(this._current) {
				child = n.firstChild;
				if(child) {
					this._next = child;
				} else {
					next = null;
					while((n !== this.root) && !(next = n.nextSibling)) {
						n = n.parentNode;
					}
					this._next = next;
				}
			}
			return this._current;
		},

		detach: function() {
			this._current = this._next = this.root = null;
		}
	};

	function createIterator(root) {
		return new NodeIterator(root);
	}

	/**
	 * @constructor
	 */
	function DomPosition(node, offset) {
		this.node = node;
		this.offset = offset;
	}

	DomPosition.prototype = {
		equals: function(pos) {
			return this.node === pos.node & this.offset == pos.offset;
		},

		inspect: function() {
			return "[DomPosition(" + inspectNode(this.node) + ":" + this.offset + ")]";
		}
	};

	/**
	 * @constructor
	 */
	function DOMException(codeName) {
		this.code = this[codeName];
		this.codeName = codeName;
		this.message = "DOMException: " + this.codeName;
	}

	DOMException.prototype = {
		INDEX_SIZE_ERR: 1,
		HIERARCHY_REQUEST_ERR: 3,
		WRONG_DOCUMENT_ERR: 4,
		NO_MODIFICATION_ALLOWED_ERR: 7,
		NOT_FOUND_ERR: 8,
		NOT_SUPPORTED_ERR: 9,
		INVALID_STATE_ERR: 11
	};

	DOMException.prototype.toString = function() {
		return this.message;
	};

	api.dom = {
		arrayContains: arrayContains,
		isHtmlNamespace: isHtmlNamespace,
		parentElement: parentElement,
		getNodeIndex: getNodeIndex,
		getNodeLength: getNodeLength,
		getCommonAncestor: getCommonAncestor,
		isAncestorOf: isAncestorOf,
		getClosestAncestorIn: getClosestAncestorIn,
		isCharacterDataNode: isCharacterDataNode,
		insertAfter: insertAfter,
		splitDataNode: splitDataNode,
		getDocument: getDocument,
		getWindow: getWindow,
		getIframeWindow: getIframeWindow,
		getIframeDocument: getIframeDocument,
		getBody: getBody,
		getRootContainer: getRootContainer,
		comparePoints: comparePoints,
		inspectNode: inspectNode,
		fragmentFromNodeChildren: fragmentFromNodeChildren,
		createIterator: createIterator,
		DomPosition: DomPosition
	};

	api.DOMException = DOMException;
});
rangy.createModule("DomRange", function(api, module) {
	api.requireModules(["DomUtil"]);

	var dom = api.dom;
	var DomPosition = dom.DomPosition;
	var DOMException = api.DOMException;

	/*----------------------------------------------------------------------------------------------------------------*/

	// Utility functions

	function isNonTextPartiallySelected(node, range) {
		return(node.nodeType != 3) &&
			(dom.isAncestorOf(node, range.startContainer, true) || dom.isAncestorOf(node, range.endContainer, true));
	}

	function getRangeDocument(range) {
		return dom.getDocument(range.startContainer);
	}

	function dispatchEvent(range, type, args) {
		var listeners = range._listeners[type];
		if(listeners) {
			for(var i = 0, len = listeners.length; i < len; ++i) {
				listeners[i].call(range, {
					target: range,
					args: args
				});
			}
		}
	}

	function getBoundaryBeforeNode(node) {
		return new DomPosition(node.parentNode, dom.getNodeIndex(node));
	}

	function getBoundaryAfterNode(node) {
		return new DomPosition(node.parentNode, dom.getNodeIndex(node) + 1);
	}

	function insertNodeAtPosition(node, n, o) {
		var firstNodeInserted = node.nodeType == 11 ? node.firstChild : node;
		if(dom.isCharacterDataNode(n)) {
			if(o == n.length) {
				dom.insertAfter(node, n);
			} else {
				n.parentNode.insertBefore(node, o == 0 ? n : dom.splitDataNode(n, o));
			}
		} else if(o >= n.childNodes.length) {
			n.appendChild(node);
		} else {
			n.insertBefore(node, n.childNodes[o]);
		}
		return firstNodeInserted;
	}

	function cloneSubtree(iterator) {
		var partiallySelected;
		for(var node, frag = getRangeDocument(iterator.range).createDocumentFragment(), subIterator; node = iterator.next();) {
			partiallySelected = iterator.isPartiallySelectedSubtree();

			node = node.cloneNode(!partiallySelected);
			if(partiallySelected) {
				subIterator = iterator.getSubtreeIterator();
				node.appendChild(cloneSubtree(subIterator));
				subIterator.detach(true);
			}

			if(node.nodeType == 10) { // DocumentType
				throw new DOMException("HIERARCHY_REQUEST_ERR");
			}
			frag.appendChild(node);
		}
		return frag;
	}

	function iterateSubtree(rangeIterator, func, iteratorState) {
		var it, n;
		iteratorState = iteratorState || {
			stop: false
		};
		for(var node, subRangeIterator; node = rangeIterator.next();) {
			//log.debug("iterateSubtree, partially selected: " + rangeIterator.isPartiallySelectedSubtree(), nodeToString(node));
			if(rangeIterator.isPartiallySelectedSubtree()) {
				// The node is partially selected by the Range, so we can use a new RangeIterator on the portion of the
				// node selected by the Range.
				if(func(node) === false) {
					iteratorState.stop = true;
					return;
				} else {
					subRangeIterator = rangeIterator.getSubtreeIterator();
					iterateSubtree(subRangeIterator, func, iteratorState);
					subRangeIterator.detach(true);
					if(iteratorState.stop) {
						return;
					}
				}
			} else {
				// The whole node is selected, so we can use efficient DOM iteration to iterate over the node and its
				// descendant
				it = dom.createIterator(node);
				while((n = it.next())) {
					if(func(n) === false) {
						iteratorState.stop = true;
						return;
					}
				}
			}
		}
	}

	function deleteSubtree(iterator) {
		var subIterator;
		while(iterator.next()) {
			if(iterator.isPartiallySelectedSubtree()) {
				subIterator = iterator.getSubtreeIterator();
				deleteSubtree(subIterator);
				subIterator.detach(true);
			} else {
				iterator.remove();
			}
		}
	}

	function extractSubtree(iterator) {

		for(var node, frag = getRangeDocument(iterator.range).createDocumentFragment(), subIterator; node = iterator.next();) {

			if(iterator.isPartiallySelectedSubtree()) {
				node = node.cloneNode(false);
				subIterator = iterator.getSubtreeIterator();
				node.appendChild(extractSubtree(subIterator));
				subIterator.detach(true);
			} else {
				iterator.remove();
			}
			if(node.nodeType == 10) { // DocumentType
				throw new DOMException("HIERARCHY_REQUEST_ERR");
			}
			frag.appendChild(node);
		}
		return frag;
	}

	function getNodesInRange(range, nodeTypes, filter) {
		//log.info("getNodesInRange, " + nodeTypes.join(","));
		var filterNodeTypes = !!(nodeTypes && nodeTypes.length),
			regex;
		var filterExists = !!filter;
		if(filterNodeTypes) {
			regex = new RegExp("^(" + nodeTypes.join("|") + ")$");
		}

		var nodes = [];
		iterateSubtree(new RangeIterator(range, false), function(node) {
			if((!filterNodeTypes || regex.test(node.nodeType)) && (!filterExists || filter(node))) {
				nodes.push(node);
			}
		});
		return nodes;
	}

	function inspect(range) {
		var name = (typeof range.getName == "undefined") ? "Range" : range.getName();
		return "[" + name + "(" + dom.inspectNode(range.startContainer) + ":" + range.startOffset + ", " +
			dom.inspectNode(range.endContainer) + ":" + range.endOffset + ")]";
	}

	/*----------------------------------------------------------------------------------------------------------------*/

	// RangeIterator code partially borrows from IERange by Tim Ryan (http://github.com/timcameronryan/IERange)

	/**
	 * @constructor
	 */
	function RangeIterator(range, clonePartiallySelectedTextNodes) {
		this.range = range;
		this.clonePartiallySelectedTextNodes = clonePartiallySelectedTextNodes;

		if(!range.collapsed) {
			this.sc = range.startContainer;
			this.so = range.startOffset;
			this.ec = range.endContainer;
			this.eo = range.endOffset;
			var root = range.commonAncestorContainer;

			if(this.sc === this.ec && dom.isCharacterDataNode(this.sc)) {
				this.isSingleCharacterDataNode = true;
				this._first = this._last = this._next = this.sc;
			} else {
				this._first = this._next = (this.sc === root && !dom.isCharacterDataNode(this.sc)) ?
					this.sc.childNodes[this.so] : dom.getClosestAncestorIn(this.sc, root, true);
				this._last = (this.ec === root && !dom.isCharacterDataNode(this.ec)) ?
					this.ec.childNodes[this.eo - 1] : dom.getClosestAncestorIn(this.ec, root, true);
			}

		}
	}

	RangeIterator.prototype = {
		_current: null,
		_next: null,
		_first: null,
		_last: null,
		isSingleCharacterDataNode: false,

		reset: function() {
			this._current = null;
			this._next = this._first;
		},

		hasNext: function() {
			return !!this._next;
		},

		next: function() {
			// Move to next node
			var current = this._current = this._next;
			if(current) {
				this._next = (current !== this._last) ? current.nextSibling : null;

				// Check for partially selected text nodes
				if(dom.isCharacterDataNode(current) && this.clonePartiallySelectedTextNodes) {
					if(current === this.ec) {

						(current = current.cloneNode(true)).deleteData(this.eo, current.length - this.eo);
					}
					if(this._current === this.sc) {

						(current = current.cloneNode(true)).deleteData(0, this.so);
					}
				}
			}

			return current;
		},

		remove: function() {
			var current = this._current,
				start, end;

			if(dom.isCharacterDataNode(current) && (current === this.sc || current === this.ec)) {
				start = (current === this.sc) ? this.so : 0;
				end = (current === this.ec) ? this.eo : current.length;
				if(start != end) {
					current.deleteData(start, end - start);
				}
			} else {
				if(current.parentNode) {
					current.parentNode.removeChild(current);
				} else {

				}
			}
		},

		// Checks if the current node is partially selected
		isPartiallySelectedSubtree: function() {
			var current = this._current;
			return isNonTextPartiallySelected(current, this.range);
		},

		getSubtreeIterator: function() {
			var subRange;
			if(this.isSingleCharacterDataNode) {
				subRange = this.range.cloneRange();
				subRange.collapse();
			} else {
				subRange = new Range(getRangeDocument(this.range));
				var current = this._current;
				var startContainer = current,
					startOffset = 0,
					endContainer = current,
					endOffset = dom.getNodeLength(current);

				if(dom.isAncestorOf(current, this.sc, true)) {
					startContainer = this.sc;
					startOffset = this.so;
				}
				if(dom.isAncestorOf(current, this.ec, true)) {
					endContainer = this.ec;
					endOffset = this.eo;
				}

				updateBoundaries(subRange, startContainer, startOffset, endContainer, endOffset);
			}
			return new RangeIterator(subRange, this.clonePartiallySelectedTextNodes);
		},

		detach: function(detachRange) {
			if(detachRange) {
				this.range.detach();
			}
			this.range = this._current = this._next = this._first = this._last = this.sc = this.so = this.ec = this.eo = null;
		}
	};

	/*----------------------------------------------------------------------------------------------------------------*/

	// Exceptions

	/**
	 * @constructor
	 */
	function RangeException(codeName) {
		this.code = this[codeName];
		this.codeName = codeName;
		this.message = "RangeException: " + this.codeName;
	}

	RangeException.prototype = {
		BAD_BOUNDARYPOINTS_ERR: 1,
		INVALID_NODE_TYPE_ERR: 2
	};

	RangeException.prototype.toString = function() {
		return this.message;
	};

	/*----------------------------------------------------------------------------------------------------------------*/

	/**
	 * Currently iterates through all nodes in the range on creation until I think of a decent way to do it
	 * TODO: Look into making this a proper iterator, not requiring preloading everything first
	 * @constructor
	 */
	function RangeNodeIterator(range, nodeTypes, filter) {
		this.nodes = getNodesInRange(range, nodeTypes, filter);
		this._next = this.nodes[0];
		this._position = 0;
	}

	RangeNodeIterator.prototype = {
		_current: null,

		hasNext: function() {
			return !!this._next;
		},

		next: function() {
			this._current = this._next;
			this._next = this.nodes[++this._position];
			return this._current;
		},

		detach: function() {
			this._current = this._next = this.nodes = null;
		}
	};

	var beforeAfterNodeTypes = [1, 3, 4, 5, 7, 8, 10];
	var rootContainerNodeTypes = [2, 9, 11];
	var readonlyNodeTypes = [5, 6, 10, 12];
	var insertableNodeTypes = [1, 3, 4, 5, 7, 8, 10, 11];
	var surroundNodeTypes = [1, 3, 4, 5, 7, 8];

	function createAncestorFinder(nodeTypes) {
		return function(node, selfIsAncestor) {
			var t, n = selfIsAncestor ? node : node.parentNode;
			while(n) {
				t = n.nodeType;
				if(dom.arrayContains(nodeTypes, t)) {
					return n;
				}
				n = n.parentNode;
			}
			return null;
		};
	}

	var getRootContainer = dom.getRootContainer;
	var getDocumentOrFragmentContainer = createAncestorFinder([9, 11]);
	var getReadonlyAncestor = createAncestorFinder(readonlyNodeTypes);
	var getDocTypeNotationEntityAncestor = createAncestorFinder([6, 10, 12]);

	function assertNoDocTypeNotationEntityAncestor(node, allowSelf) {
		if(getDocTypeNotationEntityAncestor(node, allowSelf)) {
			throw new RangeException("INVALID_NODE_TYPE_ERR");
		}
	}

	function assertNotDetached(range) {
		if(!range.startContainer) {
			throw new DOMException("INVALID_STATE_ERR");
		}
	}

	function assertValidNodeType(node, invalidTypes) {
		if(!dom.arrayContains(invalidTypes, node.nodeType)) {
			throw new RangeException("INVALID_NODE_TYPE_ERR");
		}
	}

	function assertValidOffset(node, offset) {
		if(offset < 0 || offset > (dom.isCharacterDataNode(node) ? node.length : node.childNodes.length)) {
			throw new DOMException("INDEX_SIZE_ERR");
		}
	}

	function assertSameDocumentOrFragment(node1, node2) {
		if(getDocumentOrFragmentContainer(node1, true) !== getDocumentOrFragmentContainer(node2, true)) {
			throw new DOMException("WRONG_DOCUMENT_ERR");
		}
	}

	function assertNodeNotReadOnly(node) {
		if(getReadonlyAncestor(node, true)) {
			throw new DOMException("NO_MODIFICATION_ALLOWED_ERR");
		}
	}

	function assertNode(node, codeName) {
		if(!node) {
			throw new DOMException(codeName);
		}
	}

	function isOrphan(node) {
		return !dom.arrayContains(rootContainerNodeTypes, node.nodeType) && !getDocumentOrFragmentContainer(node, true);
	}

	function isValidOffset(node, offset) {
		return offset <= (dom.isCharacterDataNode(node) ? node.length : node.childNodes.length);
	}

	function assertRangeValid(range) {
		assertNotDetached(range);
		if(isOrphan(range.startContainer) || isOrphan(range.endContainer) ||
			!isValidOffset(range.startContainer, range.startOffset) ||
			!isValidOffset(range.endContainer, range.endOffset)) {
			throw new Error("Range error: Range is no longer valid after DOM mutation (" + range.inspect() + ")");
		}
	}

	/*----------------------------------------------------------------------------------------------------------------*/

	// Test the browser's innerHTML support to decide how to implement createContextualFragment
	var styleEl = document.createElement("style");
	var htmlParsingConforms = false;
	try {
		styleEl.innerHTML = "<b>x</b>";
		htmlParsingConforms = (styleEl.firstChild.nodeType == 3); // Opera incorrectly creates an element node
	} catch(e) {
		// IE 6 and 7 throw
	}

	api.features.htmlParsingConforms = htmlParsingConforms;

	var createContextualFragment = htmlParsingConforms ?

		// Implementation as per HTML parsing spec, trusting in the browser's implementation of innerHTML. See
		// discussion and base code for this implementation at issue 67.
		// Spec: http://html5.org/specs/dom-parsing.html#extensions-to-the-range-interface
		// Thanks to Aleks Williams.
		function(fragmentStr) {
			// "Let node the context object's start's node."
			var node = this.startContainer;
			var doc = dom.getDocument(node);

			// "If the context object's start's node is null, raise an INVALID_STATE_ERR
			// exception and abort these steps."
			if(!node) {
				throw new DOMException("INVALID_STATE_ERR");
			}

			// "Let element be as follows, depending on node's interface:"
			// Document, Document Fragment: null
			var el = null;

			// "Element: node"
			if(node.nodeType == 1) {
				el = node;

				// "Text, Comment: node's parentElement"
			} else if(dom.isCharacterDataNode(node)) {
				el = dom.parentElement(node);
			}

			// "If either element is null or element's ownerDocument is an HTML document
			// and element's local name is "html" and element's namespace is the HTML
			// namespace"
			if(el === null || (
					el.nodeName == "HTML" &&
					dom.isHtmlNamespace(dom.getDocument(el).documentElement) &&
					dom.isHtmlNamespace(el)
				)) {

				// "let element be a new Element with "body" as its local name and the HTML
				// namespace as its namespace.""
				el = doc.createElement("body");
			} else {
				el = el.cloneNode(false);
			}

			// "If the node's document is an HTML document: Invoke the HTML fragment parsing algorithm."
			// "If the node's document is an XML document: Invoke the XML fragment parsing algorithm."
			// "In either case, the algorithm must be invoked with fragment as the input
			// and element as the context element."
			el.innerHTML = fragmentStr;

			// "If this raises an exception, then abort these steps. Otherwise, let new
			// children be the nodes returned."

			// "Let fragment be a new DocumentFragment."
			// "Append all new children to fragment."
			// "Return fragment."
			return dom.fragmentFromNodeChildren(el);
		} :

		// In this case, innerHTML cannot be trusted, so fall back to a simpler, non-conformant implementation that
		// previous versions of Rangy used (with the exception of using a body element rather than a div)
		function(fragmentStr) {
			assertNotDetached(this);
			var doc = getRangeDocument(this);
			var el = doc.createElement("body");
			el.innerHTML = fragmentStr;

			return dom.fragmentFromNodeChildren(el);
		};

	/*----------------------------------------------------------------------------------------------------------------*/

	var rangeProperties = ["startContainer", "startOffset", "endContainer", "endOffset", "collapsed",
		"commonAncestorContainer"
	];

	var s2s = 0,
		s2e = 1,
		e2e = 2,
		e2s = 3;
	var n_b = 0,
		n_a = 1,
		n_b_a = 2,
		n_i = 3;

	function RangePrototype() {}

	RangePrototype.prototype = {
		attachListener: function(type, listener) {
			this._listeners[type].push(listener);
		},

		compareBoundaryPoints: function(how, range) {
			assertRangeValid(this);
			assertSameDocumentOrFragment(this.startContainer, range.startContainer);

			var nodeA, offsetA, nodeB, offsetB;
			var prefixA = (how == e2s || how == s2s) ? "start" : "end";
			var prefixB = (how == s2e || how == s2s) ? "start" : "end";
			nodeA = this[prefixA + "Container"];
			offsetA = this[prefixA + "Offset"];
			nodeB = range[prefixB + "Container"];
			offsetB = range[prefixB + "Offset"];
			return dom.comparePoints(nodeA, offsetA, nodeB, offsetB);
		},

		insertNode: function(node) {
			assertRangeValid(this);
			assertValidNodeType(node, insertableNodeTypes);
			assertNodeNotReadOnly(this.startContainer);

			if(dom.isAncestorOf(node, this.startContainer, true)) {
				throw new DOMException("HIERARCHY_REQUEST_ERR");
			}

			// No check for whether the container of the start of the Range is of a type that does not allow
			// children of the type of node: the browser's DOM implementation should do this for us when we attempt
			// to add the node

			var firstNodeInserted = insertNodeAtPosition(node, this.startContainer, this.startOffset);
			this.setStartBefore(firstNodeInserted);
		},

		cloneContents: function() {
			assertRangeValid(this);

			var clone, frag;
			if(this.collapsed) {
				return getRangeDocument(this).createDocumentFragment();
			} else {
				if(this.startContainer === this.endContainer && dom.isCharacterDataNode(this.startContainer)) {
					clone = this.startContainer.cloneNode(true);
					clone.data = clone.data.slice(this.startOffset, this.endOffset);
					frag = getRangeDocument(this).createDocumentFragment();
					frag.appendChild(clone);
					return frag;
				} else {
					var iterator = new RangeIterator(this, true);
					clone = cloneSubtree(iterator);
					iterator.detach();
				}
				return clone;
			}
		},

		canSurroundContents: function() {
			assertRangeValid(this);
			assertNodeNotReadOnly(this.startContainer);
			assertNodeNotReadOnly(this.endContainer);

			// Check if the contents can be surrounded. Specifically, this means whether the range partially selects
			// no non-text nodes.
			var iterator = new RangeIterator(this, true);
			var boundariesInvalid = (iterator._first && (isNonTextPartiallySelected(iterator._first, this)) ||
				(iterator._last && isNonTextPartiallySelected(iterator._last, this)));
			iterator.detach();
			return !boundariesInvalid;
		},

		surroundContents: function(node) {
			assertValidNodeType(node, surroundNodeTypes);

			if(!this.canSurroundContents()) {
				throw new RangeException("BAD_BOUNDARYPOINTS_ERR");
			}

			// Extract the contents
			var content = this.extractContents();

			// Clear the children of the node
			if(node.hasChildNodes()) {
				while(node.lastChild) {
					node.removeChild(node.lastChild);
				}
			}

			// Insert the new node and add the extracted contents
			insertNodeAtPosition(node, this.startContainer, this.startOffset);
			node.appendChild(content);

			this.selectNode(node);
		},

		cloneRange: function() {
			assertRangeValid(this);
			var range = new Range(getRangeDocument(this));
			var i = rangeProperties.length,
				prop;
			while(i--) {
				prop = rangeProperties[i];
				range[prop] = this[prop];
			}
			return range;
		},

		toString: function() {
			assertRangeValid(this);
			var sc = this.startContainer;
			if(sc === this.endContainer && dom.isCharacterDataNode(sc)) {
				return(sc.nodeType == 3 || sc.nodeType == 4) ? sc.data.slice(this.startOffset, this.endOffset) : "";
			} else {
				var textBits = [],
					iterator = new RangeIterator(this, true);

				iterateSubtree(iterator, function(node) {
					// Accept only text or CDATA nodes, not comments

					if(node.nodeType == 3 || node.nodeType == 4) {
						textBits.push(node.data);
					}
				});
				iterator.detach();
				return textBits.join("");
			}
		},

		// The methods below are all non-standard. The following batch were introduced by Mozilla but have since
		// been removed from Mozilla.

		compareNode: function(node) {
			assertRangeValid(this);

			var parent = node.parentNode;
			var nodeIndex = dom.getNodeIndex(node);

			if(!parent) {
				throw new DOMException("NOT_FOUND_ERR");
			}

			var startComparison = this.comparePoint(parent, nodeIndex),
				endComparison = this.comparePoint(parent, nodeIndex + 1);

			if(startComparison < 0) { // Node starts before
				return(endComparison > 0) ? n_b_a : n_b;
			} else {
				return(endComparison > 0) ? n_a : n_i;
			}
		},

		comparePoint: function(node, offset) {
			assertRangeValid(this);
			assertNode(node, "HIERARCHY_REQUEST_ERR");
			assertSameDocumentOrFragment(node, this.startContainer);

			if(dom.comparePoints(node, offset, this.startContainer, this.startOffset) < 0) {
				return -1;
			} else if(dom.comparePoints(node, offset, this.endContainer, this.endOffset) > 0) {
				return 1;
			}
			return 0;
		},

		createContextualFragment: createContextualFragment,

		toHtml: function() {
			assertRangeValid(this);
			var container = getRangeDocument(this).createElement("div");
			container.appendChild(this.cloneContents());
			return container.innerHTML;
		},

		// touchingIsIntersecting determines whether this method considers a node that borders a range intersects
		// with it (as in WebKit) or not (as in Gecko pre-1.9, and the default)
		intersectsNode: function(node, touchingIsIntersecting) {
			assertRangeValid(this);
			assertNode(node, "NOT_FOUND_ERR");
			if(dom.getDocument(node) !== getRangeDocument(this)) {
				return false;
			}

			var parent = node.parentNode,
				offset = dom.getNodeIndex(node);
			assertNode(parent, "NOT_FOUND_ERR");

			var startComparison = dom.comparePoints(parent, offset, this.endContainer, this.endOffset),
				endComparison = dom.comparePoints(parent, offset + 1, this.startContainer, this.startOffset);

			return touchingIsIntersecting ? startComparison <= 0 && endComparison >= 0 : startComparison < 0 && endComparison > 0;
		},

		isPointInRange: function(node, offset) {
			assertRangeValid(this);
			assertNode(node, "HIERARCHY_REQUEST_ERR");
			assertSameDocumentOrFragment(node, this.startContainer);

			return(dom.comparePoints(node, offset, this.startContainer, this.startOffset) >= 0) &&
				(dom.comparePoints(node, offset, this.endContainer, this.endOffset) <= 0);
		},

		// The methods below are non-standard and invented by me.

		// Sharing a boundary start-to-end or end-to-start does not count as intersection.
		intersectsRange: function(range, touchingIsIntersecting) {
			assertRangeValid(this);

			if(getRangeDocument(range) != getRangeDocument(this)) {
				throw new DOMException("WRONG_DOCUMENT_ERR");
			}

			var startComparison = dom.comparePoints(this.startContainer, this.startOffset, range.endContainer, range.endOffset),
				endComparison = dom.comparePoints(this.endContainer, this.endOffset, range.startContainer, range.startOffset);

			return touchingIsIntersecting ? startComparison <= 0 && endComparison >= 0 : startComparison < 0 && endComparison > 0;
		},

		intersection: function(range) {
			if(this.intersectsRange(range)) {
				var startComparison = dom.comparePoints(this.startContainer, this.startOffset, range.startContainer, range.startOffset),
					endComparison = dom.comparePoints(this.endContainer, this.endOffset, range.endContainer, range.endOffset);

				var intersectionRange = this.cloneRange();

				if(startComparison == -1) {
					intersectionRange.setStart(range.startContainer, range.startOffset);
				}
				if(endComparison == 1) {
					intersectionRange.setEnd(range.endContainer, range.endOffset);
				}
				return intersectionRange;
			}
			return null;
		},

		union: function(range) {
			if(this.intersectsRange(range, true)) {
				var unionRange = this.cloneRange();
				if(dom.comparePoints(range.startContainer, range.startOffset, this.startContainer, this.startOffset) == -1) {
					unionRange.setStart(range.startContainer, range.startOffset);
				}
				if(dom.comparePoints(range.endContainer, range.endOffset, this.endContainer, this.endOffset) == 1) {
					unionRange.setEnd(range.endContainer, range.endOffset);
				}
				return unionRange;
			} else {
				throw new RangeException("Ranges do not intersect");
			}
		},

		containsNode: function(node, allowPartial) {
			if(allowPartial) {
				return this.intersectsNode(node, false);
			} else {
				return this.compareNode(node) == n_i;
			}
		},

		containsNodeContents: function(node) {
			return this.comparePoint(node, 0) >= 0 && this.comparePoint(node, dom.getNodeLength(node)) <= 0;
		},

		containsRange: function(range) {
			return this.intersection(range).equals(range);
		},

		containsNodeText: function(node) {
			var nodeRange = this.cloneRange();
			nodeRange.selectNode(node);
			var textNodes = nodeRange.getNodes([3]);
			if(textNodes.length > 0) {
				nodeRange.setStart(textNodes[0], 0);
				var lastTextNode = textNodes.pop();
				nodeRange.setEnd(lastTextNode, lastTextNode.length);
				var contains = this.containsRange(nodeRange);
				nodeRange.detach();
				return contains;
			} else {
				return this.containsNodeContents(node);
			}
		},

		createNodeIterator: function(nodeTypes, filter) {
			assertRangeValid(this);
			return new RangeNodeIterator(this, nodeTypes, filter);
		},

		getNodes: function(nodeTypes, filter) {
			assertRangeValid(this);
			return getNodesInRange(this, nodeTypes, filter);
		},

		getDocument: function() {
			return getRangeDocument(this);
		},

		collapseBefore: function(node) {
			assertNotDetached(this);

			this.setEndBefore(node);
			this.collapse(false);
		},

		collapseAfter: function(node) {
			assertNotDetached(this);

			this.setStartAfter(node);
			this.collapse(true);
		},

		getName: function() {
			return "DomRange";
		},

		equals: function(range) {
			return Range.rangesEqual(this, range);
		},

		inspect: function() {
			return inspect(this);
		}
	};

	function copyComparisonConstantsToObject(obj) {
		obj.START_TO_START = s2s;
		obj.START_TO_END = s2e;
		obj.END_TO_END = e2e;
		obj.END_TO_START = e2s;

		obj.NODE_BEFORE = n_b;
		obj.NODE_AFTER = n_a;
		obj.NODE_BEFORE_AND_AFTER = n_b_a;
		obj.NODE_INSIDE = n_i;
	}

	function copyComparisonConstants(constructor) {
		copyComparisonConstantsToObject(constructor);
		copyComparisonConstantsToObject(constructor.prototype);
	}

	function createRangeContentRemover(remover, boundaryUpdater) {
		return function() {
			assertRangeValid(this);

			var sc = this.startContainer,
				so = this.startOffset,
				root = this.commonAncestorContainer;

			var iterator = new RangeIterator(this, true);

			// Work out where to position the range after content removal
			var node, boundary;
			if(sc !== root) {
				node = dom.getClosestAncestorIn(sc, root, true);
				boundary = getBoundaryAfterNode(node);
				sc = boundary.node;
				so = boundary.offset;
			}

			// Check none of the range is read-only
			iterateSubtree(iterator, assertNodeNotReadOnly);

			iterator.reset();

			// Remove the content
			var returnValue = remover(iterator);
			iterator.detach();

			// Move to the new position
			boundaryUpdater(this, sc, so, sc, so);

			return returnValue;
		};
	}

	function createPrototypeRange(constructor, boundaryUpdater, detacher) {
		function createBeforeAfterNodeSetter(isBefore, isStart) {
			return function(node) {
				assertNotDetached(this);
				assertValidNodeType(node, beforeAfterNodeTypes);
				assertValidNodeType(getRootContainer(node), rootContainerNodeTypes);

				var boundary = (isBefore ? getBoundaryBeforeNode : getBoundaryAfterNode)(node);
				(isStart ? setRangeStart : setRangeEnd)(this, boundary.node, boundary.offset);
			};
		}

		function setRangeStart(range, node, offset) {
			var ec = range.endContainer,
				eo = range.endOffset;
			if(node !== range.startContainer || offset !== range.startOffset) {
				// Check the root containers of the range and the new boundary, and also check whether the new boundary
				// is after the current end. In either case, collapse the range to the new position
				if(getRootContainer(node) != getRootContainer(ec) || dom.comparePoints(node, offset, ec, eo) == 1) {
					ec = node;
					eo = offset;
				}
				boundaryUpdater(range, node, offset, ec, eo);
			}
		}

		function setRangeEnd(range, node, offset) {
			var sc = range.startContainer,
				so = range.startOffset;
			if(node !== range.endContainer || offset !== range.endOffset) {
				// Check the root containers of the range and the new boundary, and also check whether the new boundary
				// is after the current end. In either case, collapse the range to the new position
				if(getRootContainer(node) != getRootContainer(sc) || dom.comparePoints(node, offset, sc, so) == -1) {
					sc = node;
					so = offset;
				}
				boundaryUpdater(range, sc, so, node, offset);
			}
		}

		function setRangeStartAndEnd(range, node, offset) {
			if(node !== range.startContainer || offset !== range.startOffset || node !== range.endContainer || offset !== range.endOffset) {
				boundaryUpdater(range, node, offset, node, offset);
			}
		}

		constructor.prototype = new RangePrototype();

		api.util.extend(constructor.prototype, {
			setStart: function(node, offset) {
				assertNotDetached(this);
				assertNoDocTypeNotationEntityAncestor(node, true);
				assertValidOffset(node, offset);

				setRangeStart(this, node, offset);
			},

			setEnd: function(node, offset) {
				assertNotDetached(this);
				assertNoDocTypeNotationEntityAncestor(node, true);
				assertValidOffset(node, offset);

				setRangeEnd(this, node, offset);
			},

			setStartBefore: createBeforeAfterNodeSetter(true, true),
			setStartAfter: createBeforeAfterNodeSetter(false, true),
			setEndBefore: createBeforeAfterNodeSetter(true, false),
			setEndAfter: createBeforeAfterNodeSetter(false, false),

			collapse: function(isStart) {
				assertRangeValid(this);
				if(isStart) {
					boundaryUpdater(this, this.startContainer, this.startOffset, this.startContainer, this.startOffset);
				} else {
					boundaryUpdater(this, this.endContainer, this.endOffset, this.endContainer, this.endOffset);
				}
			},

			selectNodeContents: function(node) {
				// This doesn't seem well specified: the spec talks only about selecting the node's contents, which
				// could be taken to mean only its children. However, browsers implement this the same as selectNode for
				// text nodes, so I shall do likewise
				assertNotDetached(this);
				assertNoDocTypeNotationEntityAncestor(node, true);

				boundaryUpdater(this, node, 0, node, dom.getNodeLength(node));
			},

			selectNode: function(node) {
				assertNotDetached(this);
				assertNoDocTypeNotationEntityAncestor(node, false);
				assertValidNodeType(node, beforeAfterNodeTypes);

				var start = getBoundaryBeforeNode(node),
					end = getBoundaryAfterNode(node);
				boundaryUpdater(this, start.node, start.offset, end.node, end.offset);
			},

			extractContents: createRangeContentRemover(extractSubtree, boundaryUpdater),

			deleteContents: createRangeContentRemover(deleteSubtree, boundaryUpdater),

			canSurroundContents: function() {
				assertRangeValid(this);
				assertNodeNotReadOnly(this.startContainer);
				assertNodeNotReadOnly(this.endContainer);

				// Check if the contents can be surrounded. Specifically, this means whether the range partially selects
				// no non-text nodes.
				var iterator = new RangeIterator(this, true);
				var boundariesInvalid = (iterator._first && (isNonTextPartiallySelected(iterator._first, this)) ||
					(iterator._last && isNonTextPartiallySelected(iterator._last, this)));
				iterator.detach();
				return !boundariesInvalid;
			},

			detach: function() {
				detacher(this);
			},

			splitBoundaries: function() {
				assertRangeValid(this);

				var sc = this.startContainer,
					so = this.startOffset,
					ec = this.endContainer,
					eo = this.endOffset;
				var startEndSame = (sc === ec);

				if(dom.isCharacterDataNode(ec) && eo > 0 && eo < ec.length) {
					dom.splitDataNode(ec, eo);

				}

				if(dom.isCharacterDataNode(sc) && so > 0 && so < sc.length) {

					sc = dom.splitDataNode(sc, so);
					if(startEndSame) {
						eo -= so;
						ec = sc;
					} else if(ec == sc.parentNode && eo >= dom.getNodeIndex(sc)) {
						eo++;
					}
					so = 0;

				}
				boundaryUpdater(this, sc, so, ec, eo);
			},

			normalizeBoundaries: function() {
				assertRangeValid(this);

				var sc = this.startContainer,
					so = this.startOffset,
					ec = this.endContainer,
					eo = this.endOffset;

				var mergeForward = function(node) {
					var sibling = node.nextSibling;
					if(sibling && sibling.nodeType == node.nodeType) {
						ec = node;
						eo = node.length;
						node.appendData(sibling.data);
						sibling.parentNode.removeChild(sibling);
					}
				};

				var mergeBackward = function(node) {
					var sibling = node.previousSibling;
					if(sibling && sibling.nodeType == node.nodeType) {
						sc = node;
						var nodeLength = node.length;
						so = sibling.length;
						node.insertData(0, sibling.data);
						sibling.parentNode.removeChild(sibling);
						if(sc == ec) {
							eo += so;
							ec = sc;
						} else if(ec == node.parentNode) {
							var nodeIndex = dom.getNodeIndex(node);
							if(eo == nodeIndex) {
								ec = node;
								eo = nodeLength;
							} else if(eo > nodeIndex) {
								eo--;
							}
						}
					}
				};

				var normalizeStart = true;

				if(dom.isCharacterDataNode(ec)) {
					if(ec.length == eo) {
						mergeForward(ec);
					}
				} else {
					if(eo > 0) {
						var endNode = ec.childNodes[eo - 1];
						if(endNode && dom.isCharacterDataNode(endNode)) {
							mergeForward(endNode);
						}
					}
					normalizeStart = !this.collapsed;
				}

				if(normalizeStart) {
					if(dom.isCharacterDataNode(sc)) {
						if(so == 0) {
							mergeBackward(sc);
						}
					} else {
						if(so < sc.childNodes.length) {
							var startNode = sc.childNodes[so];
							if(startNode && dom.isCharacterDataNode(startNode)) {
								mergeBackward(startNode);
							}
						}
					}
				} else {
					sc = ec;
					so = eo;
				}

				boundaryUpdater(this, sc, so, ec, eo);
			},

			collapseToPoint: function(node, offset) {
				assertNotDetached(this);

				assertNoDocTypeNotationEntityAncestor(node, true);
				assertValidOffset(node, offset);

				setRangeStartAndEnd(this, node, offset);
			}
		});

		copyComparisonConstants(constructor);
	}

	/*----------------------------------------------------------------------------------------------------------------*/

	// Updates commonAncestorContainer and collapsed after boundary change
	function updateCollapsedAndCommonAncestor(range) {
		range.collapsed = (range.startContainer === range.endContainer && range.startOffset === range.endOffset);
		range.commonAncestorContainer = range.collapsed ?
			range.startContainer : dom.getCommonAncestor(range.startContainer, range.endContainer);
	}

	function updateBoundaries(range, startContainer, startOffset, endContainer, endOffset) {
		var startMoved = (range.startContainer !== startContainer || range.startOffset !== startOffset);
		var endMoved = (range.endContainer !== endContainer || range.endOffset !== endOffset);

		range.startContainer = startContainer;
		range.startOffset = startOffset;
		range.endContainer = endContainer;
		range.endOffset = endOffset;

		updateCollapsedAndCommonAncestor(range);
		dispatchEvent(range, "boundarychange", {
			startMoved: startMoved,
			endMoved: endMoved
		});
	}

	function detach(range) {
		assertNotDetached(range);
		range.startContainer = range.startOffset = range.endContainer = range.endOffset = null;
		range.collapsed = range.commonAncestorContainer = null;
		dispatchEvent(range, "detach", null);
		range._listeners = null;
	}

	/**
	 * @constructor
	 */
	function Range(doc) {
		this.startContainer = doc;
		this.startOffset = 0;
		this.endContainer = doc;
		this.endOffset = 0;
		this._listeners = {
			boundarychange: [],
			detach: []
		};
		updateCollapsedAndCommonAncestor(this);
	}

	createPrototypeRange(Range, updateBoundaries, detach);

	api.rangePrototype = RangePrototype.prototype;

	Range.rangeProperties = rangeProperties;
	Range.RangeIterator = RangeIterator;
	Range.copyComparisonConstants = copyComparisonConstants;
	Range.createPrototypeRange = createPrototypeRange;
	Range.inspect = inspect;
	Range.getRangeDocument = getRangeDocument;
	Range.rangesEqual = function(r1, r2) {
		return r1.startContainer === r2.startContainer &&
			r1.startOffset === r2.startOffset &&
			r1.endContainer === r2.endContainer &&
			r1.endOffset === r2.endOffset;
	};

	api.DomRange = Range;
	api.RangeException = RangeException;
});
rangy.createModule("WrappedRange", function(api, module) {
	api.requireModules(["DomUtil", "DomRange"]);

	/**
	 * @constructor
	 */
	var WrappedRange;
	var dom = api.dom;
	var DomPosition = dom.DomPosition;
	var DomRange = api.DomRange;

	/*----------------------------------------------------------------------------------------------------------------*/

	/*
	This is a workaround for a bug where IE returns the wrong container element from the TextRange's parentElement()
	method. For example, in the following (where pipes denote the selection boundaries):

	<ul id="ul"><li id="a">| a </li><li id="b"> b |</li></ul>

	var range = document.selection.createRange();
	alert(range.parentElement().id); // Should alert "ul" but alerts "b"

	This method returns the common ancestor node of the following:
	- the parentElement() of the textRange
	- the parentElement() of the textRange after calling collapse(true)
	- the parentElement() of the textRange after calling collapse(false)
	 */
	function getTextRangeContainerElement(textRange) {
		var parentEl = textRange.parentElement();

		var range = textRange.duplicate();
		range.collapse(true);
		var startEl = range.parentElement();
		range = textRange.duplicate();
		range.collapse(false);
		var endEl = range.parentElement();
		var startEndContainer = (startEl == endEl) ? startEl : dom.getCommonAncestor(startEl, endEl);

		return startEndContainer == parentEl ? startEndContainer : dom.getCommonAncestor(parentEl, startEndContainer);
	}

	function textRangeIsCollapsed(textRange) {
		return textRange.compareEndPoints("StartToEnd", textRange) == 0;
	}

	// Gets the boundary of a TextRange expressed as a node and an offset within that node. This function started out as
	// an improved version of code found in Tim Cameron Ryan's IERange (http://code.google.com/p/ierange/) but has
	// grown, fixing problems with line breaks in preformatted text, adding workaround for IE TextRange bugs, handling
	// for inputs and images, plus optimizations.
	function getTextRangeBoundaryPosition(textRange, wholeRangeContainerElement, isStart, isCollapsed) {
		var workingRange = textRange.duplicate();

		workingRange.collapse(isStart);
		var containerElement = workingRange.parentElement();

		// Sometimes collapsing a TextRange that's at the start of a text node can move it into the previous node, so
		// check for that
		// TODO: Find out when. Workaround for wholeRangeContainerElement may break this
		if(!dom.isAncestorOf(wholeRangeContainerElement, containerElement, true)) {
			containerElement = wholeRangeContainerElement;

		}

		// Deal with nodes that cannot "contain rich HTML markup". In practice, this means form inputs, images and
		// similar. See http://msdn.microsoft.com/en-us/library/aa703950%28VS.85%29.aspx
		if(!containerElement.canHaveHTML) {
			return new DomPosition(containerElement.parentNode, dom.getNodeIndex(containerElement));
		}

		var workingNode = dom.getDocument(containerElement).createElement("span");
		var comparison, workingComparisonType = isStart ? "StartToStart" : "StartToEnd";
		var previousNode, nextNode, boundaryPosition, boundaryNode;

		// Move the working range through the container's children, starting at the end and working backwards, until the
		// working range reaches or goes past the boundary we're interested in
		do {
			containerElement.insertBefore(workingNode, workingNode.previousSibling);
			workingRange.moveToElementText(workingNode);
		} while ((comparison = workingRange.compareEndPoints(workingComparisonType, textRange)) > 0 &&
			workingNode.previousSibling);

		// We've now reached or gone past the boundary of the text range we're interested in
		// so have identified the node we want
		boundaryNode = workingNode.nextSibling;

		if(comparison == -1 && boundaryNode && dom.isCharacterDataNode(boundaryNode)) {
			// This is a character data node (text, comment, cdata). The working range is collapsed at the start of the
			// node containing the text range's boundary, so we move the end of the working range to the boundary point
			// and measure the length of its text to get the boundary's offset within the node.
			workingRange.setEndPoint(isStart ? "EndToStart" : "EndToEnd", textRange);

			var offset;

			if(/[\r\n]/.test(boundaryNode.data)) {
				/*
				For the particular case of a boundary within a text node containing line breaks (within a <pre> element,
				for example), we need a slightly complicated approach to get the boundary's offset in IE. The facts:

				- Each line break is represented as \r in the text node's data/nodeValue properties
				- Each line break is represented as \r\n in the TextRange's 'text' property
				- The 'text' property of the TextRange does not contain trailing line breaks

				To get round the problem presented by the final fact above, we can use the fact that TextRange's
				moveStart() and moveEnd() methods return the actual number of characters moved, which is not necessarily
				the same as the number of characters it was instructed to move. The simplest approach is to use this to
				store the characters moved when moving both the start and end of the range to the start of the document
				body and subtracting the start offset from the end offset (the "move-negative-gazillion" method).
				However, this is extremely slow when the document is large and the range is near the end of it. Clearly
				doing the mirror image (i.e. moving the range boundaries to the end of the document) has the same
				problem.

				Another approach that works is to use moveStart() to move the start boundary of the range up to the end
				boundary one character at a time and incrementing a counter with the value returned by the moveStart()
				call. However, the check for whether the start boundary has reached the end boundary is expensive, so
				this method is slow (although unlike "move-negative-gazillion" is largely unaffected by the location of
				the range within the document).

				The method below is a hybrid of the two methods above. It uses the fact that a string containing the
				TextRange's 'text' property with each \r\n converted to a single \r character cannot be longer than the
				text of the TextRange, so the start of the range is moved that length initially and then a character at
				a time to make up for any trailing line breaks not contained in the 'text' property. This has good
				performance in most situations compared to the previous two methods.
				*/
				var tempRange = workingRange.duplicate();
				var rangeLength = tempRange.text.replace(/\r\n/g, "\r").length;

				offset = tempRange.moveStart("character", rangeLength);
				while((comparison = tempRange.compareEndPoints("StartToEnd", tempRange)) == -1) {
					offset++;
					tempRange.moveStart("character", 1);
				}
			} else {
				offset = workingRange.text.length;
			}
			boundaryPosition = new DomPosition(boundaryNode, offset);
		} else {

			// If the boundary immediately follows a character data node and this is the end boundary, we should favour
			// a position within that, and likewise for a start boundary preceding a character data node
			previousNode = (isCollapsed || !isStart) && workingNode.previousSibling;
			nextNode = (isCollapsed || isStart) && workingNode.nextSibling;

			if(nextNode && dom.isCharacterDataNode(nextNode)) {
				boundaryPosition = new DomPosition(nextNode, 0);
			} else if(previousNode && dom.isCharacterDataNode(previousNode)) {
				boundaryPosition = new DomPosition(previousNode, previousNode.length);
			} else {
				boundaryPosition = new DomPosition(containerElement, dom.getNodeIndex(workingNode));
			}
		}

		// Clean up
		workingNode.parentNode.removeChild(workingNode);

		return boundaryPosition;
	}

	// Returns a TextRange representing the boundary of a TextRange expressed as a node and an offset within that node.
	// This function started out as an optimized version of code found in Tim Cameron Ryan's IERange
	// (http://code.google.com/p/ierange/)
	function createBoundaryTextRange(boundaryPosition, isStart) {
		var boundaryNode, boundaryParent, boundaryOffset = boundaryPosition.offset;
		var doc = dom.getDocument(boundaryPosition.node);
		var workingNode, childNodes, workingRange = doc.body.createTextRange();
		var nodeIsDataNode = dom.isCharacterDataNode(boundaryPosition.node);

		if(nodeIsDataNode) {
			boundaryNode = boundaryPosition.node;
			boundaryParent = boundaryNode.parentNode;
		} else {
			childNodes = boundaryPosition.node.childNodes;
			boundaryNode = (boundaryOffset < childNodes.length) ? childNodes[boundaryOffset] : null;
			boundaryParent = boundaryPosition.node;
		}

		// Position the range immediately before the node containing the boundary
		workingNode = doc.createElement("span");

		// Making the working element non-empty element persuades IE to consider the TextRange boundary to be within the
		// element rather than immediately before or after it, which is what we want
		workingNode.innerHTML = "&#feff;";

		// insertBefore is supposed to work like appendChild if the second parameter is null. However, a bug report
		// for IERange suggests that it can crash the browser: http://code.google.com/p/ierange/issues/detail?id=12
		if(boundaryNode) {
			boundaryParent.insertBefore(workingNode, boundaryNode);
		} else {
			boundaryParent.appendChild(workingNode);
		}

		workingRange.moveToElementText(workingNode);
		workingRange.collapse(!isStart);

		// Clean up
		boundaryParent.removeChild(workingNode);

		// Move the working range to the text offset, if required
		if(nodeIsDataNode) {
			workingRange[isStart ? "moveStart" : "moveEnd"]("character", boundaryOffset);
		}

		return workingRange;
	}

	/*----------------------------------------------------------------------------------------------------------------*/

	if(api.features.implementsDomRange && (!api.features.implementsTextRange || !api.config.preferTextRange)) {
		// This is a wrapper around the browser's native DOM Range. It has two aims:
		// - Provide workarounds for specific browser bugs
		// - provide convenient extensions, which are inherited from Rangy's DomRange

		(function() {
			var rangeProto;
			var rangeProperties = DomRange.rangeProperties;
			var canSetRangeStartAfterEnd;

			function updateRangeProperties(range) {
				var i = rangeProperties.length,
					prop;
				while(i--) {
					prop = rangeProperties[i];
					range[prop] = range.nativeRange[prop];
				}
			}

			function updateNativeRange(range, startContainer, startOffset, endContainer, endOffset) {
				var startMoved = (range.startContainer !== startContainer || range.startOffset != startOffset);
				var endMoved = (range.endContainer !== endContainer || range.endOffset != endOffset);

				// Always set both boundaries for the benefit of IE9 (see issue 35)
				if(startMoved || endMoved) {
					range.setEnd(endContainer, endOffset);
					range.setStart(startContainer, startOffset);
				}
			}

			function detach(range) {
				range.nativeRange.detach();
				range.detached = true;
				var i = rangeProperties.length,
					prop;
				while(i--) {
					prop = rangeProperties[i];
					range[prop] = null;
				}
			}

			var createBeforeAfterNodeSetter;

			WrappedRange = function(range) {
				if(!range) {
					throw new Error("Range must be specified");
				}
				this.nativeRange = range;
				updateRangeProperties(this);
			};

			DomRange.createPrototypeRange(WrappedRange, updateNativeRange, detach);

			rangeProto = WrappedRange.prototype;

			rangeProto.selectNode = function(node) {
				this.nativeRange.selectNode(node);
				updateRangeProperties(this);
			};

			rangeProto.deleteContents = function() {
				this.nativeRange.deleteContents();
				updateRangeProperties(this);
			};

			rangeProto.extractContents = function() {
				var frag = this.nativeRange.extractContents();
				updateRangeProperties(this);
				return frag;
			};

			rangeProto.cloneContents = function() {
				return this.nativeRange.cloneContents();
			};

			// TODO: Until I can find a way to programmatically trigger the Firefox bug (apparently long-standing, still
			// present in 3.6.8) that throws "Index or size is negative or greater than the allowed amount" for
			// insertNode in some circumstances, all browsers will have to use the Rangy's own implementation of
			// insertNode, which works but is almost certainly slower than the native implementation.
			/*
			            rangeProto.insertNode = function(node) {
			                this.nativeRange.insertNode(node);
			                updateRangeProperties(this);
			            };
			*/

			rangeProto.surroundContents = function(node) {
				this.nativeRange.surroundContents(node);
				updateRangeProperties(this);
			};

			rangeProto.collapse = function(isStart) {
				this.nativeRange.collapse(isStart);
				updateRangeProperties(this);
			};

			rangeProto.cloneRange = function() {
				return new WrappedRange(this.nativeRange.cloneRange());
			};

			rangeProto.refresh = function() {
				updateRangeProperties(this);
			};

			rangeProto.toString = function() {
				return this.nativeRange.toString();
			};

			// Create test range and node for feature detection

			var testTextNode = document.createTextNode("test");
			dom.getBody(document).appendChild(testTextNode);
			var range = document.createRange();

			/*--------------------------------------------------------------------------------------------------------*/

			// Test for Firefox 2 bug that prevents moving the start of a Range to a point after its current end and
			// correct for it

			range.setStart(testTextNode, 0);
			range.setEnd(testTextNode, 0);

			try {
				range.setStart(testTextNode, 1);
				canSetRangeStartAfterEnd = true;

				rangeProto.setStart = function(node, offset) {
					this.nativeRange.setStart(node, offset);
					updateRangeProperties(this);
				};

				rangeProto.setEnd = function(node, offset) {
					this.nativeRange.setEnd(node, offset);
					updateRangeProperties(this);
				};

				createBeforeAfterNodeSetter = function(name) {
					return function(node) {
						this.nativeRange[name](node);
						updateRangeProperties(this);
					};
				};

			} catch(ex) {

				canSetRangeStartAfterEnd = false;

				rangeProto.setStart = function(node, offset) {
					try {
						this.nativeRange.setStart(node, offset);
					} catch(ex) {
						this.nativeRange.setEnd(node, offset);
						this.nativeRange.setStart(node, offset);
					}
					updateRangeProperties(this);
				};

				rangeProto.setEnd = function(node, offset) {
					try {
						this.nativeRange.setEnd(node, offset);
					} catch(ex) {
						this.nativeRange.setStart(node, offset);
						this.nativeRange.setEnd(node, offset);
					}
					updateRangeProperties(this);
				};

				createBeforeAfterNodeSetter = function(name, oppositeName) {
					return function(node) {
						try {
							this.nativeRange[name](node);
						} catch(ex) {
							this.nativeRange[oppositeName](node);
							this.nativeRange[name](node);
						}
						updateRangeProperties(this);
					};
				};
			}

			rangeProto.setStartBefore = createBeforeAfterNodeSetter("setStartBefore", "setEndBefore");
			rangeProto.setStartAfter = createBeforeAfterNodeSetter("setStartAfter", "setEndAfter");
			rangeProto.setEndBefore = createBeforeAfterNodeSetter("setEndBefore", "setStartBefore");
			rangeProto.setEndAfter = createBeforeAfterNodeSetter("setEndAfter", "setStartAfter");

			/*--------------------------------------------------------------------------------------------------------*/

			// Test for and correct Firefox 2 behaviour with selectNodeContents on text nodes: it collapses the range to
			// the 0th character of the text node
			range.selectNodeContents(testTextNode);
			if(range.startContainer == testTextNode && range.endContainer == testTextNode &&
				range.startOffset == 0 && range.endOffset == testTextNode.length) {
				rangeProto.selectNodeContents = function(node) {
					this.nativeRange.selectNodeContents(node);
					updateRangeProperties(this);
				};
			} else {
				rangeProto.selectNodeContents = function(node) {
					this.setStart(node, 0);
					this.setEnd(node, DomRange.getEndOffset(node));
				};
			}

			/*--------------------------------------------------------------------------------------------------------*/

			// Test for WebKit bug that has the beahviour of compareBoundaryPoints round the wrong way for constants
			// START_TO_END and END_TO_START: https://bugs.webkit.org/show_bug.cgi?id=20738

			range.selectNodeContents(testTextNode);
			range.setEnd(testTextNode, 3);

			var range2 = document.createRange();
			range2.selectNodeContents(testTextNode);
			range2.setEnd(testTextNode, 4);
			range2.setStart(testTextNode, 2);

			if(range.compareBoundaryPoints(range.START_TO_END, range2) == -1 &
				range.compareBoundaryPoints(range.END_TO_START, range2) == 1) {
				// This is the wrong way round, so correct for it

				rangeProto.compareBoundaryPoints = function(type, range) {
					range = range.nativeRange || range;
					if(type == range.START_TO_END) {
						type = range.END_TO_START;
					} else if(type == range.END_TO_START) {
						type = range.START_TO_END;
					}
					return this.nativeRange.compareBoundaryPoints(type, range);
				};
			} else {
				rangeProto.compareBoundaryPoints = function(type, range) {
					return this.nativeRange.compareBoundaryPoints(type, range.nativeRange || range);
				};
			}

			/*--------------------------------------------------------------------------------------------------------*/

			// Test for existence of createContextualFragment and delegate to it if it exists
			if(api.util.isHostMethod(range, "createContextualFragment")) {
				rangeProto.createContextualFragment = function(fragmentStr) {
					return this.nativeRange.createContextualFragment(fragmentStr);
				};
			}

			/*--------------------------------------------------------------------------------------------------------*/

			// Clean up
			dom.getBody(document).removeChild(testTextNode);
			range.detach();
			range2.detach();
		})();

		api.createNativeRange = function(doc) {
			doc = doc || document;
			return doc.createRange();
		};
	} else if(api.features.implementsTextRange) {
		// This is a wrapper around a TextRange, providing full DOM Range functionality using rangy's DomRange as a
		// prototype

		WrappedRange = function(textRange) {
			this.textRange = textRange;
			this.refresh();
		};

		WrappedRange.prototype = new DomRange(document);

		WrappedRange.prototype.refresh = function() {
			var start, end;

			// TextRange's parentElement() method cannot be trusted. getTextRangeContainerElement() works around that.
			var rangeContainerElement = getTextRangeContainerElement(this.textRange);

			if(textRangeIsCollapsed(this.textRange)) {
				end = start = getTextRangeBoundaryPosition(this.textRange, rangeContainerElement, true, true);
			} else {

				start = getTextRangeBoundaryPosition(this.textRange, rangeContainerElement, true, false);
				end = getTextRangeBoundaryPosition(this.textRange, rangeContainerElement, false, false);
			}

			this.setStart(start.node, start.offset);
			this.setEnd(end.node, end.offset);
		};

		DomRange.copyComparisonConstants(WrappedRange);

		// Add WrappedRange as the Range property of the global object to allow expression like Range.END_TO_END to work
		var globalObj = (function() {
			return this;
		})();
		if(typeof globalObj.Range == "undefined") {
			globalObj.Range = WrappedRange;
		}

		api.createNativeRange = function(doc) {
			doc = doc || document;
			return doc.body.createTextRange();
		};
	}

	if(api.features.implementsTextRange) {
		WrappedRange.rangeToTextRange = function(range) {
			if(range.collapsed) {
				var tr = createBoundaryTextRange(new DomPosition(range.startContainer, range.startOffset), true);

				return tr;

				//return createBoundaryTextRange(new DomPosition(range.startContainer, range.startOffset), true);
			} else {
				var startRange = createBoundaryTextRange(new DomPosition(range.startContainer, range.startOffset), true);
				var endRange = createBoundaryTextRange(new DomPosition(range.endContainer, range.endOffset), false);
				var textRange = dom.getDocument(range.startContainer).body.createTextRange();
				textRange.setEndPoint("StartToStart", startRange);
				textRange.setEndPoint("EndToEnd", endRange);
				return textRange;
			}
		};
	}

	WrappedRange.prototype.getName = function() {
		return "WrappedRange";
	};

	api.WrappedRange = WrappedRange;

	api.createRange = function(doc) {
		doc = doc || document;
		return new WrappedRange(api.createNativeRange(doc));
	};

	api.createRangyRange = function(doc) {
		doc = doc || document;
		return new DomRange(doc);
	};

	api.createIframeRange = function(iframeEl) {
		return api.createRange(dom.getIframeDocument(iframeEl));
	};

	api.createIframeRangyRange = function(iframeEl) {
		return api.createRangyRange(dom.getIframeDocument(iframeEl));
	};

	api.addCreateMissingNativeApiListener(function(win) {
		var doc = win.document;
		if(typeof doc.createRange == "undefined") {
			doc.createRange = function() {
				return api.createRange(this);
			};
		}
		doc = win = null;
	});
});
rangy.createModule("WrappedSelection", function(api, module) {
	// This will create a selection object wrapper that follows the Selection object found in the WHATWG draft DOM Range
	// spec (http://html5.org/specs/dom-range.html)

	api.requireModules(["DomUtil", "DomRange", "WrappedRange"]);

	api.config.checkSelectionRanges = true;

	var BOOLEAN = "boolean",
		windowPropertyName = "_rangySelection",
		dom = api.dom,
		util = api.util,
		DomRange = api.DomRange,
		WrappedRange = api.WrappedRange,
		DOMException = api.DOMException,
		DomPosition = dom.DomPosition,
		getSelection,
		selectionIsCollapsed,
		CONTROL = "Control";

	function getWinSelection(winParam) {
		return(winParam || window).getSelection();
	}

	function getDocSelection(winParam) {
		return(winParam || window).document.selection;
	}

	// Test for the Range/TextRange and Selection features required
	// Test for ability to retrieve selection
	var implementsWinGetSelection = api.util.isHostMethod(window, "getSelection"),
		implementsDocSelection = api.util.isHostObject(document, "selection");

	var useDocumentSelection = implementsDocSelection && (!implementsWinGetSelection || api.config.preferTextRange);

	if(useDocumentSelection) {
		getSelection = getDocSelection;
		api.isSelectionValid = function(winParam) {
			var doc = (winParam || window).document,
				nativeSel = doc.selection;

			// Check whether the selection TextRange is actually contained within the correct document
			return(nativeSel.type != "None" || dom.getDocument(nativeSel.createRange().parentElement()) == doc);
		};
	} else if(implementsWinGetSelection) {
		getSelection = getWinSelection;
		api.isSelectionValid = function() {
			return true;
		};
	} else {
		module.fail("Neither document.selection or window.getSelection() detected.");
	}

	api.getNativeSelection = getSelection;

	var testSelection = getSelection();
	var testRange = api.createNativeRange(document);
	var body = dom.getBody(document);

	// Obtaining a range from a selection
	var selectionHasAnchorAndFocus = util.areHostObjects(testSelection, ["anchorNode", "focusNode"] &&
		util.areHostProperties(testSelection, ["anchorOffset", "focusOffset"]));
	api.features.selectionHasAnchorAndFocus = selectionHasAnchorAndFocus;

	// Test for existence of native selection extend() method
	var selectionHasExtend = util.isHostMethod(testSelection, "extend");
	api.features.selectionHasExtend = selectionHasExtend;

	// Test if rangeCount exists
	var selectionHasRangeCount = (typeof testSelection.rangeCount == "number");
	api.features.selectionHasRangeCount = selectionHasRangeCount;

	var selectionSupportsMultipleRanges = false;
	var collapsedNonEditableSelectionsSupported = true;

	if(util.areHostMethods(testSelection, ["addRange", "getRangeAt", "removeAllRanges"]) &&
		typeof testSelection.rangeCount == "number" && api.features.implementsDomRange) {

		(function() {
			var iframe = document.createElement("iframe");
			body.appendChild(iframe);

			var iframeDoc = dom.getIframeDocument(iframe);
			iframeDoc.open();
			iframeDoc.write("<html><head></head><body>12</body></html>");
			iframeDoc.close();

			var sel = dom.getIframeWindow(iframe).getSelection();
			var docEl = iframeDoc.documentElement;
			var iframeBody = docEl.lastChild,
				textNode = iframeBody.firstChild;

			// Test whether the native selection will allow a collapsed selection within a non-editable element
			var r1 = iframeDoc.createRange();
			r1.setStart(textNode, 1);
			r1.collapse(true);
			sel.addRange(r1);
			collapsedNonEditableSelectionsSupported = (sel.rangeCount == 1);
			sel.removeAllRanges();

			// Test whether the native selection is capable of supporting multiple ranges
			var r2 = r1.cloneRange();
			r1.setStart(textNode, 0);
			r2.setEnd(textNode, 2);
			sel.addRange(r1);
			sel.addRange(r2);

			selectionSupportsMultipleRanges = (sel.rangeCount == 2);

			// Clean up
			r1.detach();
			r2.detach();

			body.removeChild(iframe);
		})();
	}

	api.features.selectionSupportsMultipleRanges = selectionSupportsMultipleRanges;
	api.features.collapsedNonEditableSelectionsSupported = collapsedNonEditableSelectionsSupported;

	// ControlRanges
	var implementsControlRange = false,
		testControlRange;

	if(body && util.isHostMethod(body, "createControlRange")) {
		testControlRange = body.createControlRange();
		if(util.areHostProperties(testControlRange, ["item", "add"])) {
			implementsControlRange = true;
		}
	}
	api.features.implementsControlRange = implementsControlRange;

	// Selection collapsedness
	if(selectionHasAnchorAndFocus) {
		selectionIsCollapsed = function(sel) {
			return sel.anchorNode === sel.focusNode && sel.anchorOffset === sel.focusOffset;
		};
	} else {
		selectionIsCollapsed = function(sel) {
			return sel.rangeCount ? sel.getRangeAt(sel.rangeCount - 1).collapsed : false;
		};
	}

	function updateAnchorAndFocusFromRange(sel, range, backwards) {
		var anchorPrefix = backwards ? "end" : "start",
			focusPrefix = backwards ? "start" : "end";
		sel.anchorNode = range[anchorPrefix + "Container"];
		sel.anchorOffset = range[anchorPrefix + "Offset"];
		sel.focusNode = range[focusPrefix + "Container"];
		sel.focusOffset = range[focusPrefix + "Offset"];
	}

	function updateAnchorAndFocusFromNativeSelection(sel) {
		var nativeSel = sel.nativeSelection;
		sel.anchorNode = nativeSel.anchorNode;
		sel.anchorOffset = nativeSel.anchorOffset;
		sel.focusNode = nativeSel.focusNode;
		sel.focusOffset = nativeSel.focusOffset;
	}

	function updateEmptySelection(sel) {
		sel.anchorNode = sel.focusNode = null;
		sel.anchorOffset = sel.focusOffset = 0;
		sel.rangeCount = 0;
		sel.isCollapsed = true;
		sel._ranges.length = 0;
	}

	function getNativeRange(range) {
		var nativeRange;
		if(range instanceof DomRange) {
			nativeRange = range._selectionNativeRange;
			if(!nativeRange) {
				nativeRange = api.createNativeRange(dom.getDocument(range.startContainer));
				nativeRange.setEnd(range.endContainer, range.endOffset);
				nativeRange.setStart(range.startContainer, range.startOffset);
				range._selectionNativeRange = nativeRange;
				range.attachListener("detach", function() {

					this._selectionNativeRange = null;
				});
			}
		} else if(range instanceof WrappedRange) {
			nativeRange = range.nativeRange;
		} else if(api.features.implementsDomRange && (range instanceof dom.getWindow(range.startContainer).Range)) {
			nativeRange = range;
		}
		return nativeRange;
	}

	function rangeContainsSingleElement(rangeNodes) {
		if(!rangeNodes.length || rangeNodes[0].nodeType != 1) {
			return false;
		}
		for(var i = 1, len = rangeNodes.length; i < len; ++i) {
			if(!dom.isAncestorOf(rangeNodes[0], rangeNodes[i])) {
				return false;
			}
		}
		return true;
	}

	function getSingleElementFromRange(range) {
		var nodes = range.getNodes();
		if(!rangeContainsSingleElement(nodes)) {
			throw new Error("getSingleElementFromRange: range " + range.inspect() + " did not consist of a single element");
		}
		return nodes[0];
	}

	function isTextRange(range) {
		return !!range && typeof range.text != "undefined";
	}

	function updateFromTextRange(sel, range) {
		// Create a Range from the selected TextRange
		var wrappedRange = new WrappedRange(range);
		sel._ranges = [wrappedRange];

		updateAnchorAndFocusFromRange(sel, wrappedRange, false);
		sel.rangeCount = 1;
		sel.isCollapsed = wrappedRange.collapsed;
	}

	function updateControlSelection(sel) {
		// Update the wrapped selection based on what's now in the native selection
		sel._ranges.length = 0;
		if(sel.docSelection.type == "None") {
			updateEmptySelection(sel);
		} else {
			var controlRange = sel.docSelection.createRange();
			if(isTextRange(controlRange)) {
				// This case (where the selection type is "Control" and calling createRange() on the selection returns
				// a TextRange) can happen in IE 9. It happens, for example, when all elements in the selected
				// ControlRange have been removed from the ControlRange and removed from the document.
				updateFromTextRange(sel, controlRange);
			} else {
				sel.rangeCount = controlRange.length;
				var range, doc = dom.getDocument(controlRange.item(0));
				for(var i = 0; i < sel.rangeCount; ++i) {
					range = api.createRange(doc);
					range.selectNode(controlRange.item(i));
					sel._ranges.push(range);
				}
				sel.isCollapsed = sel.rangeCount == 1 && sel._ranges[0].collapsed;
				updateAnchorAndFocusFromRange(sel, sel._ranges[sel.rangeCount - 1], false);
			}
		}
	}

	function addRangeToControlSelection(sel, range) {
		var controlRange = sel.docSelection.createRange();
		var rangeElement = getSingleElementFromRange(range);

		// Create a new ControlRange containing all the elements in the selected ControlRange plus the element
		// contained by the supplied range
		var doc = dom.getDocument(controlRange.item(0));
		var newControlRange = dom.getBody(doc).createControlRange();
		for(var i = 0, len = controlRange.length; i < len; ++i) {
			newControlRange.add(controlRange.item(i));
		}
		try {
			newControlRange.add(rangeElement);
		} catch(ex) {
			throw new Error("addRange(): Element within the specified Range could not be added to control selection (does it have layout?)");
		}
		newControlRange.select();

		// Update the wrapped selection based on what's now in the native selection
		updateControlSelection(sel);
	}

	var getSelectionRangeAt;

	if(util.isHostMethod(testSelection, "getRangeAt")) {
		getSelectionRangeAt = function(sel, index) {
			try {
				return sel.getRangeAt(index);
			} catch(ex) {
				return null;
			}
		};
	} else if(selectionHasAnchorAndFocus) {
		getSelectionRangeAt = function(sel) {
			var doc = dom.getDocument(sel.anchorNode);
			var range = api.createRange(doc);
			range.setStart(sel.anchorNode, sel.anchorOffset);
			range.setEnd(sel.focusNode, sel.focusOffset);

			// Handle the case when the selection was selected backwards (from the end to the start in the
			// document)
			if(range.collapsed !== this.isCollapsed) {
				range.setStart(sel.focusNode, sel.focusOffset);
				range.setEnd(sel.anchorNode, sel.anchorOffset);
			}

			return range;
		};
	}

	/**
	 * @constructor
	 */
	function WrappedSelection(selection, docSelection, win) {
		this.nativeSelection = selection;
		this.docSelection = docSelection;
		this._ranges = [];
		this.win = win;
		this.refresh();
	}

	api.getSelection = function(win) {
		win = win || window;
		var sel = win[windowPropertyName];
		var nativeSel = getSelection(win),
			docSel = implementsDocSelection ? getDocSelection(win) : null;
		if(sel) {
			sel.nativeSelection = nativeSel;
			sel.docSelection = docSel;
			sel.refresh(win);
		} else {
			sel = new WrappedSelection(nativeSel, docSel, win);
			win[windowPropertyName] = sel;
		}
		return sel;
	};

	api.getIframeSelection = function(iframeEl) {
		return api.getSelection(dom.getIframeWindow(iframeEl));
	};

	var selProto = WrappedSelection.prototype;

	function createControlSelection(sel, ranges) {
		// Ensure that the selection becomes of type "Control"
		var doc = dom.getDocument(ranges[0].startContainer);
		var controlRange = dom.getBody(doc).createControlRange();
		for(var i = 0, el; i < rangeCount; ++i) {
			el = getSingleElementFromRange(ranges[i]);
			try {
				controlRange.add(el);
			} catch(ex) {
				throw new Error("setRanges(): Element within the one of the specified Ranges could not be added to control selection (does it have layout?)");
			}
		}
		controlRange.select();

		// Update the wrapped selection based on what's now in the native selection
		updateControlSelection(sel);
	}

	// Selecting a range
	if(!useDocumentSelection && selectionHasAnchorAndFocus && util.areHostMethods(testSelection, ["removeAllRanges", "addRange"])) {
		selProto.removeAllRanges = function() {
			this.nativeSelection.removeAllRanges();
			updateEmptySelection(this);
		};

		var addRangeBackwards = function(sel, range) {
			var doc = DomRange.getRangeDocument(range);
			var endRange = api.createRange(doc);
			endRange.collapseToPoint(range.endContainer, range.endOffset);
			sel.nativeSelection.addRange(getNativeRange(endRange));
			sel.nativeSelection.extend(range.startContainer, range.startOffset);
			sel.refresh();
		};

		if(selectionHasRangeCount) {
			selProto.addRange = function(range, backwards) {
				if(implementsControlRange && implementsDocSelection && this.docSelection.type == CONTROL) {
					addRangeToControlSelection(this, range);
				} else {
					if(backwards && selectionHasExtend) {
						addRangeBackwards(this, range);
					} else {
						var previousRangeCount;
						if(selectionSupportsMultipleRanges) {
							previousRangeCount = this.rangeCount;
						} else {
							this.removeAllRanges();
							previousRangeCount = 0;
						}
						this.nativeSelection.addRange(getNativeRange(range));

						// Check whether adding the range was successful
						this.rangeCount = this.nativeSelection.rangeCount;

						if(this.rangeCount == previousRangeCount + 1) {
							// The range was added successfully

							// Check whether the range that we added to the selection is reflected in the last range extracted from
							// the selection
							if(api.config.checkSelectionRanges) {
								var nativeRange = getSelectionRangeAt(this.nativeSelection, this.rangeCount - 1);
								if(nativeRange && !DomRange.rangesEqual(nativeRange, range)) {
									// Happens in WebKit with, for example, a selection placed at the start of a text node
									range = new WrappedRange(nativeRange);
								}
							}
							this._ranges[this.rangeCount - 1] = range;
							updateAnchorAndFocusFromRange(this, range, selectionIsBackwards(this.nativeSelection));
							this.isCollapsed = selectionIsCollapsed(this);
						} else {
							// The range was not added successfully. The simplest thing is to refresh
							this.refresh();
						}
					}
				}
			};
		} else {
			selProto.addRange = function(range, backwards) {
				if(backwards && selectionHasExtend) {
					addRangeBackwards(this, range);
				} else {
					this.nativeSelection.addRange(getNativeRange(range));
					this.refresh();
				}
			};
		}

		selProto.setRanges = function(ranges) {
			if(implementsControlRange && ranges.length > 1) {
				createControlSelection(this, ranges);
			} else {
				this.removeAllRanges();
				for(var i = 0, len = ranges.length; i < len; ++i) {
					this.addRange(ranges[i]);
				}
			}
		};
	} else if(util.isHostMethod(testSelection, "empty") && util.isHostMethod(testRange, "select") &&
		implementsControlRange && useDocumentSelection) {

		selProto.removeAllRanges = function() {
			// Added try/catch as fix for issue #21
			try {
				this.docSelection.empty();

				// Check for empty() not working (issue #24)
				if(this.docSelection.type != "None") {
					// Work around failure to empty a control selection by instead selecting a TextRange and then
					// calling empty()
					var doc;
					if(this.anchorNode) {
						doc = dom.getDocument(this.anchorNode);
					} else if(this.docSelection.type == CONTROL) {
						var controlRange = this.docSelection.createRange();
						if(controlRange.length) {
							doc = dom.getDocument(controlRange.item(0)).body.createTextRange();
						}
					}
					if(doc) {
						var textRange = doc.body.createTextRange();
						textRange.select();
						this.docSelection.empty();
					}
				}
			} catch(ex) {}
			updateEmptySelection(this);
		};

		selProto.addRange = function(range) {
			if(this.docSelection.type == CONTROL) {
				addRangeToControlSelection(this, range);
			} else {
				WrappedRange.rangeToTextRange(range).select();
				this._ranges[0] = range;
				this.rangeCount = 1;
				this.isCollapsed = this._ranges[0].collapsed;
				updateAnchorAndFocusFromRange(this, range, false);
			}
		};

		selProto.setRanges = function(ranges) {
			this.removeAllRanges();
			var rangeCount = ranges.length;
			if(rangeCount > 1) {
				createControlSelection(this, ranges);
			} else if(rangeCount) {
				this.addRange(ranges[0]);
			}
		};
	} else {
		module.fail("No means of selecting a Range or TextRange was found");
		return false;
	}

	selProto.getRangeAt = function(index) {
		if(index < 0 || index >= this.rangeCount) {
			throw new DOMException("INDEX_SIZE_ERR");
		} else {
			return this._ranges[index];
		}
	};

	var refreshSelection;

	if(useDocumentSelection) {
		refreshSelection = function(sel) {
			var range;
			if(api.isSelectionValid(sel.win)) {
				range = sel.docSelection.createRange();
			} else {
				range = dom.getBody(sel.win.document).createTextRange();
				range.collapse(true);
			}

			if(sel.docSelection.type == CONTROL) {
				updateControlSelection(sel);
			} else if(isTextRange(range)) {
				updateFromTextRange(sel, range);
			} else {
				updateEmptySelection(sel);
			}
		};
	} else if(util.isHostMethod(testSelection, "getRangeAt") && typeof testSelection.rangeCount == "number") {
		refreshSelection = function(sel) {
			if(implementsControlRange && implementsDocSelection && sel.docSelection.type == CONTROL) {
				updateControlSelection(sel);
			} else {
				sel._ranges.length = sel.rangeCount = sel.nativeSelection.rangeCount;
				if(sel.rangeCount) {
					for(var i = 0, len = sel.rangeCount; i < len; ++i) {
						sel._ranges[i] = new api.WrappedRange(sel.nativeSelection.getRangeAt(i));
					}
					updateAnchorAndFocusFromRange(sel, sel._ranges[sel.rangeCount - 1], selectionIsBackwards(sel.nativeSelection));
					sel.isCollapsed = selectionIsCollapsed(sel);
				} else {
					updateEmptySelection(sel);
				}
			}
		};
	} else if(selectionHasAnchorAndFocus && typeof testSelection.isCollapsed == BOOLEAN && typeof testRange.collapsed == BOOLEAN && api.features.implementsDomRange) {
		refreshSelection = function(sel) {
			var range, nativeSel = sel.nativeSelection;
			if(nativeSel.anchorNode) {
				range = getSelectionRangeAt(nativeSel, 0);
				sel._ranges = [range];
				sel.rangeCount = 1;
				updateAnchorAndFocusFromNativeSelection(sel);
				sel.isCollapsed = selectionIsCollapsed(sel);
			} else {
				updateEmptySelection(sel);
			}
		};
	} else {
		module.fail("No means of obtaining a Range or TextRange from the user's selection was found");
		return false;
	}

	selProto.refresh = function(checkForChanges) {
		var oldRanges = checkForChanges ? this._ranges.slice(0) : null;
		refreshSelection(this);
		if(checkForChanges) {
			var i = oldRanges.length;
			if(i != this._ranges.length) {
				return false;
			}
			while(i--) {
				if(!DomRange.rangesEqual(oldRanges[i], this._ranges[i])) {
					return false;
				}
			}
			return true;
		}
	};

	// Removal of a single range
	var removeRangeManually = function(sel, range) {
		var ranges = sel.getAllRanges(),
			removed = false;
		sel.removeAllRanges();
		for(var i = 0, len = ranges.length; i < len; ++i) {
			if(removed || range !== ranges[i]) {
				sel.addRange(ranges[i]);
			} else {
				// According to the draft WHATWG Range spec, the same range may be added to the selection multiple
				// times. removeRange should only remove the first instance, so the following ensures only the first
				// instance is removed
				removed = true;
			}
		}
		if(!sel.rangeCount) {
			updateEmptySelection(sel);
		}
	};

	if(implementsControlRange) {
		selProto.removeRange = function(range) {
			if(this.docSelection.type == CONTROL) {
				var controlRange = this.docSelection.createRange();
				var rangeElement = getSingleElementFromRange(range);

				// Create a new ControlRange containing all the elements in the selected ControlRange minus the
				// element contained by the supplied range
				var doc = dom.getDocument(controlRange.item(0));
				var newControlRange = dom.getBody(doc).createControlRange();
				var el, removed = false;
				for(var i = 0, len = controlRange.length; i < len; ++i) {
					el = controlRange.item(i);
					if(el !== rangeElement || removed) {
						newControlRange.add(controlRange.item(i));
					} else {
						removed = true;
					}
				}
				newControlRange.select();

				// Update the wrapped selection based on what's now in the native selection
				updateControlSelection(this);
			} else {
				removeRangeManually(this, range);
			}
		};
	} else {
		selProto.removeRange = function(range) {
			removeRangeManually(this, range);
		};
	}

	// Detecting if a selection is backwards
	var selectionIsBackwards;
	if(!useDocumentSelection && selectionHasAnchorAndFocus && api.features.implementsDomRange) {
		selectionIsBackwards = function(sel) {
			var backwards = false;
			if(sel.anchorNode) {
				backwards = (dom.comparePoints(sel.anchorNode, sel.anchorOffset, sel.focusNode, sel.focusOffset) == 1);
			}
			return backwards;
		};

		selProto.isBackwards = function() {
			return selectionIsBackwards(this);
		};
	} else {
		selectionIsBackwards = selProto.isBackwards = function() {
			return false;
		};
	}

	// Selection text
	// This is conformant to the new WHATWG DOM Range draft spec but differs from WebKit and Mozilla's implementation
	selProto.toString = function() {

		var rangeTexts = [];
		for(var i = 0, len = this.rangeCount; i < len; ++i) {
			rangeTexts[i] = "" + this._ranges[i];
		}
		return rangeTexts.join("");
	};

	function assertNodeInSameDocument(sel, node) {
		if(sel.anchorNode && (dom.getDocument(sel.anchorNode) !== dom.getDocument(node))) {
			throw new DOMException("WRONG_DOCUMENT_ERR");
		}
	}

	// No current browsers conform fully to the HTML 5 draft spec for this method, so Rangy's own method is always used
	selProto.collapse = function(node, offset) {
		assertNodeInSameDocument(this, node);
		var range = api.createRange(dom.getDocument(node));
		range.collapseToPoint(node, offset);
		this.removeAllRanges();
		this.addRange(range);
		this.isCollapsed = true;
	};

	selProto.collapseToStart = function() {
		if(this.rangeCount) {
			var range = this._ranges[0];
			this.collapse(range.startContainer, range.startOffset);
		} else {
			throw new DOMException("INVALID_STATE_ERR");
		}
	};

	selProto.collapseToEnd = function() {
		if(this.rangeCount) {
			var range = this._ranges[this.rangeCount - 1];
			this.collapse(range.endContainer, range.endOffset);
		} else {
			throw new DOMException("INVALID_STATE_ERR");
		}
	};

	// The HTML 5 spec is very specific on how selectAllChildren should be implemented so the native implementation is
	// never used by Rangy.
	selProto.selectAllChildren = function(node) {
		assertNodeInSameDocument(this, node);
		var range = api.createRange(dom.getDocument(node));
		range.selectNodeContents(node);
		this.removeAllRanges();
		this.addRange(range);
	};

	selProto.deleteFromDocument = function() {
		// Sepcial behaviour required for Control selections
		if(implementsControlRange && implementsDocSelection && this.docSelection.type == CONTROL) {
			var controlRange = this.docSelection.createRange();
			var element;
			while(controlRange.length) {
				element = controlRange.item(0);
				controlRange.remove(element);
				element.parentNode.removeChild(element);
			}
			this.refresh();
		} else if(this.rangeCount) {
			var ranges = this.getAllRanges();
			this.removeAllRanges();
			for(var i = 0, len = ranges.length; i < len; ++i) {
				ranges[i].deleteContents();
			}
			// The HTML5 spec says nothing about what the selection should contain after calling deleteContents on each
			// range. Firefox moves the selection to where the final selected range was, so we emulate that
			this.addRange(ranges[len - 1]);
		}
	};

	// The following are non-standard extensions
	selProto.getAllRanges = function() {
		return this._ranges.slice(0);
	};

	selProto.setSingleRange = function(range) {
		this.setRanges([range]);
	};

	selProto.containsNode = function(node, allowPartial) {
		for(var i = 0, len = this._ranges.length; i < len; ++i) {
			if(this._ranges[i].containsNode(node, allowPartial)) {
				return true;
			}
		}
		return false;
	};

	selProto.toHtml = function() {
		var html = "";
		if(this.rangeCount) {
			var container = DomRange.getRangeDocument(this._ranges[0]).createElement("div");
			for(var i = 0, len = this._ranges.length; i < len; ++i) {
				container.appendChild(this._ranges[i].cloneContents());
			}
			html = container.innerHTML;
		}
		return html;
	};

	function inspect(sel) {
		var rangeInspects = [];
		var anchor = new DomPosition(sel.anchorNode, sel.anchorOffset);
		var focus = new DomPosition(sel.focusNode, sel.focusOffset);
		var name = (typeof sel.getName == "function") ? sel.getName() : "Selection";

		if(typeof sel.rangeCount != "undefined") {
			for(var i = 0, len = sel.rangeCount; i < len; ++i) {
				rangeInspects[i] = DomRange.inspect(sel.getRangeAt(i));
			}
		}
		return "[" + name + "(Ranges: " + rangeInspects.join(", ") +
			")(anchor: " + anchor.inspect() + ", focus: " + focus.inspect() + "]";

	}

	selProto.getName = function() {
		return "WrappedSelection";
	};

	selProto.inspect = function() {
		return inspect(this);
	};

	selProto.detach = function() {
		this.win[windowPropertyName] = null;
		this.win = this.anchorNode = this.focusNode = null;
	};

	WrappedSelection.inspect = inspect;

	api.Selection = WrappedSelection;

	api.selectionPrototype = selProto;

	api.addCreateMissingNativeApiListener(function(win) {
		if(typeof win.getSelection == "undefined") {
			win.getSelection = function() {
				return api.getSelection(this);
			};
		}
		win = null;
	});
});
/*
	Base.js, version 1.1a
	Copyright 2006-2010, Dean Edwards
	License: http://www.opensource.org/licenses/mit-license.php
*/

var Base = function() {
	// dummy
};

Base.extend = function(_instance, _static) { // subclass
	var extend = Base.prototype.extend;

	// build the prototype
	Base._prototyping = true;
	var proto = new this;
	extend.call(proto, _instance);
	proto.base = function() {
		// call this method from any other method to invoke that method's ancestor
	};
	delete Base._prototyping;

	// create the wrapper for the constructor function
	//var constructor = proto.constructor.valueOf(); //-dean
	var constructor = proto.constructor;
	var klass = proto.constructor = function() {
		if(!Base._prototyping) {
			if(this._constructing || this.constructor == klass) { // instantiation
				this._constructing = true;
				constructor.apply(this, arguments);
				delete this._constructing;
			} else if(arguments[0] != null) { // casting
				return(arguments[0].extend || extend).call(arguments[0], proto);
			}
		}
	};

	// build the class interface
	klass.ancestor = this;
	klass.extend = this.extend;
	klass.forEach = this.forEach;
	klass.implement = this.implement;
	klass.prototype = proto;
	klass.toString = this.toString;
	klass.valueOf = function(type) {
		//return (type == "object") ? klass : constructor; //-dean
		return(type == "object") ? klass : constructor.valueOf();
	};
	extend.call(klass, _static);
	// class initialisation
	if(typeof klass.init == "function") klass.init();
	return klass;
};

Base.prototype = {
	extend: function(source, value) {
		if(arguments.length > 1) { // extending with a name/value pair
			var ancestor = this[source];
			if(ancestor && (typeof value == "function") && // overriding a method?
				// the valueOf() comparison is to avoid circular references
				(!ancestor.valueOf || ancestor.valueOf() != value.valueOf()) &&
				/\bbase\b/.test(value)) {
				// get the underlying method
				var method = value.valueOf();
				// override
				value = function() {
					var previous = this.base || Base.prototype.base;
					this.base = ancestor;
					var returnValue = method.apply(this, arguments);
					this.base = previous;
					return returnValue;
				};
				// point to the underlying method
				value.valueOf = function(type) {
					return(type == "object") ? value : method;
				};
				value.toString = Base.toString;
			}
			this[source] = value;
		} else if(source) { // extending with an object literal
			var extend = Base.prototype.extend;
			// if this object has a customised extend method then use it
			if(!Base._prototyping && typeof this != "function") {
				extend = this.extend || extend;
			}
			var proto = {
				toSource: null
			};
			// do the "toString" and other methods manually
			var hidden = ["constructor", "toString", "valueOf"];
			// if we are prototyping then include the constructor
			var i = Base._prototyping ? 0 : 1;
			while(key = hidden[i++]) {
				if(source[key] != proto[key]) {
					extend.call(this, key, source[key]);

				}
			}
			// copy each of the source object's properties to this object
			for(var key in source) {
				if(!proto[key]) extend.call(this, key, source[key]);
			}
		}
		return this;
	}
};

// initialise
Base = Base.extend({
	constructor: function() {
		this.extend(arguments[0]);
	}
}, {
	ancestor: Object,
	version: "1.1",

	forEach: function(object, block, context) {
		for(var key in object) {
			if(this.prototype[key] === undefined) {
				block.call(context, object[key], key, object);
			}
		}
	},

	implement: function() {
		for(var i = 0; i < arguments.length; i++) {
			if(typeof arguments[i] == "function") {
				// if it's a function, call it
				arguments[i](this.prototype);
			} else {
				// add the interface using the extend method
				this.prototype.extend(arguments[i]);
			}
		}
		return this;
	},

	toString: function() {
		return String(this.valueOf());
	}
});
/**
 * Detect browser support for specific features
 */
wysihtml5.browser = (function() {
	var userAgent = navigator.userAgent,
		testElement = document.createElement("div"),
		// Browser sniffing is unfortunately needed since some behaviors are impossible to feature detect
		isIE = userAgent.indexOf("MSIE") !== -1 && userAgent.indexOf("Opera") === -1,
		isGecko = userAgent.indexOf("Gecko") !== -1 && userAgent.indexOf("KHTML") === -1,
		isWebKit = userAgent.indexOf("AppleWebKit/") !== -1,
		isChrome = userAgent.indexOf("Chrome/") !== -1,
		isOpera = userAgent.indexOf("Opera/") !== -1;

	function iosVersion(userAgent) {
		return((/ipad|iphone|ipod/.test(userAgent) && userAgent.match(/ os (\d+).+? like mac os x/)) || [, 0])[1];
	}

	return {
		// Static variable needed, publicly accessible, to be able override it in unit tests
		USER_AGENT: userAgent,

		/**
		 * Exclude browsers that are not capable of displaying and handling
		 * contentEditable as desired:
		 *    - iPhone, iPad (tested iOS 4.2.2) and Android (tested 2.2) refuse to make contentEditables focusable
		 *    - IE < 8 create invalid markup and crash randomly from time to time
		 *
		 * @return {Boolean}
		 */
		supported: function() {
			var userAgent = this.USER_AGENT.toLowerCase(),
				// Essential for making html elements editable
				hasContentEditableSupport = "contentEditable" in testElement,
				// Following methods are needed in order to interact with the contentEditable area
				hasEditingApiSupport = document.execCommand && document.queryCommandSupported && document.queryCommandState,
				// document selector apis are only supported by IE 8+, Safari 4+, Chrome and Firefox 3.5+
				hasQuerySelectorSupport = document.querySelector && document.querySelectorAll,
				// contentEditable is unusable in mobile browsers (tested iOS 4.2.2, Android 2.2, Opera Mobile, WebOS 3.05)
				isIncompatibleMobileBrowser = (this.isIos() && iosVersion(userAgent) < 5) || userAgent.indexOf("opera mobi") !== -1 || userAgent.indexOf("hpwos/") !== -1;

			return hasContentEditableSupport &&
				hasEditingApiSupport &&
				hasQuerySelectorSupport &&
				!isIncompatibleMobileBrowser;
		},

		isTouchDevice: function() {
			return this.supportsEvent("touchmove");
		},

		isIos: function() {
			var userAgent = this.USER_AGENT.toLowerCase();
			return userAgent.indexOf("webkit") !== -1 && userAgent.indexOf("mobile") !== -1;
		},

		/**
		 * Whether the browser supports sandboxed iframes
		 * Currently only IE 6+ offers such feature <iframe security="restricted">
		 *
		 * http://msdn.microsoft.com/en-us/library/ms534622(v=vs.85).aspx
		 * http://blogs.msdn.com/b/ie/archive/2008/01/18/using-frames-more-securely.aspx
		 *
		 * HTML5 sandboxed iframes are still buggy and their DOM is not reachable from the outside (except when using postMessage)
		 */
		supportsSandboxedIframes: function() {
			return isIE;
		},

		/**
		 * IE6+7 throw a mixed content warning when the src of an iframe
		 * is empty/unset or about:blank
		 * window.querySelector is implemented as of IE8
		 */
		throwsMixedContentWarningWhenIframeSrcIsEmpty: function() {
			return !("querySelector" in document);
		},

		/**
		 * Whether the caret is correctly displayed in contentEditable elements
		 * Firefox sometimes shows a huge caret in the beginning after focusing
		 */
		displaysCaretInEmptyContentEditableCorrectly: function() {
			return !isGecko;
		},

		/**
		 * Opera and IE are the only browsers who offer the css value
		 * in the original unit, thx to the currentStyle object
		 * All other browsers provide the computed style in px via window.getComputedStyle
		 */
		hasCurrentStyleProperty: function() {
			return "currentStyle" in testElement;
		},

		/**
		 * Whether the browser inserts a <br> when pressing enter in a contentEditable element
		 */
		insertsLineBreaksOnReturn: function() {
			return isGecko;
		},

		supportsPlaceholderAttributeOn: function(element) {
			return "placeholder" in element;
		},

		supportsEvent: function(eventName) {
			return "on" + eventName in testElement || (function() {
				testElement.setAttribute("on" + eventName, "return;");
				return typeof(testElement["on" + eventName]) === "function";
			})();
		},

		/**
		 * Opera doesn't correctly fire focus/blur events when clicking in- and outside of iframe
		 */
		supportsEventsInIframeCorrectly: function() {
			return !isOpera;
		},

		/**
		 * Chrome & Safari only fire the ondrop/ondragend/... events when the ondragover event is cancelled
		 * with event.preventDefault
		 * Firefox 3.6 fires those events anyway, but the mozilla doc says that the dragover/dragenter event needs
		 * to be cancelled
		 */
		firesOnDropOnlyWhenOnDragOverIsCancelled: function() {
			return isWebKit || isGecko;
		},

		/**
		 * Whether the browser supports the event.dataTransfer property in a proper way
		 */
		supportsDataTransfer: function() {
			try {
				// Firefox doesn't support dataTransfer in a safe way, it doesn't strip script code in the html payload (like Chrome does)
				return isWebKit && (window.Clipboard || window.DataTransfer).prototype.getData;
			} catch(e) {
				return false;
			}
		},

		/**
		 * Everything below IE9 doesn't know how to treat HTML5 tags
		 *
		 * @param {Object} context The document object on which to check HTML5 support
		 *
		 * @example
		 *    wysihtml5.browser.supportsHTML5Tags(document);
		 */
		supportsHTML5Tags: function(context) {
			var element = context.createElement("div"),
				html5 = "<article>foo</article>";
			element.innerHTML = html5;
			return element.innerHTML.toLowerCase() === html5;
		},

		/**
		 * Checks whether a document supports a certain queryCommand
		 * In particular, Opera needs a reference to a document that has a contentEditable in it's dom tree
		 * in oder to report correct results
		 *
		 * @param {Object} doc Document object on which to check for a query command
		 * @param {String} command The query command to check for
		 * @return {Boolean}
		 *
		 * @example
		 *    wysihtml5.browser.supportsCommand(document, "bold");
		 */
		supportsCommand: (function() {
			// Following commands are supported but contain bugs in some browsers
			var buggyCommands = {
				// formatBlock fails with some tags (eg. <blockquote>)
				"formatBlock": isIE,
				// When inserting unordered or ordered lists in Firefox, Chrome or Safari, the current selection or line gets
				// converted into a list (<ul><li>...</li></ul>, <ol><li>...</li></ol>)
				// IE and Opera act a bit different here as they convert the entire content of the current block element into a list
				"insertUnorderedList": isIE || isOpera || isWebKit,
				"insertOrderedList": isIE || isOpera || isWebKit
			};

			// Firefox throws errors for queryCommandSupported, so we have to build up our own object of supported commands
			var supported = {
				"insertHTML": isGecko
			};

			return function(doc, command) {
				var isBuggy = buggyCommands[command];
				if(!isBuggy) {
					// Firefox throws errors when invoking queryCommandSupported or queryCommandEnabled
					try {
						return doc.queryCommandSupported(command);
					} catch(e1) {}

					try {
						return doc.queryCommandEnabled(command);
					} catch(e2) {
						return !!supported[command];
					}
				}
				return false;
			};
		})(),

		/**
		 * IE: URLs starting with:
		 *    www., http://, https://, ftp://, gopher://, mailto:, new:, snews:, telnet:, wasis:, file://,
		 *    nntp://, newsrc:, ldap://, ldaps://, outlook:, mic:// and url:
		 * will automatically be auto-linked when either the user inserts them via copy&paste or presses the
		 * space bar when the caret is directly after such an url.
		 * This behavior cannot easily be avoided in IE < 9 since the logic is hardcoded in the mshtml.dll
		 * (related blog post on msdn
		 * http://blogs.msdn.com/b/ieinternals/archive/2009/09/17/prevent-automatic-hyperlinking-in-contenteditable-html.aspx).
		 */
		doesAutoLinkingInContentEditable: function() {
			return isIE;
		},

		/**
		 * As stated above, IE auto links urls typed into contentEditable elements
		 * Since IE9 it's possible to prevent this behavior
		 */
		canDisableAutoLinking: function() {
			return this.supportsCommand(document, "AutoUrlDetect");
		},

		/**
		 * IE leaves an empty paragraph in the contentEditable element after clearing it
		 * Chrome/Safari sometimes an empty <div>
		 */
		clearsContentEditableCorrectly: function() {
			return isGecko || isOpera || isWebKit;
		},

		/**
		 * IE gives wrong results for getAttribute
		 */
		supportsGetAttributeCorrectly: function() {
			var td = document.createElement("td");
			return td.getAttribute("rowspan") != "1";
		},

		/**
		 * When clicking on images in IE, Opera and Firefox, they are selected, which makes it easy to interact with them.
		 * Chrome and Safari both don't support this
		 */
		canSelectImagesInContentEditable: function() {
			return isGecko || isIE || isOpera;
		},

		/**
		 * When the caret is in an empty list (<ul><li>|</li></ul>) which is the first child in an contentEditable container
		 * pressing backspace doesn't remove the entire list as done in other browsers
		 */
		clearsListsInContentEditableCorrectly: function() {
			return isGecko || isIE || isWebKit;
		},

		/**
		 * All browsers except Safari and Chrome automatically scroll the range/caret position into view
		 */
		autoScrollsToCaret: function() {
			return !isWebKit;
		},

		/**
		 * Check whether the browser automatically closes tags that don't need to be opened
		 */
		autoClosesUnclosedTags: function() {
			var clonedTestElement = testElement.cloneNode(false),
				returnValue,
				innerHTML;

			clonedTestElement.innerHTML = "<p><div></div>";
			innerHTML = clonedTestElement.innerHTML.toLowerCase();
			returnValue = innerHTML === "<p></p><div></div>" || innerHTML === "<p><div></div></p>";

			// Cache result by overwriting current function
			this.autoClosesUnclosedTags = function() {
				return returnValue;
			};

			return returnValue;
		},

		/**
		 * Whether the browser supports the native document.getElementsByClassName which returns live NodeLists
		 */
		supportsNativeGetElementsByClassName: function() {
			return String(document.getElementsByClassName).indexOf("[native code]") !== -1;
		},

		/**
		 * As of now (19.04.2011) only supported by Firefox 4 and Chrome
		 * See https://developer.mozilla.org/en/DOM/Selection/modify
		 */
		supportsSelectionModify: function() {
			return "getSelection" in window && "modify" in window.getSelection();
		},

		/**
		 * Whether the browser supports the classList object for fast className manipulation
		 * See https://developer.mozilla.org/en/DOM/element.classList
		 */
		supportsClassList: function() {
			return "classList" in testElement;
		},

		/**
		 * Opera needs a white space after a <br> in order to position the caret correctly
		 */
		needsSpaceAfterLineBreak: function() {
			return isOpera;
		},

		/**
		 * Whether the browser supports the speech api on the given element
		 * See http://mikepultz.com/2011/03/accessing-google-speech-api-chrome-11/
		 *
		 * @example
		 *    var input = document.createElement("input");
		 *    if (wysihtml5.browser.supportsSpeechApiOn(input)) {
		 *      // ...
		 *    }
		 */
		supportsSpeechApiOn: function(input) {
			var chromeVersion = userAgent.match(/Chrome\/(\d+)/) || [, 0];
			return chromeVersion[1] >= 11 && ("onwebkitspeechchange" in input || "speech" in input);
		},

		/**
		 * IE9 crashes when setting a getter via Object.defineProperty on XMLHttpRequest or XDomainRequest
		 * See https://connect.microsoft.com/ie/feedback/details/650112
		 * or try the POC http://tifftiff.de/ie9_crash/
		 */
		crashesWhenDefineProperty: function(property) {
			return isIE && (property === "XMLHttpRequest" || property === "XDomainRequest");
		},

		/**
		 * IE is the only browser who fires the "focus" event not immediately when .focus() is called on an element
		 */
		doesAsyncFocus: function() {
			return isIE;
		},

		/**
		 * In IE it's impssible for the user and for the selection library to set the caret after an <img> when it's the lastChild in the document
		 */
		hasProblemsSettingCaretAfterImg: function() {
			return isIE;
		},

		hasUndoInContextMenu: function() {
			return isGecko || isChrome || isOpera;
		}
	};
})();
wysihtml5.lang.array = function(arr) {
	return {
		/**
		 * Check whether a given object exists in an array
		 *
		 * @example
		 *    wysihtml5.lang.array([1, 2]).contains(1);
		 *    // => true
		 */
		contains: function(needle) {
			if(arr.indexOf) {
				return arr.indexOf(needle) !== -1;
			} else {
				for(var i = 0, length = arr.length; i < length; i++) {
					if(arr[i] === needle) {
						return true;
					}
				}
				return false;
			}
		},

		/**
		 * Substract one array from another
		 *
		 * @example
		 *    wysihtml5.lang.array([1, 2, 3, 4]).without([3, 4]);
		 *    // => [1, 2]
		 */
		without: function(arrayToSubstract) {
			arrayToSubstract = wysihtml5.lang.array(arrayToSubstract);
			var newArr = [],
				i = 0,
				length = arr.length;
			for(; i < length; i++) {
				if(!arrayToSubstract.contains(arr[i])) {
					newArr.push(arr[i]);
				}
			}
			return newArr;
		},

		/**
		 * Return a clean native array
		 * 
		 * Following will convert a Live NodeList to a proper Array
		 * @example
		 *    var childNodes = wysihtml5.lang.array(document.body.childNodes).get();
		 */
		get: function() {
			var i = 0,
				length = arr.length,
				newArray = [];
			for(; i < length; i++) {
				newArray.push(arr[i]);
			}
			return newArray;
		}
	};
};
wysihtml5.lang.Dispatcher = Base.extend(
	/** @scope wysihtml5.lang.Dialog.prototype */
	{
		observe: function(eventName, handler) {
			this.events = this.events || {};
			this.events[eventName] = this.events[eventName] || [];
			this.events[eventName].push(handler);
			return this;
		},

		on: function() {
			return this.observe.apply(this, wysihtml5.lang.array(arguments).get());
		},

		fire: function(eventName, payload) {
			this.events = this.events || {};
			var handlers = this.events[eventName] || [],
				i = 0;
			for(; i < handlers.length; i++) {
				handlers[i].call(this, payload);
			}
			return this;
		},

		stopObserving: function(eventName, handler) {
			this.events = this.events || {};
			var i = 0,
				handlers,
				newHandlers;
			if(eventName) {
				handlers = this.events[eventName] || [],
					newHandlers = [];
				for(; i < handlers.length; i++) {
					if(handlers[i] !== handler && handler) {
						newHandlers.push(handlers[i]);
					}
				}
				this.events[eventName] = newHandlers;
			} else {
				// Clean up all events
				this.events = {};
			}
			return this;
		}
	});
wysihtml5.lang.object = function(obj) {
	return {
		/**
		 * @example
		 *    wysihtml5.lang.object({ foo: 1, bar: 1 }).merge({ bar: 2, baz: 3 }).get();
		 *    // => { foo: 1, bar: 2, baz: 3 }
		 */
		merge: function(otherObj) {
			for(var i in otherObj) {
				obj[i] = otherObj[i];
			}
			return this;
		},

		get: function() {
			return obj;
		},

		/**
		 * @example
		 *    wysihtml5.lang.object({ foo: 1 }).clone();
		 *    // => { foo: 1 }
		 */
		clone: function() {
			var newObj = {},
				i;
			for(i in obj) {
				newObj[i] = obj[i];
			}
			return newObj;
		},

		/**
		 * @example
		 *    wysihtml5.lang.object([]).isArray();
		 *    // => true
		 */
		isArray: function() {
			return Object.prototype.toString.call(obj) === "[object Array]";
		}
	};
};
(function() {
	var WHITE_SPACE_START = /^\s+/,
		WHITE_SPACE_END = /\s+$/;
	wysihtml5.lang.string = function(str) {
		str = String(str);
		return {
			/**
			 * @example
			 *    wysihtml5.lang.string("   foo   ").trim();
			 *    // => "foo"
			 */
			trim: function() {
				return str.replace(WHITE_SPACE_START, "").replace(WHITE_SPACE_END, "");
			},

			/**
			 * @example
			 *    wysihtml5.lang.string("Hello #{name}").interpolate({ name: "Christopher" });
			 *    // => "Hello Christopher"
			 */
			interpolate: function(vars) {
				for(var i in vars) {
					str = this.replace("#{" + i + "}").by(vars[i]);
				}
				return str;
			},

			/**
			 * @example
			 *    wysihtml5.lang.string("Hello Tom").replace("Tom").with("Hans");
			 *    // => "Hello Hans"
			 */
			replace: function(search) {
				return {
					by: function(replace) {
						return str.split(search).join(replace);
					}
				}
			}
		};
	};
})();
/**
 * Find urls in descendant text nodes of an element and auto-links them
 * Inspired by http://james.padolsey.com/javascript/find-and-replace-text-with-javascript/
 *
 * @param {Element} element Container element in which to search for urls
 *
 * @example
 *    <div id="text-container">Please click here: www.google.com</div>
 *    <script>wysihtml5.dom.autoLink(document.getElementById("text-container"));</script>
 */
(function(wysihtml5) {
	var
	/**
	 * Don't auto-link urls that are contained in the following elements:
	 */
		IGNORE_URLS_IN = wysihtml5.lang.array(["CODE", "PRE", "A", "SCRIPT", "HEAD", "TITLE", "STYLE"]),
		/**
		 * revision 1:
		 *    /(\S+\.{1}[^\s\,\.\!]+)/g
		 *
		 * revision 2:
		 *    /(\b(((https?|ftp):\/\/)|(www\.))[-A-Z0-9+&@#\/%?=~_|!:,.;\[\]]*[-A-Z0-9+&@#\/%=~_|])/gim
		 *
		 * put this in the beginning if you don't wan't to match within a word
		 *    (^|[\>\(\{\[\s\>])
		 */
		URL_REG_EXP = /((https?:\/\/|www\.)[^\s<]{3,})/gi,
		TRAILING_CHAR_REG_EXP = /([^\w\/\-](,?))$/i,
		MAX_DISPLAY_LENGTH = 100,
		BRACKETS = {
			")": "(",
			"]": "[",
			"}": "{"
		};

	function autoLink(element) {
		if(_hasParentThatShouldBeIgnored(element)) {
			return element;
		}

		if(element === element.ownerDocument.documentElement) {
			element = element.ownerDocument.body;
		}

		return _parseNode(element);
	}

	/**
	 * This is basically a rebuild of
	 * the rails auto_link_urls text helper
	 */
	function _convertUrlsToLinks(str) {
		return str.replace(URL_REG_EXP, function(match, url) {
			var punctuation = (url.match(TRAILING_CHAR_REG_EXP) || [])[1] || "",
				opening = BRACKETS[punctuation];
			url = url.replace(TRAILING_CHAR_REG_EXP, "");

			if(url.split(opening).length > url.split(punctuation).length) {
				url = url + punctuation;
				punctuation = "";
			}
			var realUrl = url,
				displayUrl = url;
			if(url.length > MAX_DISPLAY_LENGTH) {
				displayUrl = displayUrl.substr(0, MAX_DISPLAY_LENGTH) + "...";
			}
			// Add http prefix if necessary
			if(realUrl.substr(0, 4) === "www.") {
				realUrl = "http://" + realUrl;
			}

			return '<a href="' + realUrl + '">' + displayUrl + '</a>' + punctuation;
		});
	}

	/**
	 * Creates or (if already cached) returns a temp element
	 * for the given document object
	 */
	function _getTempElement(context) {
		var tempElement = context._wysihtml5_tempElement;
		if(!tempElement) {
			tempElement = context._wysihtml5_tempElement = context.createElement("div");
		}
		return tempElement;
	}

	/**
	 * Replaces the original text nodes with the newly auto-linked dom tree
	 */
	function _wrapMatchesInNode(textNode) {
		var parentNode = textNode.parentNode,
			tempElement = _getTempElement(parentNode.ownerDocument);

		// We need to insert an empty/temporary <span /> to fix IE quirks
		// Elsewise IE would strip white space in the beginning
		tempElement.innerHTML = "<span></span>" + _convertUrlsToLinks(textNode.data);
		tempElement.removeChild(tempElement.firstChild);

		while(tempElement.firstChild) {
			// inserts tempElement.firstChild before textNode
			parentNode.insertBefore(tempElement.firstChild, textNode);
		}
		parentNode.removeChild(textNode);
	}

	function _hasParentThatShouldBeIgnored(node) {
		var nodeName;
		while(node.parentNode) {
			node = node.parentNode;
			nodeName = node.nodeName;
			if(IGNORE_URLS_IN.contains(nodeName)) {
				return true;
			} else if(nodeName === "body") {
				return false;
			}
		}
		return false;
	}

	function _parseNode(element) {
		if(IGNORE_URLS_IN.contains(element.nodeName)) {
			return;
		}

		if(element.nodeType === wysihtml5.TEXT_NODE && element.data.match(URL_REG_EXP)) {
			_wrapMatchesInNode(element);
			return;
		}

		var childNodes = wysihtml5.lang.array(element.childNodes).get(),
			childNodesLength = childNodes.length,
			i = 0;

		for(; i < childNodesLength; i++) {
			_parseNode(childNodes[i]);
		}

		return element;
	}

	wysihtml5.dom.autoLink = autoLink;

	// Reveal url reg exp to the outside
	wysihtml5.dom.autoLink.URL_REG_EXP = URL_REG_EXP;
})(wysihtml5);
(function(wysihtml5) {
	var supportsClassList = wysihtml5.browser.supportsClassList(),
		api = wysihtml5.dom;

	api.addClass = function(element, className) {
		if(supportsClassList) {
			return element.classList.add(className);
		}
		if(api.hasClass(element, className)) {
			return;
		}
		element.className += " " + className;
	};

	api.removeClass = function(element, className) {
		if(supportsClassList) {
			return element.classList.remove(className);
		}

		element.className = element.className.replace(new RegExp("(^|\\s+)" + className + "(\\s+|$)"), " ");
	};

	api.hasClass = function(element, className) {
		if(supportsClassList) {
			return element.classList.contains(className);
		}

		var elementClassName = element.className;
		return(elementClassName.length > 0 && (elementClassName == className || new RegExp("(^|\\s)" + className + "(\\s|$)").test(elementClassName)));
	};
})(wysihtml5);
wysihtml5.dom.contains = (function() {
	var documentElement = document.documentElement;
	if(documentElement.contains) {
		return function(container, element) {
			if(element.nodeType !== wysihtml5.ELEMENT_NODE) {
				element = element.parentNode;
			}
			return container !== element && container.contains(element);
		};
	} else if(documentElement.compareDocumentPosition) {
		return function(container, element) {
			// https://developer.mozilla.org/en/DOM/Node.compareDocumentPosition
			return !!(container.compareDocumentPosition(element) & 16);
		};
	}
})();
/**
 * Converts an HTML fragment/element into a unordered/ordered list
 *
 * @param {Element} element The element which should be turned into a list
 * @param {String} listType The list type in which to convert the tree (either "ul" or "ol")
 * @return {Element} The created list
 *
 * @example
 *    <!-- Assume the following dom: -->
 *    <span id="pseudo-list">
 *      eminem<br>
 *      dr. dre
 *      <div>50 Cent</div>
 *    </span>
 *
 *    <script>
 *      wysihtml5.dom.convertToList(document.getElementById("pseudo-list"), "ul");
 *    </script>
 *
 *    <!-- Will result in: -->
 *    <ul>
 *      <li>eminem</li>
 *      <li>dr. dre</li>
 *      <li>50 Cent</li>
 *    </ul>
 */
wysihtml5.dom.convertToList = (function() {
	function _createListItem(doc, list) {
		var listItem = doc.createElement("li");
		list.appendChild(listItem);
		return listItem;
	}

	function _createList(doc, type) {
		return doc.createElement(type);
	}

	function convertToList(element, listType) {
		if(element.nodeName === "UL" || element.nodeName === "OL" || element.nodeName === "MENU") {
			// Already a list
			return element;
		}

		var doc = element.ownerDocument,
			list = _createList(doc, listType),
			lineBreaks = element.querySelectorAll("br"),
			lineBreaksLength = lineBreaks.length,
			childNodes,
			childNodesLength,
			childNode,
			lineBreak,
			parentNode,
			isBlockElement,
			isLineBreak,
			currentListItem,
			i;

		// First find <br> at the end of inline elements and move them behind them
		for(i = 0; i < lineBreaksLength; i++) {
			lineBreak = lineBreaks[i];
			while((parentNode = lineBreak.parentNode) && parentNode !== element && parentNode.lastChild === lineBreak) {
				if(wysihtml5.dom.getStyle("display").from(parentNode) === "block") {
					parentNode.removeChild(lineBreak);
					break;
				}
				wysihtml5.dom.insert(lineBreak).after(lineBreak.parentNode);
			}
		}

		childNodes = wysihtml5.lang.array(element.childNodes).get();
		childNodesLength = childNodes.length;

		for(i = 0; i < childNodesLength; i++) {
			currentListItem = currentListItem || _createListItem(doc, list);
			childNode = childNodes[i];
			isBlockElement = wysihtml5.dom.getStyle("display").from(childNode) === "block";
			isLineBreak = childNode.nodeName === "BR";

			if(isBlockElement) {
				// Append blockElement to current <li> if empty, otherwise create a new one
				currentListItem = currentListItem.firstChild ? _createListItem(doc, list) : currentListItem;
				currentListItem.appendChild(childNode);
				currentListItem = null;
				continue;
			}

			if(isLineBreak) {
				// Only create a new list item in the next iteration when the current one has already content
				currentListItem = currentListItem.firstChild ? null : currentListItem;
				continue;
			}

			currentListItem.appendChild(childNode);
		}

		element.parentNode.replaceChild(list, element);
		return list;
	}

	return convertToList;
})();
/**
 * Copy a set of attributes from one element to another
 *
 * @param {Array} attributesToCopy List of attributes which should be copied
 * @return {Object} Returns an object which offers the "from" method which can be invoked with the element where to
 *    copy the attributes from., this again returns an object which provides a method named "to" which can be invoked 
 *    with the element where to copy the attributes to (see example)
 *
 * @example
 *    var textarea    = document.querySelector("textarea"),
 *        div         = document.querySelector("div[contenteditable=true]"),
 *        anotherDiv  = document.querySelector("div.preview");
 *    wysihtml5.dom.copyAttributes(["spellcheck", "value", "placeholder"]).from(textarea).to(div).andTo(anotherDiv);
 *
 */
wysihtml5.dom.copyAttributes = function(attributesToCopy) {
	return {
		from: function(elementToCopyFrom) {
			return {
				to: function(elementToCopyTo) {
					var attribute,
						i = 0,
						length = attributesToCopy.length;
					for(; i < length; i++) {
						attribute = attributesToCopy[i];
						if(typeof(elementToCopyFrom[attribute]) !== "undefined" && elementToCopyFrom[attribute] !== "") {
							elementToCopyTo[attribute] = elementToCopyFrom[attribute];
						}
					}
					return {
						andTo: arguments.callee
					};
				}
			};
		}
	};
};
/**
 * Copy a set of styles from one element to another
 * Please note that this only works properly across browsers when the element from which to copy the styles
 * is in the dom
 *
 * Interesting article on how to copy styles
 *
 * @param {Array} stylesToCopy List of styles which should be copied
 * @return {Object} Returns an object which offers the "from" method which can be invoked with the element where to
 *    copy the styles from., this again returns an object which provides a method named "to" which can be invoked 
 *    with the element where to copy the styles to (see example)
 *
 * @example
 *    var textarea    = document.querySelector("textarea"),
 *        div         = document.querySelector("div[contenteditable=true]"),
 *        anotherDiv  = document.querySelector("div.preview");
 *    wysihtml5.dom.copyStyles(["overflow-y", "width", "height"]).from(textarea).to(div).andTo(anotherDiv);
 *
 */
(function(dom) {

	/**
	 * Mozilla, WebKit and Opera recalculate the computed width when box-sizing: boder-box; is set
	 * So if an element has "width: 200px; -moz-box-sizing: border-box; border: 1px;" then 
	 * its computed css width will be 198px
	 */
	var BOX_SIZING_PROPERTIES = ["-webkit-box-sizing", "-moz-box-sizing", "-ms-box-sizing", "box-sizing"];

	var shouldIgnoreBoxSizingBorderBox = function(element) {
		if(hasBoxSizingBorderBox(element)) {
			return parseInt(dom.getStyle("width").from(element), 10) < element.offsetWidth;
		}
		return false;
	};

	var hasBoxSizingBorderBox = function(element) {
		var i = 0,
			length = BOX_SIZING_PROPERTIES.length;
		for(; i < length; i++) {
			if(dom.getStyle(BOX_SIZING_PROPERTIES[i]).from(element) === "border-box") {
				return BOX_SIZING_PROPERTIES[i];
			}
		}
	};

	dom.copyStyles = function(stylesToCopy) {
		return {
			from: function(element) {
				if(shouldIgnoreBoxSizingBorderBox(element)) {
					stylesToCopy = wysihtml5.lang.array(stylesToCopy).without(BOX_SIZING_PROPERTIES);
				}

				var cssText = "",
					length = stylesToCopy.length,
					i = 0,
					property;
				for(; i < length; i++) {
					property = stylesToCopy[i];
					cssText += property + ":" + dom.getStyle(property).from(element) + ";";
				}

				return {
					to: function(element) {
						dom.setStyles(cssText).on(element);
						return {
							andTo: arguments.callee
						};
					}
				};
			}
		};
	};
})(wysihtml5.dom);
/**
 * Event Delegation
 *
 * @example
 *    wysihtml5.dom.delegate(document.body, "a", "click", function() {
 *      // foo
 *    });
 */
(function(wysihtml5) {

	wysihtml5.dom.delegate = function(container, selector, eventName, handler) {
		return wysihtml5.dom.observe(container, eventName, function(event) {
			var target = event.target,
				match = wysihtml5.lang.array(container.querySelectorAll(selector));

			while(target && target !== container) {
				if(match.contains(target)) {
					handler.call(target, event);
					break;
				}
				target = target.parentNode;
			}
		});
	};

})(wysihtml5);
/**
 * Returns the given html wrapped in a div element
 *
 * Fixing IE's inability to treat unknown elements (HTML5 section, article, ...) correctly
 * when inserted via innerHTML
 * 
 * @param {String} html The html which should be wrapped in a dom element
 * @param {Obejct} [context] Document object of the context the html belongs to
 *
 * @example
 *    wysihtml5.dom.getAsDom("<article>foo</article>");
 */
wysihtml5.dom.getAsDom = (function() {

	var _innerHTMLShiv = function(html, context) {
		var tempElement = context.createElement("div");
		tempElement.style.display = "none";
		context.body.appendChild(tempElement);
		// IE throws an exception when trying to insert <frameset></frameset> via innerHTML
		try {
			tempElement.innerHTML = html;
		} catch(e) {}
		context.body.removeChild(tempElement);
		return tempElement;
	};

	/**
	 * Make sure IE supports HTML5 tags, which is accomplished by simply creating one instance of each element
	 */
	var _ensureHTML5Compatibility = function(context) {
		if(context._wysihtml5_supportsHTML5Tags) {
			return;
		}
		for(var i = 0, length = HTML5_ELEMENTS.length; i < length; i++) {
			context.createElement(HTML5_ELEMENTS[i]);
		}
		context._wysihtml5_supportsHTML5Tags = true;
	};

	/**
	 * List of html5 tags
	 * taken from http://simon.html5.org/html5-elements
	 */
	var HTML5_ELEMENTS = [
		"abbr", "article", "aside", "audio", "bdi", "canvas", "command", "datalist", "details", "figcaption",
		"figure", "footer", "header", "hgroup", "keygen", "mark", "meter", "nav", "output", "progress",
		"rp", "rt", "ruby", "svg", "section", "source", "summary", "time", "track", "video", "wbr"
	];

	return function(html, context) {
		context = context || document;
		var tempElement;
		if(typeof(html) === "object" && html.nodeType) {
			tempElement = context.createElement("div");
			tempElement.appendChild(html);
		} else if(wysihtml5.browser.supportsHTML5Tags(context)) {
			tempElement = context.createElement("div");
			tempElement.innerHTML = html;
		} else {
			_ensureHTML5Compatibility(context);
			tempElement = _innerHTMLShiv(html, context);
		}
		return tempElement;
	};
})();
/**
 * Walks the dom tree from the given node up until it finds a match
 * Designed for optimal performance.
 *
 * @param {Element} node The from which to check the parent nodes
 * @param {Object} matchingSet Object to match against (possible properties: nodeName, className, classRegExp)
 * @param {Number} [levels] How many parents should the function check up from the current node (defaults to 50)
 * @return {null|Element} Returns the first element that matched the desiredNodeName(s)
 * @example
 *    var listElement = wysihtml5.dom.getParentElement(document.querySelector("li"), { nodeName: ["MENU", "UL", "OL"] });
 *    // ... or ...
 *    var unorderedListElement = wysihtml5.dom.getParentElement(document.querySelector("li"), { nodeName: "UL" });
 *    // ... or ...
 *    var coloredElement = wysihtml5.dom.getParentElement(myTextNode, { nodeName: "SPAN", className: "wysiwyg-color-red", classRegExp: /wysiwyg-color-[a-z]/g });
 */
wysihtml5.dom.getParentElement = (function() {

	function _isSameNodeName(nodeName, desiredNodeNames) {
		if(!desiredNodeNames || !desiredNodeNames.length) {
			return true;
		}

		if(typeof(desiredNodeNames) === "string") {
			return nodeName === desiredNodeNames;
		} else {
			return wysihtml5.lang.array(desiredNodeNames).contains(nodeName);
		}
	}

	function _isElement(node) {
		return node.nodeType === wysihtml5.ELEMENT_NODE;
	}

	function _hasClassName(element, className, classRegExp) {
		var classNames = (element.className || "").match(classRegExp) || [];
		if(!className) {
			return !!classNames.length;
		}
		return classNames[classNames.length - 1] === className;
	}

	function _getParentElementWithNodeName(node, nodeName, levels) {
		while(levels-- && node && node.nodeName !== "BODY") {
			if(_isSameNodeName(node.nodeName, nodeName)) {
				return node;
			}
			node = node.parentNode;
		}
		return null;
	}

	function _getParentElementWithNodeNameAndClassName(node, nodeName, className, classRegExp, levels) {
		while(levels-- && node && node.nodeName !== "BODY") {
			if(_isElement(node) &&
				_isSameNodeName(node.nodeName, nodeName) &&
				_hasClassName(node, className, classRegExp)) {
				return node;
			}
			node = node.parentNode;
		}
		return null;
	}

	return function(node, matchingSet, levels) {
		levels = levels || 50; // Go max 50 nodes upwards from current node
		if(matchingSet.className || matchingSet.classRegExp) {
			return _getParentElementWithNodeNameAndClassName(
				node, matchingSet.nodeName, matchingSet.className, matchingSet.classRegExp, levels
			);
		} else {
			return _getParentElementWithNodeName(
				node, matchingSet.nodeName, levels
			);
		}
	};
})();
/**
 * Get element's style for a specific css property
 *
 * @param {Element} element The element on which to retrieve the style
 * @param {String} property The CSS property to retrieve ("float", "display", "text-align", ...)
 *
 * @example
 *    wysihtml5.dom.getStyle("display").from(document.body);
 *    // => "block"
 */
wysihtml5.dom.getStyle = (function() {
	var stylePropertyMapping = {
			"float": ("styleFloat" in document.createElement("div").style) ? "styleFloat" : "cssFloat"
		},
		REG_EXP_CAMELIZE = /\-[a-z]/g;

	function camelize(str) {
		return str.replace(REG_EXP_CAMELIZE, function(match) {
			return match.charAt(1).toUpperCase();
		});
	}

	return function(property) {
		return {
			from: function(element) {
				if(element.nodeType !== wysihtml5.ELEMENT_NODE) {
					return;
				}

				var doc = element.ownerDocument,
					camelizedProperty = stylePropertyMapping[property] || camelize(property),
					style = element.style,
					currentStyle = element.currentStyle,
					styleValue = style[camelizedProperty];
				if(styleValue) {
					return styleValue;
				}

				// currentStyle is no standard and only supported by Opera and IE but it has one important advantage over the standard-compliant
				// window.getComputedStyle, since it returns css property values in their original unit:
				// If you set an elements width to "50%", window.getComputedStyle will give you it's current width in px while currentStyle
				// gives you the original "50%".
				// Opera supports both, currentStyle and window.getComputedStyle, that's why checking for currentStyle should have higher prio
				if(currentStyle) {
					try {
						return currentStyle[camelizedProperty];
					} catch(e) {
						//ie will occasionally fail for unknown reasons. swallowing exception
					}
				}

				var win = doc.defaultView || doc.parentWindow,
					needsOverflowReset = (property === "height" || property === "width") && element.nodeName === "TEXTAREA",
					originalOverflow,
					returnValue;

				if(win.getComputedStyle) {
					// Chrome and Safari both calculate a wrong width and height for textareas when they have scroll bars
					// therfore we remove and restore the scrollbar and calculate the value in between
					if(needsOverflowReset) {
						originalOverflow = style.overflow;
						style.overflow = "hidden";
					}
					returnValue = win.getComputedStyle(element, null).getPropertyValue(property);
					if(needsOverflowReset) {
						style.overflow = originalOverflow || "";
					}
					return returnValue;
				}
			}
		};
	};
})();
/**
 * High performant way to check whether an element with a specific tag name is in the given document
 * Optimized for being heavily executed
 * Unleashes the power of live node lists
 *
 * @param {Object} doc The document object of the context where to check
 * @param {String} tagName Upper cased tag name
 * @example
 *    wysihtml5.dom.hasElementWithTagName(document, "IMG");
 */
wysihtml5.dom.hasElementWithTagName = (function() {
	var LIVE_CACHE = {},
		DOCUMENT_IDENTIFIER = 1;

	function _getDocumentIdentifier(doc) {
		return doc._wysihtml5_identifier || (doc._wysihtml5_identifier = DOCUMENT_IDENTIFIER++);
	}

	return function(doc, tagName) {
		var key = _getDocumentIdentifier(doc) + ":" + tagName,
			cacheEntry = LIVE_CACHE[key];
		if(!cacheEntry) {
			cacheEntry = LIVE_CACHE[key] = doc.getElementsByTagName(tagName);
		}

		return cacheEntry.length > 0;
	};
})();
/**
 * High performant way to check whether an element with a specific class name is in the given document
 * Optimized for being heavily executed
 * Unleashes the power of live node lists
 *
 * @param {Object} doc The document object of the context where to check
 * @param {String} tagName Upper cased tag name
 * @example
 *    wysihtml5.dom.hasElementWithClassName(document, "foobar");
 */
(function(wysihtml5) {
	var LIVE_CACHE = {},
		DOCUMENT_IDENTIFIER = 1;

	function _getDocumentIdentifier(doc) {
		return doc._wysihtml5_identifier || (doc._wysihtml5_identifier = DOCUMENT_IDENTIFIER++);
	}

	wysihtml5.dom.hasElementWithClassName = function(doc, className) {
		// getElementsByClassName is not supported by IE<9
		// but is sometimes mocked via library code (which then doesn't return live node lists)
		if(!wysihtml5.browser.supportsNativeGetElementsByClassName()) {
			return !!doc.querySelector("." + className);
		}

		var key = _getDocumentIdentifier(doc) + ":" + className,
			cacheEntry = LIVE_CACHE[key];
		if(!cacheEntry) {
			cacheEntry = LIVE_CACHE[key] = doc.getElementsByClassName(className);
		}

		return cacheEntry.length > 0;
	};
})(wysihtml5);
wysihtml5.dom.insert = function(elementToInsert) {
	return {
		after: function(element) {
			element.parentNode.insertBefore(elementToInsert, element.nextSibling);
		},

		before: function(element) {
			element.parentNode.insertBefore(elementToInsert, element);
		},

		into: function(element) {
			element.appendChild(elementToInsert);
		}
	};
};
wysihtml5.dom.insertCSS = function(rules) {
	rules = rules.join("\n");

	return {
		into: function(doc) {
			var head = doc.head || doc.getElementsByTagName("head")[0],
				styleElement = doc.createElement("style");

			styleElement.type = "text/css";

			if(styleElement.styleSheet) {
				styleElement.styleSheet.cssText = rules;
			} else {
				styleElement.appendChild(doc.createTextNode(rules));
			}

			if(head) {
				head.appendChild(styleElement);
			}
		}
	};
};
/**
 * Method to set dom events
 *
 * @example
 *    wysihtml5.dom.observe(iframe.contentWindow.document.body, ["focus", "blur"], function() { ... });
 */
wysihtml5.dom.observe = function(element, eventNames, handler) {
	eventNames = typeof(eventNames) === "string" ? [eventNames] : eventNames;

	var handlerWrapper,
		eventName,
		i = 0,
		length = eventNames.length;

	for(; i < length; i++) {
		eventName = eventNames[i];
		if(element.addEventListener) {
			element.addEventListener(eventName, handler, false);
		} else {
			handlerWrapper = function(event) {
				if(!("target" in event)) {
					event.target = event.srcElement;
				}
				event.preventDefault = event.preventDefault || function() {
					this.returnValue = false;
				};
				event.stopPropagation = event.stopPropagation || function() {
					this.cancelBubble = true;
				};
				handler.call(element, event);
			};
			element.attachEvent("on" + eventName, handlerWrapper);
		}
	}

	return {
		stop: function() {
			var eventName,
				i = 0,
				length = eventNames.length;
			for(; i < length; i++) {
				eventName = eventNames[i];
				if(element.removeEventListener) {
					element.removeEventListener(eventName, handler, false);
				} else {
					element.detachEvent("on" + eventName, handlerWrapper);
				}
			}
		}
	};
};
/**
 * HTML Sanitizer
 * Rewrites the HTML based on given rules
 *
 * @param {Element|String} elementOrHtml HTML String to be sanitized OR element whose content should be sanitized
 * @param {Object} [rules] List of rules for rewriting the HTML, if there's no rule for an element it will
 *    be converted to a "span". Each rule is a key/value pair where key is the tag to convert, and value the
 *    desired substitution.
 * @param {Object} context Document object in which to parse the html, needed to sandbox the parsing
 *
 * @return {Element|String} Depends on the elementOrHtml parameter. When html then the sanitized html as string elsewise the element.
 *
 * @example
 *    var userHTML = '<div id="foo" onclick="alert(1);"><p><font color="red">foo</font><script>alert(1);</script></p></div>';
 *    wysihtml5.dom.parse(userHTML, {
 *      tags {
 *        p:      "div",      // Rename p tags to div tags
 *        font:   "span"      // Rename font tags to span tags
 *        div:    true,       // Keep them, also possible (same result when passing: "div" or true)
 *        script: undefined   // Remove script elements
 *      }
 *    });
 *    // => <div><div><span>foo bar</span></div></div>
 *
 *    var userHTML = '<table><tbody><tr><td>I'm a table!</td></tr></tbody></table>';
 *    wysihtml5.dom.parse(userHTML);
 *    // => '<span><span><span><span>I'm a table!</span></span></span></span>'
 *
 *    var userHTML = '<div>foobar<br>foobar</div>';
 *    wysihtml5.dom.parse(userHTML, {
 *      tags: {
 *        div: undefined,
 *        br:  true
 *      }
 *    });
 *    // => ''
 *
 *    var userHTML = '<div class="red">foo</div><div class="pink">bar</div>';
 *    wysihtml5.dom.parse(userHTML, {
 *      classes: {
 *        red:    1,
 *        green:  1
 *      },
 *      tags: {
 *        div: {
 *          rename_tag:     "p"
 *        }
 *      }
 *    });
 *    // => '<p class="red">foo</p><p>bar</p>'
 */
wysihtml5.dom.parse = (function() {

	/**
	 * It's not possible to use a XMLParser/DOMParser as HTML5 is not always well-formed XML
	 * new DOMParser().parseFromString('<img src="foo.gif">') will cause a parseError since the
	 * node isn't closed
	 *
	 * Therefore we've to use the browser's ordinary HTML parser invoked by setting innerHTML.
	 */
	var NODE_TYPE_MAPPING = {
			"1": _handleElement,
			"3": _handleText
		},
		// Rename unknown tags to this
		DEFAULT_NODE_NAME = "span",
		WHITE_SPACE_REG_EXP = /\s+/,
		defaultRules = {
			tags: {},
			classes: {}
		},
		currentRules = {};

	/**
	 * Iterates over all childs of the element, recreates them, appends them into a document fragment
	 * which later replaces the entire body content
	 */
	function parse(elementOrHtml, rules, context, cleanUp) {
		wysihtml5.lang.object(currentRules).merge(defaultRules).merge(rules).get();

		context = context || elementOrHtml.ownerDocument || document;
		var fragment = context.createDocumentFragment(),
			isString = typeof(elementOrHtml) === "string",
			element,
			newNode,
			firstChild;

		if(isString) {
			element = wysihtml5.dom.getAsDom(elementOrHtml, context);
		} else {
			element = elementOrHtml;
		}

		while(element.firstChild) {
			firstChild = element.firstChild;
			element.removeChild(firstChild);
			newNode = _convert(firstChild, cleanUp);
			if(newNode) {
				fragment.appendChild(newNode);
			}
		}

		// Clear element contents
		element.innerHTML = "";

		// Insert new DOM tree
		element.appendChild(fragment);

		return isString ? wysihtml5.quirks.getCorrectInnerHTML(element) : element;
	}

	function _convert(oldNode, cleanUp) {
		var oldNodeType = oldNode.nodeType,
			oldChilds = oldNode.childNodes,
			oldChildsLength = oldChilds.length,
			newNode,
			method = NODE_TYPE_MAPPING[oldNodeType],
			i = 0;

		newNode = method && method(oldNode);

		if(!newNode) {
			return null;
		}

		for(i = 0; i < oldChildsLength; i++) {
			newChild = _convert(oldChilds[i], cleanUp);
			if(newChild) {
				newNode.appendChild(newChild);
			}
		}

		// Cleanup senseless <span> elements
		if(cleanUp &&
			newNode.childNodes.length <= 1 &&
			newNode.nodeName.toLowerCase() === DEFAULT_NODE_NAME &&
			!newNode.attributes.length) {
			return newNode.firstChild;
		}

		return newNode;
	}

	function _handleElement(oldNode) {
		var rule,
			newNode,
			endTag,
			tagRules = currentRules.tags,
			nodeName = oldNode.nodeName.toLowerCase(),
			scopeName = oldNode.scopeName;

		/**
		 * We already parsed that element
		 * ignore it! (yes, this sometimes happens in IE8 when the html is invalid)
		 */
		if(oldNode._wysihtml5) {
			return null;
		}
		oldNode._wysihtml5 = 1;

		if(oldNode.className === "wysihtml5-temp") {
			return null;
		}

		/**
		 * IE is the only browser who doesn't include the namespace in the
		 * nodeName, that's why we have to prepend it by ourselves
		 * scopeName is a proprietary IE feature
		 * read more here http://msdn.microsoft.com/en-us/library/ms534388(v=vs.85).aspx
		 */
		if(scopeName && scopeName != "HTML") {
			nodeName = scopeName + ":" + nodeName;
		}

		/**
		 * Repair node
		 * IE is a bit bitchy when it comes to invalid nested markup which includes unclosed tags
		 * A <p> doesn't need to be closed according HTML4-5 spec, we simply replace it with a <div> to preserve its content and layout
		 */
		if("outerHTML" in oldNode) {
			if(!wysihtml5.browser.autoClosesUnclosedTags() &&
				oldNode.nodeName === "P" &&
				oldNode.outerHTML.slice(-4).toLowerCase() !== "</p>") {
				nodeName = "div";
			}
		}

		if(nodeName in tagRules) {
			rule = tagRules[nodeName];
			if(!rule || rule.remove) {
				return null;
			}

			rule = typeof(rule) === "string" ? {
				rename_tag: rule
			} : rule;
		} else if(oldNode.firstChild) {
			rule = {
				rename_tag: DEFAULT_NODE_NAME
			};
		} else {
			// Remove empty unknown elements
			return null;
		}

		newNode = oldNode.ownerDocument.createElement(rule.rename_tag || nodeName);
		_handleAttributes(oldNode, newNode, rule);

		oldNode = null;
		return newNode;
	}

	function _handleAttributes(oldNode, newNode, rule) {
		var attributes = {}, // fresh new set of attributes to set on newNode
			setClass = rule.set_class, // classes to set
			addClass = rule.add_class, // add classes based on existing attributes
			setAttributes = rule.set_attributes, // attributes to set on the current node
			checkAttributes = rule.check_attributes, // check/convert values of attributes
			allowedClasses = currentRules.classes,
			i = 0,
			classes = [],
			newClasses = [],
			newUniqueClasses = [],
			oldClasses = [],
			classesLength,
			newClassesLength,
			currentClass,
			newClass,
			attributeName,
			newAttributeValue,
			method;

		if(setAttributes) {
			attributes = wysihtml5.lang.object(setAttributes).clone();
		}

		if(checkAttributes) {
			for(attributeName in checkAttributes) {
				method = attributeCheckMethods[checkAttributes[attributeName]];
				if(!method) {
					continue;
				}
				newAttributeValue = method(_getAttribute(oldNode, attributeName));
				if(typeof(newAttributeValue) === "string") {
					attributes[attributeName] = newAttributeValue;
				}
			}
		}

		if(setClass) {
			classes.push(setClass);
		}

		if(addClass) {
			for(attributeName in addClass) {
				method = addClassMethods[addClass[attributeName]];
				if(!method) {
					continue;
				}
				newClass = method(_getAttribute(oldNode, attributeName));
				if(typeof(newClass) === "string") {
					classes.push(newClass);
				}
			}
		}

		// make sure that wysihtml5 temp class doesn't get stripped out
		allowedClasses["_wysihtml5-temp-placeholder"] = 1;

		// add old classes last
		oldClasses = oldNode.getAttribute("class");
		if(oldClasses) {
			classes = classes.concat(oldClasses.split(WHITE_SPACE_REG_EXP));
		}
		classesLength = classes.length;
		for(; i < classesLength; i++) {
			currentClass = classes[i];
			if(allowedClasses[currentClass]) {
				newClasses.push(currentClass);
			}
		}

		// remove duplicate entries and preserve class specificity
		newClassesLength = newClasses.length;
		while(newClassesLength--) {
			currentClass = newClasses[newClassesLength];
			if(!wysihtml5.lang.array(newUniqueClasses).contains(currentClass)) {
				newUniqueClasses.unshift(currentClass);
			}
		}

		if(newUniqueClasses.length) {
			attributes["class"] = newUniqueClasses.join(" ");
		}

		// set attributes on newNode
		for(attributeName in attributes) {
			// Setting attributes can cause a js error in IE under certain circumstances
			// eg. on a <img> under https when it's new attribute value is non-https
			// TODO: Investigate this further and check for smarter handling
			try {
				newNode.setAttribute(attributeName, attributes[attributeName]);
			} catch(e) {}
		}

		// IE8 sometimes loses the width/height attributes when those are set before the "src"
		// so we make sure to set them again
		if(attributes.src) {
			if(typeof(attributes.width) !== "undefined") {
				newNode.setAttribute("width", attributes.width);
			}
			if(typeof(attributes.height) !== "undefined") {
				newNode.setAttribute("height", attributes.height);
			}
		}
	}

	/**
	 * IE gives wrong results for hasAttribute/getAttribute, for example:
	 *    var td = document.createElement("td");
	 *    td.getAttribute("rowspan"); // => "1" in IE
	 *
	 * Therefore we have to check the element's outerHTML for the attribute
	 */
	var HAS_GET_ATTRIBUTE_BUG = !wysihtml5.browser.supportsGetAttributeCorrectly();

	function _getAttribute(node, attributeName) {
		attributeName = attributeName.toLowerCase();
		var nodeName = node.nodeName;
		if(nodeName == "IMG" && attributeName == "src" && _isLoadedImage(node) === true) {
			// Get 'src' attribute value via object property since this will always contain the
			// full absolute url (http://...)
			// this fixes a very annoying bug in firefox (ver 3.6 & 4) and IE 8 where images copied from the same host
			// will have relative paths, which the sanitizer strips out (see attributeCheckMethods.url)
			return node.src;
		} else if(HAS_GET_ATTRIBUTE_BUG && "outerHTML" in node) {
			// Don't trust getAttribute/hasAttribute in IE 6-8, instead check the element's outerHTML
			var outerHTML = node.outerHTML.toLowerCase(),
				// TODO: This might not work for attributes without value: <input disabled>
				hasAttribute = outerHTML.indexOf(" " + attributeName + "=") != -1;

			return hasAttribute ? node.getAttribute(attributeName) : null;
		} else {
			return node.getAttribute(attributeName);
		}
	}

	/**
	 * Check whether the given node is a proper loaded image
	 * FIXME: Returns undefined when unknown (Chrome, Safari)
	 */
	function _isLoadedImage(node) {
		try {
			return node.complete && !node.mozMatchesSelector(":-moz-broken");
		} catch(e) {
			if(node.complete && node.readyState === "complete") {
				return true;
			}
		}
	}

	function _handleText(oldNode) {
		return oldNode.ownerDocument.createTextNode(oldNode.data);
	}

	// ------------ attribute checks ------------ \\
	var attributeCheckMethods = {
		url: (function() {
			var REG_EXP = /^https?:\/\//i;
			return function(attributeValue) {
				if(!attributeValue || !attributeValue.match(REG_EXP)) {
					return null;
				}
				return attributeValue.replace(REG_EXP, function(match) {
					return match.toLowerCase();
				});
			};
		})(),

		alt: (function() {
			var REG_EXP = /[^ a-z0-9_\-]/gi;
			return function(attributeValue) {
				if(!attributeValue) {
					return "";
				}
				return attributeValue.replace(REG_EXP, "");
			};
		})(),

		numbers: (function() {
			var REG_EXP = /\D/g;
			return function(attributeValue) {
				attributeValue = (attributeValue || "").replace(REG_EXP, "");
				return attributeValue || null;
			};
		})()
	};

	// ------------ class converter (converts an html attribute to a class name) ------------ \\
	var addClassMethods = {
		align_img: (function() {
			var mapping = {
				left: "wysiwyg-float-left",
				right: "wysiwyg-float-right"
			};
			return function(attributeValue) {
				return mapping[String(attributeValue).toLowerCase()];
			};
		})(),

		align_text: (function() {
			var mapping = {
				left: "wysiwyg-text-align-left",
				right: "wysiwyg-text-align-right",
				center: "wysiwyg-text-align-center",
				justify: "wysiwyg-text-align-justify"
			};
			return function(attributeValue) {
				return mapping[String(attributeValue).toLowerCase()];
			};
		})(),

		clear_br: (function() {
			var mapping = {
				left: "wysiwyg-clear-left",
				right: "wysiwyg-clear-right",
				both: "wysiwyg-clear-both",
				all: "wysiwyg-clear-both"
			};
			return function(attributeValue) {
				return mapping[String(attributeValue).toLowerCase()];
			};
		})(),

		size_font: (function() {
			var mapping = {
				"1": "wysiwyg-font-size-xx-small",
				"2": "wysiwyg-font-size-small",
				"3": "wysiwyg-font-size-medium",
				"4": "wysiwyg-font-size-large",
				"5": "wysiwyg-font-size-x-large",
				"6": "wysiwyg-font-size-xx-large",
				"7": "wysiwyg-font-size-xx-large",
				"-": "wysiwyg-font-size-smaller",
				"+": "wysiwyg-font-size-larger"
			};
			return function(attributeValue) {
				return mapping[String(attributeValue).charAt(0)];
			};
		})()
	};

	return parse;
})();
/**
 * Checks for empty text node childs and removes them
 *
 * @param {Element} node The element in which to cleanup
 * @example
 *    wysihtml5.dom.removeEmptyTextNodes(element);
 */
wysihtml5.dom.removeEmptyTextNodes = function(node) {
	var childNode,
		childNodes = wysihtml5.lang.array(node.childNodes).get(),
		childNodesLength = childNodes.length,
		i = 0;
	for(; i < childNodesLength; i++) {
		childNode = childNodes[i];
		if(childNode.nodeType === wysihtml5.TEXT_NODE && childNode.data === "") {
			childNode.parentNode.removeChild(childNode);
		}
	}
};
/**
 * Renames an element (eg. a <div> to a <p>) and keeps its childs
 *
 * @param {Element} element The list element which should be renamed
 * @param {Element} newNodeName The desired tag name
 *
 * @example
 *    <!-- Assume the following dom: -->
 *    <ul id="list">
 *      <li>eminem</li>
 *      <li>dr. dre</li>
 *      <li>50 Cent</li>
 *    </ul>
 *
 *    <script>
 *      wysihtml5.dom.renameElement(document.getElementById("list"), "ol");
 *    </script>
 *
 *    <!-- Will result in: -->
 *    <ol>
 *      <li>eminem</li>
 *      <li>dr. dre</li>
 *      <li>50 Cent</li>
 *    </ol>
 */
wysihtml5.dom.renameElement = function(element, newNodeName) {
	var newElement = element.ownerDocument.createElement(newNodeName),
		firstChild;
	while(firstChild = element.firstChild) {
		newElement.appendChild(firstChild);
	}
	wysihtml5.dom.copyAttributes(["align", "className"]).from(element).to(newElement);
	element.parentNode.replaceChild(newElement, element);
	return newElement;
};
/**
 * Takes an element, removes it and replaces it with it's childs
 * 
 * @param {Object} node The node which to replace with it's child nodes
 * @example
 *    <div id="foo">
 *      <span>hello</span>
 *    </div>
 *    <script>
 *      // Remove #foo and replace with it's children
 *      wysihtml5.dom.replaceWithChildNodes(document.getElementById("foo"));
 *    </script>
 */
wysihtml5.dom.replaceWithChildNodes = function(node) {
	if(!node.parentNode) {
		return;
	}

	if(!node.firstChild) {
		node.parentNode.removeChild(node);
		return;
	}

	var fragment = node.ownerDocument.createDocumentFragment();
	while(node.firstChild) {
		fragment.appendChild(node.firstChild);
	}
	node.parentNode.replaceChild(fragment, node);
	node = fragment = null;
};
/**
 * Unwraps an unordered/ordered list
 *
 * @param {Element} element The list element which should be unwrapped
 *
 * @example
 *    <!-- Assume the following dom: -->
 *    <ul id="list">
 *      <li>eminem</li>
 *      <li>dr. dre</li>
 *      <li>50 Cent</li>
 *    </ul>
 *
 *    <script>
 *      wysihtml5.dom.resolveList(document.getElementById("list"));
 *    </script>
 *
 *    <!-- Will result in: -->
 *    eminem<br>
 *    dr. dre<br>
 *    50 Cent<br>
 */
(function(dom) {
	function _isBlockElement(node) {
		return dom.getStyle("display").from(node) === "block";
	}

	function _isLineBreak(node) {
		return node.nodeName === "BR";
	}

	function _appendLineBreak(element) {
		var lineBreak = element.ownerDocument.createElement("br");
		element.appendChild(lineBreak);
	}

	function resolveList(list) {
		if(list.nodeName !== "MENU" && list.nodeName !== "UL" && list.nodeName !== "OL") {
			return;
		}

		var doc = list.ownerDocument,
			fragment = doc.createDocumentFragment(),
			previousSibling = list.previousElementSibling || list.previousSibling,
			firstChild,
			lastChild,
			isLastChild,
			shouldAppendLineBreak,
			listItem;

		if(previousSibling && !_isBlockElement(previousSibling)) {
			_appendLineBreak(fragment);
		}

		while(listItem = list.firstChild) {
			lastChild = listItem.lastChild;
			while(firstChild = listItem.firstChild) {
				isLastChild = firstChild === lastChild;
				// This needs to be done before appending it to the fragment, as it otherwise will loose style information
				shouldAppendLineBreak = isLastChild && !_isBlockElement(firstChild) && !_isLineBreak(firstChild);
				fragment.appendChild(firstChild);
				if(shouldAppendLineBreak) {
					_appendLineBreak(fragment);
				}
			}

			listItem.parentNode.removeChild(listItem);
		}
		list.parentNode.replaceChild(fragment, list);
	}

	dom.resolveList = resolveList;
})(wysihtml5.dom);
/**
 * Sandbox for executing javascript, parsing css styles and doing dom operations in a secure way
 *
 * Browser Compatibility:
 *  - Secure in MSIE 6+, but only when the user hasn't made changes to his security level "restricted"
 *  - Partially secure in other browsers (Firefox, Opera, Safari, Chrome, ...)
 *
 * Please note that this class can't benefit from the HTML5 sandbox attribute for the following reasons:
 *    - sandboxing doesn't work correctly with inlined content (src="javascript:'<html>...</html>'")
 *    - sandboxing of physical documents causes that the dom isn't accessible anymore from the outside (iframe.contentWindow, ...)
 *    - setting the "allow-same-origin" flag would fix that, but then still javascript and dom events refuse to fire
 *    - therefore the "allow-scripts" flag is needed, which then would deactivate any security, as the js executed inside the iframe
 *      can do anything as if the sandbox attribute wasn't set
 *
 * @param {Function} [readyCallback] Method that gets invoked when the sandbox is ready
 * @param {Object} [config] Optional parameters
 *
 * @example
 *    new wysihtml5.dom.Sandbox(function(sandbox) {
 *      sandbox.getWindow().document.body.innerHTML = '<img src=foo.gif onerror="alert(document.cookie)">';
 *    });
 */
(function(wysihtml5) {
	var
	/**
	 * Default configuration
	 */
		doc = document,
		/**
		 * Properties to unset/protect on the window object
		 */
		windowProperties = [
			"parent", "top", "opener", "frameElement", "frames",
			"localStorage", "globalStorage", "sessionStorage", "indexedDB"
		],
		/**
		 * Properties on the window object which are set to an empty function
		 */
		windowProperties2 = [
			"open", "close", "openDialog", "showModalDialog",
			"alert", "confirm", "prompt",
			"openDatabase", "postMessage",
			"XMLHttpRequest", "XDomainRequest"
		],
		/**
		 * Properties to unset/protect on the document object
		 */
		documentProperties = [
			"referrer",
			"write", "open", "close"
		];

	wysihtml5.dom.Sandbox = Base.extend(
		/** @scope wysihtml5.dom.Sandbox.prototype */
		{

			constructor: function(readyCallback, config) {
				this.callback = readyCallback || wysihtml5.EMPTY_FUNCTION;
				this.config = wysihtml5.lang.object({}).merge(config).get();
				this.iframe = this._createIframe();
			},

			insertInto: function(element) {
				if(typeof(element) === "string") {
					element = doc.getElementById(element);
				}

				element.appendChild(this.iframe);
			},

			getIframe: function() {
				return this.iframe;
			},

			getWindow: function() {
				this._readyError();
			},

			getDocument: function() {
				this._readyError();
			},

			destroy: function() {
				var iframe = this.getIframe();
				iframe.parentNode.removeChild(iframe);
			},

			_readyError: function() {
				throw new Error("wysihtml5.Sandbox: Sandbox iframe isn't loaded yet");
			},

			/**
			 * Creates the sandbox iframe
			 *
			 * Some important notes:
			 *  - We can't use HTML5 sandbox for now:
			 *    setting it causes that the iframe's dom can't be accessed from the outside
			 *    Therefore we need to set the "allow-same-origin" flag which enables accessing the iframe's dom
			 *    But then there's another problem, DOM events (focus, blur, change, keypress, ...) aren't fired.
			 *    In order to make this happen we need to set the "allow-scripts" flag.
			 *    A combination of allow-scripts and allow-same-origin is almost the same as setting no sandbox attribute at all.
			 *  - Chrome & Safari, doesn't seem to support sandboxing correctly when the iframe's html is inlined (no physical document)
			 *  - IE needs to have the security="restricted" attribute set before the iframe is 
			 *    inserted into the dom tree
			 *  - Believe it or not but in IE "security" in document.createElement("iframe") is false, even
			 *    though it supports it
			 *  - When an iframe has security="restricted", in IE eval() & execScript() don't work anymore
			 *  - IE doesn't fire the onload event when the content is inlined in the src attribute, therefore we rely
			 *    on the onreadystatechange event
			 */
			_createIframe: function() {
				var that = this,
					iframe = doc.createElement("iframe");
				iframe.className = "wysihtml5-sandbox";
				wysihtml5.dom.setAttributes({
					"security": "restricted",
					"allowtransparency": "true",
					"frameborder": 0,
					"width": 0,
					"height": 0,
					"marginwidth": 0,
					"marginheight": 0
				}).on(iframe);

				// Setting the src like this prevents ssl warnings in IE6
				if(wysihtml5.browser.throwsMixedContentWarningWhenIframeSrcIsEmpty()) {
					iframe.src = "javascript:'<html></html>'";
				}

				iframe.onload = function() {
					iframe.onreadystatechange = iframe.onload = null;
					that._onLoadIframe(iframe);
				};

				iframe.onreadystatechange = function() {
					if(/loaded|complete/.test(iframe.readyState)) {
						iframe.onreadystatechange = iframe.onload = null;
						that._onLoadIframe(iframe);
					}
				};

				return iframe;
			},

			/**
			 * Callback for when the iframe has finished loading
			 */
			_onLoadIframe: function(iframe) {
				// don't resume when the iframe got unloaded (eg. by removing it from the dom)
				if(!wysihtml5.dom.contains(doc.documentElement, iframe)) {
					return;
				}

				var that = this,
					iframeWindow = iframe.contentWindow,
					iframeDocument = iframe.contentWindow.document,
					charset = doc.characterSet || doc.charset || "utf-8",
					sandboxHtml = this._getHtml({
						charset: charset,
						stylesheets: this.config.stylesheets
					});

				// Create the basic dom tree including proper DOCTYPE and charset
				iframeDocument.open("text/html", "replace");
				iframeDocument.write(sandboxHtml);
				iframeDocument.close();

				this.getWindow = function() {
					return iframe.contentWindow;
				};
				this.getDocument = function() {
					return iframe.contentWindow.document;
				};

				// Catch js errors and pass them to the parent's onerror event
				// addEventListener("error") doesn't work properly in some browsers
				// TODO: apparently this doesn't work in IE9!
				iframeWindow.onerror = function(errorMessage, fileName, lineNumber) {
					throw new Error("wysihtml5.Sandbox: " + errorMessage, fileName, lineNumber);
				};

				if(!wysihtml5.browser.supportsSandboxedIframes()) {
					// Unset a bunch of sensitive variables
					// Please note: This isn't hack safe!  
					// It more or less just takes care of basic attacks and prevents accidental theft of sensitive information
					// IE is secure though, which is the most important thing, since IE is the only browser, who
					// takes over scripts & styles into contentEditable elements when copied from external websites
					// or applications (Microsoft Word, ...)
					var i, length;
					for(i = 0, length = windowProperties.length; i < length; i++) {
						this._unset(iframeWindow, windowProperties[i]);
					}
					for(i = 0, length = windowProperties2.length; i < length; i++) {
						this._unset(iframeWindow, windowProperties2[i], wysihtml5.EMPTY_FUNCTION);
					}
					for(i = 0, length = documentProperties.length; i < length; i++) {
						this._unset(iframeDocument, documentProperties[i]);
					}
					// This doesn't work in Safari 5 
					// See http://stackoverflow.com/questions/992461/is-it-possible-to-override-document-cookie-in-webkit
					this._unset(iframeDocument, "cookie", "", true);
				}

				this.loaded = true;

				// Trigger the callback
				setTimeout(function() {
					that.callback(that);
				}, 0);
			},

			_getHtml: function(templateVars) {
				var stylesheets = templateVars.stylesheets,
					html = "",
					i = 0,
					length;
				stylesheets = typeof(stylesheets) === "string" ? [stylesheets] : stylesheets;
				if(stylesheets) {
					length = stylesheets.length;
					for(; i < length; i++) {
						html += '<link rel="stylesheet" href="' + stylesheets[i] + '">';
					}
				}
				templateVars.stylesheets = html;

				return wysihtml5.lang.string(
					'<!DOCTYPE html><html><head>' +
					'<meta charset="#{charset}">#{stylesheets}</head>' +
					'<body></body></html>'
				).interpolate(templateVars);
			},

			/**
			 * Method to unset/override existing variables
			 * @example
			 *    // Make cookie unreadable and unwritable
			 *    this._unset(document, "cookie", "", true);
			 */
			_unset: function(object, property, value, setter) {
				try {
					object[property] = value;
				} catch(e) {}

				try {
					object.__defineGetter__(property, function() {
						return value;
					});
				} catch(e) {}
				if(setter) {
					try {
						object.__defineSetter__(property, function() {});
					} catch(e) {}
				}

				if(!wysihtml5.browser.crashesWhenDefineProperty(property)) {
					try {
						var config = {
							get: function() {
								return value;
							}
						};
						if(setter) {
							config.set = function() {};
						}
						Object.defineProperty(object, property, config);
					} catch(e) {}
				}
			}
		});
})(wysihtml5);
(function() {
	var mapping = {
		"className": "class"
	};
	wysihtml5.dom.setAttributes = function(attributes) {
		return {
			on: function(element) {
				for(var i in attributes) {
					element.setAttribute(mapping[i] || i, attributes[i]);
				}
			}
		}
	};
})();
wysihtml5.dom.setStyles = function(styles) {
	return {
		on: function(element) {
			var style = element.style;
			if(typeof(styles) === "string") {
				style.cssText += ";" + styles;
				return;
			}
			for(var i in styles) {
				if(i === "float") {
					style.cssFloat = styles[i];
					style.styleFloat = styles[i];
				} else {
					style[i] = styles[i];
				}
			}
		}
	};
};
/**
 * Simulate HTML5 placeholder attribute
 *
 * Needed since
 *    - div[contentEditable] elements don't support it
 *    - older browsers (such as IE8 and Firefox 3.6) don't support it at all
 *
 * @param {Object} parent Instance of main wysihtml5.Editor class
 * @param {Element} view Instance of wysihtml5.views.* class
 * @param {String} placeholderText
 *
 * @example
 *    wysihtml.dom.simulatePlaceholder(this, composer, "Foobar");
 */
(function(dom) {
	dom.simulatePlaceholder = function(editor, view, placeholderText) {
		var CLASS_NAME = "placeholder",
			unset = function() {
				if(view.hasPlaceholderSet()) {
					view.clear();
				}
				dom.removeClass(view.element, CLASS_NAME);
			},
			set = function() {
				if(view.isEmpty()) {
					view.setValue(placeholderText);
					dom.addClass(view.element, CLASS_NAME);
				}
			};

		editor
			.observe("set_placeholder", set)
			.observe("unset_placeholder", unset)
			.observe("focus:composer", unset)
			.observe("paste:composer", unset)
			.observe("blur:composer", set);

		set();
	};
})(wysihtml5.dom);
(function(dom) {
	var documentElement = document.documentElement;
	if("textContent" in documentElement) {
		dom.setTextContent = function(element, text) {
			element.textContent = text;
		};

		dom.getTextContent = function(element) {
			return element.textContent;
		};
	} else if("innerText" in documentElement) {
		dom.setTextContent = function(element, text) {
			element.innerText = text;
		};

		dom.getTextContent = function(element) {
			return element.innerText;
		};
	} else {
		dom.setTextContent = function(element, text) {
			element.nodeValue = text;
		};

		dom.getTextContent = function(element) {
			return element.nodeValue;
		};
	}
})(wysihtml5.dom);

/**
 * Fix most common html formatting misbehaviors of browsers implementation when inserting
 * content via copy & paste contentEditable
 *
 * @author Christopher Blum
 */
wysihtml5.quirks.cleanPastedHTML = (function() {
	// TODO: We probably need more rules here
	var defaultRules = {
		// When pasting underlined links <a> into a contentEditable, IE thinks, it has to insert <u> to keep the styling
		"a u": wysihtml5.dom.replaceWithChildNodes
	};

	function cleanPastedHTML(elementOrHtml, rules, context) {
		rules = rules || defaultRules;
		context = context || elementOrHtml.ownerDocument || document;

		var element,
			isString = typeof(elementOrHtml) === "string",
			method,
			matches,
			matchesLength,
			i,
			j = 0;
		if(isString) {
			element = wysihtml5.dom.getAsDom(elementOrHtml, context);
		} else {
			element = elementOrHtml;
		}

		for(i in rules) {
			matches = element.querySelectorAll(i);
			method = rules[i];
			matchesLength = matches.length;
			for(; j < matchesLength; j++) {
				method(matches[j]);
			}
		}

		matches = elementOrHtml = rules = null;

		return isString ? element.innerHTML : element;
	}

	return cleanPastedHTML;
})();
/**
 * IE and Opera leave an empty paragraph in the contentEditable element after clearing it
 *
 * @param {Object} contentEditableElement The contentEditable element to observe for clearing events
 * @exaple
 *    wysihtml5.quirks.ensureProperClearing(myContentEditableElement);
 */
(function(wysihtml5) {
	var dom = wysihtml5.dom;

	wysihtml5.quirks.ensureProperClearing = (function() {
		var clearIfNecessary = function(event) {
			var element = this;
			setTimeout(function() {
				var innerHTML = element.innerHTML.toLowerCase();
				if(innerHTML == "<p>&nbsp;</p>" ||
					innerHTML == "<p>&nbsp;</p><p>&nbsp;</p>") {
					element.innerHTML = "";
				}
			}, 0);
		};

		return function(composer) {
			dom.observe(composer.element, ["cut", "keydown"], clearIfNecessary);
		};
	})();

	/**
	 * In Opera when the caret is in the first and only item of a list (<ul><li>|</li></ul>) and the list is the first child of the contentEditable element, it's impossible to delete the list by hitting backspace
	 *
	 * @param {Object} contentEditableElement The contentEditable element to observe for clearing events
	 * @exaple
	 *    wysihtml5.quirks.ensureProperClearing(myContentEditableElement);
	 */
	wysihtml5.quirks.ensureProperClearingOfLists = (function() {
		var ELEMENTS_THAT_CONTAIN_LI = ["OL", "UL", "MENU"];

		var clearIfNecessary = function(element, contentEditableElement) {
			if(!contentEditableElement.firstChild || !wysihtml5.lang.array(ELEMENTS_THAT_CONTAIN_LI).contains(contentEditableElement.firstChild.nodeName)) {
				return;
			}

			var list = dom.getParentElement(element, {
				nodeName: ELEMENTS_THAT_CONTAIN_LI
			});
			if(!list) {
				return;
			}

			var listIsFirstChildOfContentEditable = list == contentEditableElement.firstChild;
			if(!listIsFirstChildOfContentEditable) {
				return;
			}

			var hasOnlyOneListItem = list.childNodes.length <= 1;
			if(!hasOnlyOneListItem) {
				return;
			}

			var onlyListItemIsEmpty = list.firstChild ? list.firstChild.innerHTML === "" : true;
			if(!onlyListItemIsEmpty) {
				return;
			}

			list.parentNode.removeChild(list);
		};

		return function(composer) {
			dom.observe(composer.element, "keydown", function(event) {
				if(event.keyCode !== wysihtml5.BACKSPACE_KEY) {
					return;
				}

				var element = composer.selection.getSelectedNode();
				clearIfNecessary(element, composer.element);
			});
		};
	})();

})(wysihtml5);
// See https://bugzilla.mozilla.org/show_bug.cgi?id=664398
//
// In Firefox this:
//      var d = document.createElement("div");
//      d.innerHTML ='<a href="~"></a>';
//      d.innerHTML;
// will result in:
//      <a href="%7E"></a>
// which is wrong
(function(wysihtml5) {
	var TILDE_ESCAPED = "%7E";
	wysihtml5.quirks.getCorrectInnerHTML = function(element) {
		var innerHTML = element.innerHTML;
		if(innerHTML.indexOf(TILDE_ESCAPED) === -1) {
			return innerHTML;
		}

		var elementsWithTilde = element.querySelectorAll("[href*='~'], [src*='~']"),
			url,
			urlToSearch,
			length,
			i;
		for(i = 0, length = elementsWithTilde.length; i < length; i++) {
			url = elementsWithTilde[i].href || elementsWithTilde[i].src;
			urlToSearch = wysihtml5.lang.string(url).replace("~").by(TILDE_ESCAPED);
			innerHTML = wysihtml5.lang.string(innerHTML).replace(urlToSearch).by(url);
		}
		return innerHTML;
	};
})(wysihtml5);
/**
 * Some browsers don't insert line breaks when hitting return in a contentEditable element
 *    - Opera & IE insert new <p> on return
 *    - Chrome & Safari insert new <div> on return
 *    - Firefox inserts <br> on return (yippie!)
 *
 * @param {Element} element
 *
 * @example
 *    wysihtml5.quirks.insertLineBreakOnReturn(element);
 */
(function(wysihtml5) {
	var dom = wysihtml5.dom,
		USE_NATIVE_LINE_BREAK_WHEN_CARET_INSIDE_TAGS = ["LI", "P", "H1", "H2", "H3", "H4", "H5", "H6"],
		LIST_TAGS = ["UL", "OL", "MENU"];

	wysihtml5.quirks.insertLineBreakOnReturn = function(composer) {
		function unwrap(selectedNode) {
			var parentElement = dom.getParentElement(selectedNode, {
				nodeName: ["P", "DIV"]
			}, 2);
			if(!parentElement) {
				return;
			}

			var invisibleSpace = document.createTextNode(wysihtml5.INVISIBLE_SPACE);
			dom.insert(invisibleSpace).before(parentElement);
			dom.replaceWithChildNodes(parentElement);
			composer.selection.selectNode(invisibleSpace);
		}

		function keyDown(event) {
			var keyCode = event.keyCode;
			if(event.shiftKey || (keyCode !== wysihtml5.ENTER_KEY && keyCode !== wysihtml5.BACKSPACE_KEY)) {
				return;
			}

			var element = event.target,
				selectedNode = composer.selection.getSelectedNode(),
				blockElement = dom.getParentElement(selectedNode, {
					nodeName: USE_NATIVE_LINE_BREAK_WHEN_CARET_INSIDE_TAGS
				}, 4);
			if(blockElement) {
				// Some browsers create <p> elements after leaving a list
				// check after keydown of backspace and return whether a <p> got inserted and unwrap it
				if(blockElement.nodeName === "LI" && (keyCode === wysihtml5.ENTER_KEY || keyCode === wysihtml5.BACKSPACE_KEY)) {
					setTimeout(function() {
						var selectedNode = composer.selection.getSelectedNode(),
							list,
							div;
						if(!selectedNode) {
							return;
						}

						list = dom.getParentElement(selectedNode, {
							nodeName: LIST_TAGS
						}, 2);

						if(list) {
							return;
						}

						unwrap(selectedNode);
					}, 0);
				} else if(blockElement.nodeName.match(/H[1-6]/) && keyCode === wysihtml5.ENTER_KEY) {
					setTimeout(function() {
						unwrap(composer.selection.getSelectedNode());
					}, 0);
				}
				return;
			}

			if(keyCode === wysihtml5.ENTER_KEY && !wysihtml5.browser.insertsLineBreaksOnReturn()) {
				composer.commands.exec("insertLineBreak");
				event.preventDefault();
			}
		}

		// keypress doesn't fire when you hit backspace
		dom.observe(composer.element.ownerDocument, "keydown", keyDown);
	};
})(wysihtml5);
/**
 * Force rerendering of a given element
 * Needed to fix display misbehaviors of IE
 *
 * @param {Element} element The element object which needs to be rerendered
 * @example
 *    wysihtml5.quirks.redraw(document.body);
 */
(function(wysihtml5) {
	var CLASS_NAME = "wysihtml5-quirks-redraw";

	wysihtml5.quirks.redraw = function(element) {
		wysihtml5.dom.addClass(element, CLASS_NAME);
		wysihtml5.dom.removeClass(element, CLASS_NAME);

		// Following hack is needed for firefox to make sure that image resize handles are properly removed
		try {
			var doc = element.ownerDocument;
			doc.execCommand("italic", false, null);
			doc.execCommand("italic", false, null);
		} catch(e) {}
	};
})(wysihtml5);
/**
 * Selection API
 *
 * @example
 *    var selection = new wysihtml5.Selection(editor);
 */
(function(wysihtml5) {
	var dom = wysihtml5.dom;

	function _getCumulativeOffsetTop(element) {
		var top = 0;
		if(element.parentNode) {
			do {
				top += element.offsetTop || 0;
				element = element.offsetParent;
			} while (element);
		}
		return top;
	}

	wysihtml5.Selection = Base.extend(
		/** @scope wysihtml5.Selection.prototype */
		{
			constructor: function(editor) {
				// Make sure that our external range library is initialized
				window.rangy.init();

				this.editor = editor;
				this.composer = editor.composer;
				this.doc = this.composer.doc;
			},

			/**
			 * Get the current selection as a bookmark to be able to later restore it
			 *
			 * @return {Object} An object that represents the current selection
			 */
			getBookmark: function() {
				var range = this.getRange();
				return range && range.cloneRange();
			},

			/**
			 * Restore a selection retrieved via wysihtml5.Selection.prototype.getBookmark
			 *
			 * @param {Object} bookmark An object that represents the current selection
			 */
			setBookmark: function(bookmark) {
				if(!bookmark) {
					return;
				}

				this.setSelection(bookmark);
			},

			/**
			 * Set the caret in front of the given node
			 *
			 * @param {Object} node The element or text node where to position the caret in front of
			 * @example
			 *    selection.setBefore(myElement);
			 */
			setBefore: function(node) {
				var range = rangy.createRange(this.doc);
				range.setStartBefore(node);
				range.setEndBefore(node);
				return this.setSelection(range);
			},

			/**
			 * Set the caret after the given node
			 *
			 * @param {Object} node The element or text node where to position the caret in front of
			 * @example
			 *    selection.setBefore(myElement);
			 */
			setAfter: function(node) {
				var range = rangy.createRange(this.doc);
				range.setStartAfter(node);
				range.setEndAfter(node);
				return this.setSelection(range);
			},

			/**
			 * Ability to select/mark nodes
			 *
			 * @param {Element} node The node/element to select
			 * @example
			 *    selection.selectNode(document.getElementById("my-image"));
			 */
			selectNode: function(node) {
				var range = rangy.createRange(this.doc),
					isElement = node.nodeType === wysihtml5.ELEMENT_NODE,
					canHaveHTML = "canHaveHTML" in node ? node.canHaveHTML : (node.nodeName !== "IMG"),
					content = isElement ? node.innerHTML : node.data,
					isEmpty = (content === "" || content === wysihtml5.INVISIBLE_SPACE),
					displayStyle = dom.getStyle("display").from(node),
					isBlockElement = (displayStyle === "block" || displayStyle === "list-item");

				if(isEmpty && isElement && canHaveHTML) {
					// Make sure that caret is visible in node by inserting a zero width no breaking space
					try {
						node.innerHTML = wysihtml5.INVISIBLE_SPACE;
					} catch(e) {}
				}

				if(canHaveHTML) {
					range.selectNodeContents(node);
				} else {
					range.selectNode(node);
				}

				if(canHaveHTML && isEmpty && isElement) {
					range.collapse(isBlockElement);
				} else if(canHaveHTML && isEmpty) {
					range.setStartAfter(node);
					range.setEndAfter(node);
				}

				this.setSelection(range);
			},

			/**
			 * Get the node which contains the selection
			 *
			 * @param {Boolean} [controlRange] (only IE) Whether it should return the selected ControlRange element when the selection type is a "ControlRange"
			 * @return {Object} The node that contains the caret
			 * @example
			 *    var nodeThatContainsCaret = selection.getSelectedNode();
			 */
			getSelectedNode: function(controlRange) {
				var selection,
					range;

				if(controlRange && this.doc.selection && this.doc.selection.type === "Control") {
					range = this.doc.selection.createRange();
					if(range && range.length) {
						return range.item(0);
					}
				}

				selection = this.getSelection(this.doc);
				if(selection.focusNode === selection.anchorNode) {
					return selection.focusNode;
				} else {
					range = this.getRange(this.doc);
					return range ? range.commonAncestorContainer : this.doc.body;
				}
			},

			executeAndRestore: function(method, restoreScrollPosition) {
				var body = this.doc.body,
					oldScrollTop = restoreScrollPosition && body.scrollTop,
					oldScrollLeft = restoreScrollPosition && body.scrollLeft,
					className = "_wysihtml5-temp-placeholder",
					placeholderHTML = '<span class="' + className + '">' + wysihtml5.INVISIBLE_SPACE + '</span>',
					range = this.getRange(this.doc),
					newRange;

				// Nothing selected, execute and say goodbye
				if(!range) {
					method(body, body);
					return;
				}

				var node = range.createContextualFragment(placeholderHTML);
				range.insertNode(node);

				// Make sure that a potential error doesn't cause our placeholder element to be left as a placeholder
				try {
					method(range.startContainer, range.endContainer);
				} catch(e3) {
					setTimeout(function() {
						throw e3;
					}, 0);
				}

				caretPlaceholder = this.doc.querySelector("." + className);
				if(caretPlaceholder) {
					newRange = rangy.createRange(this.doc);
					newRange.selectNode(caretPlaceholder);
					newRange.deleteContents();
					this.setSelection(newRange);
				} else {
					// fallback for when all hell breaks loose
					body.focus();
				}

				if(restoreScrollPosition) {
					body.scrollTop = oldScrollTop;
					body.scrollLeft = oldScrollLeft;
				}

				// Remove it again, just to make sure that the placeholder is definitely out of the dom tree
				try {
					caretPlaceholder.parentNode.removeChild(caretPlaceholder);
				} catch(e4) {}
			},

			/**
			 * Different approach of preserving the selection (doesn't modify the dom)
			 * Takes all text nodes in the selection and saves the selection position in the first and last one
			 */
			executeAndRestoreSimple: function(method) {
				var range = this.getRange(),
					body = this.doc.body,
					newRange,
					firstNode,
					lastNode,
					textNodes,
					rangeBackup;

				// Nothing selected, execute and say goodbye
				if(!range) {
					method(body, body);
					return;
				}

				textNodes = range.getNodes([3]);
				firstNode = textNodes[0] || range.startContainer;
				lastNode = textNodes[textNodes.length - 1] || range.endContainer;

				rangeBackup = {
					collapsed: range.collapsed,
					startContainer: firstNode,
					startOffset: firstNode === range.startContainer ? range.startOffset : 0,
					endContainer: lastNode,
					endOffset: lastNode === range.endContainer ? range.endOffset : lastNode.length
				};

				try {
					method(range.startContainer, range.endContainer);
				} catch(e) {
					setTimeout(function() {
						throw e;
					}, 0);
				}

				newRange = rangy.createRange(this.doc);
				try {
					newRange.setStart(rangeBackup.startContainer, rangeBackup.startOffset);
				} catch(e1) {}
				try {
					newRange.setEnd(rangeBackup.endContainer, rangeBackup.endOffset);
				} catch(e2) {}
				try {
					this.setSelection(newRange);
				} catch(e3) {}
			},

			/**
			 * Insert html at the caret position and move the cursor after the inserted html
			 *
			 * @param {String} html HTML string to insert
			 * @example
			 *    selection.insertHTML("<p>foobar</p>");
			 */
			insertHTML: function(html) {
				var range = rangy.createRange(this.doc),
					node = range.createContextualFragment(html),
					lastChild = node.lastChild;
				this.insertNode(node);
				if(lastChild) {
					this.setAfter(lastChild);
				}
			},

			/**
			 * Insert a node at the caret position and move the cursor behind it
			 *
			 * @param {Object} node HTML string to insert
			 * @example
			 *    selection.insertNode(document.createTextNode("foobar"));
			 */
			insertNode: function(node) {
				var range = this.getRange();
				if(range) {
					range.insertNode(node);
				}
			},

			/**
			 * Wraps current selection with the given node
			 *
			 * @param {Object} node The node to surround the selected elements with
			 */
			surround: function(node) {
				var range = this.getRange();
				if(!range) {
					return;
				}

				try {
					// This only works when the range boundaries are not overlapping other elements
					range.surroundContents(node);
					this.selectNode(node);
				} catch(e) {
					// fallback
					node.appendChild(range.extractContents());
					range.insertNode(node);
				}
			},

			/**
			 * Scroll the current caret position into the view
			 * FIXME: This is a bit hacky, there might be a smarter way of doing this
			 *
			 * @example
			 *    selection.scrollIntoView();
			 */
			scrollIntoView: function() {
				var doc = this.doc,
					hasScrollBars = doc.documentElement.scrollHeight > doc.documentElement.offsetHeight,
					tempElement = doc._wysihtml5ScrollIntoViewElement = doc._wysihtml5ScrollIntoViewElement || (function() {
						var element = doc.createElement("span");
						// The element needs content in order to be able to calculate it's position properly
						element.innerHTML = wysihtml5.INVISIBLE_SPACE;
						return element;
					})(),
					offsetTop;

				if(hasScrollBars) {
					this.insertNode(tempElement);
					offsetTop = _getCumulativeOffsetTop(tempElement);
					tempElement.parentNode.removeChild(tempElement);
					if(offsetTop > doc.body.scrollTop) {
						doc.body.scrollTop = offsetTop;
					}
				}
			},

			/**
			 * Select line where the caret is in
			 */
			selectLine: function() {
				if(wysihtml5.browser.supportsSelectionModify()) {
					this._selectLine_W3C();
				} else if(this.doc.selection) {
					this._selectLine_MSIE();
				}
			},

			/**
			 * See https://developer.mozilla.org/en/DOM/Selection/modify
			 */
			_selectLine_W3C: function() {
				var win = this.doc.defaultView,
					selection = win.getSelection();
				selection.modify("extend", "left", "lineboundary");
				selection.modify("extend", "right", "lineboundary");
			},

			_selectLine_MSIE: function() {
				var range = this.doc.selection.createRange(),
					rangeTop = range.boundingTop,
					rangeHeight = range.boundingHeight,
					scrollWidth = this.doc.body.scrollWidth,
					rangeBottom,
					rangeEnd,
					measureNode,
					i,
					j;

				if(!range.moveToPoint) {
					return;
				}

				if(rangeTop === 0) {
					// Don't know why, but when the selection ends at the end of a line
					// range.boundingTop is 0
					measureNode = this.doc.createElement("span");
					this.insertNode(measureNode);
					rangeTop = measureNode.offsetTop;
					measureNode.parentNode.removeChild(measureNode);
				}

				rangeTop += 1;

				for(i = -10; i < scrollWidth; i += 2) {
					try {
						range.moveToPoint(i, rangeTop);
						break;
					} catch(e1) {}
				}

				// Investigate the following in order to handle multi line selections
				// rangeBottom = rangeTop + (rangeHeight ? (rangeHeight - 1) : 0);
				rangeBottom = rangeTop;
				rangeEnd = this.doc.selection.createRange();
				for(j = scrollWidth; j >= 0; j--) {
					try {
						rangeEnd.moveToPoint(j, rangeBottom);
						break;
					} catch(e2) {}
				}

				range.setEndPoint("EndToEnd", rangeEnd);
				range.select();
			},

			getText: function() {
				var selection = this.getSelection();
				return selection ? selection.toString() : "";
			},

			getNodes: function(nodeType, filter) {
				var range = this.getRange();
				if(range) {
					return range.getNodes([nodeType], filter);
				} else {
					return [];
				}
			},

			getRange: function() {
				var selection = this.getSelection();
				return selection && selection.rangeCount && selection.getRangeAt(0);
			},

			getSelection: function() {
				return rangy.getSelection(this.doc.defaultView || this.doc.parentWindow);
			},

			setSelection: function(range) {
				var win = this.doc.defaultView || this.doc.parentWindow,
					selection = rangy.getSelection(win);
				return selection.setSingleRange(range);
			}
		});

})(wysihtml5);
/**
 * Inspired by the rangy CSS Applier module written by Tim Down and licensed under the MIT license.
 * http://code.google.com/p/rangy/
 *
 * changed in order to be able ...
 *    - to use custom tags
 *    - to detect and replace similar css classes via reg exp
 */
(function(wysihtml5, rangy) {
	var defaultTagName = "span";

	var REG_EXP_WHITE_SPACE = /\s+/g;

	function hasClass(el, cssClass, regExp) {
		if(!el.className) {
			return false;
		}

		var matchingClassNames = el.className.match(regExp) || [];
		return matchingClassNames[matchingClassNames.length - 1] === cssClass;
	}

	function addClass(el, cssClass, regExp) {
		if(el.className) {
			removeClass(el, regExp);
			el.className += " " + cssClass;
		} else {
			el.className = cssClass;
		}
	}

	function removeClass(el, regExp) {
		if(el.className) {
			el.className = el.className.replace(regExp, "");
		}
	}

	function hasSameClasses(el1, el2) {
		return el1.className.replace(REG_EXP_WHITE_SPACE, " ") == el2.className.replace(REG_EXP_WHITE_SPACE, " ");
	}

	function replaceWithOwnChildren(el) {
		var parent = el.parentNode;
		while(el.firstChild) {
			parent.insertBefore(el.firstChild, el);
		}
		parent.removeChild(el);
	}

	function elementsHaveSameNonClassAttributes(el1, el2) {
		if(el1.attributes.length != el2.attributes.length) {
			return false;
		}
		for(var i = 0, len = el1.attributes.length, attr1, attr2, name; i < len; ++i) {
			attr1 = el1.attributes[i];
			name = attr1.name;
			if(name != "class") {
				attr2 = el2.attributes.getNamedItem(name);
				if(attr1.specified != attr2.specified) {
					return false;
				}
				if(attr1.specified && attr1.nodeValue !== attr2.nodeValue) {
					return false;
				}
			}
		}
		return true;
	}

	function isSplitPoint(node, offset) {
		if(rangy.dom.isCharacterDataNode(node)) {
			if(offset == 0) {
				return !!node.previousSibling;
			} else if(offset == node.length) {
				return !!node.nextSibling;
			} else {
				return true;
			}
		}

		return offset > 0 && offset < node.childNodes.length;
	}

	function splitNodeAt(node, descendantNode, descendantOffset) {
		var newNode;
		if(rangy.dom.isCharacterDataNode(descendantNode)) {
			if(descendantOffset == 0) {
				descendantOffset = rangy.dom.getNodeIndex(descendantNode);
				descendantNode = descendantNode.parentNode;
			} else if(descendantOffset == descendantNode.length) {
				descendantOffset = rangy.dom.getNodeIndex(descendantNode) + 1;
				descendantNode = descendantNode.parentNode;
			} else {
				newNode = rangy.dom.splitDataNode(descendantNode, descendantOffset);
			}
		}
		if(!newNode) {
			newNode = descendantNode.cloneNode(false);
			if(newNode.id) {
				newNode.removeAttribute("id");
			}
			var child;
			while((child = descendantNode.childNodes[descendantOffset])) {
				newNode.appendChild(child);
			}
			rangy.dom.insertAfter(newNode, descendantNode);
		}
		return(descendantNode == node) ? newNode : splitNodeAt(node, newNode.parentNode, rangy.dom.getNodeIndex(newNode));
	}

	function Merge(firstNode) {
		this.isElementMerge = (firstNode.nodeType == wysihtml5.ELEMENT_NODE);
		this.firstTextNode = this.isElementMerge ? firstNode.lastChild : firstNode;
		this.textNodes = [this.firstTextNode];
	}

	Merge.prototype = {
		doMerge: function() {
			var textBits = [],
				textNode, parent, text;
			for(var i = 0, len = this.textNodes.length; i < len; ++i) {
				textNode = this.textNodes[i];
				parent = textNode.parentNode;
				textBits[i] = textNode.data;
				if(i) {
					parent.removeChild(textNode);
					if(!parent.hasChildNodes()) {
						parent.parentNode.removeChild(parent);
					}
				}
			}
			this.firstTextNode.data = text = textBits.join("");
			return text;
		},

		getLength: function() {
			var i = this.textNodes.length,
				len = 0;
			while(i--) {
				len += this.textNodes[i].length;
			}
			return len;
		},

		toString: function() {
			var textBits = [];
			for(var i = 0, len = this.textNodes.length; i < len; ++i) {
				textBits[i] = "'" + this.textNodes[i].data + "'";
			}
			return "[Merge(" + textBits.join(",") + ")]";
		}
	};

	function HTMLApplier(tagNames, cssClass, similarClassRegExp, normalize) {
		this.tagNames = tagNames || [defaultTagName];
		this.cssClass = cssClass || "";
		this.similarClassRegExp = similarClassRegExp;
		this.normalize = normalize;
		this.applyToAnyTagName = false;
	}

	HTMLApplier.prototype = {
		getAncestorWithClass: function(node) {
			var cssClassMatch;
			while(node) {
				cssClassMatch = this.cssClass ? hasClass(node, this.cssClass, this.similarClassRegExp) : true;
				if(node.nodeType == wysihtml5.ELEMENT_NODE && rangy.dom.arrayContains(this.tagNames, node.tagName.toLowerCase()) && cssClassMatch) {
					return node;
				}
				node = node.parentNode;
			}
			return false;
		},

		// Normalizes nodes after applying a CSS class to a Range.
		postApply: function(textNodes, range) {
			var firstNode = textNodes[0],
				lastNode = textNodes[textNodes.length - 1];

			var merges = [],
				currentMerge;

			var rangeStartNode = firstNode,
				rangeEndNode = lastNode;
			var rangeStartOffset = 0,
				rangeEndOffset = lastNode.length;

			var textNode, precedingTextNode;

			for(var i = 0, len = textNodes.length; i < len; ++i) {
				textNode = textNodes[i];
				precedingTextNode = this.getAdjacentMergeableTextNode(textNode.parentNode, false);
				if(precedingTextNode) {
					if(!currentMerge) {
						currentMerge = new Merge(precedingTextNode);
						merges.push(currentMerge);
					}
					currentMerge.textNodes.push(textNode);
					if(textNode === firstNode) {
						rangeStartNode = currentMerge.firstTextNode;
						rangeStartOffset = rangeStartNode.length;
					}
					if(textNode === lastNode) {
						rangeEndNode = currentMerge.firstTextNode;
						rangeEndOffset = currentMerge.getLength();
					}
				} else {
					currentMerge = null;
				}
			}

			// Test whether the first node after the range needs merging
			var nextTextNode = this.getAdjacentMergeableTextNode(lastNode.parentNode, true);
			if(nextTextNode) {
				if(!currentMerge) {
					currentMerge = new Merge(lastNode);
					merges.push(currentMerge);
				}
				currentMerge.textNodes.push(nextTextNode);
			}

			// Do the merges
			if(merges.length) {
				for(i = 0, len = merges.length; i < len; ++i) {
					merges[i].doMerge();
				}
				// Set the range boundaries
				range.setStart(rangeStartNode, rangeStartOffset);
				range.setEnd(rangeEndNode, rangeEndOffset);
			}
		},

		getAdjacentMergeableTextNode: function(node, forward) {
			var isTextNode = (node.nodeType == wysihtml5.TEXT_NODE);
			var el = isTextNode ? node.parentNode : node;
			var adjacentNode;
			var propName = forward ? "nextSibling" : "previousSibling";
			if(isTextNode) {
				// Can merge if the node's previous/next sibling is a text node
				adjacentNode = node[propName];
				if(adjacentNode && adjacentNode.nodeType == wysihtml5.TEXT_NODE) {
					return adjacentNode;
				}
			} else {
				// Compare element with its sibling
				adjacentNode = el[propName];
				if(adjacentNode && this.areElementsMergeable(node, adjacentNode)) {
					return adjacentNode[forward ? "firstChild" : "lastChild"];
				}
			}
			return null;
		},

		areElementsMergeable: function(el1, el2) {
			return rangy.dom.arrayContains(this.tagNames, (el1.tagName || "").toLowerCase()) &&
				rangy.dom.arrayContains(this.tagNames, (el2.tagName || "").toLowerCase()) &&
				hasSameClasses(el1, el2) &&
				elementsHaveSameNonClassAttributes(el1, el2);
		},

		createContainer: function(doc) {
			var el = doc.createElement(this.tagNames[0]);
			if(this.cssClass) {
				el.className = this.cssClass;
			}
			return el;
		},

		applyToTextNode: function(textNode) {
			var parent = textNode.parentNode;
			if(parent.childNodes.length == 1 && rangy.dom.arrayContains(this.tagNames, parent.tagName.toLowerCase())) {
				if(this.cssClass) {
					addClass(parent, this.cssClass, this.similarClassRegExp);
				}
			} else {
				var el = this.createContainer(rangy.dom.getDocument(textNode));
				textNode.parentNode.insertBefore(el, textNode);
				el.appendChild(textNode);
			}
		},

		isRemovable: function(el) {
			return rangy.dom.arrayContains(this.tagNames, el.tagName.toLowerCase()) && wysihtml5.lang.string(el.className).trim() == this.cssClass;
		},

		undoToTextNode: function(textNode, range, ancestorWithClass) {
			if(!range.containsNode(ancestorWithClass)) {
				// Split out the portion of the ancestor from which we can remove the CSS class
				var ancestorRange = range.cloneRange();
				ancestorRange.selectNode(ancestorWithClass);

				if(ancestorRange.isPointInRange(range.endContainer, range.endOffset) && isSplitPoint(range.endContainer, range.endOffset)) {
					splitNodeAt(ancestorWithClass, range.endContainer, range.endOffset);
					range.setEndAfter(ancestorWithClass);
				}
				if(ancestorRange.isPointInRange(range.startContainer, range.startOffset) && isSplitPoint(range.startContainer, range.startOffset)) {
					ancestorWithClass = splitNodeAt(ancestorWithClass, range.startContainer, range.startOffset);
				}
			}

			if(this.similarClassRegExp) {
				removeClass(ancestorWithClass, this.similarClassRegExp);
			}
			if(this.isRemovable(ancestorWithClass)) {
				replaceWithOwnChildren(ancestorWithClass);
			}
		},

		applyToRange: function(range) {
			var textNodes = range.getNodes([wysihtml5.TEXT_NODE]);
			if(!textNodes.length) {
				try {
					var node = this.createContainer(range.endContainer.ownerDocument);
					range.surroundContents(node);
					this.selectNode(range, node);
					return;
				} catch(e) {}
			}

			range.splitBoundaries();
			textNodes = range.getNodes([wysihtml5.TEXT_NODE]);

			if(textNodes.length) {
				var textNode;

				for(var i = 0, len = textNodes.length; i < len; ++i) {
					textNode = textNodes[i];
					if(!this.getAncestorWithClass(textNode)) {
						this.applyToTextNode(textNode);
					}
				}

				range.setStart(textNodes[0], 0);
				textNode = textNodes[textNodes.length - 1];
				range.setEnd(textNode, textNode.length);

				if(this.normalize) {
					this.postApply(textNodes, range);
				}
			}
		},

		undoToRange: function(range) {
			var textNodes = range.getNodes([wysihtml5.TEXT_NODE]),
				textNode, ancestorWithClass;
			if(textNodes.length) {
				range.splitBoundaries();
				textNodes = range.getNodes([wysihtml5.TEXT_NODE]);
			} else {
				var doc = range.endContainer.ownerDocument,
					node = doc.createTextNode(wysihtml5.INVISIBLE_SPACE);
				range.insertNode(node);
				range.selectNode(node);
				textNodes = [node];
			}

			for(var i = 0, len = textNodes.length; i < len; ++i) {
				textNode = textNodes[i];
				ancestorWithClass = this.getAncestorWithClass(textNode);
				if(ancestorWithClass) {
					this.undoToTextNode(textNode, range, ancestorWithClass);
				}
			}

			if(len == 1) {
				this.selectNode(range, textNodes[0]);
			} else {
				range.setStart(textNodes[0], 0);
				textNode = textNodes[textNodes.length - 1];
				range.setEnd(textNode, textNode.length);

				if(this.normalize) {
					this.postApply(textNodes, range);
				}
			}
		},

		selectNode: function(range, node) {
			var isElement = node.nodeType === wysihtml5.ELEMENT_NODE,
				canHaveHTML = "canHaveHTML" in node ? node.canHaveHTML : true,
				content = isElement ? node.innerHTML : node.data,
				isEmpty = (content === "" || content === wysihtml5.INVISIBLE_SPACE);

			if(isEmpty && isElement && canHaveHTML) {
				// Make sure that caret is visible in node by inserting a zero width no breaking space
				try {
					node.innerHTML = wysihtml5.INVISIBLE_SPACE;
				} catch(e) {}
			}
			range.selectNodeContents(node);
			if(isEmpty && isElement) {
				range.collapse(false);
			} else if(isEmpty) {
				range.setStartAfter(node);
				range.setEndAfter(node);
			}
		},

		getTextSelectedByRange: function(textNode, range) {
			var textRange = range.cloneRange();
			textRange.selectNodeContents(textNode);

			var intersectionRange = textRange.intersection(range);
			var text = intersectionRange ? intersectionRange.toString() : "";
			textRange.detach();

			return text;
		},

		isAppliedToRange: function(range) {
			var ancestors = [],
				ancestor,
				textNodes = range.getNodes([wysihtml5.TEXT_NODE]);
			if(!textNodes.length) {
				ancestor = this.getAncestorWithClass(range.startContainer);
				return ancestor ? [ancestor] : false;
			}

			for(var i = 0, len = textNodes.length, selectedText; i < len; ++i) {
				selectedText = this.getTextSelectedByRange(textNodes[i], range);
				ancestor = this.getAncestorWithClass(textNodes[i]);
				if(selectedText != "" && !ancestor) {
					return false;
				} else {
					ancestors.push(ancestor);
				}
			}
			return ancestors;
		},

		toggleRange: function(range) {
			if(this.isAppliedToRange(range)) {
				this.undoToRange(range);
			} else {
				this.applyToRange(range);
			}
		}
	};

	wysihtml5.selection.HTMLApplier = HTMLApplier;

})(wysihtml5, rangy);
/**
 * Rich Text Query/Formatting Commands
 * 
 * @example
 *    var commands = new wysihtml5.Commands(editor);
 */
wysihtml5.Commands = Base.extend(
	/** @scope wysihtml5.Commands.prototype */
	{
		constructor: function(editor) {
			this.editor = editor;
			this.composer = editor.composer;
			this.doc = this.composer.doc;
		},

		/**
		 * Check whether the browser supports the given command
		 *
		 * @param {String} command The command string which to check (eg. "bold", "italic", "insertUnorderedList")
		 * @example
		 *    commands.supports("createLink");
		 */
		support: function(command) {
			return wysihtml5.browser.supportsCommand(this.doc, command);
		},

		/**
		 * Check whether the browser supports the given command
		 *
		 * @param {String} command The command string which to execute (eg. "bold", "italic", "insertUnorderedList")
		 * @param {String} [value] The command value parameter, needed for some commands ("createLink", "insertImage", ...), optional for commands that don't require one ("bold", "underline", ...)
		 * @example
		 *    commands.exec("insertImage", "http://a1.twimg.com/profile_images/113868655/schrei_twitter_reasonably_small.jpg");
		 */
		exec: function(command, value) {
			var obj = wysihtml5.commands[command],
				args = wysihtml5.lang.array(arguments).get(),
				method = obj && obj.exec,
				result = null;

			this.editor.fire("beforecommand:composer");

			if(method) {
				args.unshift(this.composer);
				result = method.apply(obj, args);
			} else {
				try {
					// try/catch for buggy firefox
					result = this.doc.execCommand(command, false, value);
				} catch(e) {}
			}

			this.editor.fire("aftercommand:composer");
			return result;
		},

		/**
		 * Check whether the current command is active
		 * If the caret is within a bold text, then calling this with command "bold" should return true
		 *
		 * @param {String} command The command string which to check (eg. "bold", "italic", "insertUnorderedList")
		 * @param {String} [commandValue] The command value parameter (eg. for "insertImage" the image src)
		 * @return {Boolean} Whether the command is active
		 * @example
		 *    var isCurrentSelectionBold = commands.state("bold");
		 */
		state: function(command, commandValue) {
			var obj = wysihtml5.commands[command],
				args = wysihtml5.lang.array(arguments).get(),
				method = obj && obj.state;
			if(method) {
				args.unshift(this.composer);
				return method.apply(obj, args);
			} else {
				try {
					// try/catch for buggy firefox
					return this.doc.queryCommandState(command);
				} catch(e) {
					return false;
				}
			}
		},

		/**
		 * Get the current command's value
		 *
		 * @param {String} command The command string which to check (eg. "formatBlock")
		 * @return {String} The command value
		 * @example
		 *    var currentBlockElement = commands.value("formatBlock");
		 */
		value: function(command) {
			var obj = wysihtml5.commands[command],
				method = obj && obj.value;
			if(method) {
				return method.call(obj, this.composer, command);
			} else {
				try {
					// try/catch for buggy firefox
					return this.doc.queryCommandValue(command);
				} catch(e) {
					return null;
				}
			}
		}
	});
(function(wysihtml5) {
	var undef;

	wysihtml5.commands.bold = {
		exec: function(composer, command) {
			return wysihtml5.commands.formatInline.exec(composer, command, "b");
		},

		state: function(composer, command, color) {
			// element.ownerDocument.queryCommandState("bold") results:
			// firefox: only <b>
			// chrome:  <b>, <strong>, <h1>, <h2>, ...
			// ie:      <b>, <strong>
			// opera:   <b>, <strong>
			return wysihtml5.commands.formatInline.state(composer, command, "b");
		},

		value: function() {
			return undef;
		}
	};
})(wysihtml5);

(function(wysihtml5) {
	var undef,
		NODE_NAME = "A",
		dom = wysihtml5.dom;

	function _removeFormat(composer, anchors) {
		var length = anchors.length,
			i = 0,
			anchor,
			codeElement,
			textContent;
		for(; i < length; i++) {
			anchor = anchors[i];
			codeElement = dom.getParentElement(anchor, {
				nodeName: "code"
			});
			textContent = dom.getTextContent(anchor);

			// if <a> contains url-like text content, rename it to <code> to prevent re-autolinking
			// else replace <a> with its childNodes
			if(textContent.match(dom.autoLink.URL_REG_EXP) && !codeElement) {
				// <code> element is used to prevent later auto-linking of the content
				codeElement = dom.renameElement(anchor, "code");
			} else {
				dom.replaceWithChildNodes(anchor);
			}
		}
	}

	function _format(composer, attributes) {
		var doc = composer.doc,
			tempClass = "_wysihtml5-temp-" + (+new Date()),
			tempClassRegExp = /non-matching-class/g,
			i = 0,
			length,
			anchors,
			anchor,
			hasElementChild,
			isEmpty,
			elementToSetCaretAfter,
			textContent,
			whiteSpace,
			j;
		wysihtml5.commands.formatInline.exec(composer, undef, NODE_NAME, tempClass, tempClassRegExp);
		anchors = doc.querySelectorAll(NODE_NAME + "." + tempClass);
		length = anchors.length;
		for(; i < length; i++) {
			anchor = anchors[i];
			anchor.removeAttribute("class");
			for(j in attributes) {
				anchor.setAttribute(j, attributes[j]);
			}
		}

		elementToSetCaretAfter = anchor;
		if(length === 1) {
			textContent = dom.getTextContent(anchor);
			hasElementChild = !!anchor.querySelector("*");
			isEmpty = textContent === "" || textContent === wysihtml5.INVISIBLE_SPACE;
			if(!hasElementChild && isEmpty) {
				dom.setTextContent(anchor, attributes.text || anchor.href);
				whiteSpace = doc.createTextNode(" ");
				composer.selection.setAfter(anchor);
				composer.selection.insertNode(whiteSpace);
				elementToSetCaretAfter = whiteSpace;
			}
		}
		composer.selection.setAfter(elementToSetCaretAfter);
	}

	wysihtml5.commands.createLink = {
		/**
		 * TODO: Use HTMLApplier or formatInline here
		 *
		 * Turns selection into a link
		 * If selection is already a link, it removes the link and wraps it with a <code> element
		 * The <code> element is needed to avoid auto linking
		 * 
		 * @example
		 *    // either ...
		 *    wysihtml5.commands.createLink.exec(composer, "createLink", "http://www.google.de");
		 *    // ... or ...
		 *    wysihtml5.commands.createLink.exec(composer, "createLink", { href: "http://www.google.de", target: "_blank" });
		 */
		exec: function(composer, command, value) {
			var anchors = this.state(composer, command);
			if(anchors) {
				// Selection contains links
				composer.selection.executeAndRestore(function() {
					_removeFormat(composer, anchors);
				});
			} else {
				// Create links
				value = typeof(value) === "object" ? value : {
					href: value
				};
				_format(composer, value);
			}
		},

		state: function(composer, command) {
			return wysihtml5.commands.formatInline.state(composer, command, "A");
		},

		value: function() {
			return undef;
		}
	};
})(wysihtml5);
/**
 * document.execCommand("fontSize") will create either inline styles (firefox, chrome) or use font tags
 * which we don't want
 * Instead we set a css class
 */
(function(wysihtml5) {
	var undef,
		REG_EXP = /wysiwyg-font-size-[a-z\-]+/g;

	wysihtml5.commands.fontSize = {
		exec: function(composer, command, size) {
			return wysihtml5.commands.formatInline.exec(composer, command, "span", "wysiwyg-font-size-" + size, REG_EXP);
		},

		state: function(composer, command, size) {
			return wysihtml5.commands.formatInline.state(composer, command, "span", "wysiwyg-font-size-" + size, REG_EXP);
		},

		value: function() {
			return undef;
		}
	};
})(wysihtml5);
/**
 * document.execCommand("foreColor") will create either inline styles (firefox, chrome) or use font tags
 * which we don't want
 * Instead we set a css class
 */
(function(wysihtml5) {
	var undef,
		REG_EXP = /wysiwyg-color-[a-z]+/g;

	wysihtml5.commands.foreColor = {
		exec: function(composer, command, color) {
			return wysihtml5.commands.formatInline.exec(composer, command, "span", "wysiwyg-color-" + color, REG_EXP);
		},

		state: function(composer, command, color) {
			return wysihtml5.commands.formatInline.state(composer, command, "span", "wysiwyg-color-" + color, REG_EXP);
		},

		value: function() {
			return undef;
		}
	};
})(wysihtml5);
(function(wysihtml5) {
	var undef,
		dom = wysihtml5.dom,
		DEFAULT_NODE_NAME = "DIV",
		// Following elements are grouped
		// when the caret is within a H1 and the H4 is invoked, the H1 should turn into H4
		// instead of creating a H4 within a H1 which would result in semantically invalid html
		BLOCK_ELEMENTS_GROUP = ["H1", "H2", "H3", "H4", "H5", "H6", "P", "BLOCKQUOTE", DEFAULT_NODE_NAME];

	/**
	 * Remove similiar classes (based on classRegExp)
	 * and add the desired class name
	 */
	function _addClass(element, className, classRegExp) {
		if(element.className) {
			_removeClass(element, classRegExp);
			element.className += " " + className;
		} else {
			element.className = className;
		}
	}

	function _removeClass(element, classRegExp) {
		element.className = element.className.replace(classRegExp, "");
	}

	/**
	 * Check whether given node is a text node and whether it's empty
	 */
	function _isBlankTextNode(node) {
		return node.nodeType === wysihtml5.TEXT_NODE && !wysihtml5.lang.string(node.data).trim();
	}

	/**
	 * Returns previous sibling node that is not a blank text node
	 */
	function _getPreviousSiblingThatIsNotBlank(node) {
		var previousSibling = node.previousSibling;
		while(previousSibling && _isBlankTextNode(previousSibling)) {
			previousSibling = previousSibling.previousSibling;
		}
		return previousSibling;
	}

	/**
	 * Returns next sibling node that is not a blank text node
	 */
	function _getNextSiblingThatIsNotBlank(node) {
		var nextSibling = node.nextSibling;
		while(nextSibling && _isBlankTextNode(nextSibling)) {
			nextSibling = nextSibling.nextSibling;
		}
		return nextSibling;
	}

	/**
	 * Adds line breaks before and after the given node if the previous and next siblings
	 * aren't already causing a visual line break (block element or <br>)
	 */
	function _addLineBreakBeforeAndAfter(node) {
		var doc = node.ownerDocument,
			nextSibling = _getNextSiblingThatIsNotBlank(node),
			previousSibling = _getPreviousSiblingThatIsNotBlank(node);

		if(nextSibling && !_isLineBreakOrBlockElement(nextSibling)) {
			node.parentNode.insertBefore(doc.createElement("br"), nextSibling);
		}
		if(previousSibling && !_isLineBreakOrBlockElement(previousSibling)) {
			node.parentNode.insertBefore(doc.createElement("br"), node);
		}
	}

	/**
	 * Removes line breaks before and after the given node
	 */
	function _removeLineBreakBeforeAndAfter(node) {
		var nextSibling = _getNextSiblingThatIsNotBlank(node),
			previousSibling = _getPreviousSiblingThatIsNotBlank(node);

		if(nextSibling && _isLineBreak(nextSibling)) {
			nextSibling.parentNode.removeChild(nextSibling);
		}
		if(previousSibling && _isLineBreak(previousSibling)) {
			previousSibling.parentNode.removeChild(previousSibling);
		}
	}

	function _removeLastChildIfLineBreak(node) {
		var lastChild = node.lastChild;
		if(lastChild && _isLineBreak(lastChild)) {
			lastChild.parentNode.removeChild(lastChild);
		}
	}

	function _isLineBreak(node) {
		return node.nodeName === "BR";
	}

	/**
	 * Checks whether the elment causes a visual line break
	 * (<br> or block elements)
	 */
	function _isLineBreakOrBlockElement(element) {
		if(_isLineBreak(element)) {
			return true;
		}

		if(dom.getStyle("display").from(element) === "block") {
			return true;
		}

		return false;
	}

	/**
	 * Execute native query command
	 * and if necessary modify the inserted node's className
	 */
	function _execCommand(doc, command, nodeName, className) {
		if(className) {
			var eventListener = dom.observe(doc, "DOMNodeInserted", function(event) {
				var target = event.target,
					displayStyle;
				if(target.nodeType !== wysihtml5.ELEMENT_NODE) {
					return;
				}
				displayStyle = dom.getStyle("display").from(target);
				if(displayStyle.substr(0, 6) !== "inline") {
					// Make sure that only block elements receive the given class
					target.className += " " + className;
				}
			});
		}
		doc.execCommand(command, false, nodeName);
		if(eventListener) {
			eventListener.stop();
		}
	}

	function _selectLineAndWrap(composer, element) {
		composer.selection.selectLine();
		composer.selection.surround(element);
		_removeLineBreakBeforeAndAfter(element);
		_removeLastChildIfLineBreak(element);
		composer.selection.selectNode(element);
	}

	function _hasClasses(element) {
		return !!wysihtml5.lang.string(element.className).trim();
	}

	wysihtml5.commands.formatBlock = {
		exec: function(composer, command, nodeName, className, classRegExp) {
			var doc = composer.doc,
				blockElement = this.state(composer, command, nodeName, className, classRegExp),
				selectedNode;

			nodeName = typeof(nodeName) === "string" ? nodeName.toUpperCase() : nodeName;

			if(blockElement) {
				composer.selection.executeAndRestoreSimple(function() {
					if(classRegExp) {
						_removeClass(blockElement, classRegExp);
					}
					var hasClasses = _hasClasses(blockElement);
					if(!hasClasses && blockElement.nodeName === (nodeName || DEFAULT_NODE_NAME)) {
						// Insert a line break afterwards and beforewards when there are siblings
						// that are not of type line break or block element
						_addLineBreakBeforeAndAfter(blockElement);
						dom.replaceWithChildNodes(blockElement);
					} else if(hasClasses) {
						// Make sure that styling is kept by renaming the element to <div> and copying over the class name
						dom.renameElement(blockElement, DEFAULT_NODE_NAME);
					}
				});
				return;
			}

			// Find similiar block element and rename it (<h2 class="foo"></h2>  =>  <h1 class="foo"></h1>)
			if(nodeName === null || wysihtml5.lang.array(BLOCK_ELEMENTS_GROUP).contains(nodeName)) {
				selectedNode = composer.selection.getSelectedNode();
				blockElement = dom.getParentElement(selectedNode, {
					nodeName: BLOCK_ELEMENTS_GROUP
				});

				if(blockElement) {
					composer.selection.executeAndRestoreSimple(function() {
						// Rename current block element to new block element and add class
						if(nodeName) {
							blockElement = dom.renameElement(blockElement, nodeName);
						}
						if(className) {
							_addClass(blockElement, className, classRegExp);
						}
					});
					return;
				}
			}

			if(composer.commands.support(command)) {
				_execCommand(doc, command, nodeName || DEFAULT_NODE_NAME, className);
				return;
			}

			blockElement = doc.createElement(nodeName || DEFAULT_NODE_NAME);
			if(className) {
				blockElement.className = className;
			}
			_selectLineAndWrap(composer, blockElement);
		},

		state: function(composer, command, nodeName, className, classRegExp) {
			nodeName = typeof(nodeName) === "string" ? nodeName.toUpperCase() : nodeName;
			var selectedNode = composer.selection.getSelectedNode();
			return dom.getParentElement(selectedNode, {
				nodeName: nodeName,
				className: className,
				classRegExp: classRegExp
			});
		},

		value: function() {
			return undef;
		}
	};
})(wysihtml5);
/**
 * formatInline scenarios for tag "B" (| = caret, |foo| = selected text)
 *
 *   #1 caret in unformatted text:
 *      abcdefg|
 *   output:
 *      abcdefg<b>|</b>
 *   
 *   #2 unformatted text selected:
 *      abc|deg|h
 *   output:
 *      abc<b>|deg|</b>h
 *   
 *   #3 unformatted text selected across boundaries:
 *      ab|c <span>defg|h</span>
 *   output:
 *      ab<b>|c </b><span><b>defg</b>|h</span>
 *
 *   #4 formatted text entirely selected
 *      <b>|abc|</b>
 *   output:
 *      |abc|
 *
 *   #5 formatted text partially selected
 *      <b>ab|c|</b>
 *   output:
 *      <b>ab</b>|c|
 *
 *   #6 formatted text selected across boundaries
 *      <span>ab|c</span> <b>de|fgh</b>
 *   output:
 *      <span>ab|c</span> de|<b>fgh</b>
 */
(function(wysihtml5) {
	var undef,
		// Treat <b> as <strong> and vice versa
		ALIAS_MAPPING = {
			"strong": "b",
			"em": "i",
			"b": "strong",
			"i": "em"
		},
		htmlApplier = {};

	function _getTagNames(tagName) {
		var alias = ALIAS_MAPPING[tagName];
		return alias ? [tagName.toLowerCase(), alias.toLowerCase()] : [tagName.toLowerCase()];
	}

	function _getApplier(tagName, className, classRegExp) {
		var identifier = tagName + ":" + className;
		if(!htmlApplier[identifier]) {
			htmlApplier[identifier] = new wysihtml5.selection.HTMLApplier(_getTagNames(tagName), className, classRegExp, true);
		}
		return htmlApplier[identifier];
	}

	wysihtml5.commands.formatInline = {
		exec: function(composer, command, tagName, className, classRegExp) {
			var range = composer.selection.getRange();
			if(!range) {
				return false;
			}
			_getApplier(tagName, className, classRegExp).toggleRange(range);
			composer.selection.setSelection(range);
		},

		state: function(composer, command, tagName, className, classRegExp) {
			var doc = composer.doc,
				aliasTagName = ALIAS_MAPPING[tagName] || tagName,
				range;

			// Check whether the document contains a node with the desired tagName
			if(!wysihtml5.dom.hasElementWithTagName(doc, tagName) &&
				!wysihtml5.dom.hasElementWithTagName(doc, aliasTagName)) {
				return false;
			}

			// Check whether the document contains a node with the desired className
			if(className && !wysihtml5.dom.hasElementWithClassName(doc, className)) {
				return false;
			}

			range = composer.selection.getRange();
			if(!range) {
				return false;
			}

			return _getApplier(tagName, className, classRegExp).isAppliedToRange(range);
		},

		value: function() {
			return undef;
		}
	};
})(wysihtml5);
(function(wysihtml5) {
	var undef;

	wysihtml5.commands.insertHTML = {
		exec: function(composer, command, html) {
			if(composer.commands.support(command)) {
				composer.doc.execCommand(command, false, html);
			} else {
				composer.selection.insertHTML(html);
			}
		},

		state: function() {
			return false;
		},

		value: function() {
			return undef;
		}
	};
})(wysihtml5);
(function(wysihtml5) {
	var NODE_NAME = "IMG";

	wysihtml5.commands.insertImage = {
		/**
		 * Inserts an <img>
		 * If selection is already an image link, it removes it
		 * 
		 * @example
		 *    // either ...
		 *    wysihtml5.commands.insertImage.exec(composer, "insertImage", "http://www.google.de/logo.jpg");
		 *    // ... or ...
		 *    wysihtml5.commands.insertImage.exec(composer, "insertImage", { src: "http://www.google.de/logo.jpg", title: "foo" });
		 */
		exec: function(composer, command, value) {
			value = typeof(value) === "object" ? value : {
				src: value
			};

			var doc = composer.doc,
				image = this.state(composer),
				textNode,
				i,
				parent;

			if(image) {
				// Image already selected, set the caret before it and delete it
				composer.selection.setBefore(image);
				parent = image.parentNode;
				parent.removeChild(image);

				// and it's parent <a> too if it hasn't got any other relevant child nodes
				wysihtml5.dom.removeEmptyTextNodes(parent);
				if(parent.nodeName === "A" && !parent.firstChild) {
					composer.selection.setAfter(parent);
					parent.parentNode.removeChild(parent);
				}

				// firefox and ie sometimes don't remove the image handles, even though the image got removed
				wysihtml5.quirks.redraw(composer.element);
				return;
			}

			image = doc.createElement(NODE_NAME);

			for(i in value) {
				image[i] = value[i];
			}

			composer.selection.insertNode(image);
			if(wysihtml5.browser.hasProblemsSettingCaretAfterImg()) {
				textNode = doc.createTextNode(wysihtml5.INVISIBLE_SPACE);
				composer.selection.insertNode(textNode);
				composer.selection.setAfter(textNode);
			} else {
				composer.selection.setAfter(image);
			}
		},

		state: function(composer) {
			var doc = composer.doc,
				selectedNode,
				text,
				imagesInSelection;

			if(!wysihtml5.dom.hasElementWithTagName(doc, NODE_NAME)) {
				return false;
			}

			selectedNode = composer.selection.getSelectedNode();
			if(!selectedNode) {
				return false;
			}

			if(selectedNode.nodeName === NODE_NAME) {
				// This works perfectly in IE
				return selectedNode;
			}

			if(selectedNode.nodeType !== wysihtml5.ELEMENT_NODE) {
				return false;
			}

			text = composer.selection.getText();
			text = wysihtml5.lang.string(text).trim();
			if(text) {
				return false;
			}

			imagesInSelection = composer.selection.getNodes(wysihtml5.ELEMENT_NODE, function(node) {
				return node.nodeName === "IMG";
			});

			if(imagesInSelection.length !== 1) {
				return false;
			}

			return imagesInSelection[0];
		},

		value: function(composer) {
			var image = this.state(composer);
			return image && image.src;
		}
	};
})(wysihtml5);
(function(wysihtml5) {
	var undef,
		LINE_BREAK = "<br>" + (wysihtml5.browser.needsSpaceAfterLineBreak() ? " " : "");

	wysihtml5.commands.insertLineBreak = {
		exec: function(composer, command) {
			if(composer.commands.support(command)) {
				composer.doc.execCommand(command, false, null);
				if(!wysihtml5.browser.autoScrollsToCaret()) {
					composer.selection.scrollIntoView();
				}
			} else {
				composer.commands.exec("insertHTML", LINE_BREAK);
			}
		},

		state: function() {
			return false;
		},

		value: function() {
			return undef;
		}
	};
})(wysihtml5);
(function(wysihtml5) {
	var undef;

	wysihtml5.commands.insertOrderedList = {
		exec: function(composer, command) {
			var doc = composer.doc,
				selectedNode = composer.selection.getSelectedNode(),
				list = wysihtml5.dom.getParentElement(selectedNode, {
					nodeName: "OL"
				}),
				otherList = wysihtml5.dom.getParentElement(selectedNode, {
					nodeName: "UL"
				}),
				tempClassName = "_wysihtml5-temp-" + new Date().getTime(),
				isEmpty,
				tempElement;

			if(composer.commands.support(command)) {
				doc.execCommand(command, false, null);
				return;
			}

			if(list) {
				// Unwrap list
				// <ol><li>foo</li><li>bar</li></ol>
				// becomes:
				// foo<br>bar<br>
				composer.selection.executeAndRestoreSimple(function() {
					wysihtml5.dom.resolveList(list);
				});
			} else if(otherList) {
				// Turn an unordered list into an ordered list
				// <ul><li>foo</li><li>bar</li></ul>
				// becomes:
				// <ol><li>foo</li><li>bar</li></ol>
				composer.selection.executeAndRestoreSimple(function() {
					wysihtml5.dom.renameElement(otherList, "ol");
				});
			} else {
				// Create list
				composer.commands.exec("formatBlock", "div", tempClassName);
				tempElement = doc.querySelector("." + tempClassName);
				isEmpty = tempElement.innerHTML === "" || tempElement.innerHTML === wysihtml5.INVISIBLE_SPACE;
				composer.selection.executeAndRestoreSimple(function() {
					list = wysihtml5.dom.convertToList(tempElement, "ol");
				});
				if(isEmpty) {
					composer.selection.selectNode(list.querySelector("li"));
				}
			}
		},

		state: function(composer) {
			var selectedNode = composer.selection.getSelectedNode();
			return wysihtml5.dom.getParentElement(selectedNode, {
				nodeName: "OL"
			});
		},

		value: function() {
			return undef;
		}
	};
})(wysihtml5);
(function(wysihtml5) {
	var undef;

	wysihtml5.commands.insertUnorderedList = {
		exec: function(composer, command) {
			var doc = composer.doc,
				selectedNode = composer.selection.getSelectedNode(),
				list = wysihtml5.dom.getParentElement(selectedNode, {
					nodeName: "UL"
				}),
				otherList = wysihtml5.dom.getParentElement(selectedNode, {
					nodeName: "OL"
				}),
				tempClassName = "_wysihtml5-temp-" + new Date().getTime(),
				isEmpty,
				tempElement;

			if(composer.commands.support(command)) {
				doc.execCommand(command, false, null);
				return;
			}

			if(list) {
				// Unwrap list
				// <ul><li>foo</li><li>bar</li></ul>
				// becomes:
				// foo<br>bar<br>
				composer.selection.executeAndRestoreSimple(function() {
					wysihtml5.dom.resolveList(list);
				});
			} else if(otherList) {
				// Turn an ordered list into an unordered list
				// <ol><li>foo</li><li>bar</li></ol>
				// becomes:
				// <ul><li>foo</li><li>bar</li></ul>
				composer.selection.executeAndRestoreSimple(function() {
					wysihtml5.dom.renameElement(otherList, "ul");
				});
			} else {
				// Create list
				composer.commands.exec("formatBlock", "div", tempClassName);
				tempElement = doc.querySelector("." + tempClassName);
				isEmpty = tempElement.innerHTML === "" || tempElement.innerHTML === wysihtml5.INVISIBLE_SPACE;
				composer.selection.executeAndRestoreSimple(function() {
					list = wysihtml5.dom.convertToList(tempElement, "ul");
				});
				if(isEmpty) {
					composer.selection.selectNode(list.querySelector("li"));
				}
			}
		},

		state: function(composer) {
			var selectedNode = composer.selection.getSelectedNode();
			return wysihtml5.dom.getParentElement(selectedNode, {
				nodeName: "UL"
			});
		},

		value: function() {
			return undef;
		}
	};
})(wysihtml5);
(function(wysihtml5) {
	var undef;

	wysihtml5.commands.italic = {
		exec: function(composer, command) {
			return wysihtml5.commands.formatInline.exec(composer, command, "i");
		},

		state: function(composer, command, color) {
			// element.ownerDocument.queryCommandState("italic") results:
			// firefox: only <i>
			// chrome:  <i>, <em>, <blockquote>, ...
			// ie:      <i>, <em>
			// opera:   only <i>
			return wysihtml5.commands.formatInline.state(composer, command, "i");
		},

		value: function() {
			return undef;
		}
	};
})(wysihtml5);
(function(wysihtml5) {
	var undef,
		CLASS_NAME = "wysiwyg-text-align-center",
		REG_EXP = /wysiwyg-text-align-[a-z]+/g;

	wysihtml5.commands.justifyCenter = {
		exec: function(composer, command) {
			return wysihtml5.commands.formatBlock.exec(composer, "formatBlock", null, CLASS_NAME, REG_EXP);
		},

		state: function(composer, command) {
			return wysihtml5.commands.formatBlock.state(composer, "formatBlock", null, CLASS_NAME, REG_EXP);
		},

		value: function() {
			return undef;
		}
	};
})(wysihtml5);
(function(wysihtml5) {
	var undef,
		CLASS_NAME = "wysiwyg-text-align-left",
		REG_EXP = /wysiwyg-text-align-[a-z]+/g;

	wysihtml5.commands.justifyLeft = {
		exec: function(composer, command) {
			return wysihtml5.commands.formatBlock.exec(composer, "formatBlock", null, CLASS_NAME, REG_EXP);
		},

		state: function(composer, command) {
			return wysihtml5.commands.formatBlock.state(composer, "formatBlock", null, CLASS_NAME, REG_EXP);
		},

		value: function() {
			return undef;
		}
	};
})(wysihtml5);
(function(wysihtml5) {
	var undef,
		CLASS_NAME = "wysiwyg-text-align-right",
		REG_EXP = /wysiwyg-text-align-[a-z]+/g;

	wysihtml5.commands.justifyRight = {
		exec: function(composer, command) {
			return wysihtml5.commands.formatBlock.exec(composer, "formatBlock", null, CLASS_NAME, REG_EXP);
		},

		state: function(composer, command) {
			return wysihtml5.commands.formatBlock.state(composer, "formatBlock", null, CLASS_NAME, REG_EXP);
		},

		value: function() {
			return undef;
		}
	};
})(wysihtml5);
(function(wysihtml5) {
	var undef;
	wysihtml5.commands.underline = {
		exec: function(composer, command) {
			return wysihtml5.commands.formatInline.exec(composer, command, "u");
		},

		state: function(composer, command) {
			return wysihtml5.commands.formatInline.state(composer, command, "u");
		},

		value: function() {
			return undef;
		}
	};
})(wysihtml5);
/**
 * Undo Manager for wysihtml5
 * slightly inspired by http://rniwa.com/editing/undomanager.html#the-undomanager-interface
 */
(function(wysihtml5) {
	var Z_KEY = 90,
		Y_KEY = 89,
		BACKSPACE_KEY = 8,
		DELETE_KEY = 46,
		MAX_HISTORY_ENTRIES = 40,
		UNDO_HTML = '<span id="_wysihtml5-undo" class="_wysihtml5-temp">' + wysihtml5.INVISIBLE_SPACE + '</span>',
		REDO_HTML = '<span id="_wysihtml5-redo" class="_wysihtml5-temp">' + wysihtml5.INVISIBLE_SPACE + '</span>',
		dom = wysihtml5.dom;

	function cleanTempElements(doc) {
		var tempElement;
		while(tempElement = doc.querySelector("._wysihtml5-temp")) {
			tempElement.parentNode.removeChild(tempElement);
		}
	}

	wysihtml5.UndoManager = wysihtml5.lang.Dispatcher.extend(
		/** @scope wysihtml5.UndoManager.prototype */
		{
			constructor: function(editor) {
				this.editor = editor;
				this.composer = editor.composer;
				this.element = this.composer.element;
				this.history = [this.composer.getValue()];
				this.position = 1;

				// Undo manager currently only supported in browsers who have the insertHTML command (not IE)
				if(this.composer.commands.support("insertHTML")) {
					this._observe();
				}
			},

			_observe: function() {
				var that = this,
					doc = this.composer.sandbox.getDocument(),
					lastKey;

				// Catch CTRL+Z and CTRL+Y
				dom.observe(this.element, "keydown", function(event) {
					if(event.altKey || (!event.ctrlKey && !event.metaKey)) {
						return;
					}

					var keyCode = event.keyCode,
						isUndo = keyCode === Z_KEY && !event.shiftKey,
						isRedo = (keyCode === Z_KEY && event.shiftKey) || (keyCode === Y_KEY);

					if(isUndo) {
						that.undo();
						event.preventDefault();
					} else if(isRedo) {
						that.redo();
						event.preventDefault();
					}
				});

				// Catch delete and backspace
				dom.observe(this.element, "keydown", function(event) {
					var keyCode = event.keyCode;
					if(keyCode === lastKey) {
						return;
					}

					lastKey = keyCode;

					if(keyCode === BACKSPACE_KEY || keyCode === DELETE_KEY) {
						that.transact();
					}
				});

				// Now this is very hacky:
				// These days browsers don't offer a undo/redo event which we could hook into
				// to be notified when the user hits undo/redo in the contextmenu.
				// Therefore we simply insert two elements as soon as the contextmenu gets opened.
				// The last element being inserted will be immediately be removed again by a exexCommand("undo")
				//  => When the second element appears in the dom tree then we know the user clicked "redo" in the context menu
				//  => When the first element disappears from the dom tree then we know the user clicked "undo" in the context menu
				if(wysihtml5.browser.hasUndoInContextMenu()) {
					var interval, observed, cleanUp = function() {
						cleanTempElements(doc);
						clearInterval(interval);
					};

					dom.observe(this.element, "contextmenu", function() {
						cleanUp();
						that.composer.selection.executeAndRestoreSimple(function() {
							if(that.element.lastChild) {
								that.composer.selection.setAfter(that.element.lastChild);
							}

							// enable undo button in context menu
							doc.execCommand("insertHTML", false, UNDO_HTML);
							// enable redo button in context menu
							doc.execCommand("insertHTML", false, REDO_HTML);
							doc.execCommand("undo", false, null);
						});

						interval = setInterval(function() {
							if(doc.getElementById("_wysihtml5-redo")) {
								cleanUp();
								that.redo();
							} else if(!doc.getElementById("_wysihtml5-undo")) {
								cleanUp();
								that.undo();
							}
						}, 400);

						if(!observed) {
							observed = true;
							dom.observe(document, "mousedown", cleanUp);
							dom.observe(doc, ["mousedown", "paste", "cut", "copy"], cleanUp);
						}
					});
				}

				this.editor
					.observe("newword:composer", function() {
						that.transact();
					})

				.observe("beforecommand:composer", function() {
					that.transact();
				});
			},

			transact: function() {
				var previousHtml = this.history[this.position - 1],
					currentHtml = this.composer.getValue();

				if(currentHtml == previousHtml) {
					return;
				}

				var length = this.history.length = this.position;
				if(length > MAX_HISTORY_ENTRIES) {
					this.history.shift();
					this.position--;
				}

				this.position++;
				this.history.push(currentHtml);
			},

			undo: function() {
				this.transact();

				if(this.position <= 1) {
					return;
				}

				this.set(this.history[--this.position - 1]);
				this.editor.fire("undo:composer");
			},

			redo: function() {
				if(this.position >= this.history.length) {
					return;
				}

				this.set(this.history[++this.position - 1]);
				this.editor.fire("redo:composer");
			},

			set: function(html) {
				this.composer.setValue(html);
				this.editor.focus(true);
			}
		});
})(wysihtml5);
/**
 * TODO: the following methods still need unit test coverage
 */
wysihtml5.views.View = Base.extend(
	/** @scope wysihtml5.views.View.prototype */
	{
		constructor: function(parent, textareaElement, config) {
			this.parent = parent;
			this.element = textareaElement;
			this.config = config;

			this._observeViewChange();
		},

		_observeViewChange: function() {
			var that = this;
			this.parent.observe("beforeload", function() {
				that.parent.observe("change_view", function(view) {
					if(view === that.name) {
						that.parent.currentView = that;
						that.show();
						// Using tiny delay here to make sure that the placeholder is set before focusing
						setTimeout(function() {
							that.focus();
						}, 0);
					} else {
						that.hide();
					}
				});
			});
		},

		focus: function() {
			if(this.element.ownerDocument.querySelector(":focus") === this.element) {
				return;
			}

			try {
				this.element.focus();
			} catch(e) {}
		},

		hide: function() {
			this.element.style.display = "none";
		},

		show: function() {
			this.element.style.display = "";
		},

		disable: function() {
			this.element.setAttribute("disabled", "disabled");
		},

		enable: function() {
			this.element.removeAttribute("disabled");
		}
	});
(function(wysihtml5) {
	var dom = wysihtml5.dom,
		browser = wysihtml5.browser;

	wysihtml5.views.Composer = wysihtml5.views.View.extend(
		/** @scope wysihtml5.views.Composer.prototype */
		{
			name: "composer",

			// Needed for firefox in order to display a proper caret in an empty contentEditable
			CARET_HACK: "<br>",

			constructor: function(parent, textareaElement, config) {
				this.base(parent, textareaElement, config);
				this.textarea = this.parent.textarea;
				this._initSandbox();
			},

			clear: function() {
				this.element.innerHTML = browser.displaysCaretInEmptyContentEditableCorrectly() ? "" : this.CARET_HACK;
			},

			getValue: function(parse) {
				var value = this.isEmpty() ? "" : wysihtml5.quirks.getCorrectInnerHTML(this.element);

				if(parse) {
					value = this.parent.parse(value);
				}

				// Replace all "zero width no breaking space" chars
				// which are used as hacks to enable some functionalities
				// Also remove all CARET hacks that somehow got left
				value = wysihtml5.lang.string(value).replace(wysihtml5.INVISIBLE_SPACE).by("");

				return value;
			},

			setValue: function(html, parse) {
				if(parse) {
					html = this.parent.parse(html);
				}
				this.element.innerHTML = html;
			},

			show: function() {
				this.iframe.style.display = this._displayStyle || "";

				// Firefox needs this, otherwise contentEditable becomes uneditable
				this.disable();
				this.enable();
			},

			hide: function() {
				this._displayStyle = dom.getStyle("display").from(this.iframe);
				if(this._displayStyle === "none") {
					this._displayStyle = null;
				}
				this.iframe.style.display = "none";
			},

			disable: function() {
				this.element.removeAttribute("contentEditable");
				this.base();
			},

			enable: function() {
				this.element.setAttribute("contentEditable", "true");
				this.base();
			},

			focus: function(setToEnd) {
				// IE 8 fires the focus event after .focus()
				// This is needed by our simulate_placeholder.js to work
				// therefore we clear it ourselves this time
				if(wysihtml5.browser.doesAsyncFocus() && this.hasPlaceholderSet()) {
					this.clear();
				}

				this.base();

				var lastChild = this.element.lastChild;
				if(setToEnd && lastChild) {
					if(lastChild.nodeName === "BR") {
						this.selection.setBefore(this.element.lastChild);
					} else {
						this.selection.setAfter(this.element.lastChild);
					}
				}
			},

			getTextContent: function() {
				return dom.getTextContent(this.element);
			},

			hasPlaceholderSet: function() {
				return this.getTextContent() == this.textarea.element.getAttribute("placeholder");
			},

			isEmpty: function() {
				var innerHTML = this.element.innerHTML,
					elementsWithVisualValue = "blockquote, ul, ol, img, embed, object, table, iframe, svg, video, audio, button, input, select, textarea";
				return innerHTML === "" ||
					innerHTML === this.CARET_HACK ||
					this.hasPlaceholderSet() ||
					(this.getTextContent() === "" && !this.element.querySelector(elementsWithVisualValue));
			},

			_initSandbox: function() {
				var that = this;

				this.sandbox = new dom.Sandbox(function() {
					that._create();
				}, {
					stylesheets: this.config.stylesheets
				});
				this.iframe = this.sandbox.getIframe();

				// Create hidden field which tells the server after submit, that the user used an wysiwyg editor
				var hiddenField = document.createElement("input");
				hiddenField.type = "hidden";
				hiddenField.name = "_wysihtml5_mode";
				hiddenField.value = 1;

				// Store reference to current wysihtml5 instance on the textarea element
				var textareaElement = this.textarea.element;
				dom.insert(this.iframe).after(textareaElement);
				dom.insert(hiddenField).after(textareaElement);
			},

			_create: function() {
				var that = this;

				this.doc = this.sandbox.getDocument();
				this.element = this.doc.body;
				this.textarea = this.parent.textarea;
				this.element.innerHTML = this.textarea.getValue(true);
				this.enable();

				// Make sure our selection handler is ready
				this.selection = new wysihtml5.Selection(this.parent);

				// Make sure commands dispatcher is ready
				this.commands = new wysihtml5.Commands(this.parent);

				dom.copyAttributes([
					"className", "spellcheck", "title", "lang", "dir", "accessKey"
				]).from(this.textarea.element).to(this.element);

				dom.addClass(this.element, this.config.composerClassName);

				// Make the editor look like the original textarea, by syncing styles
				if(this.config.style) {
					this.style();
				}

				this.observe();

				var name = this.config.name;
				if(name) {
					dom.addClass(this.element, name);
					dom.addClass(this.iframe, name);
				}

				// Simulate html5 placeholder attribute on contentEditable element
				var placeholderText = typeof(this.config.placeholder) === "string" ?
					this.config.placeholder :
					this.textarea.element.getAttribute("placeholder");
				if(placeholderText) {
					dom.simulatePlaceholder(this.parent, this, placeholderText);
				}

				// Make sure that the browser avoids using inline styles whenever possible
				this.commands.exec("styleWithCSS", false);

				this._initAutoLinking();
				this._initObjectResizing();
				this._initUndoManager();

				// Simulate html5 autofocus on contentEditable element
				if(this.textarea.element.hasAttribute("autofocus") || document.querySelector(":focus") == this.textarea.element) {
					setTimeout(function() {
						that.focus();
					}, 100);
				}

				wysihtml5.quirks.insertLineBreakOnReturn(this);

				// IE sometimes leaves a single paragraph, which can't be removed by the user
				if(!browser.clearsContentEditableCorrectly()) {
					wysihtml5.quirks.ensureProperClearing(this);
				}

				if(!browser.clearsListsInContentEditableCorrectly()) {
					wysihtml5.quirks.ensureProperClearingOfLists(this);
				}

				// Set up a sync that makes sure that textarea and editor have the same content
				if(this.initSync && this.config.sync) {
					this.initSync();
				}

				// Okay hide the textarea, we are ready to go
				this.textarea.hide();

				// Fire global (before-)load event
				this.parent.fire("beforeload").fire("load");
			},

			_initAutoLinking: function() {
				var that = this,
					supportsDisablingOfAutoLinking = browser.canDisableAutoLinking(),
					supportsAutoLinking = browser.doesAutoLinkingInContentEditable();
				if(supportsDisablingOfAutoLinking) {
					this.commands.exec("autoUrlDetect", false);
				}

				if(!this.config.autoLink) {
					return;
				}

				// Only do the auto linking by ourselves when the browser doesn't support auto linking
				// OR when he supports auto linking but we were able to turn it off (IE9+)
				if(!supportsAutoLinking || (supportsAutoLinking && supportsDisablingOfAutoLinking)) {
					this.parent.observe("newword:composer", function() {
						that.selection.executeAndRestore(function(startContainer, endContainer) {
							dom.autoLink(endContainer.parentNode);
						});
					});
				}

				// Assuming we have the following:
				//  <a href="http://www.google.de">http://www.google.de</a>
				// If a user now changes the url in the innerHTML we want to make sure that
				// it's synchronized with the href attribute (as long as the innerHTML is still a url)
				var // Use a live NodeList to check whether there are any links in the document
					links = this.sandbox.getDocument().getElementsByTagName("a"),
					// The autoLink helper method reveals a reg exp to detect correct urls
					urlRegExp = dom.autoLink.URL_REG_EXP,
					getTextContent = function(element) {
						var textContent = wysihtml5.lang.string(dom.getTextContent(element)).trim();
						if(textContent.substr(0, 4) === "www.") {
							textContent = "http://" + textContent;
						}
						return textContent;
					};

				dom.observe(this.element, "keydown", function(event) {
					if(!links.length) {
						return;
					}

					var selectedNode = that.selection.getSelectedNode(event.target.ownerDocument),
						link = dom.getParentElement(selectedNode, {
							nodeName: "A"
						}, 4),
						textContent;

					if(!link) {
						return;
					}

					textContent = getTextContent(link);
					// keydown is fired before the actual content is changed
					// therefore we set a timeout to change the href
					setTimeout(function() {
						var newTextContent = getTextContent(link);
						if(newTextContent === textContent) {
							return;
						}

						// Only set href when new href looks like a valid url
						if(newTextContent.match(urlRegExp)) {
							link.setAttribute("href", newTextContent);
						}
					}, 0);
				});
			},

			_initObjectResizing: function() {
				var properties = ["width", "height"],
					propertiesLength = properties.length,
					element = this.element;

				this.commands.exec("enableObjectResizing", this.config.allowObjectResizing);

				if(this.config.allowObjectResizing) {
					// IE sets inline styles after resizing objects
					// The following lines make sure that the width/height css properties
					// are copied over to the width/height attributes
					if(browser.supportsEvent("resizeend")) {
						dom.observe(element, "resizeend", function(event) {
							var target = event.target || event.srcElement,
								style = target.style,
								i = 0,
								property;
							for(; i < propertiesLength; i++) {
								property = properties[i];
								if(style[property]) {
									target.setAttribute(property, parseInt(style[property], 10));
									style[property] = "";
								}
							}
							// After resizing IE sometimes forgets to remove the old resize handles
							wysihtml5.quirks.redraw(element);
						});
					}
				} else {
					if(browser.supportsEvent("resizestart")) {
						dom.observe(element, "resizestart", function(event) {
							event.preventDefault();
						});
					}
				}
			},

			_initUndoManager: function() {
				new wysihtml5.UndoManager(this.parent);
			}
		});
})(wysihtml5);
(function(wysihtml5) {
	var dom = wysihtml5.dom,
		doc = document,
		win = window,
		HOST_TEMPLATE = doc.createElement("div"),
		/**
		 * Styles to copy from textarea to the composer element
		 */
		TEXT_FORMATTING = [
			"background-color",
			"color", "cursor",
			"font-family", "font-size", "font-style", "font-variant", "font-weight",
			"line-height", "letter-spacing",
			"text-align", "text-decoration", "text-indent", "text-rendering",
			"word-break", "word-wrap", "word-spacing"
		],
		/**
		 * Styles to copy from textarea to the iframe
		 */
		BOX_FORMATTING = [
			"background-color",
			"border-collapse",
			"border-bottom-color", "border-bottom-style", "border-bottom-width",
			"border-left-color", "border-left-style", "border-left-width",
			"border-right-color", "border-right-style", "border-right-width",
			"border-top-color", "border-top-style", "border-top-width",
			"clear", "display", "float",
			"margin-bottom", "margin-left", "margin-right", "margin-top",
			"outline-color", "outline-offset", "outline-width", "outline-style",
			"padding-left", "padding-right", "padding-top", "padding-bottom",
			"position", "top", "left", "right", "bottom", "z-index",
			"vertical-align", "text-align",
			"-webkit-box-sizing", "-moz-box-sizing", "-ms-box-sizing", "box-sizing",
			"-webkit-box-shadow", "-moz-box-shadow", "-ms-box-shadow", "box-shadow",
			"-webkit-border-top-right-radius", "-moz-border-radius-topright", "border-top-right-radius",
			"-webkit-border-bottom-right-radius", "-moz-border-radius-bottomright", "border-bottom-right-radius",
			"-webkit-border-bottom-left-radius", "-moz-border-radius-bottomleft", "border-bottom-left-radius",
			"-webkit-border-top-left-radius", "-moz-border-radius-topleft", "border-top-left-radius",
			"width", "height"
		],
		/**
		 * Styles to sync while the window gets resized
		 */
		RESIZE_STYLE = [
			"width", "height",
			"top", "left", "right", "bottom"
		],
		ADDITIONAL_CSS_RULES = [
			"html             { height: 100%; }",
			"body             { min-height: 100%; padding: 0; margin: 0; margin-top: -1px; padding-top: 1px; }",
			"._wysihtml5-temp { display: none; }",
			wysihtml5.browser.isGecko ?
			"body.placeholder { color: graytext !important; }" :
			"body.placeholder { color: #a9a9a9 !important; }",
			"body[disabled]   { background-color: #eee !important; color: #999 !important; cursor: default !important; }",
			// Ensure that user see's broken images and can delete them
			"img:-moz-broken  { -moz-force-broken-image-icon: 1; height: 24px; width: 24px; }"
		];

	/**
	 * With "setActive" IE offers a smart way of focusing elements without scrolling them into view:
	 * http://msdn.microsoft.com/en-us/library/ms536738(v=vs.85).aspx
	 *
	 * Other browsers need a more hacky way: (pssst don't tell my mama)
	 * In order to prevent the element being scrolled into view when focusing it, we simply
	 * move it out of the scrollable area, focus it, and reset it's position
	 */
	var focusWithoutScrolling = function(element) {
		if(element.setActive) {
			// Following line could cause a js error when the textarea is invisible
			// See https://github.com/xing/wysihtml5/issues/9
			try {
				element.setActive();
			} catch(e) {}
		} else {
			var elementStyle = element.style,
				originalScrollTop = doc.documentElement.scrollTop || doc.body.scrollTop,
				originalScrollLeft = doc.documentElement.scrollLeft || doc.body.scrollLeft,
				originalStyles = {
					position: elementStyle.position,
					top: elementStyle.top,
					left: elementStyle.left,
					WebkitUserSelect: elementStyle.WebkitUserSelect
				};

			dom.setStyles({
				position: "absolute",
				top: "-99999px",
				left: "-99999px",
				// Don't ask why but temporarily setting -webkit-user-select to none makes the whole thing performing smoother
				WebkitUserSelect: "none"
			}).on(element);

			element.focus();

			dom.setStyles(originalStyles).on(element);

			if(win.scrollTo) {
				// Some browser extensions unset this method to prevent annoyances
				// "Better PopUp Blocker" for Chrome http://code.google.com/p/betterpopupblocker/source/browse/trunk/blockStart.js#100
				// Issue: http://code.google.com/p/betterpopupblocker/issues/detail?id=1
				win.scrollTo(originalScrollLeft, originalScrollTop);
			}
		}
	};

	wysihtml5.views.Composer.prototype.style = function() {
		var that = this,
			originalActiveElement = doc.querySelector(":focus"),
			textareaElement = this.textarea.element,
			hasPlaceholder = textareaElement.hasAttribute("placeholder"),
			originalPlaceholder = hasPlaceholder && textareaElement.getAttribute("placeholder");
		this.focusStylesHost = this.focusStylesHost || HOST_TEMPLATE.cloneNode(false);
		this.blurStylesHost = this.blurStylesHost || HOST_TEMPLATE.cloneNode(false);

		// Remove placeholder before copying (as the placeholder has an affect on the computed style)
		if(hasPlaceholder) {
			textareaElement.removeAttribute("placeholder");
		}

		if(textareaElement === originalActiveElement) {
			textareaElement.blur();
		}

		// --------- iframe styles (has to be set before editor styles, otherwise IE9 sets wrong fontFamily on blurStylesHost) ---------
		dom.copyStyles(BOX_FORMATTING).from(textareaElement).to(this.iframe).andTo(this.blurStylesHost);

		// --------- editor styles ---------
		dom.copyStyles(TEXT_FORMATTING).from(textareaElement).to(this.element).andTo(this.blurStylesHost);

		// --------- apply standard rules ---------
		dom.insertCSS(ADDITIONAL_CSS_RULES).into(this.element.ownerDocument);

		// --------- :focus styles ---------
		focusWithoutScrolling(textareaElement);
		dom.copyStyles(BOX_FORMATTING).from(textareaElement).to(this.focusStylesHost);
		dom.copyStyles(TEXT_FORMATTING).from(textareaElement).to(this.focusStylesHost);

		// Make sure that we don't change the display style of the iframe when copying styles oblur/onfocus
		// this is needed for when the change_view event is fired where the iframe is hidden and then
		// the blur event fires and re-displays it
		var boxFormattingStyles = wysihtml5.lang.array(BOX_FORMATTING).without(["display"]);

		// --------- restore focus ---------
		if(originalActiveElement) {
			originalActiveElement.focus();
		} else {
			textareaElement.blur();
		}

		// --------- restore placeholder ---------
		if(hasPlaceholder) {
			textareaElement.setAttribute("placeholder", originalPlaceholder);
		}

		// When copying styles, we only get the computed style which is never returned in percent unit
		// Therefore we've to recalculate style onresize
		if(!wysihtml5.browser.hasCurrentStyleProperty()) {
			var winObserver = dom.observe(win, "resize", function() {
				// Remove event listener if composer doesn't exist anymore
				if(!dom.contains(document.documentElement, that.iframe)) {
					winObserver.stop();
					return;
				}
				var originalTextareaDisplayStyle = dom.getStyle("display").from(textareaElement),
					originalComposerDisplayStyle = dom.getStyle("display").from(that.iframe);
				textareaElement.style.display = "";
				that.iframe.style.display = "none";
				dom.copyStyles(RESIZE_STYLE)
					.from(textareaElement)
					.to(that.iframe)
					.andTo(that.focusStylesHost)
					.andTo(that.blurStylesHost);
				that.iframe.style.display = originalComposerDisplayStyle;
				textareaElement.style.display = originalTextareaDisplayStyle;
			});
		}

		// --------- Sync focus/blur styles ---------
		this.parent.observe("focus:composer", function() {
			dom.copyStyles(boxFormattingStyles).from(that.focusStylesHost).to(that.iframe);
			dom.copyStyles(TEXT_FORMATTING).from(that.focusStylesHost).to(that.element);
		});

		this.parent.observe("blur:composer", function() {
			dom.copyStyles(boxFormattingStyles).from(that.blurStylesHost).to(that.iframe);
			dom.copyStyles(TEXT_FORMATTING).from(that.blurStylesHost).to(that.element);
		});

		return this;
	};
})(wysihtml5);
/**
 * Taking care of events
 *  - Simulating 'change' event on contentEditable element
 *  - Handling drag & drop logic
 *  - Catch paste events
 *  - Dispatch proprietary newword:composer event
 *  - Keyboard shortcuts
 */
(function(wysihtml5) {
	var dom = wysihtml5.dom,
		browser = wysihtml5.browser,
		/**
		 * Map keyCodes to query commands
		 */
		shortcuts = {
			"66": "bold", // B
			"73": "italic", // I
			"85": "underline" // U
		};

	wysihtml5.views.Composer.prototype.observe = function() {
		var that = this,
			state = this.getValue(),
			iframe = this.sandbox.getIframe(),
			element = this.element,
			focusBlurElement = browser.supportsEventsInIframeCorrectly() ? element : this.sandbox.getWindow(),
			// Firefox < 3.5 doesn't support the drop event, instead it supports a so called "dragdrop" event which behaves almost the same
			pasteEvents = browser.supportsEvent("drop") ? ["drop", "paste"] : ["dragdrop", "paste"];

		// --------- destroy:composer event ---------
		dom.observe(iframe, "DOMNodeRemoved", function() {
			clearInterval(domNodeRemovedInterval);
			that.parent.fire("destroy:composer");
		});

		// DOMNodeRemoved event is not supported in IE 8
		var domNodeRemovedInterval = setInterval(function() {
			if(!dom.contains(document.documentElement, iframe)) {
				clearInterval(domNodeRemovedInterval);
				that.parent.fire("destroy:composer");
			}
		}, 250);

		// --------- Focus & blur logic ---------
		dom.observe(focusBlurElement, "focus", function() {
			that.parent.fire("focus").fire("focus:composer");

			// Delay storing of state until all focus handler are fired
			// especially the one which resets the placeholder
			setTimeout(function() {
				state = that.getValue();
			}, 0);
		});

		dom.observe(focusBlurElement, "blur", function() {
			if(state !== that.getValue()) {
				that.parent.fire("change").fire("change:composer");
			}
			that.parent.fire("blur").fire("blur:composer");
		});

		if(wysihtml5.browser.isIos()) {
			// When on iPad/iPhone/IPod after clicking outside of editor, the editor loses focus
			// but the UI still acts as if the editor has focus (blinking caret and onscreen keyboard visible)
			// We prevent that by focusing a temporary input element which immediately loses focus
			dom.observe(element, "blur", function() {
				var input = element.ownerDocument.createElement("input"),
					originalScrollTop = document.documentElement.scrollTop || document.body.scrollTop,
					originalScrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft;
				try {
					that.selection.insertNode(input);
				} catch(e) {
					element.appendChild(input);
				}
				input.focus();
				input.parentNode.removeChild(input);

				window.scrollTo(originalScrollLeft, originalScrollTop);
			});
		}

		// --------- Drag & Drop logic ---------
		dom.observe(element, "dragenter", function() {
			that.parent.fire("unset_placeholder");
		});

		if(browser.firesOnDropOnlyWhenOnDragOverIsCancelled()) {
			dom.observe(element, ["dragover", "dragenter"], function(event) {
				event.preventDefault();
			});
		}

		dom.observe(element, pasteEvents, function(event) {
			var dataTransfer = event.dataTransfer,
				data;

			if(dataTransfer && browser.supportsDataTransfer()) {
				data = dataTransfer.getData("text/html") || dataTransfer.getData("text/plain");
			}
			if(data) {
				element.focus();
				that.commands.exec("insertHTML", data);
				that.parent.fire("paste").fire("paste:composer");
				event.stopPropagation();
				event.preventDefault();
			} else {
				setTimeout(function() {
					that.parent.fire("paste").fire("paste:composer");
				}, 0);
			}
		});

		// --------- neword event ---------
		dom.observe(element, "keyup", function(event) {
			var keyCode = event.keyCode;
			if(keyCode === wysihtml5.SPACE_KEY || keyCode === wysihtml5.ENTER_KEY) {
				that.parent.fire("newword:composer");
			}
		});

		this.parent.observe("paste:composer", function() {
			setTimeout(function() {
				that.parent.fire("newword:composer");
			}, 0);
		});

		// --------- Make sure that images are selected when clicking on them ---------
		if(!browser.canSelectImagesInContentEditable()) {
			dom.observe(element, "mousedown", function(event) {
				var target = event.target;
				if(target.nodeName === "IMG") {
					that.selection.selectNode(target);
					event.preventDefault();
				}
			});
		}

		// --------- Shortcut logic ---------
		dom.observe(element, "keydown", function(event) {
			var keyCode = event.keyCode,
				command = shortcuts[keyCode];
			if((event.ctrlKey || event.metaKey) && !event.altKey && command) {
				that.commands.exec(command);
				event.preventDefault();
			}
		});

		// --------- Make sure that when pressing backspace/delete on selected images deletes the image and it's anchor ---------
		dom.observe(element, "keydown", function(event) {
			var target = that.selection.getSelectedNode(true),
				keyCode = event.keyCode,
				parent;
			if(target && target.nodeName === "IMG" && (keyCode === wysihtml5.BACKSPACE_KEY || keyCode === wysihtml5.DELETE_KEY)) { // 8 => backspace, 46 => delete
				parent = target.parentNode;
				// delete the <img>
				parent.removeChild(target);
				// and it's parent <a> too if it hasn't got any other child nodes
				if(parent.nodeName === "A" && !parent.firstChild) {
					parent.parentNode.removeChild(parent);
				}

				setTimeout(function() {
					wysihtml5.quirks.redraw(element);
				}, 0);
				event.preventDefault();
			}
		});

		// --------- Show url in tooltip when hovering links or images ---------
		var titlePrefixes = {
			IMG: "Image: ",
			A: "Link: "
		};

		dom.observe(element, "mouseover", function(event) {
			var target = event.target,
				nodeName = target.nodeName,
				title;
			if(nodeName !== "A" && nodeName !== "IMG") {
				return;
			}
			var hasTitle = target.hasAttribute("title");
			if(!hasTitle) {
				title = titlePrefixes[nodeName] + (target.getAttribute("href") || target.getAttribute("src"));
				target.setAttribute("title", title);
			}
		});
	};
})(wysihtml5);
/**
 * Class that takes care that the value of the composer and the textarea is always in sync
 */
(function(wysihtml5) {
	var INTERVAL = 400;

	wysihtml5.views.Synchronizer = Base.extend(
		/** @scope wysihtml5.views.Synchronizer.prototype */
		{

			constructor: function(editor, textarea, composer) {
				this.editor = editor;
				this.textarea = textarea;
				this.composer = composer;

				this._observe();
			},

			/**
			 * Sync html from composer to textarea
			 * Takes care of placeholders
			 * @param {Boolean} shouldParseHtml Whether the html should be sanitized before inserting it into the textarea
			 */
			fromComposerToTextarea: function(shouldParseHtml) {
				this.textarea.setValue(wysihtml5.lang.string(this.composer.getValue()).trim(), shouldParseHtml);
			},

			/**
			 * Sync value of textarea to composer
			 * Takes care of placeholders
			 * @param {Boolean} shouldParseHtml Whether the html should be sanitized before inserting it into the composer
			 */
			fromTextareaToComposer: function(shouldParseHtml) {
				var textareaValue = this.textarea.getValue();
				if(textareaValue) {
					this.composer.setValue(textareaValue, shouldParseHtml);
				} else {
					this.composer.clear();
					this.editor.fire("set_placeholder");
				}
			},

			/**
			 * Invoke syncing based on view state
			 * @param {Boolean} shouldParseHtml Whether the html should be sanitized before inserting it into the composer/textarea
			 */
			sync: function(shouldParseHtml) {
				if(this.editor.currentView.name === "textarea") {
					this.fromTextareaToComposer(shouldParseHtml);
				} else {
					this.fromComposerToTextarea(shouldParseHtml);
				}
			},

			/**
			 * Initializes interval-based syncing
			 * also makes sure that on-submit the composer's content is synced with the textarea
			 * immediately when the form gets submitted
			 */
			_observe: function() {
				var interval,
					that = this,
					form = this.textarea.element.form,
					startInterval = function() {
						interval = setInterval(function() {
							that.fromComposerToTextarea();
						}, INTERVAL);
					},
					stopInterval = function() {
						clearInterval(interval);
						interval = null;
					};

				startInterval();

				if(form) {
					// If the textarea is in a form make sure that after onreset and onsubmit the composer
					// has the correct state
					wysihtml5.dom.observe(form, "submit", function() {
						that.sync(true);
					});
					wysihtml5.dom.observe(form, "reset", function() {
						setTimeout(function() {
							that.fromTextareaToComposer();
						}, 0);
					});
				}

				this.editor.observe("change_view", function(view) {
					if(view === "composer" && !interval) {
						that.fromTextareaToComposer(true);
						startInterval();
					} else if(view === "textarea") {
						that.fromComposerToTextarea(true);
						stopInterval();
					}
				});

				this.editor.observe("destroy:composer", stopInterval);
			}
		});
})(wysihtml5);
wysihtml5.views.Textarea = wysihtml5.views.View.extend(
	/** @scope wysihtml5.views.Textarea.prototype */
	{
		name: "textarea",

		constructor: function(parent, textareaElement, config) {
			this.base(parent, textareaElement, config);

			this._observe();
		},

		clear: function() {
			this.element.value = "";
		},

		getValue: function(parse) {
			var value = this.isEmpty() ? "" : this.element.value;
			if(parse) {
				value = this.parent.parse(value);
			}
			return value;
		},

		setValue: function(html, parse) {
			if(parse) {
				html = this.parent.parse(html);
			}
			this.element.value = html;
		},

		hasPlaceholderSet: function() {
			var supportsPlaceholder = wysihtml5.browser.supportsPlaceholderAttributeOn(this.element),
				placeholderText = this.element.getAttribute("placeholder") || null,
				value = this.element.value,
				isEmpty = !value;
			return(supportsPlaceholder && isEmpty) || (value === placeholderText);
		},

		isEmpty: function() {
			return !wysihtml5.lang.string(this.element.value).trim() || this.hasPlaceholderSet();
		},

		_observe: function() {
			var element = this.element,
				parent = this.parent,
				eventMapping = {
					focusin: "focus",
					focusout: "blur"
				},
				/**
				 * Calling focus() or blur() on an element doesn't synchronously trigger the attached focus/blur events
				 * This is the case for focusin and focusout, so let's use them whenever possible, kkthxbai
				 */
				events = wysihtml5.browser.supportsEvent("focusin") ? ["focusin", "focusout", "change"] : ["focus", "blur", "change"];

			parent.observe("beforeload", function() {
				wysihtml5.dom.observe(element, events, function(event) {
					var eventName = eventMapping[event.type] || event.type;
					parent.fire(eventName).fire(eventName + ":textarea");
				});

				wysihtml5.dom.observe(element, ["paste", "drop"], function() {
					setTimeout(function() {
						parent.fire("paste").fire("paste:textarea");
					}, 0);
				});
			});
		}
	});
/**
 * Toolbar Dialog
 *
 * @param {Element} link The toolbar link which causes the dialog to show up
 * @param {Element} container The dialog container
 *
 * @example
 *    <!-- Toolbar link -->
 *    <a data-wysihtml5-command="insertImage">insert an image</a>
 *
 *    <!-- Dialog -->
 *    <div data-wysihtml5-dialog="insertImage" style="display: none;">
 *      <label>
 *        URL: <input data-wysihtml5-dialog-field="src" value="http://">
 *      </label>
 *      <label>
 *        Alternative text: <input data-wysihtml5-dialog-field="alt" value="">
 *      </label>
 *    </div>
 *
 *    <script>
 *      var dialog = new wysihtml5.toolbar.Dialog(
 *        document.querySelector("[data-wysihtml5-command='insertImage']"),
 *        document.querySelector("[data-wysihtml5-dialog='insertImage']")
 *      );
 *      dialog.observe("save", function(attributes) {
 *        // do something
 *      });
 *    </script>
 */
(function(wysihtml5) {
	var dom = wysihtml5.dom,
		CLASS_NAME_OPENED = "wysihtml5-command-dialog-opened",
		SELECTOR_FORM_ELEMENTS = "input, select, textarea",
		SELECTOR_FIELDS = "[data-wysihtml5-dialog-field]",
		ATTRIBUTE_FIELDS = "data-wysihtml5-dialog-field";

	wysihtml5.toolbar.Dialog = wysihtml5.lang.Dispatcher.extend(
		/** @scope wysihtml5.toolbar.Dialog.prototype */
		{
			constructor: function(link, container) {
				this.link = link;
				this.container = container;
			},

			_observe: function() {
				if(this._observed) {
					return;
				}

				var that = this,
					callbackWrapper = function(event) {
						var attributes = that._serialize();
						if(attributes == that.elementToChange) {
							that.fire("edit", attributes);
						} else {
							that.fire("save", attributes);
						}
						that.hide();
						event.preventDefault();
						event.stopPropagation();
					};

				dom.observe(that.link, "click", function(event) {
					if(dom.hasClass(that.link, CLASS_NAME_OPENED)) {
						setTimeout(function() {
							that.hide();
						}, 0);
					}
				});

				dom.observe(this.container, "keydown", function(event) {
					var keyCode = event.keyCode;
					if(keyCode === wysihtml5.ENTER_KEY) {
						callbackWrapper(event);
					}
					if(keyCode === wysihtml5.ESCAPE_KEY) {
						that.hide();
					}
				});

				dom.delegate(this.container, "[data-wysihtml5-dialog-action=save]", "click", callbackWrapper);

				dom.delegate(this.container, "[data-wysihtml5-dialog-action=cancel]", "click", function(event) {
					that.fire("cancel");
					that.hide();
					event.preventDefault();
					event.stopPropagation();
				});

				var formElements = this.container.querySelectorAll(SELECTOR_FORM_ELEMENTS),
					i = 0,
					length = formElements.length,
					_clearInterval = function() {
						clearInterval(that.interval);
					};
				for(; i < length; i++) {
					dom.observe(formElements[i], "change", _clearInterval);
				}

				this._observed = true;
			},

			/**
			 * Grabs all fields in the dialog and puts them in key=>value style in an object which
			 * then gets returned
			 */
			_serialize: function() {
				var data = this.elementToChange || {},
					fields = this.container.querySelectorAll(SELECTOR_FIELDS),
					length = fields.length,
					i = 0;
				for(; i < length; i++) {
					data[fields[i].getAttribute(ATTRIBUTE_FIELDS)] = fields[i].value;
				}
				return data;
			},

			/**
			 * Takes the attributes of the "elementToChange"
			 * and inserts them in their corresponding dialog input fields
			 * 
			 * Assume the "elementToChange" looks like this:
			 *    <a href="http://www.google.com" target="_blank">foo</a>
			 *
			 * and we have the following dialog:
			 *    <input type="text" data-wysihtml5-dialog-field="href" value="">
			 *    <input type="text" data-wysihtml5-dialog-field="target" value="">
			 * 
			 * after calling _interpolate() the dialog will look like this
			 *    <input type="text" data-wysihtml5-dialog-field="href" value="http://www.google.com">
			 *    <input type="text" data-wysihtml5-dialog-field="target" value="_blank">
			 *
			 * Basically it adopted the attribute values into the corresponding input fields
			 *
			 */
			_interpolate: function(avoidHiddenFields) {
				var field,
					fieldName,
					newValue,
					focusedElement = document.querySelector(":focus"),
					fields = this.container.querySelectorAll(SELECTOR_FIELDS),
					length = fields.length,
					i = 0;
				for(; i < length; i++) {
					field = fields[i];

					// Never change elements where the user is currently typing in
					if(field === focusedElement) {
						continue;
					}

					// Don't update hidden fields
					// See https://github.com/xing/wysihtml5/pull/14
					if(avoidHiddenFields && field.type === "hidden") {
						continue;
					}

					fieldName = field.getAttribute(ATTRIBUTE_FIELDS);
					newValue = this.elementToChange ? (this.elementToChange[fieldName] || "") : field.defaultValue;
					field.value = newValue;
				}
			},

			/**
			 * Show the dialog element
			 */
			show: function(elementToChange) {
				var that = this,
					firstField = this.container.querySelector(SELECTOR_FORM_ELEMENTS);
				this.elementToChange = elementToChange;
				this._observe();
				this._interpolate();
				if(elementToChange) {
					this.interval = setInterval(function() {
						that._interpolate(true);
					}, 500);
				}
				dom.addClass(this.link, CLASS_NAME_OPENED);
				this.container.style.display = "";
				this.fire("show");
				if(firstField && !elementToChange) {
					try {
						firstField.focus();
					} catch(e) {}
				}
			},

			/**
			 * Hide the dialog element
			 */
			hide: function() {
				clearInterval(this.interval);
				this.elementToChange = null;
				dom.removeClass(this.link, CLASS_NAME_OPENED);
				this.container.style.display = "none";
				this.fire("hide");
			}
		});
})(wysihtml5);
/**
 * Converts speech-to-text and inserts this into the editor
 * As of now (2011/03/25) this only is supported in Chrome >= 11
 *
 * Note that it sends the recorded audio to the google speech recognition api:
 * http://stackoverflow.com/questions/4361826/does-chrome-have-buil-in-speech-recognition-for-input-type-text-x-webkit-speec
 *
 * Current HTML5 draft can be found here
 * http://lists.w3.org/Archives/Public/public-xg-htmlspeech/2011Feb/att-0020/api-draft.html
 * 
 * "Accessing Google Speech API Chrome 11"
 * http://mikepultz.com/2011/03/accessing-google-speech-api-chrome-11/
 */
(function(wysihtml5) {
	var dom = wysihtml5.dom;

	var linkStyles = {
		position: "relative"
	};

	var wrapperStyles = {
		left: 0,
		margin: 0,
		opacity: 0,
		overflow: "hidden",
		padding: 0,
		position: "absolute",
		top: 0,
		zIndex: 1
	};

	var inputStyles = {
		cursor: "inherit",
		fontSize: "50px",
		height: "50px",
		marginTop: "-25px",
		outline: 0,
		padding: 0,
		position: "absolute",
		right: "-4px",
		top: "50%"
	};

	var inputAttributes = {
		"x-webkit-speech": "",
		"speech": ""
	};

	wysihtml5.toolbar.Speech = function(parent, link) {
		var input = document.createElement("input");
		if(!wysihtml5.browser.supportsSpeechApiOn(input)) {
			link.style.display = "none";
			return;
		}

		var wrapper = document.createElement("div");

		wysihtml5.lang.object(wrapperStyles).merge({
			width: link.offsetWidth + "px",
			height: link.offsetHeight + "px"
		});

		dom.insert(input).into(wrapper);
		dom.insert(wrapper).into(link);

		dom.setStyles(inputStyles).on(input);
		dom.setAttributes(inputAttributes).on(input)

		dom.setStyles(wrapperStyles).on(wrapper);
		dom.setStyles(linkStyles).on(link);

		var eventName = "onwebkitspeechchange" in input ? "webkitspeechchange" : "speechchange";
		dom.observe(input, eventName, function() {
			parent.execCommand("insertText", input.value);
			input.value = "";
		});

		dom.observe(input, "click", function(event) {
			if(dom.hasClass(link, "wysihtml5-command-disabled")) {
				event.preventDefault();
			}

			event.stopPropagation();
		});
	};
})(wysihtml5);
/**
 * Toolbar
 *
 * @param {Object} parent Reference to instance of Editor instance
 * @param {Element} container Reference to the toolbar container element
 *
 * @example
 *    <div id="toolbar">
 *      <a data-wysihtml5-command="createLink">insert link</a>
 *      <a data-wysihtml5-command="formatBlock" data-wysihtml5-command-value="h1">insert h1</a>
 *    </div>
 *
 *    <script>
 *      var toolbar = new wysihtml5.toolbar.Toolbar(editor, document.getElementById("toolbar"));
 *    </script>
 */
(function(wysihtml5) {
	var CLASS_NAME_COMMAND_DISABLED = "wysihtml5-command-disabled",
		CLASS_NAME_COMMANDS_DISABLED = "wysihtml5-commands-disabled",
		CLASS_NAME_COMMAND_ACTIVE = "wysihtml5-command-active",
		CLASS_NAME_ACTION_ACTIVE = "wysihtml5-action-active",
		dom = wysihtml5.dom;

	wysihtml5.toolbar.Toolbar = Base.extend(
		/** @scope wysihtml5.toolbar.Toolbar.prototype */
		{
			constructor: function(editor, container) {
				this.editor = editor;
				this.container = typeof(container) === "string" ? document.getElementById(container) : container;
				this.composer = editor.composer;

				this._getLinks("command");
				this._getLinks("action");

				this._observe();
				this.show();

				var speechInputLinks = this.container.querySelectorAll("[data-wysihtml5-command=insertSpeech]"),
					length = speechInputLinks.length,
					i = 0;
				for(; i < length; i++) {
					new wysihtml5.toolbar.Speech(this, speechInputLinks[i]);
				}
			},

			_getLinks: function(type) {
				var links = this[type + "Links"] = wysihtml5.lang.array(this.container.querySelectorAll("[data-wysihtml5-" + type + "]")).get(),
					length = links.length,
					i = 0,
					mapping = this[type + "Mapping"] = {},
					link,
					group,
					name,
					value,
					dialog;
				for(; i < length; i++) {
					link = links[i];
					name = link.getAttribute("data-wysihtml5-" + type);
					value = link.getAttribute("data-wysihtml5-" + type + "-value");
					group = this.container.querySelector("[data-wysihtml5-" + type + "-group='" + name + "']");
					dialog = this._getDialog(link, name);

					mapping[name + ":" + value] = {
						link: link,
						group: group,
						name: name,
						value: value,
						dialog: dialog,
						state: false
					};
				}
			},

			_getDialog: function(link, command) {
				var that = this,
					dialogElement = this.container.querySelector("[data-wysihtml5-dialog='" + command + "']"),
					dialog,
					caretBookmark;

				if(dialogElement) {
					dialog = new wysihtml5.toolbar.Dialog(link, dialogElement);

					dialog.observe("show", function() {
						caretBookmark = that.composer.selection.getBookmark();

						that.editor.fire("show:dialog", {
							command: command,
							dialogContainer: dialogElement,
							commandLink: link
						});
					});

					dialog.observe("save", function(attributes) {
						if(caretBookmark) {
							that.composer.selection.setBookmark(caretBookmark);
						}
						that._execCommand(command, attributes);

						that.editor.fire("save:dialog", {
							command: command,
							dialogContainer: dialogElement,
							commandLink: link
						});
					});

					dialog.observe("cancel", function() {
						that.editor.focus(false);
						that.editor.fire("cancel:dialog", {
							command: command,
							dialogContainer: dialogElement,
							commandLink: link
						});
					});
				}
				return dialog;
			},

			/**
			 * @example
			 *    var toolbar = new wysihtml5.Toolbar();
			 *    // Insert a <blockquote> element or wrap current selection in <blockquote>
			 *    toolbar.execCommand("formatBlock", "blockquote");
			 */
			execCommand: function(command, commandValue) {
				if(this.commandsDisabled) {
					return;
				}

				var commandObj = this.commandMapping[command + ":" + commandValue];

				// Show dialog when available
				if(commandObj && commandObj.dialog && !commandObj.state) {
					commandObj.dialog.show();
				} else {
					this._execCommand(command, commandValue);
				}
			},

			_execCommand: function(command, commandValue) {
				// Make sure that composer is focussed (false => don't move caret to the end)
				this.editor.focus(false);

				this.composer.commands.exec(command, commandValue);
				this._updateLinkStates();
			},

			execAction: function(action) {
				var editor = this.editor;
				switch(action) {
					case "change_view":
						if(editor.currentView === editor.textarea) {
							editor.fire("change_view", "composer");
						} else {
							editor.fire("change_view", "textarea");
						}
						break;
				}
			},

			_observe: function() {
				var that = this,
					editor = this.editor,
					container = this.container,
					links = this.commandLinks.concat(this.actionLinks),
					length = links.length,
					i = 0;

				for(; i < length; i++) {
					// 'javascript:;' and unselectable=on Needed for IE, but done in all browsers to make sure that all get the same css applied
					// (you know, a:link { ... } doesn't match anchors with missing href attribute)
					dom.setAttributes({
						href: "javascript:;",
						unselectable: "on"
					}).on(links[i]);
				}

				// Needed for opera
				dom.delegate(container, "[data-wysihtml5-command]", "mousedown", function(event) {
					event.preventDefault();
				});

				dom.delegate(container, "[data-wysihtml5-command]", "click", function(event) {
					var link = this,
						command = link.getAttribute("data-wysihtml5-command"),
						commandValue = link.getAttribute("data-wysihtml5-command-value");
					that.execCommand(command, commandValue);
					event.preventDefault();
				});

				dom.delegate(container, "[data-wysihtml5-action]", "click", function(event) {
					var action = this.getAttribute("data-wysihtml5-action");
					that.execAction(action);
					event.preventDefault();
				});

				editor.observe("focus:composer", function() {
					that.bookmark = null;
					clearInterval(that.interval);
					that.interval = setInterval(function() {
						that._updateLinkStates();
					}, 500);
				});

				editor.observe("blur:composer", function() {
					clearInterval(that.interval);
				});

				editor.observe("destroy:composer", function() {
					clearInterval(that.interval);
				});

				editor.observe("change_view", function(currentView) {
					// Set timeout needed in order to let the blur event fire first
					setTimeout(function() {
						that.commandsDisabled = (currentView !== "composer");
						that._updateLinkStates();
						if(that.commandsDisabled) {
							dom.addClass(container, CLASS_NAME_COMMANDS_DISABLED);
						} else {
							dom.removeClass(container, CLASS_NAME_COMMANDS_DISABLED);
						}
					}, 0);
				});
			},

			_updateLinkStates: function() {
				var element = this.composer.element,
					commandMapping = this.commandMapping,
					actionMapping = this.actionMapping,
					i,
					state,
					action,
					command;
				// every millisecond counts... this is executed quite often
				for(i in commandMapping) {
					command = commandMapping[i];
					if(this.commandsDisabled) {
						state = false;
						dom.removeClass(command.link, CLASS_NAME_COMMAND_ACTIVE);
						if(command.group) {
							dom.removeClass(command.group, CLASS_NAME_COMMAND_ACTIVE);
						}
						if(command.dialog) {
							command.dialog.hide();
						}
					} else {
						state = this.composer.commands.state(command.name, command.value);
						if(wysihtml5.lang.object(state).isArray()) {
							// Grab first and only object/element in state array, otherwise convert state into boolean
							// to avoid showing a dialog for multiple selected elements which may have different attributes
							// eg. when two links with different href are selected, the state will be an array consisting of both link elements
							// but the dialog interface can only update one
							state = state.length === 1 ? state[0] : true;
						}
						dom.removeClass(command.link, CLASS_NAME_COMMAND_DISABLED);
						if(command.group) {
							dom.removeClass(command.group, CLASS_NAME_COMMAND_DISABLED);
						}
					}

					if(command.state === state) {
						continue;
					}

					command.state = state;
					if(state) {
						dom.addClass(command.link, CLASS_NAME_COMMAND_ACTIVE);
						if(command.group) {
							dom.addClass(command.group, CLASS_NAME_COMMAND_ACTIVE);
						}
						if(command.dialog) {
							if(typeof(state) === "object") {
								command.dialog.show(state);
							} else {
								command.dialog.hide();
							}
						}
					} else {
						dom.removeClass(command.link, CLASS_NAME_COMMAND_ACTIVE);
						if(command.group) {
							dom.removeClass(command.group, CLASS_NAME_COMMAND_ACTIVE);
						}
						if(command.dialog) {
							command.dialog.hide();
						}
					}
				}

				for(i in actionMapping) {
					action = actionMapping[i];

					if(action.name === "change_view") {
						action.state = this.editor.currentView === this.editor.textarea;
						if(action.state) {
							dom.addClass(action.link, CLASS_NAME_ACTION_ACTIVE);
						} else {
							dom.removeClass(action.link, CLASS_NAME_ACTION_ACTIVE);
						}
					}
				}
			},

			show: function() {
				this.container.style.display = "";
			},

			hide: function() {
				this.container.style.display = "none";
			}
		});

})(wysihtml5);
/**
 * WYSIHTML5 Editor
 *
 * @param {Element} textareaElement Reference to the textarea which should be turned into a rich text interface
 * @param {Object} [config] See defaultConfig object below for explanation of each individual config option
 *
 * @events
 *    load
 *    beforeload (for internal use only)
 *    focus
 *    focus:composer
 *    focus:textarea
 *    blur
 *    blur:composer
 *    blur:textarea
 *    change
 *    change:composer
 *    change:textarea
 *    paste
 *    paste:composer
 *    paste:textarea
 *    newword:composer
 *    destroy:composer
 *    undo:composer
 *    redo:composer
 *    beforecommand:composer
 *    aftercommand:composer
 *    change_view
 */
(function(wysihtml5) {
	var undef;

	var defaultConfig = {
		// Give the editor a name, the name will also be set as class name on the iframe and on the iframe's body 
		name: undef,
		// Whether the editor should look like the textarea (by adopting styles)
		style: true,
		// Id of the toolbar element, pass falsey value if you don't want any toolbar logic
		toolbar: undef,
		// Whether urls, entered by the user should automatically become clickable-links
		autoLink: true,
		// Object which includes parser rules to apply when html gets inserted via copy & paste
		// See parser_rules/*.js for examples
		parserRules: {
			tags: {
				br: {},
				span: {},
				div: {},
				p: {}
			},
			classes: {}
		},
		// Parser method to use when the user inserts content via copy & paste
		parser: wysihtml5.dom.parse,
		// Class name which should be set on the contentEditable element in the created sandbox iframe, can be styled via the 'stylesheets' option
		composerClassName: "wysihtml5-editor",
		// Class name to add to the body when the wysihtml5 editor is supported
		bodyClassName: "wysihtml5-supported",
		// Array (or single string) of stylesheet urls to be loaded in the editor's iframe
		stylesheets: [],
		// Placeholder text to use, defaults to the placeholder attribute on the textarea element
		placeholderText: undef,
		// Whether the composer should allow the user to manually resize images, tables etc.
		allowObjectResizing: true,
		// Whether the rich text editor should be rendered on touch devices (wysihtml5 >= 0.3.0 comes with basic support for iOS 5)
		supportTouchDevices: true
	};

	wysihtml5.Editor = wysihtml5.lang.Dispatcher.extend(
		/** @scope wysihtml5.Editor.prototype */
		{
			constructor: function(textareaElement, config) {
				this.textareaElement = typeof(textareaElement) === "string" ? document.getElementById(textareaElement) : textareaElement;
				this.config = wysihtml5.lang.object({}).merge(defaultConfig).merge(config).get();
				this.textarea = new wysihtml5.views.Textarea(this, this.textareaElement, this.config);
				this.currentView = this.textarea;
				this._isCompatible = wysihtml5.browser.supported();

				// Sort out unsupported/unwanted browsers here
				if(!this._isCompatible || (!this.config.supportTouchDevices && wysihtml5.browser.isTouchDevice())) {
					var that = this;
					setTimeout(function() {
						that.fire("beforeload").fire("load");
					}, 0);
					return;
				}

				// Add class name to body, to indicate that the editor is supported
				wysihtml5.dom.addClass(document.body, this.config.bodyClassName);

				this.composer = new wysihtml5.views.Composer(this, this.textareaElement, this.config);
				this.currentView = this.composer;

				if(typeof(this.config.parser) === "function") {
					this._initParser();
				}

				this.observe("beforeload", function() {
					this.synchronizer = new wysihtml5.views.Synchronizer(this, this.textarea, this.composer);
					if(this.config.toolbar) {
						this.toolbar = new wysihtml5.toolbar.Toolbar(this, this.config.toolbar);
					}
				});

				try {
					console.log("Heya! This page is using wysihtml5 for rich text editing. Check out https://github.com/xing/wysihtml5");
				} catch(e) {}
			},

			isCompatible: function() {
				return this._isCompatible;
			},

			clear: function() {
				this.currentView.clear();
				return this;
			},

			getValue: function(parse) {
				return this.currentView.getValue(parse);
			},

			setValue: function(html, parse) {
				if(!html) {
					return this.clear();
				}
				this.currentView.setValue(html, parse);
				return this;
			},

			focus: function(setToEnd) {
				this.currentView.focus(setToEnd);
				return this;
			},

			/**
			 * Deactivate editor (make it readonly)
			 */
			disable: function() {
				this.currentView.disable();
				return this;
			},

			/**
			 * Activate editor
			 */
			enable: function() {
				this.currentView.enable();
				return this;
			},

			isEmpty: function() {
				return this.currentView.isEmpty();
			},

			hasPlaceholderSet: function() {
				return this.currentView.hasPlaceholderSet();
			},

			parse: function(htmlOrElement) {
				var returnValue = this.config.parser(htmlOrElement, this.config.parserRules, this.composer.sandbox.getDocument(), true);
				if(typeof(htmlOrElement) === "object") {
					wysihtml5.quirks.redraw(htmlOrElement);
				}
				return returnValue;
			},

			/**
			 * Prepare html parser logic
			 *  - Observes for paste and drop
			 */
			_initParser: function() {
				this.observe("paste:composer", function() {
					var keepScrollPosition = true,
						that = this;
					that.composer.selection.executeAndRestore(function() {
						wysihtml5.quirks.cleanPastedHTML(that.composer.element);
						that.parse(that.composer.element);
					}, keepScrollPosition);
				});

				this.observe("paste:textarea", function() {
					var value = this.textarea.getValue(),
						newValue;
					newValue = this.parse(value);
					this.textarea.setValue(newValue);
				});
			}
		});
})(wysihtml5);;
! function($, wysi) {
	"use strict";

	var tpl = {
		"font-styles": function(locale, options) {
			var size = (options && options.size) ? ' btn-' + options.size : '';
			return "<li class='dropdown'>" +
				"<a class='btn default dropdown-toggle" + size + "' data-toggle='dropdown' href='#'>" +
				"<i class='icon-font'></i>&nbsp;<span class='current-font'>" + locale.font_styles.normal + "</span>&nbsp;<i class='icon-angle-down'></i>" +
				"</a>" +
				"<ul class='dropdown-menu'>" +
				"<li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='div' tabindex='-1'>" + locale.font_styles.normal + "</a></li>" +
				"<li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h1' tabindex='-1'>" + locale.font_styles.h1 + "</a></li>" +
				"<li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h2' tabindex='-1'>" + locale.font_styles.h2 + "</a></li>" +
				"<li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h3' tabindex='-1'>" + locale.font_styles.h3 + "</a></li>" +
				"<li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h4'>" + locale.font_styles.h4 + "</a></li>" +
				"<li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h5'>" + locale.font_styles.h5 + "</a></li>" +
				"<li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h6'>" + locale.font_styles.h6 + "</a></li>" +
				"</ul>" +
				"</li>";
		},

		"emphasis": function(locale, options) {
			var size = (options && options.size) ? ' btn-' + options.size : '';
			return "<li>" +
				"<div class='btn-group'>" +
				"<a class='btn default" + size + "' data-wysihtml5-command='bold' title='CTRL+B' tabindex='-1'>" + locale.emphasis.bold + "</a>" +
				"<a class='btn default" + size + "' data-wysihtml5-command='italic' title='CTRL+I' tabindex='-1'>" + locale.emphasis.italic + "</a>" +
				"<a class='btn default" + size + "' data-wysihtml5-command='underline' title='CTRL+U' tabindex='-1'>" + locale.emphasis.underline + "</a>" +
				"</div>" +
				"</li>";
		},

		"lists": function(locale, options) {
			var size = (options && options.size) ? ' btn-' + options.size : '';
			return "<li>" +
				"<div class='btn-group'>" +
				"<a class='btn default" + size + "' data-wysihtml5-command='insertUnorderedList' title='" + locale.lists.unordered + "' tabindex='-1'><i class='icon-list'></i></a>" +
				"<a class='btn default" + size + "' data-wysihtml5-command='insertOrderedList' title='" + locale.lists.ordered + "' tabindex='-1'><i class='icon-th-list'></i></a>" +
				"<a class='btn default" + size + "' data-wysihtml5-command='Outdent' title='" + locale.lists.outdent + "' tabindex='-1'><i class='icon-indent-right'></i></a>" +
				"<a class='btn default" + size + "' data-wysihtml5-command='Indent' title='" + locale.lists.indent + "' tabindex='-1'><i class='icon-indent-left'></i></a>" +
				"</div>" +
				"</li>";
		},

		"link": function(locale, options) {
			var size = (options && options.size) ? ' btn-' + options.size : '';
			return "<li>" +
				"<div class='bootstrap-wysihtml5-insert-link-modal modal fade'>" +
				" <div class='modal-dialog'>" +
				" <div class='modal-content'>" +
				"<div class='modal-header'>" +
				"<a class='close' data-dismiss='modal'></a>" +
				"<h4 class='modal-title'>" + locale.link.insert + "</h4>" +
				"</div>" +
				"<div class='modal-body'>" +
				"<input type='text' value='http://' class='bootstrap-wysihtml5-insert-link-url1 form-control large'>" +
				"<label style='margin-top:5px;'> <input type='checkbox' class='bootstrap-wysihtml5-insert-link-target' checked>" + locale.link.target + "</label>" +
				"</div>" +
				"<div class='modal-footer'>" +
				"<a href='#' class='btn default' data-dismiss='modal'>" + locale.link.cancel + "</a>" +
				"<a href='#' class='btn btn-primary green' data-dismiss='modal'>" + locale.link.insert + "</a>" +
				"</div>" +
				"</div>" +
				"</div>" +
				"</div>" +
				"<a class='btn default" + size + "' data-wysihtml5-command='createLink' title='" + locale.link.insert + "' tabindex='-1'><i class='icon-share'></i></a>" +
				"</li>";
		},

		"image": function(locale, options) {
			var size = (options && options.size) ? ' btn-' + options.size : '';
			return "<li>" +
				"<div class='bootstrap-wysihtml5-insert-image-modal modal fade'>" +
				" <div class='modal-dialog'>" +
				" <div class='modal-content'>" +
				"<div class='modal-header'>" +
				"<a class='close' data-dismiss='modal'></a>" +
				"<h4 class='modal-title'>" + locale.image.insert + "</h4>" +
				"</div>" +
				"<div class='modal-body'>" +
				"<input type='text' value='http://' class='bootstrap-wysihtml5-insert-image-url form-control large'>" +
				"</div>" +
				"<div class='modal-footer'>" +
				"<a href='#' class='btn default' data-dismiss='modal'>" + locale.image.cancel + "</a>" +
				"<a href='#' class='btn btn-primary green' data-dismiss='modal'>" + locale.image.insert + "</a>" +
				"</div>" +
				"</div>" +
				"</div>" +
				"</div>" +
				"<a class='btn default" + size + "' data-wysihtml5-command='insertImage' title='" + locale.image.insert + "' tabindex='-1'><i class='icon-picture'></i></a>" +
				"</li>";
		},

		"html": function(locale, options) {
			var size = (options && options.size) ? ' btn-' + options.size : '';
			return "<li>" +
				"<div class='btn-group'>" +
				"<a class='btn default" + size + "' data-wysihtml5-action='change_view' title='" + locale.html.edit + "' tabindex='-1'><i class='icon-pencil'></i></a>" +
				"</div>" +
				"</li>";
		},

		"color": function(locale, options) {
			var size = (options && options.size) ? ' btn-' + options.size : '';
			return "<li class='dropdown'>" +
				"<a class='btn default dropdown-toggle" + size + "' data-toggle='dropdown' href='#' tabindex='-1'>" +
				"<span class='current-color'>" + locale.colours.black + "</span>&nbsp;<i class='icon-angle-down'></i>" +
				"</a>" +
				"<ul class='dropdown-menu'>" +
				"<li><div class='wysihtml5-colors' data-wysihtml5-command-value='black'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='black'>" + locale.colours.black + "</a></li>" +
				"<li><div class='wysihtml5-colors' data-wysihtml5-command-value='silver'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='silver'>" + locale.colours.silver + "</a></li>" +
				"<li><div class='wysihtml5-colors' data-wysihtml5-command-value='gray'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='gray'>" + locale.colours.gray + "</a></li>" +
				"<li><div class='wysihtml5-colors' data-wysihtml5-command-value='maroon'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='maroon'>" + locale.colours.maroon + "</a></li>" +
				"<li><div class='wysihtml5-colors' data-wysihtml5-command-value='red'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='red'>" + locale.colours.red + "</a></li>" +
				"<li><div class='wysihtml5-colors' data-wysihtml5-command-value='purple'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='purple'>" + locale.colours.purple + "</a></li>" +
				"<li><div class='wysihtml5-colors' data-wysihtml5-command-value='green'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='green'>" + locale.colours.green + "</a></li>" +
				"<li><div class='wysihtml5-colors' data-wysihtml5-command-value='olive'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='olive'>" + locale.colours.olive + "</a></li>" +
				"<li><div class='wysihtml5-colors' data-wysihtml5-command-value='navy'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='navy'>" + locale.colours.navy + "</a></li>" +
				"<li><div class='wysihtml5-colors' data-wysihtml5-command-value='blue'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='blue'>" + locale.colours.blue + "</a></li>" +
				"<li><div class='wysihtml5-colors' data-wysihtml5-command-value='orange'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='orange'>" + locale.colours.orange + "</a></li>" +
				"</ul>" +
				"</li>";
		}
	};

	var templates = function(key, locale, options) {
		return tpl[key](locale, options);
	};

	var Wysihtml5 = function(el, options) {
		this.el = el;
		var toolbarOpts = options || defaultOptions;
		for(var t in toolbarOpts.customTemplates) {
			tpl[t] = toolbarOpts.customTemplates[t];
		}
		this.toolbar = this.createToolbar(el, toolbarOpts);
		this.editor = this.createEditor(options);

		window.editor = this.editor;

		$('iframe.wysihtml5-sandbox').each(function(i, el) {
			$(el.contentWindow).off('focus.wysihtml5').on({
				'focus.wysihtml5': function() {
					$('li.dropdown').removeClass('open');
				}
			});
		});
	};

	Wysihtml5.prototype = {

		constructor: Wysihtml5,

		createEditor: function(options) {
			options = options || {};

			// Add the toolbar to a clone of the options object so multiple instances
			// of the WYISYWG don't break because "toolbar" is already defined
			options = $.extend(true, {}, options);
			options.toolbar = this.toolbar[0];

			var editor = new wysi.Editor(this.el[0], options);

			if(options && options.events) {
				for(var eventName in options.events) {
					editor.on(eventName, options.events[eventName]);
				}
			}
			return editor;
		},

		createToolbar: function(el, options) {
			var self = this;
			var toolbar = $("<ul/>", {
				'class': "wysihtml5-toolbar",
				'style': "display:none"
			});
			var culture = options.locale || defaultOptions.locale || "en";
			for(var key in defaultOptions) {
				var value = false;

				if(options[key] !== undefined) {
					if(options[key] === true) {
						value = true;
					}
				} else {
					value = defaultOptions[key];
				}

				if(value === true) {
					toolbar.append(templates(key, locale[culture], options));

					if(key === "html") {
						this.initHtml(toolbar);
					}

					if(key === "link") {
						this.initInsertLink(toolbar);
					}

					if(key === "image") {
						this.initInsertImage(toolbar);
					}
				}
			}

			if(options.toolbar) {
				for(key in options.toolbar) {
					toolbar.append(options.toolbar[key]);
				}
			}

			toolbar.find("a[data-wysihtml5-command='formatBlock']").click(function(e) {
				var target = e.target || e.srcElement;
				var el = $(target);
				self.toolbar.find('.current-font').text(el.html());
			});

			toolbar.find("a[data-wysihtml5-command='foreColor']").click(function(e) {
				var target = e.target || e.srcElement;
				var el = $(target);
				self.toolbar.find('.current-color').text(el.html());
			});

			this.el.before(toolbar);

			return toolbar;
		},

		initHtml: function(toolbar) {
			var changeViewSelector = "a[data-wysihtml5-action='change_view']";
			toolbar.find(changeViewSelector).click(function(e) {
				toolbar.find('a.btn').not(changeViewSelector).toggleClass('disabled');
			});
		},

		initInsertImage: function(toolbar) {
			var self = this;
			var insertImageModal = toolbar.find('.bootstrap-wysihtml5-insert-image-modal');
			var urlInput = insertImageModal.find('.bootstrap-wysihtml5-insert-image-url');
			var insertButton = insertImageModal.find('a.btn-primary');
			var initialValue = urlInput.val();
			var caretBookmark;

			var insertImage = function() {
				var url = urlInput.val();
				urlInput.val(initialValue);
				self.editor.currentView.element.focus();
				if(caretBookmark) {
					self.editor.composer.selection.setBookmark(caretBookmark);
					caretBookmark = null;
				}
				self.editor.composer.commands.exec("insertImage", url);
			};

			urlInput.keypress(function(e) {
				if(e.which == 13) {
					insertImage();
					insertImageModal.modal('hide');
				}
			});

			insertButton.click(insertImage);

			insertImageModal.on('shown', function() {
				urlInput.focus();
			});

			insertImageModal.on('hide', function() {
				self.editor.currentView.element.focus();
			});

			toolbar.find('a[data-wysihtml5-command=insertImage]').click(function() {
				var activeButton = $(this).hasClass("wysihtml5-command-active");

				if(!activeButton) {
					self.editor.currentView.element.focus(false);
					caretBookmark = self.editor.composer.selection.getBookmark();
					insertImageModal.appendTo('body').modal('show');
					insertImageModal.on('click.dismiss.modal', '[data-dismiss="modal"]', function(e) {
						e.stopPropagation();
					});
					return false;
				} else {
					return true;
				}
			});
		},

		initInsertLink: function(toolbar) {
			var self = this;
			var insertLinkModal = toolbar.find('.bootstrap-wysihtml5-insert-link-modal');
			var urlInput = insertLinkModal.find('.bootstrap-wysihtml5-insert-link-url');
			var targetInput = insertLinkModal.find('.bootstrap-wysihtml5-insert-link-target');
			var insertButton = insertLinkModal.find('a.btn-primary');
			var initialValue = urlInput.val();
			var caretBookmark;

			var insertLink = function() {
				var url = urlInput.val();
				urlInput.val(initialValue);
				self.editor.currentView.element.focus();
				if(caretBookmark) {
					self.editor.composer.selection.setBookmark(caretBookmark);
					caretBookmark = null;
				}

				var newWindow = targetInput.prop("checked");
				self.editor.composer.commands.exec("createLink", {
					'href': url,
					'target': (newWindow ? '_blank' : '_self'),
					'rel': (newWindow ? 'nofollow' : '')
				});
			};
			var pressedEnter = false;

			urlInput.keypress(function(e) {
				if(e.which == 13) {
					insertLink();
					insertLinkModal.modal('hide');
				}
			});

			insertButton.click(insertLink);

			insertLinkModal.on('shown', function() {
				urlInput.focus();
			});

			insertLinkModal.on('hide', function() {
				self.editor.currentView.element.focus();
			});

			toolbar.find('a[data-wysihtml5-command=createLink]').click(function() {
				var activeButton = $(this).hasClass("wysihtml5-command-active");

				if(!activeButton) {
					self.editor.currentView.element.focus(false);
					caretBookmark = self.editor.composer.selection.getBookmark();
					insertLinkModal.appendTo('body').modal('show');
					App.initUniform(); //initialize uniform checkboxes
					insertLinkModal.on('click.dismiss.modal', '[data-dismiss="modal"]', function(e) {
						e.stopPropagation();
					});
					return false;
				} else {
					return true;
				}
			});
		}
	};

	// these define our public api
	var methods = {
		resetDefaults: function() {
			$.fn.wysihtml5.defaultOptions = $.extend(true, {}, $.fn.wysihtml5.defaultOptionsCache);
		},
		bypassDefaults: function(options) {
			return this.each(function() {
				var $this = $(this);
				$this.data('wysihtml5', new Wysihtml5($this, options));
			});
		},
		shallowExtend: function(options) {
			var settings = $.extend({}, $.fn.wysihtml5.defaultOptions, options || {}, $(this).data());
			var that = this;
			return methods.bypassDefaults.apply(that, [settings]);
		},
		deepExtend: function(options) {
			var settings = $.extend(true, {}, $.fn.wysihtml5.defaultOptions, options || {});
			var that = this;
			return methods.bypassDefaults.apply(that, [settings]);
		},
		init: function(options) {
			var that = this;
			return methods.shallowExtend.apply(that, [options]);
		}
	};

	$.fn.wysihtml5 = function(method) {
		if(methods[method]) {
			return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
		} else if(typeof method === 'object' || !method) {
			return methods.init.apply(this, arguments);
		} else {
			$.error('Method ' + method + ' does not exist on jQuery.wysihtml5');
		}
	};

	$.fn.wysihtml5.Constructor = Wysihtml5;

	var defaultOptions = $.fn.wysihtml5.defaultOptions = {
		"font-styles": true,
		"color": false,
		"emphasis": true,
		"lists": true,
		"html": false,
		"link": true,
		"image": true,
		events: {},
		parserRules: {
			classes: {
				// (path_to_project/lib/css/wysiwyg-color.css)
				"wysiwyg-color-silver": 1,
				"wysiwyg-color-gray": 1,
				"wysiwyg-color-white": 1,
				"wysiwyg-color-maroon": 1,
				"wysiwyg-color-red": 1,
				"wysiwyg-color-purple": 1,
				"wysiwyg-color-fuchsia": 1,
				"wysiwyg-color-green": 1,
				"wysiwyg-color-lime": 1,
				"wysiwyg-color-olive": 1,
				"wysiwyg-color-yellow": 1,
				"wysiwyg-color-navy": 1,
				"wysiwyg-color-blue": 1,
				"wysiwyg-color-teal": 1,
				"wysiwyg-color-aqua": 1,
				"wysiwyg-color-orange": 1
			},
			tags: {
				"b": {},
				"i": {},
				"br": {},
				"ol": {},
				"ul": {},
				"li": {},
				"h1": {},
				"h2": {},
				"h3": {},
				"h4": {},
				"h5": {},
				"h6": {},
				"blockquote": {},
				"u": 1,
				"img": {
					"check_attributes": {
						"width": "numbers",
						"alt": "alt",
						"src": "url",
						"height": "numbers"
					}
				},
				"a": {
					check_attributes: {
						'href': "url", // important to avoid XSS
						'target': 'alt',
						'rel': 'alt'
					}
				},
				"span": 1,
				"div": 1,
				// to allow save and edit files with code tag hacks
				"code": 1,
				"pre": 1
			}
		},
		stylesheets: ["./wysiwyg-color.css"], // (path_to_project/lib/css/wysiwyg-color.css)
		locale: "en"
	};

	if(typeof $.fn.wysihtml5.defaultOptionsCache === 'undefined') {
		$.fn.wysihtml5.defaultOptionsCache = $.extend(true, {}, $.fn.wysihtml5.defaultOptions);
	}

	var locale = $.fn.wysihtml5.locale = {
		en: {
			font_styles: {
				normal: "Normal text",
				h1: "Heading 1",
				h2: "Heading 2",
				h3: "Heading 3",
				h4: "Heading 4",
				h5: "Heading 5",
				h6: "Heading 6"
			},
			emphasis: {
				bold: "Bold",
				italic: "Italic",
				underline: "Underline"
			},
			lists: {
				unordered: "Unordered list",
				ordered: "Ordered list",
				outdent: "Outdent",
				indent: "Indent"
			},
			link: {
				insert: "Insert link",
				cancel: "Cancel",
				target: "Open link in new window"
			},
			image: {
				insert: "Insert image",
				cancel: "Cancel"
			},
			html: {
				edit: "Edit HTML"
			},
			colours: {
				black: "Black",
				silver: "Silver",
				gray: "Grey",
				maroon: "Maroon",
				red: "Red",
				purple: "Purple",
				green: "Green",
				olive: "Olive",
				navy: "Navy",
				blue: "Blue",
				orange: "Orange"
			}
		}
	};

}(window.jQuery, window.wysihtml5);;﻿
/* ===================================================
 * bootstrap-markdown.js v2.0.0
 * http://github.com/toopay/bootstrap-markdown
 * ===================================================
 * Copyright 2013 Taufan Aditya
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */

! function($) {

	"use strict"; // jshint ;_;

	/* MARKDOWN CLASS DEFINITION
	 * ========================== */

	var Markdown = function(element, options) {
		// Class Properties
		this.$ns = 'bootstrap-markdown'
		this.$element = $(element)
		this.$editable = {
			el: null,
			type: null,
			attrKeys: [],
			attrValues: [],
			content: null
		}
		this.$options = $.extend(true, {}, $.fn.markdown.defaults, options)
		this.$oldContent = null
		this.$isPreview = false
		this.$editor = null
		this.$textarea = null
		this.$handler = []
		this.$callback = []
		this.$nextTab = []

		this.showEditor()
	}

	Markdown.prototype = {

		constructor: Markdown

		,
		__alterButtons: function(name, alter) {
			var handler = this.$handler,
				isAll = (name == 'all'),
				that = this

			$.each(handler, function(k, v) {
				var halt = true
				if(isAll) {
					halt = false
				} else {
					halt = v.indexOf(name) < 0
				}

				if(halt == false) {
					alter(that.$editor.find('button[data-handler="' + v + '"]'))
				}
			})
		}

		,
		__buildButtons: function(buttonsArray, container) {
			var i,
				ns = this.$ns,
				handler = this.$handler,
				callback = this.$callback

			for(i = 0; i < buttonsArray.length; i++) {
				// Build each group container
				var y, btnGroups = buttonsArray[i]
				for(y = 0; y < btnGroups.length; y++) {
					// Build each button group
					var z,
						buttons = btnGroups[y].data,
						btnGroupContainer = $('<div/>', {
							'class': 'btn-group'
						})

					for(z = 0; z < buttons.length; z++) {
						var button = buttons[z],
							buttonToggle = '',
							buttonHandler = ns + '-' + button.name,
							btnText = button.btnText ? button.btnText : '',
							btnClass = button.btnClass ? button.btnClass : 'btn',
							tabIndex = button.tabIndex ? button.tabIndex : '-1'

						if(button.toggle == true) {
							buttonToggle = ' data-toggle="button"'
						}

						// Attach the button object
						btnGroupContainer.append('<button class="' +
							btnClass +
							' btn-default btn-sm" title="' +
							button.title +
							'" tabindex="' +
							tabIndex +
							'" data-provider="' +
							ns +
							'" data-handler="' +
							buttonHandler +
							'"' +
							buttonToggle +
							'><span class="' +
							button.icon +
							'"></span> ' +
							btnText +
							'</button>')

						// Register handler and callback
						handler.push(buttonHandler)
						callback.push(button.callback)
					}

					// Attach the button group into container dom
					container.append(btnGroupContainer)
				}
			}

			return container
		},
		__setListener: function() {
			// Set size and resizable Properties
			var hasRows = typeof this.$textarea.attr('rows') != 'undefined',
				maxRows = this.$textarea.val().split("\n").length > 5 ? this.$textarea.val().split("\n").length : '5',
				rowsVal = hasRows ? this.$textarea.attr('rows') : maxRows

			this.$textarea.attr('rows', rowsVal)
			this.$textarea.css('resize', 'none')

			this.$textarea
				.on('focus', $.proxy(this.focus, this))
				.on('keypress', $.proxy(this.keypress, this))
				.on('keyup', $.proxy(this.keyup, this))

			if(this.eventSupported('keydown')) {
				this.$textarea.on('keydown', $.proxy(this.keydown, this))
			}

			// Re-attach markdown data
			this.$textarea.data('markdown', this)
		}

		,
		__handle: function(e) {
			var target = $(e.currentTarget),
				handler = this.$handler,
				callback = this.$callback,
				handlerName = target.attr('data-handler'),
				callbackIndex = handler.indexOf(handlerName),
				callbackHandler = callback[callbackIndex]

			// Trigger the focusin
			$(e.currentTarget).focus()

			callbackHandler(this)

			// Unless it was the save handler,
			// focusin the textarea
			if(handlerName.indexOf('cmdSave') < 0) {
				this.$textarea.focus()
			}

			e.preventDefault()
		}

		,
		showEditor: function() {
			var instance = this,
				textarea,
				ns = this.$ns,
				container = this.$element,
				originalHeigth = container.css('height'),
				originalWidth = container.css('width'),
				editable = this.$editable,
				handler = this.$handler,
				callback = this.$callback,
				options = this.$options,
				editor = $('<div/>', {
					'class': 'md-editor',
					click: function() {
						instance.focus()
					}
				})

			// Prepare the editor
			if(this.$editor == null) {
				// Create the panel
				var editorHeader = $('<div/>', {
					'class': 'md-header btn-toolbar'
				})

				// Build the main buttons
				if(options.buttons.length > 0) {
					editorHeader = this.__buildButtons(options.buttons, editorHeader)
				}

				// Build the additional buttons
				if(options.additionalButtons.length > 0) {
					editorHeader = this.__buildButtons(options.additionalButtons, editorHeader)
				}

				editor.append(editorHeader)

				// Wrap the textarea
				if(container.is('textarea')) {
					container.before(editor)
					textarea = container
					textarea.addClass('md-input')
					editor.append(textarea)
				} else {
					var rawContent = (typeof toMarkdown == 'function') ? toMarkdown(container.html()) : container.html(),
						currentContent = $.trim(rawContent)

					// This is some arbitrary content that could be edited
					textarea = $('<textarea/>', {
						'class': 'md-input',
						'val': currentContent
					})

					editor.append(textarea)

					// Save the editable
					editable.el = container
					editable.type = container.prop('tagName').toLowerCase()
					editable.content = container.html()

					$(container[0].attributes).each(function() {
						editable.attrKeys.push(this.nodeName)
						editable.attrValues.push(this.nodeValue)
					})

					// Set editor to blocked the original container
					container.replaceWith(editor)
				}

				// Create the footer if savable
				if(options.savable) {
					var editorFooter = $('<div/>', {
							'class': 'md-footer'
						}),
						saveHandler = 'cmdSave'

					// Register handler and callback
					handler.push(saveHandler)
					callback.push(options.onSave)

					editorFooter.append('<button class="btn btn-success" data-provider="' +
						ns +
						'" data-handler="' +
						saveHandler +
						'"><i class="icon icon-white icon-ok"></i> Save</button>')

					editor.append(editorFooter)
				}

				// Set width/height
				$.each(['height', 'width'], function(k, attr) {
					if(options[attr] != 'inherit') {
						if(jQuery.isNumeric(options[attr])) {
							editor.css(attr, options[attr] + 'px')
						} else {
							editor.addClass(options[attr])
						}
					}
				})

				// Reference
				this.$editor = editor
				this.$textarea = textarea
				this.$editable = editable
				this.$oldContent = this.getContent()

				this.__setListener()

				// Set editor attributes, data short-hand API and listener
				this.$editor.attr('id', (new Date).getTime())
				this.$editor.on('click', '[data-provider="bootstrap-markdown"]', $.proxy(this.__handle, this))

			} else {
				this.$editor.show()
			}

			if(options.autofocus) {
				this.$textarea.focus()
				this.$editor.addClass('active')
			}

			// Trigger the onShow hook
			options.onShow(this)

			return this
		}

		,
		showPreview: function() {
			var options = this.$options,
				callbackContent = options.onPreview(this), // Try to get the content from callback
				container = this.$textarea,
				afterContainer = container.next(),
				replacementContainer = $('<div/>', {
					'class': 'md-preview',
					'data-provider': 'markdown-preview'
				}),
				content

			// Give flag that tell the editor enter preview mode
			this.$isPreview = true
				// Disable all buttons
			this.disableButtons('all').enableButtons('cmdPreview')

			if(typeof callbackContent == 'string') {
				// Set the content based by callback content
				content = callbackContent
			} else {
				// Set the content
				content = (typeof markdown == 'object') ? markdown.toHTML(container.val()) : container.val()
			}

			// Build preview element
			replacementContainer.html(content)

			if(afterContainer && afterContainer.attr('class') == 'md-footer') {
				// If there is footer element, insert the preview container before it
				replacementContainer.insertBefore(afterContainer)
			} else {
				// Otherwise, just append it after textarea
				container.parent().append(replacementContainer)
			}

			// Hide the last-active textarea
			container.hide()

			// Attach the editor instances
			replacementContainer.data('markdown', this)

			return this
		}

		,
		hidePreview: function() {
			// Give flag that tell the editor quit preview mode
			this.$isPreview = false

			// Obtain the preview container
			var container = this.$editor.find('div[data-provider="markdown-preview"]')

			// Remove the preview container
			container.remove()

			// Enable all buttons
			this.enableButtons('all')

			// Back to the editor
			this.$textarea.show()
			this.__setListener()

			return this
		}

		,
		isDirty: function() {
			return this.$oldContent != this.getContent()
		}

		,
		getContent: function() {
			return this.$textarea.val()
		}

		,
		setContent: function(content) {
			this.$textarea.val(content)

			return this
		}

		,
		findSelection: function(chunk) {
			var content = this.getContent(),
				startChunkPosition

			if(startChunkPosition = content.indexOf(chunk), startChunkPosition >= 0 && chunk.length > 0) {
				var oldSelection = this.getSelection(),
					selection

				this.setSelection(startChunkPosition, startChunkPosition + chunk.length)
				selection = this.getSelection()

				this.setSelection(oldSelection.start, oldSelection.end)

				return selection
			} else {
				return null
			}
		}

		,
		getSelection: function() {

			var e = this.$textarea[0]

			return(

				('selectionStart' in e && function() {
					var l = e.selectionEnd - e.selectionStart
					return {
						start: e.selectionStart,
						end: e.selectionEnd,
						length: l,
						text: e.value.substr(e.selectionStart, l)
					}
				}) ||

				/* browser not supported */
				function() {
					return null
				}

			)()

		}

		,
		setSelection: function(start, end) {

			var e = this.$textarea[0]

			return(

				('selectionStart' in e && function() {
					e.selectionStart = start
					e.selectionEnd = end
					return
				}) ||

				/* browser not supported */
				function() {
					return null
				}

			)()

		}

		,
		replaceSelection: function(text) {

			var e = this.$textarea[0]

			return(

				('selectionStart' in e && function() {
					e.value = e.value.substr(0, e.selectionStart) + text + e.value.substr(e.selectionEnd, e.value.length)
						// Set cursor to the last replacement end
					e.selectionStart = e.value.length
					return this
				}) ||

				/* browser not supported */
				function() {
					e.value += text
					return jQuery(e)
				}

			)()

		}

		,
		getNextTab: function() {
			// Shift the nextTab
			if(this.$nextTab.length == 0) {
				return null
			} else {
				var nextTab, tab = this.$nextTab.shift()

				if(typeof tab == 'function') {
					nextTab = tab()
				} else if(typeof tab == 'object' && tab.length > 0) {
					nextTab = tab
				}

				return nextTab
			}
		}

		,
		setNextTab: function(start, end) {
			// Push new selection into nextTab collections
			if(typeof start == 'string') {
				var that = this
				this.$nextTab.push(function() {
					return that.findSelection(start)
				})
			} else if(typeof start == 'numeric' && typeof end == 'numeric') {
				var oldSelection = this.getSelection()

				this.setSelection(start, end)
				this.$nextTab.push(this.getSelection())

				this.setSelection(oldSelection.start, oldSelection.end)
			}

			return
		}

		,
		enableButtons: function(name) {
			var alter = function(el) {
				el.removeAttr('disabled')
			}

			this.__alterButtons(name, alter)

			return this
		}

		,
		disableButtons: function(name) {
			var alter = function(el) {
				el.attr('disabled', 'disabled')
			}

			this.__alterButtons(name, alter)

			return this
		}

		,
		eventSupported: function(eventName) {
			var isSupported = eventName in this.$element
			if(!isSupported) {
				this.$element.setAttribute(eventName, 'return;')
				isSupported = typeof this.$element[eventName] === 'function'
			}
			return isSupported
		}

		,
		keydown: function(e) {
			this.suppressKeyPressRepeat = ~$.inArray(e.keyCode, [40, 38, 9, 13, 27])
			this.keyup(e)
		}

		,
		keypress: function(e) {
			if(this.suppressKeyPressRepeat) return
			this.keyup(e)
		}

		,
		keyup: function(e) {
			var blocked = false
			switch(e.keyCode) {
				case 40: // down arrow
				case 38: // up arrow
				case 16: // shift
				case 17: // ctrl
				case 18: // alt
					break

				case 9: // tab
					var nextTab
					if(nextTab = this.getNextTab(), nextTab != null) {
						// Get the nextTab if exists
						var that = this
						setTimeout(function() {
							that.setSelection(nextTab.start, nextTab.end)
						}, 500)

						blocked = true
					} else {
						// The next tab memory contains nothing...
						// check the cursor position to determine tab action
						var cursor = this.getSelection()

						if(cursor.start == cursor.end && cursor.end == this.getContent().length) {
							// The cursor already reach the end of the content
							blocked = false

						} else {
							// Put the cursor to the end
							this.setSelection(this.getContent().length, this.getContent().length)

							blocked = true
						}
					}

					break

				case 13: // enter
				case 27: // escape
					blocked = false
					break

				default:
					blocked = false
			}

			if(blocked) {
				e.stopPropagation()
				e.preventDefault()
			}
		}

		,
		focus: function(e) {
			var options = this.$options,
				isHideable = options.hideable,
				editor = this.$editor

			editor.addClass('active')

			// Blur other markdown(s)
			$(document).find('.md-editor').each(function() {
				if($(this).attr('id') != editor.attr('id')) {
					var attachedMarkdown

					if(attachedMarkdown = $(this).find('textarea').data('markdown'),
						attachedMarkdown == null) {
						attachedMarkdown = $(this).find('div[data-provider="markdown-preview"]').data('markdown')
					}

					if(attachedMarkdown) {
						attachedMarkdown.blur()
					}
				}
			})

			return this
		}

		,
		blur: function(e) {
			var options = this.$options,
				isHideable = options.hideable,
				editor = this.$editor,
				editable = this.$editable

			if(editor.hasClass('active') || this.$element.parent().length == 0) {
				editor.removeClass('active')

				if(isHideable) {

					// Check for editable elements
					if(editable.el != null) {
						// Build the original element
						var oldElement = $('<' + editable.type + '/>'),
							content = this.getContent(),
							currentContent = (typeof markdown == 'object') ? markdown.toHTML(content) : content

						$(editable.attrKeys).each(function(k, v) {
							oldElement.attr(editable.attrKeys[k], editable.attrValues[k])
						})

						// Get the editor content
						oldElement.html(currentContent)

						editor.replaceWith(oldElement)
					} else {
						editor.hide()

					}
				}

				// Trigger the onBlur hook
				options.onBlur(this)
			}

			return this
		}

	}

	/* MARKDOWN PLUGIN DEFINITION
	 * ========================== */

	var old = $.fn.markdown

	$.fn.markdown = function(option) {
		return this.each(function() {
			var $this = $(this),
				data = $this.data('markdown'),
				options = typeof option == 'object' && option
			if(!data) $this.data('markdown', (data = new Markdown(this, options)))
		})
	}

	$.fn.markdown.defaults = {
		/* Editor Properties */
		autofocus: false,
		hideable: false,
		savable: false,
		width: 'inherit',
		height: 'inherit',

		/* Buttons Properties */
		buttons: [
			[{
				name: 'groupFont',
				data: [{
					name: 'cmdBold',
					title: 'Bold',
					icon: 'glyphicon glyphicon-bold',
					callback: function(e) {
						// Give/remove ** surround the selection
						var chunk, cursor, selected = e.getSelection(),
							content = e.getContent()

						if(selected.length == 0) {
							// Give extra word
							chunk = 'strong text'
						} else {
							chunk = selected.text
						}

						// transform selection and set the cursor into chunked text
						if(content.substr(selected.start - 2, 2) == '**' &&
							content.substr(selected.end, 2) == '**') {
							e.setSelection(selected.start - 2, selected.end + 2)
							e.replaceSelection(chunk)
							cursor = selected.start - 2
						} else {
							e.replaceSelection('**' + chunk + '**')
							cursor = selected.start + 2
						}

						// Set the cursor
						e.setSelection(cursor, cursor + chunk.length)
					}
				}, {
					name: 'cmdItalic',
					title: 'Italic',
					icon: 'glyphicon glyphicon-italic',
					callback: function(e) {
						// Give/remove * surround the selection
						var chunk, cursor, selected = e.getSelection(),
							content = e.getContent()

						if(selected.length == 0) {
							// Give extra word
							chunk = 'emphasized text'
						} else {
							chunk = selected.text
						}

						// transform selection and set the cursor into chunked text
						if(content.substr(selected.start - 1, 1) == '*' &&
							content.substr(selected.end, 1) == '*') {
							e.setSelection(selected.start - 1, selected.end + 1)
							e.replaceSelection(chunk)
							cursor = selected.start - 1
						} else {
							e.replaceSelection('*' + chunk + '*')
							cursor = selected.start + 1
						}

						// Set the cursor
						e.setSelection(cursor, cursor + chunk.length)
					}
				}, {
					name: 'cmdHeading',
					title: 'Heading',
					icon: 'glyphicon glyphicon-font',
					callback: function(e) {
						// Append/remove ### surround the selection
						var chunk, cursor, selected = e.getSelection(),
							content = e.getContent(),
							pointer, prevChar

						if(selected.length == 0) {
							// Give extra word
							chunk = 'heading text'
						} else {
							chunk = selected.text
						}

						// transform selection and set the cursor into chunked text
						if((pointer = 4, content.substr(selected.start - pointer, pointer) == '### ') ||
							(pointer = 3, content.substr(selected.start - pointer, pointer) == '###')) {
							e.setSelection(selected.start - pointer, selected.end)
							e.replaceSelection(chunk)
							cursor = selected.start - pointer
						} else if(prevChar = content.substr(selected.start - 1, 1), !!prevChar && prevChar != '\n') {
							e.replaceSelection('\n\n### ' + chunk + '\n')
							cursor = selected.start + 6
						} else {
							// Empty string before element
							e.replaceSelection('### ' + chunk + '\n')
							cursor = selected.start + 4
						}

						// Set the cursor
						e.setSelection(cursor, cursor + chunk.length)
					}
				}]
			}, {
				name: 'groupLink',
				data: [{
					name: 'cmdUrl',
					title: 'URL/Link',
					icon: 'glyphicon glyphicon-globe',
					callback: function(e) {
						// Give [] surround the selection and prepend the link
						var chunk, cursor, selected = e.getSelection(),
							content = e.getContent(),
							link

						if(selected.length == 0) {
							// Give extra word
							chunk = 'enter link description here'
						} else {
							chunk = selected.text
						}

						link = prompt('Insert Hyperlink', 'http://')

						if(link != null) {
							// transform selection and set the cursor into chunked text
							e.replaceSelection('[' + chunk + '](' + link + ')')
							cursor = selected.start + 1

							// Set the cursor
							e.setSelection(cursor, cursor + chunk.length)
						}
					}
				}, {
					name: 'cmdImage',
					title: 'Image',
					icon: 'glyphicon glyphicon-picture',
					callback: function(e) {
						// Give ![] surround the selection and prepend the image link
						var chunk, cursor, selected = e.getSelection(),
							content = e.getContent(),
							link

						if(selected.length == 0) {
							// Give extra word
							chunk = 'enter image description here'
						} else {
							chunk = selected.text
						}

						link = prompt('Insert Image Hyperlink', 'http://')

						if(link != null) {
							// transform selection and set the cursor into chunked text
							e.replaceSelection('![' + chunk + '](' + link + ' "enter image title here")')
							cursor = selected.start + 2

							// Set the next tab
							e.setNextTab('enter image title here')

							// Set the cursor
							e.setSelection(cursor, cursor + chunk.length)
						}
					}
				}]
			}, {
				name: 'groupMisc',
				data: [{
					name: 'cmdList',
					title: 'List',
					icon: 'glyphicon glyphicon-list',
					callback: function(e) {
						// Prepend/Give - surround the selection
						var chunk, cursor, selected = e.getSelection(),
							content = e.getContent()

						// transform selection and set the cursor into chunked text
						if(selected.length == 0) {
							// Give extra word
							chunk = 'list text here'

							e.replaceSelection('- ' + chunk)

							// Set the cursor
							cursor = selected.start + 2
						} else {
							if(selected.text.indexOf('\n') < 0) {
								chunk = selected.text

								e.replaceSelection('- ' + chunk)

								// Set the cursor
								cursor = selected.start + 2
							} else {
								var list = []

								list = selected.text.split('\n')
								chunk = list[0]

								$.each(list, function(k, v) {
									list[k] = '- ' + v
								})

								e.replaceSelection('\n\n' + list.join('\n'))

								// Set the cursor
								cursor = selected.start + 4
							}
						}

						// Set the cursor
						e.setSelection(cursor, cursor + chunk.length)
					}
				}]
			}, {
				name: 'groupUtil',
				data: [{
					name: 'cmdPreview',
					toggle: true,
					title: '预览',
					btnText: '预览',
					btnClass: 'btn btn-primary btn-sm',
					icon: 'glyphicon glyphicon-search',
					callback: function(e) {
						// Check the preview mode and toggle based on this flag
						var isPreview = e.$isPreview,
							content

						if(isPreview == false) {
							// Give flag that tell the editor enter preview mode
							e.showPreview()
						} else {
							e.hidePreview()
						}
					}
				}]
			}]
		],
		additionalButtons: [], // Place to hook more buttons by code

		/* Events hook */
		onShow: function(e) {},
		onPreview: function(e) {},
		onSave: function(e) {},
		onBlur: function(e) {}
	}

	$.fn.markdown.Constructor = Markdown

	/* MARKDOWN NO CONFLICT
	 * ==================== */

	$.fn.markdown.noConflict = function() {
		$.fn.markdown = old
		return this
	}

	/* MARKDOWN GLOBAL FUNCTION & DATA-API
	 * ==================================== */
	var initMarkdown = function(el) {
		var $this = el

		if($this.data('markdown')) {
			$this.data('markdown').showEditor()
			return
		}
		$this.markdown($this.data())
	}

	var analyzeMarkdown = function(e) {
		var blurred = false,
			el,
			$docEditor = $(e.currentTarget)

		// Check whether it was editor childs or not
		if((e.type == 'focusin' || e.type == 'click') && $docEditor.length == 1 && typeof $docEditor[0] == 'object') {
			el = $docEditor[0].activeElement
			if(!$(el).data('markdown')) {
				if(typeof $(el).parent().parent().parent().attr('class') == "undefined" ||
					$(el).parent().parent().parent().attr('class').indexOf('md-editor') < 0) {
					if(typeof $(el).parent().parent().attr('class') == "undefined" ||
						$(el).parent().parent().attr('class').indexOf('md-editor') < 0) {

						blurred = true
					}
				} else {
					blurred = false
				}
			}

			if(blurred) {
				// Blur event
				$(document).find('.md-editor').each(function() {
					var parentMd = $(el).parent()

					if($(this).attr('id') != parentMd.attr('id')) {
						var attachedMarkdown

						if(attachedMarkdown = $(this).find('textarea').data('markdown'),
							attachedMarkdown == null) {
							attachedMarkdown = $(this).find('div[data-provider="markdown-preview"]').data('markdown')
						}

						if(attachedMarkdown) {
							attachedMarkdown.blur()
						}
					}
				})
			}

			e.stopPropagation()
		}
	}

	$(document)
		.on('click.markdown.data-api', '[data-provide="markdown-editable"]', function(e) {
			initMarkdown($(this))
			e.preventDefault()
		})
		.on('click', function(e) {
			analyzeMarkdown(e)
		})
		.on('focusin', function(e) {
			analyzeMarkdown(e)
		})
		.ready(function() {
			$('textarea[data-provide="markdown"]').each(function() {
				initMarkdown($(this))
			})
		})

}(window.jQuery);;
/*******************************************************************************
 * KindEditor - WYSIWYG HTML Editor for Internet
 * Copyright (C) 2006-2013 kindsoft.net
 *
 * @author Roddy <luolonghao@gmail.com>
 * @website http://www.kindsoft.net/
 * @licence http://www.kindsoft.net/license.php
 * @version 4.1.10 (2013-11-23)
 *******************************************************************************/
(function(window, undefined) {
	if(window.KindEditor) {
		return;
	}
	if(!window.console) {
		window.console = {};
	}
	if(!console.log) {
		console.log = function() {};
	}
	var _VERSION = '4.1.10 (2013-11-23)',
		_ua = navigator.userAgent.toLowerCase(),
		_IE = _ua.indexOf('msie') > -1 && _ua.indexOf('opera') == -1,
		_NEWIE = _ua.indexOf('msie') == -1 && _ua.indexOf('trident') > -1,
		_GECKO = _ua.indexOf('gecko') > -1 && _ua.indexOf('khtml') == -1,
		_WEBKIT = _ua.indexOf('applewebkit') > -1,
		_OPERA = _ua.indexOf('opera') > -1,
		_MOBILE = _ua.indexOf('mobile') > -1,
		_IOS = /ipad|iphone|ipod/.test(_ua),
		_QUIRKS = document.compatMode != 'CSS1Compat',
		_IERANGE = !window.getSelection,
		_matches = /(?:msie|firefox|webkit|opera)[\/:\s](\d+)/.exec(_ua),
		_V = _matches ? _matches[1] : '0',
		_TIME = new Date().getTime();

	function _isArray(val) {
		if(!val) {
			return false;
		}
		return Object.prototype.toString.call(val) === '[object Array]';
	}

	function _isFunction(val) {
		if(!val) {
			return false;
		}
		return Object.prototype.toString.call(val) === '[object Function]';
	}

	function _inArray(val, arr) {
		for(var i = 0, len = arr.length; i < len; i++) {
			if(val === arr[i]) {
				return i;
			}
		}
		return -1;
	}

	function _each(obj, fn) {
		if(_isArray(obj)) {
			for(var i = 0, len = obj.length; i < len; i++) {
				if(fn.call(obj[i], i, obj[i]) === false) {
					break;
				}
			}
		} else {
			for(var key in obj) {
				if(obj.hasOwnProperty(key)) {
					if(fn.call(obj[key], key, obj[key]) === false) {
						break;
					}
				}
			}
		}
	}

	function _trim(str) {
		return str.replace(/(?:^[ \t\n\r]+)|(?:[ \t\n\r]+$)/g, '');
	}

	function _inString(val, str, delimiter) {
		delimiter = delimiter === undefined ? ',' : delimiter;
		return(delimiter + str + delimiter).indexOf(delimiter + val + delimiter) >= 0;
	}

	function _addUnit(val, unit) {
		unit = unit || 'px';
		return val && /^\d+$/.test(val) ? val + unit : val;
	}

	function _removeUnit(val) {
		var match;
		return val && (match = /(\d+)/.exec(val)) ? parseInt(match[1], 10) : 0;
	}

	function _escape(val) {
		return val.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;');
	}

	function _unescape(val) {
		return val.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '"').replace(/&amp;/g, '&');
	}

	function _toCamel(str) {
		var arr = str.split('-');
		str = '';
		_each(arr, function(key, val) {
			str += (key > 0) ? val.charAt(0).toUpperCase() + val.substr(1) : val;
		});
		return str;
	}

	function _toHex(val) {
		function hex(d) {
			var s = parseInt(d, 10).toString(16).toUpperCase();
			return s.length > 1 ? s : '0' + s;
		}
		return val.replace(/rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)/ig,
			function($0, $1, $2, $3) {
				return '#' + hex($1) + hex($2) + hex($3);
			}
		);
	}

	function _toMap(val, delimiter) {
		delimiter = delimiter === undefined ? ',' : delimiter;
		var map = {},
			arr = _isArray(val) ? val : val.split(delimiter),
			match;
		_each(arr, function(key, val) {
			if((match = /^(\d+)\.\.(\d+)$/.exec(val))) {
				for(var i = parseInt(match[1], 10); i <= parseInt(match[2], 10); i++) {
					map[i.toString()] = true;
				}
			} else {
				map[val] = true;
			}
		});
		return map;
	}

	function _toArray(obj, offset) {
		return Array.prototype.slice.call(obj, offset || 0);
	}

	function _undef(val, defaultVal) {
		return val === undefined ? defaultVal : val;
	}

	function _invalidUrl(url) {
		return !url || /[<>"]/.test(url);
	}

	function _addParam(url, param) {
		return url.indexOf('?') >= 0 ? url + '&' + param : url + '?' + param;
	}

	function _extend(child, parent, proto) {
		if(!proto) {
			proto = parent;
			parent = null;
		}
		var childProto;
		if(parent) {
			var fn = function() {};
			fn.prototype = parent.prototype;
			childProto = new fn();
			_each(proto, function(key, val) {
				childProto[key] = val;
			});
		} else {
			childProto = proto;
		}
		childProto.constructor = child;
		child.prototype = childProto;
		child.parent = parent ? parent.prototype : null;
	}

	function _json(text) {
		var match;
		if((match = /\{[\s\S]*\}|\[[\s\S]*\]/.exec(text))) {
			text = match[0];
		}
		var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;
		cx.lastIndex = 0;
		if(cx.test(text)) {
			text = text.replace(cx, function(a) {
				return '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
			});
		}
		if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@').replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']').replace(/(?:^|:|,)(?:\s*\[)+/g, ''))) {
			return eval('(' + text + ')');
		}
		throw 'JSON parse error';
	}
	var _round = Math.round;
	var K = {
		DEBUG: false,
		VERSION: _VERSION,
		IE: _IE,
		GECKO: _GECKO,
		WEBKIT: _WEBKIT,
		OPERA: _OPERA,
		V: _V,
		TIME: _TIME,
		each: _each,
		isArray: _isArray,
		isFunction: _isFunction,
		inArray: _inArray,
		inString: _inString,
		trim: _trim,
		addUnit: _addUnit,
		removeUnit: _removeUnit,
		escape: _escape,
		unescape: _unescape,
		toCamel: _toCamel,
		toHex: _toHex,
		toMap: _toMap,
		toArray: _toArray,
		undef: _undef,
		invalidUrl: _invalidUrl,
		addParam: _addParam,
		extend: _extend,
		json: _json
	};
	var _INLINE_TAG_MAP = _toMap('a,abbr,acronym,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,img,input,ins,kbd,label,map,q,s,samp,select,small,span,strike,strong,sub,sup,textarea,tt,u,var'),
		_BLOCK_TAG_MAP = _toMap('address,applet,blockquote,body,center,dd,dir,div,dl,dt,fieldset,form,frameset,h1,h2,h3,h4,h5,h6,head,hr,html,iframe,ins,isindex,li,map,menu,meta,noframes,noscript,object,ol,p,pre,script,style,table,tbody,td,tfoot,th,thead,title,tr,ul'),
		_SINGLE_TAG_MAP = _toMap('area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed'),
		_STYLE_TAG_MAP = _toMap('b,basefont,big,del,em,font,i,s,small,span,strike,strong,sub,sup,u,blockquote'),
		_CONTROL_TAG_MAP = _toMap('img,table,input,textarea,button'),
		_PRE_TAG_MAP = _toMap('pre,style,script'),
		_NOSPLIT_TAG_MAP = _toMap('html,head,body,td,tr,table,ol,ul,li'),
		_AUTOCLOSE_TAG_MAP = _toMap('colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr'),
		_FILL_ATTR_MAP = _toMap('checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected'),
		_VALUE_TAG_MAP = _toMap('input,button,textarea,select');

	function _getBasePath() {
		var els = document.getElementsByTagName('script'),
			src;
		for(var i = 0, len = els.length; i < len; i++) {
			src = els[i].src || '';
			if(/kindeditor[\w\-\.]*\.js/.test(src)) {
				return src.substring(0, src.lastIndexOf('/') + 1);
			}
		}
		return '';
	}
	K.basePath = _getBasePath();
	K.options = {
		designMode: true,
		fullscreenMode: false,
		filterMode: true,
		wellFormatMode: true,
		shadowMode: true,
		loadStyleMode: true,
		basePath: K.basePath,
		themesPath: K.basePath + 'themes/',
		langPath: K.basePath + 'lang/',
		pluginsPath: K.basePath + 'plugins/',
		themeType: 'default',
		langType: 'zh_CN',
		urlType: '',
		newlineTag: 'p',
		resizeType: 2,
		syncType: 'form',
		pasteType: 2,
		dialogAlignType: 'page',
		useContextmenu: true,
		fullscreenShortcut: false,
		bodyClass: 'ke-content',
		indentChar: '\t',
		cssPath: '',
		cssData: '',
		minWidth: 800,
		minHeight: 100,
		minChangeSize: 50,
		zIndex: 811213,
		items: [
			'source', '|', 'undo', 'redo', '|', 'preview', 'print', 'template', 'code', 'cut', 'copy', 'paste',
			'plainpaste', 'wordpaste', '|', 'justifyleft', 'justifycenter', 'justifyright',
			'justifyfull', 'insertorderedlist', 'insertunorderedlist', 'indent', 'outdent', 'subscript',
			'superscript', 'clearhtml', 'quickformat', 'selectall', '|', 'fullscreen', '/',
			'formatblock', 'fontname', 'fontsize', '|', 'forecolor', 'hilitecolor', 'bold',
			'italic', 'underline', 'strikethrough', 'lineheight', 'removeformat', '|', 'image', 'multiimage',
			'flash', 'media', 'insertfile', 'table', 'hr', 'emoticons', 'baidumap', 'pagebreak',
			'anchor', 'link', 'unlink', '|', 'about', 'blockquotes', 'rowspacingtop', 'rowspacingbottom'
		],
		noDisableItems: ['source', 'fullscreen'],
		colorTable: [
			['#E53333', '#E56600', '#FF9900', '#64451D', '#DFC5A4', '#FFE500'],
			['#009900', '#006600', '#99BB00', '#B8D100', '#60D978', '#00D5FF'],
			['#337FE5', '#003399', '#4C33E5', '#9933E5', '#CC33E5', '#EE33EE'],
			['#FFFFFF', '#CCCCCC', '#999999', '#666666', '#333333', '#000000']
		],
		fontSizeTable: ['9px', '10px', '12px', '14px', '16px', '18px', '24px', '32px'],
		fontRowspacingtop: ['5', '10', '15', '20', '25'],
		fontRowspacingbottom: ['5', '10', '15', '20', '25'],
		htmlTags: {
			font: ['id', 'class', 'color', 'size', 'face', '.background-color'],
			span: [
				'id', 'class', '.color', '.background-color', '.font-size', '.font-family', '.background',
				'.font-weight', '.font-style', '.text-decoration', '.vertical-align', '.line-height'
			],
			div: [
				'id', 'class', 'align', '.border', '.margin', '.padding', '.text-align', '.color',
				'.background-color', '.font-size', '.font-family', '.font-weight', '.background',
				'.font-style', '.text-decoration', '.vertical-align', '.margin-left'
			],
			table: [
				'id', 'class', 'border', 'cellspacing', 'cellpadding', 'width', 'height', 'align', 'bordercolor',
				'.padding', '.margin', '.border', 'bgcolor', '.text-align', '.color', '.background-color',
				'.font-size', '.font-family', '.font-weight', '.font-style', '.text-decoration', '.background',
				'.width', '.height', '.border-collapse'
			],
			'td,th': [
				'id', 'class', 'align', 'valign', 'width', 'height', 'colspan', 'rowspan', 'bgcolor',
				'.text-align', '.color', '.background-color', '.font-size', '.font-family', '.font-weight',
				'.font-style', '.text-decoration', '.vertical-align', '.background', '.border'
			],
			a: ['id', 'class', 'href', 'target', 'name'],
			embed: ['id', 'class', 'src', 'width', 'height', 'type', 'loop', 'autostart', 'quality', '.width', '.height', 'align', 'allowscriptaccess'],
			img: ['id', 'class', 'src', 'width', 'height', 'border', 'alt', 'title', 'align', '.width', '.height', '.border'],
			'p,ol,ul,li,blockquote,h1,h2,h3,h4,h5,h6': [
				'id', 'class', 'align', '.text-align', '.color', '.background-color', '.font-size', '.font-family', '.background',
				'.font-weight', '.font-style', '.text-decoration', '.vertical-align', '.text-indent', '.margin-left'
			],
			pre: ['id', 'class'],
			hr: ['id', 'class', '.page-break-after'],
			'br,tbody,tr,strong,blockquote,b,sub,sup,em,i,u,strike,s,del': ['id', 'class'],
			iframe: ['id', 'class', 'src', 'frameborder', 'width', 'height', '.width', '.height']
		},
		layout: '<div class="container"><div class="toolbar"></div><div class="edit"></div><div class="statusbar"></div></div>'
	};
	var _useCapture = false;
	var _INPUT_KEY_MAP = _toMap('8,9,13,32,46,48..57,59,61,65..90,106,109..111,188,190..192,219..222');
	var _CURSORMOVE_KEY_MAP = _toMap('33..40');
	var _CHANGE_KEY_MAP = {};
	_each(_INPUT_KEY_MAP, function(key, val) {
		_CHANGE_KEY_MAP[key] = val;
	});
	_each(_CURSORMOVE_KEY_MAP, function(key, val) {
		_CHANGE_KEY_MAP[key] = val;
	});

	function _bindEvent(el, type, fn) {
		if(el.addEventListener) {
			el.addEventListener(type, fn, _useCapture);
		} else if(el.attachEvent) {
			el.attachEvent('on' + type, fn);
		}
	}

	function _unbindEvent(el, type, fn) {
		if(el.removeEventListener) {
			el.removeEventListener(type, fn, _useCapture);
		} else if(el.detachEvent) {
			el.detachEvent('on' + type, fn);
		}
	}
	var _EVENT_PROPS = ('altKey,attrChange,attrName,bubbles,button,cancelable,charCode,clientX,clientY,ctrlKey,currentTarget,' +
		'data,detail,eventPhase,fromElement,handler,keyCode,metaKey,newValue,offsetX,offsetY,originalTarget,pageX,' +
		'pageY,prevValue,relatedNode,relatedTarget,screenX,screenY,shiftKey,srcElement,target,toElement,view,wheelDelta,which').split(',');

	function KEvent(el, event) {
		this.init(el, event);
	}
	_extend(KEvent, {
		init: function(el, event) {
			var self = this,
				doc = el.ownerDocument || el.document || el;
			self.event = event;
			_each(_EVENT_PROPS, function(key, val) {
				self[val] = event[val];
			});
			if(!self.target) {
				self.target = self.srcElement || doc;
			}
			if(self.target.nodeType === 3) {
				self.target = self.target.parentNode;
			}
			if(!self.relatedTarget && self.fromElement) {
				self.relatedTarget = self.fromElement === self.target ? self.toElement : self.fromElement;
			}
			if(self.pageX == null && self.clientX != null) {
				var d = doc.documentElement,
					body = doc.body;
				self.pageX = self.clientX + (d && d.scrollLeft || body && body.scrollLeft || 0) - (d && d.clientLeft || body && body.clientLeft || 0);
				self.pageY = self.clientY + (d && d.scrollTop || body && body.scrollTop || 0) - (d && d.clientTop || body && body.clientTop || 0);
			}
			if(!self.which && ((self.charCode || self.charCode === 0) ? self.charCode : self.keyCode)) {
				self.which = self.charCode || self.keyCode;
			}
			if(!self.metaKey && self.ctrlKey) {
				self.metaKey = self.ctrlKey;
			}
			if(!self.which && self.button !== undefined) {
				self.which = (self.button & 1 ? 1 : (self.button & 2 ? 3 : (self.button & 4 ? 2 : 0)));
			}
			switch(self.which) {
				case 186:
					self.which = 59;
					break;
				case 187:
				case 107:
				case 43:
					self.which = 61;
					break;
				case 189:
				case 45:
					self.which = 109;
					break;
				case 42:
					self.which = 106;
					break;
				case 47:
					self.which = 111;
					break;
				case 78:
					self.which = 110;
					break;
			}
			if(self.which >= 96 && self.which <= 105) {
				self.which -= 48;
			}
		},
		preventDefault: function() {
			var ev = this.event;
			if(ev.preventDefault) {
				ev.preventDefault();
			} else {
				ev.returnValue = false;
			}
		},
		stopPropagation: function() {
			var ev = this.event;
			if(ev.stopPropagation) {
				ev.stopPropagation();
			} else {
				ev.cancelBubble = true;
			}
		},
		stop: function() {
			this.preventDefault();
			this.stopPropagation();
		}
	});
	var _eventExpendo = 'kindeditor_' + _TIME,
		_eventId = 0,
		_eventData = {};

	function _getId(el) {
		return el[_eventExpendo] || null;
	}

	function _setId(el) {
		el[_eventExpendo] = ++_eventId;
		return _eventId;
	}

	function _removeId(el) {
		try {
			delete el[_eventExpendo];
		} catch(e) {
			if(el.removeAttribute) {
				el.removeAttribute(_eventExpendo);
			}
		}
	}

	function _bind(el, type, fn) {
		if(type.indexOf(',') >= 0) {
			_each(type.split(','), function() {
				_bind(el, this, fn);
			});
			return;
		}
		var id = _getId(el);
		if(!id) {
			id = _setId(el);
		}
		if(_eventData[id] === undefined) {
			_eventData[id] = {};
		}
		var events = _eventData[id][type];
		if(events && events.length > 0) {
			_unbindEvent(el, type, events[0]);
		} else {
			_eventData[id][type] = [];
			_eventData[id].el = el;
		}
		events = _eventData[id][type];
		if(events.length === 0) {
			events[0] = function(e) {
				var kevent = e ? new KEvent(el, e) : undefined;
				_each(events, function(i, event) {
					if(i > 0 && event) {
						event.call(el, kevent);
					}
				});
			};
		}
		if(_inArray(fn, events) < 0) {
			events.push(fn);
		}
		_bindEvent(el, type, events[0]);
	}

	function _unbind(el, type, fn) {
		if(type && type.indexOf(',') >= 0) {
			_each(type.split(','), function() {
				_unbind(el, this, fn);
			});
			return;
		}
		var id = _getId(el);
		if(!id) {
			return;
		}
		if(type === undefined) {
			if(id in _eventData) {
				_each(_eventData[id], function(key, events) {
					if(key != 'el' && events.length > 0) {
						_unbindEvent(el, key, events[0]);
					}
				});
				delete _eventData[id];
				_removeId(el);
			}
			return;
		}
		if(!_eventData[id]) {
			return;
		}
		var events = _eventData[id][type];
		if(events && events.length > 0) {
			if(fn === undefined) {
				_unbindEvent(el, type, events[0]);
				delete _eventData[id][type];
			} else {
				_each(events, function(i, event) {
					if(i > 0 && event === fn) {
						events.splice(i, 1);
					}
				});
				if(events.length == 1) {
					_unbindEvent(el, type, events[0]);
					delete _eventData[id][type];
				}
			}
			var count = 0;
			_each(_eventData[id], function() {
				count++;
			});
			if(count < 2) {
				delete _eventData[id];
				_removeId(el);
			}
		}
	}

	function _fire(el, type) {
		if(type.indexOf(',') >= 0) {
			_each(type.split(','), function() {
				_fire(el, this);
			});
			return;
		}
		var id = _getId(el);
		if(!id) {
			return;
		}
		var events = _eventData[id][type];
		if(_eventData[id] && events && events.length > 0) {
			events[0]();
		}
	}

	function _ctrl(el, key, fn) {
		var self = this;
		key = /^\d{2,}$/.test(key) ? key : key.toUpperCase().charCodeAt(0);
		_bind(el, 'keydown', function(e) {
			if(e.ctrlKey && e.which == key && !e.shiftKey && !e.altKey) {
				fn.call(el);
				e.stop();
			}
		});
	}
	var _readyFinished = false;

	function _ready(fn) {
		if(_readyFinished) {
			fn(KindEditor);
			return;
		}
		var loaded = false;

		function readyFunc() {
			if(!loaded) {
				loaded = true;
				fn(KindEditor);
				_readyFinished = true;
			}
		}

		function ieReadyFunc() {
			if(!loaded) {
				try {
					document.documentElement.doScroll('left');
				} catch(e) {
					setTimeout(ieReadyFunc, 100);
					return;
				}
				readyFunc();
			}
		}

		function ieReadyStateFunc() {
			if(document.readyState === 'complete') {
				readyFunc();
			}
		}
		if(document.addEventListener) {
			_bind(document, 'DOMContentLoaded', readyFunc);
		} else if(document.attachEvent) {
			_bind(document, 'readystatechange', ieReadyStateFunc);
			var toplevel = false;
			try {
				toplevel = window.frameElement == null;
			} catch(e) {}
			if(document.documentElement.doScroll && toplevel) {
				ieReadyFunc();
			}
		}
		_bind(window, 'load', readyFunc);
	}
	if(_IE) {
		window.attachEvent('onunload', function() {
			_each(_eventData, function(key, events) {
				if(events.el) {
					_unbind(events.el);
				}
			});
		});
	}
	K.ctrl = _ctrl;
	K.ready = _ready;

	function _getCssList(css) {
		var list = {},
			reg = /\s*([\w\-]+)\s*:([^;]*)(;|$)/g,
			match;
		while((match = reg.exec(css))) {
			var key = _trim(match[1].toLowerCase()),
				val = _trim(_toHex(match[2]));
			list[key] = val;
		}
		return list;
	}

	function _getAttrList(tag) {
		var list = {},
			reg = /\s+(?:([\w\-:]+)|(?:([\w\-:]+)=([^\s"'<>]+))|(?:([\w\-:"]+)="([^"]*)")|(?:([\w\-:"]+)='([^']*)'))(?=(?:\s|\/|>)+)/g,
			match;
		while((match = reg.exec(tag))) {
			var key = (match[1] || match[2] || match[4] || match[6]).toLowerCase(),
				val = (match[2] ? match[3] : (match[4] ? match[5] : match[7])) || '';
			list[key] = val;
		}
		return list;
	}

	function _addClassToTag(tag, className) {
		if(/\s+class\s*=/.test(tag)) {
			tag = tag.replace(/(\s+class=["']?)([^"']*)(["']?[\s>])/, function($0, $1, $2, $3) {
				if((' ' + $2 + ' ').indexOf(' ' + className + ' ') < 0) {
					return $2 === '' ? $1 + className + $3 : $1 + $2 + ' ' + className + $3;
				} else {
					return $0;
				}
			});
		} else {
			tag = tag.substr(0, tag.length - 1) + ' class="' + className + '">';
		}
		return tag;
	}

	function _formatCss(css) {
		var str = '';
		_each(_getCssList(css), function(key, val) {
			str += key + ':' + val + ';';
		});
		return str;
	}

	function _formatUrl(url, mode, host, pathname) {
		mode = _undef(mode, '').toLowerCase();
		if(url.substr(0, 5) != 'data:') {
			url = url.replace(/([^:])\/\//g, '$1/');
		}
		if(_inArray(mode, ['absolute', 'relative', 'domain']) < 0) {
			return url;
		}
		host = host || location.protocol + '//' + location.host;
		if(pathname === undefined) {
			var m = location.pathname.match(/^(\/.*)\//);
			pathname = m ? m[1] : '';
		}
		var match;
		if((match = /^(\w+:\/\/[^\/]*)/.exec(url))) {
			if(match[1] !== host) {
				return url;
			}
		} else if(/^\w+:/.test(url)) {
			return url;
		}

		function getRealPath(path) {
			var parts = path.split('/'),
				paths = [];
			for(var i = 0, len = parts.length; i < len; i++) {
				var part = parts[i];
				if(part == '..') {
					if(paths.length > 0) {
						paths.pop();
					}
				} else if(part !== '' && part != '.') {
					paths.push(part);
				}
			}
			return '/' + paths.join('/');
		}
		if(/^\//.test(url)) {
			url = host + getRealPath(url.substr(1));
		} else if(!/^\w+:\/\//.test(url)) {
			url = host + getRealPath(pathname + '/' + url);
		}

		function getRelativePath(path, depth) {
			if(url.substr(0, path.length) === path) {
				var arr = [];
				for(var i = 0; i < depth; i++) {
					arr.push('..');
				}
				var prefix = '.';
				if(arr.length > 0) {
					prefix += '/' + arr.join('/');
				}
				if(pathname == '/') {
					prefix += '/';
				}
				return prefix + url.substr(path.length);
			} else {
				if((match = /^(.*)\//.exec(path))) {
					return getRelativePath(match[1], ++depth);
				}
			}
		}
		if(mode === 'relative') {
			url = getRelativePath(host + pathname, 0).substr(2);
		} else if(mode === 'absolute') {
			if(url.substr(0, host.length) === host) {
				url = url.substr(host.length);
			}
		}
		return url;
	}

	function _formatHtml(html, htmlTags, urlType, wellFormatted, indentChar) {
		if(html == null) {
			html = '';
		}
		urlType = urlType || '';
		wellFormatted = _undef(wellFormatted, false);
		indentChar = _undef(indentChar, '\t');
		var fontSizeList = 'xx-small,x-small,small,medium,large,x-large,xx-large'.split(',');
		html = html.replace(/(<(?:pre|pre\s[^>]*)>)([\s\S]*?)(<\/pre>)/ig, function($0, $1, $2, $3) {
			return $1 + $2.replace(/<(?:br|br\s[^>]*)>/ig, '\n') + $3;
		});
		html = html.replace(/<(?:br|br\s[^>]*)\s*\/?>\s*<\/p>/ig, '</p>');
		html = html.replace(/(<(?:p|p\s[^>]*)>)\s*(<\/p>)/ig, '$1<br />$2');
		html = html.replace(/\u200B/g, '');
		html = html.replace(/\u00A9/g, '&copy;');
		html = html.replace(/\u00AE/g, '&reg;');
		html = html.replace(/<[^>]+/g, function($0) {
			return $0.replace(/\s+/g, ' ');
		});
		var htmlTagMap = {};
		if(htmlTags) {
			_each(htmlTags, function(key, val) {
				var arr = key.split(',');
				for(var i = 0, len = arr.length; i < len; i++) {
					htmlTagMap[arr[i]] = _toMap(val);
				}
			});
			if(!htmlTagMap.script) {
				html = html.replace(/(<(?:script|script\s[^>]*)>)([\s\S]*?)(<\/script>)/ig, '');
			}
			if(!htmlTagMap.style) {
				html = html.replace(/(<(?:style|style\s[^>]*)>)([\s\S]*?)(<\/style>)/ig, '');
			}
		}
		var re = /(\s*)<(\/)?([\w\-:]+)((?:\s+|(?:\s+[\w\-:]+)|(?:\s+[\w\-:]+=[^\s"'<>]+)|(?:\s+[\w\-:"]+="[^"]*")|(?:\s+[\w\-:"]+='[^']*'))*)(\/)?>(\s*)/g;
		var tagStack = [];
		html = html.replace(re, function($0, $1, $2, $3, $4, $5, $6) {
			var full = $0,
				startNewline = $1 || '',
				startSlash = $2 || '',
				tagName = $3.toLowerCase(),
				attr = $4 || '',
				endSlash = $5 ? ' ' + $5 : '',
				endNewline = $6 || '';
			if(htmlTags && !htmlTagMap[tagName]) {
				return '';
			}
			if(endSlash === '' && _SINGLE_TAG_MAP[tagName]) {
				endSlash = ' /';
			}
			if(_INLINE_TAG_MAP[tagName]) {
				if(startNewline) {
					startNewline = ' ';
				}
				if(endNewline) {
					endNewline = ' ';
				}
			}
			if(_PRE_TAG_MAP[tagName]) {
				if(startSlash) {
					endNewline = '\n';
				} else {
					startNewline = '\n';
				}
			}
			if(wellFormatted && tagName == 'br') {
				endNewline = '\n';
			}
			if(_BLOCK_TAG_MAP[tagName] && !_PRE_TAG_MAP[tagName]) {
				if(wellFormatted) {
					if(startSlash && tagStack.length > 0 && tagStack[tagStack.length - 1] === tagName) {
						tagStack.pop();
					} else {
						tagStack.push(tagName);
					}
					startNewline = '\n';
					endNewline = '\n';
					for(var i = 0, len = startSlash ? tagStack.length : tagStack.length - 1; i < len; i++) {
						startNewline += indentChar;
						if(!startSlash) {
							endNewline += indentChar;
						}
					}
					if(endSlash) {
						tagStack.pop();
					} else if(!startSlash) {
						endNewline += indentChar;
					}
				} else {
					startNewline = endNewline = '';
				}
			}
			if(attr !== '') {
				var attrMap = _getAttrList(full);
				if(tagName === 'font') {
					var fontStyleMap = {},
						fontStyle = '';
					_each(attrMap, function(key, val) {
						if(key === 'color') {
							fontStyleMap.color = val;
							delete attrMap[key];
						}
						if(key === 'size') {
							fontStyleMap['font-size'] = fontSizeList[parseInt(val, 10) - 1] || '';
							delete attrMap[key];
						}
						if(key === 'face') {
							fontStyleMap['font-family'] = val;
							delete attrMap[key];
						}
						if(key === 'style') {
							fontStyle = val;
						}
					});
					if(fontStyle && !/;$/.test(fontStyle)) {
						fontStyle += ';';
					}
					_each(fontStyleMap, function(key, val) {
						if(val === '') {
							return;
						}
						if(/\s/.test(val)) {
							val = "'" + val + "'";
						}
						fontStyle += key + ':' + val + ';';
					});
					attrMap.style = fontStyle;
				}
				_each(attrMap, function(key, val) {
					if(_FILL_ATTR_MAP[key]) {
						attrMap[key] = key;
					}
					if(_inArray(key, ['src', 'href']) >= 0) {
						attrMap[key] = _formatUrl(val, urlType);
					}
					if(htmlTags && key !== 'style' && !htmlTagMap[tagName]['*'] && !htmlTagMap[tagName][key] ||
						tagName === 'body' && key === 'contenteditable' ||
						/^kindeditor_\d+$/.test(key)) {
						delete attrMap[key];
					}
					if(key === 'style' && val !== '') {
						var styleMap = _getCssList(val);
						_each(styleMap, function(k, v) {
							if(htmlTags && !htmlTagMap[tagName].style && !htmlTagMap[tagName]['.' + k]) {
								delete styleMap[k];
							}
						});
						var style = '';
						_each(styleMap, function(k, v) {
							style += k + ':' + v + ';';
						});
						attrMap.style = style;
					}
				});
				attr = '';
				_each(attrMap, function(key, val) {
					if(key === 'style' && val === '') {
						return;
					}
					val = val.replace(/"/g, '&quot;');
					attr += ' ' + key + '="' + val + '"';
				});
			}
			if(tagName === 'font') {
				tagName = 'span';
			}
			return startNewline + '<' + startSlash + tagName + attr + endSlash + '>' + endNewline;
		});
		html = html.replace(/(<(?:pre|pre\s[^>]*)>)([\s\S]*?)(<\/pre>)/ig, function($0, $1, $2, $3) {
			return $1 + $2.replace(/\n/g, '<span id="__kindeditor_pre_newline__">\n') + $3;
		});
		html = html.replace(/\n\s*\n/g, '\n');
		html = html.replace(/<span id="__kindeditor_pre_newline__">\n/g, '\n');
		return _trim(html);
	}

	function _clearMsWord(html, htmlTags) {
		html = html.replace(/<meta[\s\S]*?>/ig, '')
			.replace(/<![\s\S]*?>/ig, '')
			.replace(/<style[^>]*>[\s\S]*?<\/style>/ig, '')
			.replace(/<script[^>]*>[\s\S]*?<\/script>/ig, '')
			.replace(/<w:[^>]+>[\s\S]*?<\/w:[^>]+>/ig, '')
			.replace(/<o:[^>]+>[\s\S]*?<\/o:[^>]+>/ig, '')
			.replace(/<xml>[\s\S]*?<\/xml>/ig, '')
			.replace(/<(?:table|td)[^>]*>/ig, function(full) {
				return full.replace(/border-bottom:([#\w\s]+)/ig, 'border:$1');
			});
		return _formatHtml(html, htmlTags);
	}

	function _mediaType(src) {
		if(/\.(rm|rmvb)(\?|$)/i.test(src)) {
			return 'audio/x-pn-realaudio-plugin';
		}
		if(/\.(swf|flv)(\?|$)/i.test(src)) {
			return 'application/x-shockwave-flash';
		}
		return 'video/x-ms-asf-plugin';
	}

	function _mediaClass(type) {
		if(/realaudio/i.test(type)) {
			return 'ke-rm';
		}
		if(/flash/i.test(type)) {
			return 'ke-flash';
		}
		return 'ke-media';
	}

	function _mediaAttrs(srcTag) {
		return _getAttrList(unescape(srcTag));
	}

	function _mediaEmbed(attrs) {
		var html = '<embed ';
		_each(attrs, function(key, val) {
			html += key + '="' + val + '" ';
		});
		html += '/>';
		return html;
	}

	function _mediaImg(blankPath, attrs) {
		var width = attrs.width,
			height = attrs.height,
			type = attrs.type || _mediaType(attrs.src),
			srcTag = _mediaEmbed(attrs),
			style = '';
		if(/\D/.test(width)) {
			style += 'width:' + width + ';';
		} else if(width > 0) {
			style += 'width:' + width + 'px;';
		}
		if(/\D/.test(height)) {
			style += 'height:' + height + ';';
		} else if(height > 0) {
			style += 'height:' + height + 'px;';
		}
		var html = '<img class="' + _mediaClass(type) + '" src="' + blankPath + '" ';
		if(style !== '') {
			html += 'style="' + style + '" ';
		}
		html += 'data-ke-tag="' + escape(srcTag) + '" alt="" />';
		return html;
	}

	function _tmpl(str, data) {
		var fn = new Function("obj",
			"var p=[],print=function(){p.push.apply(p,arguments);};" +
			"with(obj){p.push('" +
			str.replace(/[\r\t\n]/g, " ")
			.split("<%").join("\t")
			.replace(/((^|%>)[^\t]*)'/g, "$1\r")
			.replace(/\t=(.*?)%>/g, "',$1,'")
			.split("\t").join("');")
			.split("%>").join("p.push('")
			.split("\r").join("\\'") + "');}return p.join('');");
		return data ? fn(data) : fn;
	}
	K.formatUrl = _formatUrl;
	K.formatHtml = _formatHtml;
	K.getCssList = _getCssList;
	K.getAttrList = _getAttrList;
	K.mediaType = _mediaType;
	K.mediaAttrs = _mediaAttrs;
	K.mediaEmbed = _mediaEmbed;
	K.mediaImg = _mediaImg;
	K.clearMsWord = _clearMsWord;
	K.tmpl = _tmpl;

	function _contains(nodeA, nodeB) {
		if(nodeA.nodeType == 9 && nodeB.nodeType != 9) {
			return true;
		}
		while((nodeB = nodeB.parentNode)) {
			if(nodeB == nodeA) {
				return true;
			}
		}
		return false;
	}
	var _getSetAttrDiv = document.createElement('div');
	_getSetAttrDiv.setAttribute('className', 't');
	var _GET_SET_ATTRIBUTE = _getSetAttrDiv.className !== 't';

	function _getAttr(el, key) {
		key = key.toLowerCase();
		var val = null;
		if(!_GET_SET_ATTRIBUTE && el.nodeName.toLowerCase() != 'script') {
			var div = el.ownerDocument.createElement('div');
			div.appendChild(el.cloneNode(false));
			var list = _getAttrList(_unescape(div.innerHTML));
			if(key in list) {
				val = list[key];
			}
		} else {
			try {
				val = el.getAttribute(key, 2);
			} catch(e) {
				val = el.getAttribute(key, 1);
			}
		}
		if(key === 'style' && val !== null) {
			val = _formatCss(val);
		}
		return val;
	}

	function _queryAll(expr, root) {
		var exprList = expr.split(',');
		if(exprList.length > 1) {
			var mergedResults = [];
			_each(exprList, function() {
				_each(_queryAll(this, root), function() {
					if(_inArray(this, mergedResults) < 0) {
						mergedResults.push(this);
					}
				});
			});
			return mergedResults;
		}
		root = root || document;

		function escape(str) {
			if(typeof str != 'string') {
				return str;
			}
			return str.replace(/([^\w\-])/g, '\\$1');
		}

		function stripslashes(str) {
			return str.replace(/\\/g, '');
		}

		function cmpTag(tagA, tagB) {
			return tagA === '*' || tagA.toLowerCase() === escape(tagB.toLowerCase());
		}

		function byId(id, tag, root) {
			var arr = [],
				doc = root.ownerDocument || root,
				el = doc.getElementById(stripslashes(id));
			if(el) {
				if(cmpTag(tag, el.nodeName) && _contains(root, el)) {
					arr.push(el);
				}
			}
			return arr;
		}

		function byClass(className, tag, root) {
			var doc = root.ownerDocument || root,
				arr = [],
				els, i, len, el;
			if(root.getElementsByClassName) {
				els = root.getElementsByClassName(stripslashes(className));
				for(i = 0, len = els.length; i < len; i++) {
					el = els[i];
					if(cmpTag(tag, el.nodeName)) {
						arr.push(el);
					}
				}
			} else if(doc.querySelectorAll) {
				els = doc.querySelectorAll((root.nodeName !== '#document' ? root.nodeName + ' ' : '') + tag + '.' + className);
				for(i = 0, len = els.length; i < len; i++) {
					el = els[i];
					if(_contains(root, el)) {
						arr.push(el);
					}
				}
			} else {
				els = root.getElementsByTagName(tag);
				className = ' ' + className + ' ';
				for(i = 0, len = els.length; i < len; i++) {
					el = els[i];
					if(el.nodeType == 1) {
						var cls = el.className;
						if(cls && (' ' + cls + ' ').indexOf(className) > -1) {
							arr.push(el);
						}
					}
				}
			}
			return arr;
		}

		function byName(name, tag, root) {
			var arr = [],
				doc = root.ownerDocument || root,
				els = doc.getElementsByName(stripslashes(name)),
				el;
			for(var i = 0, len = els.length; i < len; i++) {
				el = els[i];
				if(cmpTag(tag, el.nodeName) && _contains(root, el)) {
					if(el.getAttribute('name') !== null) {
						arr.push(el);
					}
				}
			}
			return arr;
		}

		function byAttr(key, val, tag, root) {
			var arr = [],
				els = root.getElementsByTagName(tag),
				el;
			for(var i = 0, len = els.length; i < len; i++) {
				el = els[i];
				if(el.nodeType == 1) {
					if(val === null) {
						if(_getAttr(el, key) !== null) {
							arr.push(el);
						}
					} else {
						if(val === escape(_getAttr(el, key))) {
							arr.push(el);
						}
					}
				}
			}
			return arr;
		}

		function select(expr, root) {
			var arr = [],
				matches;
			matches = /^((?:\\.|[^.#\s\[<>])+)/.exec(expr);
			var tag = matches ? matches[1] : '*';
			if((matches = /#((?:[\w\-]|\\.)+)$/.exec(expr))) {
				arr = byId(matches[1], tag, root);
			} else if((matches = /\.((?:[\w\-]|\\.)+)$/.exec(expr))) {
				arr = byClass(matches[1], tag, root);
			} else if((matches = /\[((?:[\w\-]|\\.)+)\]/.exec(expr))) {
				arr = byAttr(matches[1].toLowerCase(), null, tag, root);
			} else if((matches = /\[((?:[\w\-]|\\.)+)\s*=\s*['"]?((?:\\.|[^'"]+)+)['"]?\]/.exec(expr))) {
				var key = matches[1].toLowerCase(),
					val = matches[2];
				if(key === 'id') {
					arr = byId(val, tag, root);
				} else if(key === 'class') {
					arr = byClass(val, tag, root);
				} else if(key === 'name') {
					arr = byName(val, tag, root);
				} else {
					arr = byAttr(key, val, tag, root);
				}
			} else {
				var els = root.getElementsByTagName(tag),
					el;
				for(var i = 0, len = els.length; i < len; i++) {
					el = els[i];
					if(el.nodeType == 1) {
						arr.push(el);
					}
				}
			}
			return arr;
		}
		var parts = [],
			arr, re = /((?:\\.|[^\s>])+|[\s>])/g;
		while((arr = re.exec(expr))) {
			if(arr[1] !== ' ') {
				parts.push(arr[1]);
			}
		}
		var results = [];
		if(parts.length == 1) {
			return select(parts[0], root);
		}
		var isChild = false,
			part, els, subResults, val, v, i, j, k, length, len, l;
		for(i = 0, lenth = parts.length; i < lenth; i++) {
			part = parts[i];
			if(part === '>') {
				isChild = true;
				continue;
			}
			if(i > 0) {
				els = [];
				for(j = 0, len = results.length; j < len; j++) {
					val = results[j];
					subResults = select(part, val);
					for(k = 0, l = subResults.length; k < l; k++) {
						v = subResults[k];
						if(isChild) {
							if(val === v.parentNode) {
								els.push(v);
							}
						} else {
							els.push(v);
						}
					}
				}
				results = els;
			} else {
				results = select(part, root);
			}
			if(results.length === 0) {
				return [];
			}
		}
		return results;
	}

	function _query(expr, root) {
		var arr = _queryAll(expr, root);
		return arr.length > 0 ? arr[0] : null;
	}
	K.query = _query;
	K.queryAll = _queryAll;

	function _get(val) {
		return K(val)[0];
	}

	function _getDoc(node) {
		if(!node) {
			return document;
		}
		return node.ownerDocument || node.document || node;
	}

	function _getWin(node) {
		if(!node) {
			return window;
		}
		var doc = _getDoc(node);
		return doc.parentWindow || doc.defaultView;
	}

	function _setHtml(el, html) {
		if(el.nodeType != 1) {
			return;
		}
		var doc = _getDoc(el);
		try {
			el.innerHTML = '<img id="__kindeditor_temp_tag__" width="0" height="0" style="display:none;" />' + html;
			var temp = doc.getElementById('__kindeditor_temp_tag__');
			temp.parentNode.removeChild(temp);
		} catch(e) {
			K(el).empty();
			K('@' + html, doc).each(function() {
				el.appendChild(this);
			});
		}
	}

	function _hasClass(el, cls) {
		return _inString(cls, el.className, ' ');
	}

	function _setAttr(el, key, val) {
		if(_IE && _V < 8 && key.toLowerCase() == 'class') {
			key = 'className';
		}
		el.setAttribute(key, '' + val);
	}

	function _removeAttr(el, key) {
		if(_IE && _V < 8 && key.toLowerCase() == 'class') {
			key = 'className';
		}
		_setAttr(el, key, '');
		el.removeAttribute(key);
	}

	function _getNodeName(node) {
		if(!node || !node.nodeName) {
			return '';
		}
		return node.nodeName.toLowerCase();
	}

	function _computedCss(el, key) {
		var self = this,
			win = _getWin(el),
			camelKey = _toCamel(key),
			val = '';
		if(win.getComputedStyle) {
			var style = win.getComputedStyle(el, null);
			val = style[camelKey] || style.getPropertyValue(key) || el.style[camelKey];
		} else if(el.currentStyle) {
			val = el.currentStyle[camelKey] || el.style[camelKey];
		}
		return val;
	}

	function _hasVal(node) {
		return !!_VALUE_TAG_MAP[_getNodeName(node)];
	}

	function _docElement(doc) {
		doc = doc || document;
		return _QUIRKS ? doc.body : doc.documentElement;
	}

	function _docHeight(doc) {
		var el = _docElement(doc);
		return Math.max(el.scrollHeight, el.clientHeight);
	}

	function _docWidth(doc) {
		var el = _docElement(doc);
		return Math.max(el.scrollWidth, el.clientWidth);
	}

	function _getScrollPos(doc) {
		doc = doc || document;
		var x, y;
		if(_IE || _NEWIE || _OPERA) {
			x = _docElement(doc).scrollLeft;
			y = _docElement(doc).scrollTop;
		} else {
			x = _getWin(doc).scrollX;
			y = _getWin(doc).scrollY;
		}
		return {
			x: x,
			y: y
		};
	}

	function KNode(node) {
		this.init(node);
	}
	_extend(KNode, {
		init: function(node) {
			var self = this;
			node = _isArray(node) ? node : [node];
			var length = 0;
			for(var i = 0, len = node.length; i < len; i++) {
				if(node[i]) {
					self[i] = node[i].constructor === KNode ? node[i][0] : node[i];
					length++;
				}
			}
			self.length = length;
			self.doc = _getDoc(self[0]);
			self.name = _getNodeName(self[0]);
			self.type = self.length > 0 ? self[0].nodeType : null;
			self.win = _getWin(self[0]);
		},
		each: function(fn) {
			var self = this;
			for(var i = 0; i < self.length; i++) {
				if(fn.call(self[i], i, self[i]) === false) {
					return self;
				}
			}
			return self;
		},
		bind: function(type, fn) {
			this.each(function() {
				_bind(this, type, fn);
			});
			return this;
		},
		unbind: function(type, fn) {
			this.each(function() {
				_unbind(this, type, fn);
			});
			return this;
		},
		fire: function(type) {
			if(this.length < 1) {
				return this;
			}
			_fire(this[0], type);
			return this;
		},
		hasAttr: function(key) {
			if(this.length < 1) {
				return false;
			}
			return !!_getAttr(this[0], key);
		},
		attr: function(key, val) {
			var self = this;
			if(key === undefined) {
				return _getAttrList(self.outer());
			}
			if(typeof key === 'object') {
				_each(key, function(k, v) {
					self.attr(k, v);
				});
				return self;
			}
			if(val === undefined) {
				val = self.length < 1 ? null : _getAttr(self[0], key);
				return val === null ? '' : val;
			}
			self.each(function() {
				_setAttr(this, key, val);
			});
			return self;
		},
		removeAttr: function(key) {
			this.each(function() {
				_removeAttr(this, key);
			});
			return this;
		},
		get: function(i) {
			if(this.length < 1) {
				return null;
			}
			return this[i || 0];
		},
		eq: function(i) {
			if(this.length < 1) {
				return null;
			}
			return this[i] ? new KNode(this[i]) : null;
		},
		hasClass: function(cls) {
			if(this.length < 1) {
				return false;
			}
			return _hasClass(this[0], cls);
		},
		addClass: function(cls) {
			this.each(function() {
				if(!_hasClass(this, cls)) {
					this.className = _trim(this.className + ' ' + cls);
				}
			});
			return this;
		},
		removeClass: function(cls) {
			this.each(function() {
				if(_hasClass(this, cls)) {
					this.className = _trim(this.className.replace(new RegExp('(^|\\s)' + cls + '(\\s|$)'), ' '));
				}
			});
			return this;
		},
		html: function(val) {
			var self = this;
			if(val === undefined) {
				if(self.length < 1 || self.type != 1) {
					return '';
				}
				return _formatHtml(self[0].innerHTML);
			}
			self.each(function() {
				_setHtml(this, val);
			});
			return self;
		},
		text: function() {
			var self = this;
			if(self.length < 1) {
				return '';
			}
			return _IE ? self[0].innerText : self[0].textContent;
		},
		hasVal: function() {
			if(this.length < 1) {
				return false;
			}
			return _hasVal(this[0]);
		},
		val: function(val) {
			var self = this;
			if(val === undefined) {
				if(self.length < 1) {
					return '';
				}
				return self.hasVal() ? self[0].value : self.attr('value');
			} else {
				self.each(function() {
					if(_hasVal(this)) {
						this.value = val;
					} else {
						_setAttr(this, 'value', val);
					}
				});
				return self;
			}
		},
		css: function(key, val) {
			var self = this;
			if(key === undefined) {
				return _getCssList(self.attr('style'));
			}
			if(typeof key === 'object') {
				_each(key, function(k, v) {
					self.css(k, v);
				});
				return self;
			}
			if(val === undefined) {
				if(self.length < 1) {
					return '';
				}
				return self[0].style[_toCamel(key)] || _computedCss(self[0], key) || '';
			}
			self.each(function() {
				this.style[_toCamel(key)] = val;
			});
			return self;
		},
		width: function(val) {
			var self = this;
			if(val === undefined) {
				if(self.length < 1) {
					return 0;
				}
				return self[0].offsetWidth;
			}
			return self.css('width', _addUnit(val));
		},
		height: function(val) {
			var self = this;
			if(val === undefined) {
				if(self.length < 1) {
					return 0;
				}
				return self[0].offsetHeight;
			}
			return self.css('height', _addUnit(val));
		},
		opacity: function(val) {
			this.each(function() {
				if(this.style.opacity === undefined) {
					this.style.filter = val == 1 ? '' : 'alpha(opacity=' + (val * 100) + ')';
				} else {
					this.style.opacity = val == 1 ? '' : val;
				}
			});
			return this;
		},
		data: function(key, val) {
			var self = this;
			key = 'kindeditor_data_' + key;
			if(val === undefined) {
				if(self.length < 1) {
					return null;
				}
				return self[0][key];
			}
			this.each(function() {
				this[key] = val;
			});
			return self;
		},
		pos: function() {
			var self = this,
				node = self[0],
				x = 0,
				y = 0;
			if(node) {
				if(node.getBoundingClientRect) {
					var box = node.getBoundingClientRect(),
						pos = _getScrollPos(self.doc);
					x = box.left + pos.x;
					y = box.top + pos.y;
				} else {
					while(node) {
						x += node.offsetLeft;
						y += node.offsetTop;
						node = node.offsetParent;
					}
				}
			}
			return {
				x: _round(x),
				y: _round(y)
			};
		},
		clone: function(bool) {
			if(this.length < 1) {
				return new KNode([]);
			}
			return new KNode(this[0].cloneNode(bool));
		},
		append: function(expr) {
			this.each(function() {
				if(this.appendChild) {
					this.appendChild(_get(expr));
				}
			});
			return this;
		},
		appendTo: function(expr) {
			this.each(function() {
				_get(expr).appendChild(this);
			});
			return this;
		},
		before: function(expr) {
			this.each(function() {
				this.parentNode.insertBefore(_get(expr), this);
			});
			return this;
		},
		after: function(expr) {
			this.each(function() {
				if(this.nextSibling) {
					this.parentNode.insertBefore(_get(expr), this.nextSibling);
				} else {
					this.parentNode.appendChild(_get(expr));
				}
			});
			return this;
		},
		replaceWith: function(expr) {
			var nodes = [];
			this.each(function(i, node) {
				_unbind(node);
				var newNode = _get(expr);
				node.parentNode.replaceChild(newNode, node);
				nodes.push(newNode);
			});
			return K(nodes);
		},
		empty: function() {
			var self = this;
			self.each(function(i, node) {
				var child = node.firstChild;
				while(child) {
					if(!node.parentNode) {
						return;
					}
					var next = child.nextSibling;
					child.parentNode.removeChild(child);
					child = next;
				}
			});
			return self;
		},
		remove: function(keepChilds) {
			var self = this;
			self.each(function(i, node) {
				if(!node.parentNode) {
					return;
				}
				_unbind(node);
				if(keepChilds) {
					var child = node.firstChild;
					while(child) {
						var next = child.nextSibling;
						node.parentNode.insertBefore(child, node);
						child = next;
					}
				}
				node.parentNode.removeChild(node);
				delete self[i];
			});
			self.length = 0;
			return self;
		},
		show: function(val) {
			var self = this;
			if(val === undefined) {
				val = self._originDisplay || '';
			}
			if(self.css('display') != 'none') {
				return self;
			}
			return self.css('display', val);
		},
		hide: function() {
			var self = this;
			if(self.length < 1) {
				return self;
			}
			self._originDisplay = self[0].style.display;
			return self.css('display', 'none');
		},
		outer: function() {
			var self = this;
			if(self.length < 1) {
				return '';
			}
			var div = self.doc.createElement('div'),
				html;
			div.appendChild(self[0].cloneNode(true));
			html = _formatHtml(div.innerHTML);
			div = null;
			return html;
		},
		isSingle: function() {
			return !!_SINGLE_TAG_MAP[this.name];
		},
		isInline: function() {
			return !!_INLINE_TAG_MAP[this.name];
		},
		isBlock: function() {
			return !!_BLOCK_TAG_MAP[this.name];
		},
		isStyle: function() {
			return !!_STYLE_TAG_MAP[this.name];
		},
		isControl: function() {
			return !!_CONTROL_TAG_MAP[this.name];
		},
		contains: function(otherNode) {
			if(this.length < 1) {
				return false;
			}
			return _contains(this[0], _get(otherNode));
		},
		parent: function() {
			if(this.length < 1) {
				return null;
			}
			var node = this[0].parentNode;
			return node ? new KNode(node) : null;
		},
		children: function() {
			if(this.length < 1) {
				return new KNode([]);
			}
			var list = [],
				child = this[0].firstChild;
			while(child) {
				if(child.nodeType != 3 || _trim(child.nodeValue) !== '') {
					list.push(child);
				}
				child = child.nextSibling;
			}
			return new KNode(list);
		},
		first: function() {
			var list = this.children();
			return list.length > 0 ? list.eq(0) : null;
		},
		last: function() {
			var list = this.children();
			return list.length > 0 ? list.eq(list.length - 1) : null;
		},
		index: function() {
			if(this.length < 1) {
				return -1;
			}
			var i = -1,
				sibling = this[0];
			while(sibling) {
				i++;
				sibling = sibling.previousSibling;
			}
			return i;
		},
		prev: function() {
			if(this.length < 1) {
				return null;
			}
			var node = this[0].previousSibling;
			return node ? new KNode(node) : null;
		},
		next: function() {
			if(this.length < 1) {
				return null;
			}
			var node = this[0].nextSibling;
			return node ? new KNode(node) : null;
		},
		scan: function(fn, order) {
			if(this.length < 1) {
				return;
			}
			order = (order === undefined) ? true : order;

			function walk(node) {
				var n = order ? node.firstChild : node.lastChild;
				while(n) {
					var next = order ? n.nextSibling : n.previousSibling;
					if(fn(n) === false) {
						return false;
					}
					if(walk(n) === false) {
						return false;
					}
					n = next;
				}
			}
			walk(this[0]);
			return this;
		}
	});
	_each(('blur,focus,focusin,focusout,load,resize,scroll,unload,click,dblclick,' +
		'mousedown,mouseup,mousemove,mouseover,mouseout,mouseenter,mouseleave,' +
		'change,select,submit,keydown,keypress,keyup,error,contextmenu').split(','), function(i, type) {
		KNode.prototype[type] = function(fn) {
			return fn ? this.bind(type, fn) : this.fire(type);
		};
	});
	var _K = K;
	K = function(expr, root) {
		if(expr === undefined || expr === null) {
			return;
		}

		function newNode(node) {
			if(!node[0]) {
				node = [];
			}
			return new KNode(node);
		}
		if(typeof expr === 'string') {
			if(root) {
				root = _get(root);
			}
			var length = expr.length;
			if(expr.charAt(0) === '@') {
				expr = expr.substr(1);
			}
			if(expr.length !== length || /<.+>/.test(expr)) {
				var doc = root ? root.ownerDocument || root : document,
					div = doc.createElement('div'),
					list = [];
				div.innerHTML = '<img id="__kindeditor_temp_tag__" width="0" height="0" style="display:none;" />' + expr;
				for(var i = 0, len = div.childNodes.length; i < len; i++) {
					var child = div.childNodes[i];
					if(child.id == '__kindeditor_temp_tag__') {
						continue;
					}
					list.push(child);
				}
				return newNode(list);
			}
			return newNode(_queryAll(expr, root));
		}
		if(expr && expr.constructor === KNode) {
			return expr;
		}
		if(expr.toArray) {
			expr = expr.toArray();
		}
		if(_isArray(expr)) {
			return newNode(expr);
		}
		return newNode(_toArray(arguments));
	};
	_each(_K, function(key, val) {
		K[key] = val;
	});
	K.NodeClass = KNode;
	window.KindEditor = K;
	var _START_TO_START = 0,
		_START_TO_END = 1,
		_END_TO_END = 2,
		_END_TO_START = 3,
		_BOOKMARK_ID = 0;

	function _updateCollapsed(range) {
		range.collapsed = (range.startContainer === range.endContainer && range.startOffset === range.endOffset);
		return range;
	}

	function _copyAndDelete(range, isCopy, isDelete) {
		var doc = range.doc,
			nodeList = [];

		function splitTextNode(node, startOffset, endOffset) {
			var length = node.nodeValue.length,
				centerNode;
			if(isCopy) {
				var cloneNode = node.cloneNode(true);
				if(startOffset > 0) {
					centerNode = cloneNode.splitText(startOffset);
				} else {
					centerNode = cloneNode;
				}
				if(endOffset < length) {
					centerNode.splitText(endOffset - startOffset);
				}
			}
			if(isDelete) {
				var center = node;
				if(startOffset > 0) {
					center = node.splitText(startOffset);
					range.setStart(node, startOffset);
				}
				if(endOffset < length) {
					var right = center.splitText(endOffset - startOffset);
					range.setEnd(right, 0);
				}
				nodeList.push(center);
			}
			return centerNode;
		}

		function removeNodes() {
			if(isDelete) {
				range.up().collapse(true);
			}
			for(var i = 0, len = nodeList.length; i < len; i++) {
				var node = nodeList[i];
				if(node.parentNode) {
					node.parentNode.removeChild(node);
				}
			}
		}
		var copyRange = range.cloneRange().down();
		var start = -1,
			incStart = -1,
			incEnd = -1,
			end = -1,
			ancestor = range.commonAncestor(),
			frag = doc.createDocumentFragment();
		if(ancestor.nodeType == 3) {
			var textNode = splitTextNode(ancestor, range.startOffset, range.endOffset);
			if(isCopy) {
				frag.appendChild(textNode);
			}
			removeNodes();
			return isCopy ? frag : range;
		}

		function extractNodes(parent, frag) {
			var node = parent.firstChild,
				nextNode;
			while(node) {
				var testRange = new KRange(doc).selectNode(node);
				start = testRange.compareBoundaryPoints(_START_TO_END, range);
				if(start >= 0 && incStart <= 0) {
					incStart = testRange.compareBoundaryPoints(_START_TO_START, range);
				}
				if(incStart >= 0 && incEnd <= 0) {
					incEnd = testRange.compareBoundaryPoints(_END_TO_END, range);
				}
				if(incEnd >= 0 && end <= 0) {
					end = testRange.compareBoundaryPoints(_END_TO_START, range);
				}
				if(end >= 0) {
					return false;
				}
				nextNode = node.nextSibling;
				if(start > 0) {
					if(node.nodeType == 1) {
						if(incStart >= 0 && incEnd <= 0) {
							if(isCopy) {
								frag.appendChild(node.cloneNode(true));
							}
							if(isDelete) {
								nodeList.push(node);
							}
						} else {
							var childFlag;
							if(isCopy) {
								childFlag = node.cloneNode(false);
								frag.appendChild(childFlag);
							}
							if(extractNodes(node, childFlag) === false) {
								return false;
							}
						}
					} else if(node.nodeType == 3) {
						var textNode;
						if(node == copyRange.startContainer) {
							textNode = splitTextNode(node, copyRange.startOffset, node.nodeValue.length);
						} else if(node == copyRange.endContainer) {
							textNode = splitTextNode(node, 0, copyRange.endOffset);
						} else {
							textNode = splitTextNode(node, 0, node.nodeValue.length);
						}
						if(isCopy) {
							try {
								frag.appendChild(textNode);
							} catch(e) {}
						}
					}
				}
				node = nextNode;
			}
		}
		extractNodes(ancestor, frag);
		if(isDelete) {
			range.up().collapse(true);
		}
		for(var i = 0, len = nodeList.length; i < len; i++) {
			var node = nodeList[i];
			if(node.parentNode) {
				node.parentNode.removeChild(node);
			}
		}
		return isCopy ? frag : range;
	}

	function _moveToElementText(range, el) {
		var node = el;
		while(node) {
			var knode = K(node);
			if(knode.name == 'marquee' || knode.name == 'select') {
				return;
			}
			node = node.parentNode;
		}
		try {
			range.moveToElementText(el);
		} catch(e) {}
	}

	function _getStartEnd(rng, isStart) {
		var doc = rng.parentElement().ownerDocument,
			pointRange = rng.duplicate();
		pointRange.collapse(isStart);
		var parent = pointRange.parentElement(),
			nodes = parent.childNodes;
		if(nodes.length === 0) {
			return {
				node: parent.parentNode,
				offset: K(parent).index()
			};
		}
		var startNode = doc,
			startPos = 0,
			cmp = -1;
		var testRange = rng.duplicate();
		_moveToElementText(testRange, parent);
		for(var i = 0, len = nodes.length; i < len; i++) {
			var node = nodes[i];
			cmp = testRange.compareEndPoints('StartToStart', pointRange);
			if(cmp === 0) {
				return {
					node: node.parentNode,
					offset: i
				};
			}
			if(node.nodeType == 1) {
				var nodeRange = rng.duplicate(),
					dummy, knode = K(node),
					newNode = node;
				if(knode.isControl()) {
					dummy = doc.createElement('span');
					knode.after(dummy);
					newNode = dummy;
					startPos += knode.text().replace(/\r\n|\n|\r/g, '').length;
				}
				_moveToElementText(nodeRange, newNode);
				testRange.setEndPoint('StartToEnd', nodeRange);
				if(cmp > 0) {
					startPos += nodeRange.text.replace(/\r\n|\n|\r/g, '').length;
				} else {
					startPos = 0;
				}
				if(dummy) {
					K(dummy).remove();
				}
			} else if(node.nodeType == 3) {
				testRange.moveStart('character', node.nodeValue.length);
				startPos += node.nodeValue.length;
			}
			if(cmp < 0) {
				startNode = node;
			}
		}
		if(cmp < 0 && startNode.nodeType == 1) {
			return {
				node: parent,
				offset: K(parent.lastChild).index() + 1
			};
		}
		if(cmp > 0) {
			while(startNode.nextSibling && startNode.nodeType == 1) {
				startNode = startNode.nextSibling;
			}
		}
		testRange = rng.duplicate();
		_moveToElementText(testRange, parent);
		testRange.setEndPoint('StartToEnd', pointRange);
		startPos -= testRange.text.replace(/\r\n|\n|\r/g, '').length;
		if(cmp > 0 && startNode.nodeType == 3) {
			var prevNode = startNode.previousSibling;
			while(prevNode && prevNode.nodeType == 3) {
				startPos -= prevNode.nodeValue.length;
				prevNode = prevNode.previousSibling;
			}
		}
		return {
			node: startNode,
			offset: startPos
		};
	}

	function _getEndRange(node, offset) {
		var doc = node.ownerDocument || node,
			range = doc.body.createTextRange();
		if(doc == node) {
			range.collapse(true);
			return range;
		}
		if(node.nodeType == 1 && node.childNodes.length > 0) {
			var children = node.childNodes,
				isStart, child;
			if(offset === 0) {
				child = children[0];
				isStart = true;
			} else {
				child = children[offset - 1];
				isStart = false;
			}
			if(!child) {
				return range;
			}
			if(K(child).name === 'head') {
				if(offset === 1) {
					isStart = true;
				}
				if(offset === 2) {
					isStart = false;
				}
				range.collapse(isStart);
				return range;
			}
			if(child.nodeType == 1) {
				var kchild = K(child),
					span;
				if(kchild.isControl()) {
					span = doc.createElement('span');
					if(isStart) {
						kchild.before(span);
					} else {
						kchild.after(span);
					}
					child = span;
				}
				_moveToElementText(range, child);
				range.collapse(isStart);
				if(span) {
					K(span).remove();
				}
				return range;
			}
			node = child;
			offset = isStart ? 0 : child.nodeValue.length;
		}
		var dummy = doc.createElement('span');
		K(node).before(dummy);
		_moveToElementText(range, dummy);
		range.moveStart('character', offset);
		K(dummy).remove();
		return range;
	}

	function _toRange(rng) {
		var doc, range;

		function tr2td(start) {
			if(K(start.node).name == 'tr') {
				start.node = start.node.cells[start.offset];
				start.offset = 0;
			}
		}
		if(_IERANGE) {
			if(rng.item) {
				doc = _getDoc(rng.item(0));
				range = new KRange(doc);
				range.selectNode(rng.item(0));
				return range;
			}
			doc = rng.parentElement().ownerDocument;
			var start = _getStartEnd(rng, true),
				end = _getStartEnd(rng, false);
			tr2td(start);
			tr2td(end);
			range = new KRange(doc);
			range.setStart(start.node, start.offset);
			range.setEnd(end.node, end.offset);
			return range;
		}
		var startContainer = rng.startContainer;
		doc = startContainer.ownerDocument || startContainer;
		range = new KRange(doc);
		range.setStart(startContainer, rng.startOffset);
		range.setEnd(rng.endContainer, rng.endOffset);
		return range;
	}

	function KRange(doc) {
		this.init(doc);
	}
	_extend(KRange, {
		init: function(doc) {
			var self = this;
			self.startContainer = doc;
			self.startOffset = 0;
			self.endContainer = doc;
			self.endOffset = 0;
			self.collapsed = true;
			self.doc = doc;
		},
		commonAncestor: function() {
			function getParents(node) {
				var parents = [];
				while(node) {
					parents.push(node);
					node = node.parentNode;
				}
				return parents;
			}
			var parentsA = getParents(this.startContainer),
				parentsB = getParents(this.endContainer),
				i = 0,
				lenA = parentsA.length,
				lenB = parentsB.length,
				parentA, parentB;
			while(++i) {
				parentA = parentsA[lenA - i];
				parentB = parentsB[lenB - i];
				if(!parentA || !parentB || parentA !== parentB) {
					break;
				}
			}
			return parentsA[lenA - i + 1];
		},
		setStart: function(node, offset) {
			var self = this,
				doc = self.doc;
			self.startContainer = node;
			self.startOffset = offset;
			if(self.endContainer === doc) {
				self.endContainer = node;
				self.endOffset = offset;
			}
			return _updateCollapsed(this);
		},
		setEnd: function(node, offset) {
			var self = this,
				doc = self.doc;
			self.endContainer = node;
			self.endOffset = offset;
			if(self.startContainer === doc) {
				self.startContainer = node;
				self.startOffset = offset;
			}
			return _updateCollapsed(this);
		},
		setStartBefore: function(node) {
			return this.setStart(node.parentNode || this.doc, K(node).index());
		},
		setStartAfter: function(node) {
			return this.setStart(node.parentNode || this.doc, K(node).index() + 1);
		},
		setEndBefore: function(node) {
			return this.setEnd(node.parentNode || this.doc, K(node).index());
		},
		setEndAfter: function(node) {
			return this.setEnd(node.parentNode || this.doc, K(node).index() + 1);
		},
		selectNode: function(node) {
			return this.setStartBefore(node).setEndAfter(node);
		},
		selectNodeContents: function(node) {
			var knode = K(node);
			if(knode.type == 3 || knode.isSingle()) {
				return this.selectNode(node);
			}
			var children = knode.children();
			if(children.length > 0) {
				return this.setStartBefore(children[0]).setEndAfter(children[children.length - 1]);
			}
			return this.setStart(node, 0).setEnd(node, 0);
		},
		collapse: function(toStart) {
			if(toStart) {
				return this.setEnd(this.startContainer, this.startOffset);
			}
			return this.setStart(this.endContainer, this.endOffset);
		},
		compareBoundaryPoints: function(how, range) {
			var rangeA = this.get(),
				rangeB = range.get();
			if(_IERANGE) {
				var arr = {};
				arr[_START_TO_START] = 'StartToStart';
				arr[_START_TO_END] = 'EndToStart';
				arr[_END_TO_END] = 'EndToEnd';
				arr[_END_TO_START] = 'StartToEnd';
				var cmp = rangeA.compareEndPoints(arr[how], rangeB);
				if(cmp !== 0) {
					return cmp;
				}
				var nodeA, nodeB, nodeC, posA, posB;
				if(how === _START_TO_START || how === _END_TO_START) {
					nodeA = this.startContainer;
					posA = this.startOffset;
				}
				if(how === _START_TO_END || how === _END_TO_END) {
					nodeA = this.endContainer;
					posA = this.endOffset;
				}
				if(how === _START_TO_START || how === _START_TO_END) {
					nodeB = range.startContainer;
					posB = range.startOffset;
				}
				if(how === _END_TO_END || how === _END_TO_START) {
					nodeB = range.endContainer;
					posB = range.endOffset;
				}
				if(nodeA === nodeB) {
					var diff = posA - posB;
					return diff > 0 ? 1 : (diff < 0 ? -1 : 0);
				}
				nodeC = nodeB;
				while(nodeC && nodeC.parentNode !== nodeA) {
					nodeC = nodeC.parentNode;
				}
				if(nodeC) {
					return K(nodeC).index() >= posA ? -1 : 1;
				}
				nodeC = nodeA;
				while(nodeC && nodeC.parentNode !== nodeB) {
					nodeC = nodeC.parentNode;
				}
				if(nodeC) {
					return K(nodeC).index() >= posB ? 1 : -1;
				}
				nodeC = K(nodeB).next();
				if(nodeC && nodeC.contains(nodeA)) {
					return 1;
				}
				nodeC = K(nodeA).next();
				if(nodeC && nodeC.contains(nodeB)) {
					return -1;
				}
			} else {
				return rangeA.compareBoundaryPoints(how, rangeB);
			}
		},
		cloneRange: function() {
			return new KRange(this.doc).setStart(this.startContainer, this.startOffset).setEnd(this.endContainer, this.endOffset);
		},
		toString: function() {
			var rng = this.get(),
				str = _IERANGE ? rng.text : rng.toString();
			return str.replace(/\r\n|\n|\r/g, '');
		},
		cloneContents: function() {
			return _copyAndDelete(this, true, false);
		},
		deleteContents: function() {
			return _copyAndDelete(this, false, true);
		},
		extractContents: function() {
			return _copyAndDelete(this, true, true);
		},
		insertNode: function(node) {
			var self = this,
				sc = self.startContainer,
				so = self.startOffset,
				ec = self.endContainer,
				eo = self.endOffset,
				firstChild, lastChild, c, nodeCount = 1;
			if(node.nodeName.toLowerCase() === '#document-fragment') {
				firstChild = node.firstChild;
				lastChild = node.lastChild;
				nodeCount = node.childNodes.length;
			}
			if(sc.nodeType == 1) {
				c = sc.childNodes[so];
				if(c) {
					sc.insertBefore(node, c);
					if(sc === ec) {
						eo += nodeCount;
					}
				} else {
					sc.appendChild(node);
				}
			} else if(sc.nodeType == 3) {
				if(so === 0) {
					sc.parentNode.insertBefore(node, sc);
					if(sc.parentNode === ec) {
						eo += nodeCount;
					}
				} else if(so >= sc.nodeValue.length) {
					if(sc.nextSibling) {
						sc.parentNode.insertBefore(node, sc.nextSibling);
					} else {
						sc.parentNode.appendChild(node);
					}
				} else {
					if(so > 0) {
						c = sc.splitText(so);
					} else {
						c = sc;
					}
					sc.parentNode.insertBefore(node, c);
					if(sc === ec) {
						ec = c;
						eo -= so;
					}
				}
			}
			if(firstChild) {
				self.setStartBefore(firstChild).setEndAfter(lastChild);
			} else {
				self.selectNode(node);
			}
			if(self.compareBoundaryPoints(_END_TO_END, self.cloneRange().setEnd(ec, eo)) >= 1) {
				return self;
			}
			return self.setEnd(ec, eo);
		},
		surroundContents: function(node) {
			node.appendChild(this.extractContents());
			return this.insertNode(node).selectNode(node);
		},
		isControl: function() {
			var self = this,
				sc = self.startContainer,
				so = self.startOffset,
				ec = self.endContainer,
				eo = self.endOffset,
				rng;
			return sc.nodeType == 1 && sc === ec && so + 1 === eo && K(sc.childNodes[so]).isControl();
		},
		get: function(hasControlRange) {
			var self = this,
				doc = self.doc,
				node, rng;
			if(!_IERANGE) {
				rng = doc.createRange();
				try {
					rng.setStart(self.startContainer, self.startOffset);
					rng.setEnd(self.endContainer, self.endOffset);
				} catch(e) {}
				return rng;
			}
			if(hasControlRange && self.isControl()) {
				rng = doc.body.createControlRange();
				rng.addElement(self.startContainer.childNodes[self.startOffset]);
				return rng;
			}
			var range = self.cloneRange().down();
			rng = doc.body.createTextRange();
			rng.setEndPoint('StartToStart', _getEndRange(range.startContainer, range.startOffset));
			rng.setEndPoint('EndToStart', _getEndRange(range.endContainer, range.endOffset));
			return rng;
		},
		html: function() {
			return K(this.cloneContents()).outer();
		},
		down: function() {
			var self = this;

			function downPos(node, pos, isStart) {
				if(node.nodeType != 1) {
					return;
				}
				var children = K(node).children();
				if(children.length === 0) {
					return;
				}
				var left, right, child, offset;
				if(pos > 0) {
					left = children.eq(pos - 1);
				}
				if(pos < children.length) {
					right = children.eq(pos);
				}
				if(left && left.type == 3) {
					child = left[0];
					offset = child.nodeValue.length;
				}
				if(right && right.type == 3) {
					child = right[0];
					offset = 0;
				}
				if(!child) {
					return;
				}
				if(isStart) {
					self.setStart(child, offset);
				} else {
					self.setEnd(child, offset);
				}
			}
			downPos(self.startContainer, self.startOffset, true);
			downPos(self.endContainer, self.endOffset, false);
			return self;
		},
		up: function() {
			var self = this;

			function upPos(node, pos, isStart) {
				if(node.nodeType != 3) {
					return;
				}
				if(pos === 0) {
					if(isStart) {
						self.setStartBefore(node);
					} else {
						self.setEndBefore(node);
					}
				} else if(pos == node.nodeValue.length) {
					if(isStart) {
						self.setStartAfter(node);
					} else {
						self.setEndAfter(node);
					}
				}
			}
			upPos(self.startContainer, self.startOffset, true);
			upPos(self.endContainer, self.endOffset, false);
			return self;
		},
		enlarge: function(toBlock) {
			var self = this;
			self.up();

			function enlargePos(node, pos, isStart) {
				var knode = K(node),
					parent;
				if(knode.type == 3 || _NOSPLIT_TAG_MAP[knode.name] || !toBlock && knode.isBlock()) {
					return;
				}
				if(pos === 0) {
					while(!knode.prev()) {
						parent = knode.parent();
						if(!parent || _NOSPLIT_TAG_MAP[parent.name] || !toBlock && parent.isBlock()) {
							break;
						}
						knode = parent;
					}
					if(isStart) {
						self.setStartBefore(knode[0]);
					} else {
						self.setEndBefore(knode[0]);
					}
				} else if(pos == knode.children().length) {
					while(!knode.next()) {
						parent = knode.parent();
						if(!parent || _NOSPLIT_TAG_MAP[parent.name] || !toBlock && parent.isBlock()) {
							break;
						}
						knode = parent;
					}
					if(isStart) {
						self.setStartAfter(knode[0]);
					} else {
						self.setEndAfter(knode[0]);
					}
				}
			}
			enlargePos(self.startContainer, self.startOffset, true);
			enlargePos(self.endContainer, self.endOffset, false);
			return self;
		},
		shrink: function() {
			var self = this,
				child, collapsed = self.collapsed;
			while(self.startContainer.nodeType == 1 && (child = self.startContainer.childNodes[self.startOffset]) && child.nodeType == 1 && !K(child).isSingle()) {
				self.setStart(child, 0);
			}
			if(collapsed) {
				return self.collapse(collapsed);
			}
			while(self.endContainer.nodeType == 1 && self.endOffset > 0 && (child = self.endContainer.childNodes[self.endOffset - 1]) && child.nodeType == 1 && !K(child).isSingle()) {
				self.setEnd(child, child.childNodes.length);
			}
			return self;
		},
		createBookmark: function(serialize) {
			var self = this,
				doc = self.doc,
				endNode,
				startNode = K('<span style="display:none;"></span>', doc)[0];
			startNode.id = '__kindeditor_bookmark_start_' + (_BOOKMARK_ID++) + '__';
			if(!self.collapsed) {
				endNode = startNode.cloneNode(true);
				endNode.id = '__kindeditor_bookmark_end_' + (_BOOKMARK_ID++) + '__';
			}
			if(endNode) {
				self.cloneRange().collapse(false).insertNode(endNode).setEndBefore(endNode);
			}
			self.insertNode(startNode).setStartAfter(startNode);
			return {
				start: serialize ? '#' + startNode.id : startNode,
				end: endNode ? (serialize ? '#' + endNode.id : endNode) : null
			};
		},
		moveToBookmark: function(bookmark) {
			var self = this,
				doc = self.doc,
				start = K(bookmark.start, doc),
				end = bookmark.end ? K(bookmark.end, doc) : null;
			if(!start || start.length < 1) {
				return self;
			}
			self.setStartBefore(start[0]);
			start.remove();
			if(end && end.length > 0) {
				self.setEndBefore(end[0]);
				end.remove();
			} else {
				self.collapse(true);
			}
			return self;
		},
		dump: function() {
			console.log('--------------------');
			console.log(this.startContainer.nodeType == 3 ? this.startContainer.nodeValue : this.startContainer, this.startOffset);
			console.log(this.endContainer.nodeType == 3 ? this.endContainer.nodeValue : this.endContainer, this.endOffset);
		}
	});

	function _range(mixed) {
		if(!mixed.nodeName) {
			return mixed.constructor === KRange ? mixed : _toRange(mixed);
		}
		return new KRange(mixed);
	}
	K.RangeClass = KRange;
	K.range = _range;
	K.START_TO_START = _START_TO_START;
	K.START_TO_END = _START_TO_END;
	K.END_TO_END = _END_TO_END;
	K.END_TO_START = _END_TO_START;

	function _nativeCommand(doc, key, val) {
		try {
			doc.execCommand(key, false, val);
		} catch(e) {}
	}

	function _nativeCommandValue(doc, key) {
		var val = '';
		try {
			val = doc.queryCommandValue(key);
		} catch(e) {}
		if(typeof val !== 'string') {
			val = '';
		}
		return val;
	}

	function _getSel(doc) {
		var win = _getWin(doc);
		return _IERANGE ? doc.selection : win.getSelection();
	}

	function _getRng(doc) {
		var sel = _getSel(doc),
			rng;
		try {
			if(sel.rangeCount > 0) {
				rng = sel.getRangeAt(0);
			} else {
				rng = sel.createRange();
			}
		} catch(e) {}
		if(_IERANGE && (!rng || (!rng.item && rng.parentElement().ownerDocument !== doc))) {
			return null;
		}
		return rng;
	}

	function _singleKeyMap(map) {
		var newMap = {},
			arr, v;
		_each(map, function(key, val) {
			arr = key.split(',');
			for(var i = 0, len = arr.length; i < len; i++) {
				v = arr[i];
				newMap[v] = val;
			}
		});
		return newMap;
	}

	function _hasAttrOrCss(knode, map) {
		return _hasAttrOrCssByKey(knode, map, '*') || _hasAttrOrCssByKey(knode, map);
	}

	function _hasAttrOrCssByKey(knode, map, mapKey) {
		mapKey = mapKey || knode.name;
		if(knode.type !== 1) {
			return false;
		}
		var newMap = _singleKeyMap(map);
		if(!newMap[mapKey]) {
			return false;
		}
		var arr = newMap[mapKey].split(',');
		for(var i = 0, len = arr.length; i < len; i++) {
			var key = arr[i];
			if(key === '*') {
				return true;
			}
			var match = /^(\.?)([^=]+)(?:=([^=]*))?$/.exec(key);
			var method = match[1] ? 'css' : 'attr';
			key = match[2];
			var val = match[3] || '';
			if(val === '' && knode[method](key) !== '') {
				return true;
			}
			if(val !== '' && knode[method](key) === val) {
				return true;
			}
		}
		return false;
	}

	function _removeAttrOrCss(knode, map) {
		if(knode.type != 1) {
			return;
		}
		_removeAttrOrCssByKey(knode, map, '*');
		_removeAttrOrCssByKey(knode, map);
	}

	function _removeAttrOrCssByKey(knode, map, mapKey) {
		mapKey = mapKey || knode.name;
		if(knode.type !== 1) {
			return;
		}
		var newMap = _singleKeyMap(map);
		if(!newMap[mapKey]) {
			return;
		}
		var arr = newMap[mapKey].split(','),
			allFlag = false;
		for(var i = 0, len = arr.length; i < len; i++) {
			var key = arr[i];
			if(key === '*') {
				allFlag = true;
				break;
			}
			var match = /^(\.?)([^=]+)(?:=([^=]*))?$/.exec(key);
			key = match[2];
			if(match[1]) {
				key = _toCamel(key);
				if(knode[0].style[key]) {
					knode[0].style[key] = '';
				}
			} else {
				knode.removeAttr(key);
			}
		}
		if(allFlag) {
			knode.remove(true);
		}
	}

	function _getInnerNode(knode) {
		var inner = knode;
		while(inner.first()) {
			inner = inner.first();
		}
		return inner;
	}

	function _isEmptyNode(knode) {
		if(knode.type != 1 || knode.isSingle()) {
			return false;
		}
		return knode.html().replace(/<[^>]+>/g, '') === '';
	}

	function _mergeWrapper(a, b) {
		a = a.clone(true);
		var lastA = _getInnerNode(a),
			childA = a,
			merged = false;
		while(b) {
			while(childA) {
				if(childA.name === b.name) {
					_mergeAttrs(childA, b.attr(), b.css());
					merged = true;
				}
				childA = childA.first();
			}
			if(!merged) {
				lastA.append(b.clone(false));
			}
			merged = false;
			b = b.first();
		}
		return a;
	}

	function _wrapNode(knode, wrapper) {
		wrapper = wrapper.clone(true);
		if(knode.type == 3) {
			_getInnerNode(wrapper).append(knode.clone(false));
			knode.replaceWith(wrapper);
			return wrapper;
		}
		var nodeWrapper = knode,
			child;
		while((child = knode.first()) && child.children().length == 1) {
			knode = child;
		}
		child = knode.first();
		var frag = knode.doc.createDocumentFragment();
		while(child) {
			frag.appendChild(child[0]);
			child = child.next();
		}
		wrapper = _mergeWrapper(nodeWrapper, wrapper);
		if(frag.firstChild) {
			_getInnerNode(wrapper).append(frag);
		}
		nodeWrapper.replaceWith(wrapper);
		return wrapper;
	}

	function _mergeAttrs(knode, attrs, styles) {
		_each(attrs, function(key, val) {
			if(key !== 'style') {
				knode.attr(key, val);
			}
		});
		_each(styles, function(key, val) {
			knode.css(key, val);
		});
	}

	function _inPreElement(knode) {
		while(knode && knode.name != 'body') {
			if(_PRE_TAG_MAP[knode.name] || knode.name == 'div' && knode.hasClass('ke-script')) {
				return true;
			}
			knode = knode.parent();
		}
		return false;
	}

	function KCmd(range) {
		this.init(range);
	}
	_extend(KCmd, {
		init: function(range) {
			var self = this,
				doc = range.doc;
			self.doc = doc;
			self.win = _getWin(doc);
			self.sel = _getSel(doc);
			self.range = range;
		},
		selection: function(forceReset) {
			var self = this,
				doc = self.doc,
				rng = _getRng(doc);
			self.sel = _getSel(doc);
			if(rng) {
				self.range = _range(rng);
				if(K(self.range.startContainer).name == 'html') {
					self.range.selectNodeContents(doc.body).collapse(false);
				}
				return self;
			}
			if(forceReset) {
				self.range.selectNodeContents(doc.body).collapse(false);
			}
			return self;
		},
		select: function(hasDummy) {
			hasDummy = _undef(hasDummy, true);
			var self = this,
				sel = self.sel,
				range = self.range.cloneRange().shrink(),
				sc = range.startContainer,
				so = range.startOffset,
				ec = range.endContainer,
				eo = range.endOffset,
				doc = _getDoc(sc),
				win = self.win,
				rng, hasU200b = false;
			if(hasDummy && sc.nodeType == 1 && range.collapsed) {
				if(_IERANGE) {
					var dummy = K('<span>&nbsp;</span>', doc);
					range.insertNode(dummy[0]);
					rng = doc.body.createTextRange();
					try {
						rng.moveToElementText(dummy[0]);
					} catch(ex) {}
					rng.collapse(false);
					rng.select();
					dummy.remove();
					win.focus();
					return self;
				}
				if(_WEBKIT) {
					var children = sc.childNodes;
					if(K(sc).isInline() || so > 0 && K(children[so - 1]).isInline() || children[so] && K(children[so]).isInline()) {
						range.insertNode(doc.createTextNode('\u200B'));
						hasU200b = true;
					}
				}
			}
			if(_IERANGE) {
				try {
					rng = range.get(true);
					rng.select();
				} catch(e) {}
			} else {
				if(hasU200b) {
					range.collapse(false);
				}
				rng = range.get(true);
				sel.removeAllRanges();
				sel.addRange(rng);
				if(doc !== document) {
					var pos = K(rng.endContainer).pos();
					win.scrollTo(pos.x, pos.y);
				}
			}
			win.focus();
			return self;
		},
		wrap: function(val) {
			var self = this,
				doc = self.doc,
				range = self.range,
				wrapper;
			wrapper = K(val, doc);
			if(range.collapsed) {
				range.shrink();
				range.insertNode(wrapper[0]).selectNodeContents(wrapper[0]);
				return self;
			}
			if(wrapper.isBlock()) {
				var copyWrapper = wrapper.clone(true),
					child = copyWrapper;
				while(child.first()) {
					child = child.first();
				}
				child.append(range.extractContents());
				range.insertNode(copyWrapper[0]).selectNode(copyWrapper[0]);
				return self;
			}
			range.enlarge();
			var bookmark = range.createBookmark(),
				ancestor = range.commonAncestor(),
				isStart = false;
			K(ancestor).scan(function(node) {
				if(!isStart && node == bookmark.start) {
					isStart = true;
					return;
				}
				if(isStart) {
					if(node == bookmark.end) {
						return false;
					}
					var knode = K(node);
					if(_inPreElement(knode)) {
						return;
					}
					if(knode.type == 3 && _trim(node.nodeValue).length > 0) {
						var parent;
						while((parent = knode.parent()) && parent.isStyle() && parent.children().length == 1) {
							knode = parent;
						}
						_wrapNode(knode, wrapper);
					}
				}
			});
			range.moveToBookmark(bookmark);
			return self;
		},
		split: function(isStart, map) {
			var range = this.range,
				doc = range.doc;
			var tempRange = range.cloneRange().collapse(isStart);
			var node = tempRange.startContainer,
				pos = tempRange.startOffset,
				parent = node.nodeType == 3 ? node.parentNode : node,
				needSplit = false,
				knode;
			while(parent && parent.parentNode) {
				knode = K(parent);
				if(map) {
					if(!knode.isStyle()) {
						break;
					}
					if(!_hasAttrOrCss(knode, map)) {
						break;
					}
				} else {
					if(_NOSPLIT_TAG_MAP[knode.name]) {
						break;
					}
				}
				needSplit = true;
				parent = parent.parentNode;
			}
			if(needSplit) {
				var dummy = doc.createElement('span');
				range.cloneRange().collapse(!isStart).insertNode(dummy);
				if(isStart) {
					tempRange.setStartBefore(parent.firstChild).setEnd(node, pos);
				} else {
					tempRange.setStart(node, pos).setEndAfter(parent.lastChild);
				}
				var frag = tempRange.extractContents(),
					first = frag.firstChild,
					last = frag.lastChild;
				if(isStart) {
					tempRange.insertNode(frag);
					range.setStartAfter(last).setEndBefore(dummy);
				} else {
					parent.appendChild(frag);
					range.setStartBefore(dummy).setEndBefore(first);
				}
				var dummyParent = dummy.parentNode;
				if(dummyParent == range.endContainer) {
					var prev = K(dummy).prev(),
						next = K(dummy).next();
					if(prev && next && prev.type == 3 && next.type == 3) {
						range.setEnd(prev[0], prev[0].nodeValue.length);
					} else if(!isStart) {
						range.setEnd(range.endContainer, range.endOffset - 1);
					}
				}
				dummyParent.removeChild(dummy);
			}
			return this;
		},
		remove: function(map) {
			var self = this,
				doc = self.doc,
				range = self.range;
			range.enlarge();
			if(range.startOffset === 0) {
				var ksc = K(range.startContainer),
					parent;
				while((parent = ksc.parent()) && parent.isStyle() && parent.children().length == 1) {
					ksc = parent;
				}
				range.setStart(ksc[0], 0);
				ksc = K(range.startContainer);
				if(ksc.isBlock()) {
					_removeAttrOrCss(ksc, map);
				}
				var kscp = ksc.parent();
				if(kscp && kscp.isBlock()) {
					_removeAttrOrCss(kscp, map);
				}
			}
			var sc, so;
			if(range.collapsed) {
				self.split(true, map);
				sc = range.startContainer;
				so = range.startOffset;
				if(so > 0) {
					var sb = K(sc.childNodes[so - 1]);
					if(sb && _isEmptyNode(sb)) {
						sb.remove();
						range.setStart(sc, so - 1);
					}
				}
				var sa = K(sc.childNodes[so]);
				if(sa && _isEmptyNode(sa)) {
					sa.remove();
				}
				if(_isEmptyNode(sc)) {
					range.startBefore(sc);
					sc.remove();
				}
				range.collapse(true);
				return self;
			}
			self.split(true, map);
			self.split(false, map);
			var startDummy = doc.createElement('span'),
				endDummy = doc.createElement('span');
			range.cloneRange().collapse(false).insertNode(endDummy);
			range.cloneRange().collapse(true).insertNode(startDummy);
			var nodeList = [],
				cmpStart = false;
			K(range.commonAncestor()).scan(function(node) {
				if(!cmpStart && node == startDummy) {
					cmpStart = true;
					return;
				}
				if(node == endDummy) {
					return false;
				}
				if(cmpStart) {
					nodeList.push(node);
				}
			});
			K(startDummy).remove();
			K(endDummy).remove();
			sc = range.startContainer;
			so = range.startOffset;
			var ec = range.endContainer,
				eo = range.endOffset;
			if(so > 0) {
				var startBefore = K(sc.childNodes[so - 1]);
				if(startBefore && _isEmptyNode(startBefore)) {
					startBefore.remove();
					range.setStart(sc, so - 1);
					if(sc == ec) {
						range.setEnd(ec, eo - 1);
					}
				}
				var startAfter = K(sc.childNodes[so]);
				if(startAfter && _isEmptyNode(startAfter)) {
					startAfter.remove();
					if(sc == ec) {
						range.setEnd(ec, eo - 1);
					}
				}
			}
			var endAfter = K(ec.childNodes[range.endOffset]);
			if(endAfter && _isEmptyNode(endAfter)) {
				endAfter.remove();
			}
			var bookmark = range.createBookmark(true);
			_each(nodeList, function(i, node) {
				_removeAttrOrCss(K(node), map);
			});
			range.moveToBookmark(bookmark);
			return self;
		},
		commonNode: function(map) {
			var range = this.range;
			var ec = range.endContainer,
				eo = range.endOffset,
				node = (ec.nodeType == 3 || eo === 0) ? ec : ec.childNodes[eo - 1];

			function find(node) {
				var child = node,
					parent = node;
				while(parent) {
					if(_hasAttrOrCss(K(parent), map)) {
						return K(parent);
					}
					parent = parent.parentNode;
				}
				while(child && (child = child.lastChild)) {
					if(_hasAttrOrCss(K(child), map)) {
						return K(child);
					}
				}
				return null;
			}
			var cNode = find(node);
			if(cNode) {
				return cNode;
			}
			if(node.nodeType == 1 || (ec.nodeType == 3 && eo === 0)) {
				var prev = K(node).prev();
				if(prev) {
					return find(prev);
				}
			}
			return null;
		},
		commonAncestor: function(tagName) {
			var range = this.range,
				sc = range.startContainer,
				so = range.startOffset,
				ec = range.endContainer,
				eo = range.endOffset,
				startNode = (sc.nodeType == 3 || so === 0) ? sc : sc.childNodes[so - 1],
				endNode = (ec.nodeType == 3 || eo === 0) ? ec : ec.childNodes[eo - 1];

			function find(node) {
				while(node) {
					if(node.nodeType == 1) {
						if(node.tagName.toLowerCase() === tagName) {
							return node;
						}
					}
					node = node.parentNode;
				}
				return null;
			}
			var start = find(startNode),
				end = find(endNode);
			if(start && end && start === end) {
				return K(start);
			}
			return null;
		},
		state: function(key) {
			var self = this,
				doc = self.doc,
				bool = false;
			try {
				bool = doc.queryCommandState(key);
			} catch(e) {}
			return bool;
		},
		val: function(key) {
			var self = this,
				doc = self.doc,
				range = self.range;

			function lc(val) {
				return val.toLowerCase();
			}
			key = lc(key);
			var val = '',
				knode;
			if(key === 'fontfamily' || key === 'fontname') {
				val = _nativeCommandValue(doc, 'fontname');
				val = val.replace(/['"]/g, '');
				return lc(val);
			}
			if(key === 'formatblock') {
				val = _nativeCommandValue(doc, key);
				if(val === '') {
					knode = self.commonNode({
						'h1,h2,h3,h4,h5,h6,p,div,pre,address': '*'
					});
					if(knode) {
						val = knode.name;
					}
				}
				if(val === 'Normal') {
					val = 'p';
				}
				return lc(val);
			}
			if(key === 'fontsize') {
				knode = self.commonNode({
					'*': '.font-size'
				});
				if(knode) {
					val = knode.css('font-size');
				}
				return lc(val);
			}
			//段前距
			if(key == 'rowspacingtop') {
				knode = self.commonNode({
					'*': '.margin-top'
				});
				if(knode) {
					val = knode.css('margin-top');
				}
				return lc(val);
			}
			//段后距
			if(key == 'rowspacingbottom') {
				knode = self.commonNode({
					'*': '.margin-bottom'
				});
				if(knode) {
					val = knode.css('margin-bottom');
				}
				return lc(val);
			}
			if(key === 'forecolor') {
				knode = self.commonNode({
					'*': '.color'
				});
				if(knode) {
					val = knode.css('color');
				}
				val = _toHex(val);
				if(val === '') {
					val = 'default';
				}
				return lc(val);
			}
			if(key === 'hilitecolor') {
				knode = self.commonNode({
					'*': '.background-color'
				});
				if(knode) {
					val = knode.css('background-color');
				}
				val = _toHex(val);
				if(val === '') {
					val = 'default';
				}
				return lc(val);
			}
			return val;
		},
		toggle: function(wrapper, map) {
			var self = this;
			if(self.commonNode(map)) {
				self.remove(map);
			} else {
				self.wrap(wrapper);
			}
			return self.select();
		},
		bold: function() {
			return this.toggle('<strong></strong>', {
				span: '.font-weight=bold',
				strong: '*',
				b: '*'
			});
		},
		//2016-06-20 修改人：ThreeKnives  //新增菜单“引用”
		blockquotes: function() {
			return this.toggle('<blockquote style="border-left: 5px solid #eee;padding: 0 0 0 15px;"></blockquote>', {
				span: '.font-style=blockquote',
				blockquote: '*',
				i: '*'
			});
		},
		italic: function() {
			return this.toggle('<em></em>', {
				span: '.font-style=italic',
				em: '*',
				i: '*'
			});
		},
		underline: function() {
			return this.toggle('<u></u>', {
				span: '.text-decoration=underline',
				u: '*'
			});
		},
		strikethrough: function() {
			return this.toggle('<s></s>', {
				span: '.text-decoration=line-through',
				s: '*'
			});
		},
		forecolor: function(val) {
			return this.wrap('<span style="color:' + val + ';"></span>').select();
		},
		hilitecolor: function(val) {
			return this.wrap('<span style="background-color:' + val + ';"></span>').select();
		},
		fontsize: function(val) {
			return this.wrap('<span style="font-size:' + val + ';"></span>').select();
		},
		rowspacingtop: function(val) {
			return this.wrap('<span style="margin-top:' + val + ';"></span>').select();
		},
		rowspacingbottom: function(val) {
			return this.wrap('<span style="margin-bottom:' + val + ';"></span>').select();
		},
		fontname: function(val) {
			return this.fontfamily(val);
		},
		fontfamily: function(val) {
			return this.wrap('<span style="font-family:' + val + ';"></span>').select();
		},
		removeformat: function() {
			var map = {
					'*': '.font-weight,.font-style,.text-decoration,.color,.background-color,.font-size,.font-family,.text-indent'
				},
				tags = _STYLE_TAG_MAP;
			_each(tags, function(key, val) {
				map[key] = '*';
			});
			this.remove(map);
			return this.select();
		},
		inserthtml: function(val, quickMode) {
			var self = this,
				range = self.range;
			if(val === '') {
				return self;
			}

			function pasteHtml(range, val) {
				val = '<img id="__kindeditor_temp_tag__" width="0" height="0" style="display:none;" />' + val;
				var rng = range.get();
				if(rng.item) {
					rng.item(0).outerHTML = val;
				} else {
					rng.pasteHTML(val);
				}
				var temp = range.doc.getElementById('__kindeditor_temp_tag__');
				temp.parentNode.removeChild(temp);
				var newRange = _toRange(rng);
				range.setEnd(newRange.endContainer, newRange.endOffset);
				range.collapse(false);
				self.select(false);
			}

			function insertHtml(range, val) {
				var doc = range.doc,
					frag = doc.createDocumentFragment();
				K('@' + val, doc).each(function() {
					frag.appendChild(this);
				});
				range.deleteContents();
				range.insertNode(frag);
				range.collapse(false);
				self.select(false);
			}
			if(_IERANGE && quickMode) {
				try {
					pasteHtml(range, val);
				} catch(e) {
					insertHtml(range, val);
				}
				return self;
			}
			insertHtml(range, val);
			return self;
		},
		hr: function() {
			return this.inserthtml('<hr />');
		},
		print: function() {
			this.win.print();
			return this;
		},
		insertimage: function(url, title, width, height, border, align) {
			title = _undef(title, '');
			border = _undef(border, 0);
			var html = '<img src="' + _escape(url) + '" data-ke-src="' + _escape(url) + '" ';
			if(width) {
				html += 'width="' + _escape(width) + '" ';
			}
			if(height) {
				html += 'height="' + _escape(height) + '" ';
			}
			if(title) {
				html += 'title="' + _escape(title) + '" ';
			}
			if(align) {
				html += 'align="' + _escape(align) + '" ';
			}
			html += 'alt="' + _escape(title) + '" ';
			html += '/>';
			return this.inserthtml(html);
		},
		createlink: function(url, type) {
			var self = this,
				doc = self.doc,
				range = self.range;
			self.select();
			var a = self.commonNode({
				a: '*'
			});
			if(a && !range.isControl()) {
				range.selectNode(a.get());
				self.select();
			}
			var html = '<a href="' + _escape(url) + '" data-ke-src="' + _escape(url) + '" ';
			if(type) {
				html += ' target="' + _escape(type) + '"';
			}
			if(range.collapsed) {
				html += '>' + _escape(url) + '</a>';
				return self.inserthtml(html);
			}
			if(range.isControl()) {
				var node = K(range.startContainer.childNodes[range.startOffset]);
				html += '></a>';
				node.after(K(html, doc));
				node.next().append(node);
				range.selectNode(node[0]);
				return self.select();
			}

			function setAttr(node, url, type) {
				K(node).attr('href', url).attr('data-ke-src', url);
				if(type) {
					K(node).attr('target', type);
				} else {
					K(node).removeAttr('target');
				}
			}
			var sc = range.startContainer,
				so = range.startOffset,
				ec = range.endContainer,
				eo = range.endOffset;
			if(sc.nodeType == 1 && sc === ec && so + 1 === eo) {
				var child = sc.childNodes[so];
				if(child.nodeName.toLowerCase() == 'a') {
					setAttr(child, url, type);
					return self;
				}
			}
			_nativeCommand(doc, 'createlink', '__kindeditor_temp_url__');
			K('a[href="__kindeditor_temp_url__"]', doc).each(function() {
				setAttr(this, url, type);
			});
			return self;
		},
		unlink: function() {
			var self = this,
				doc = self.doc,
				range = self.range;
			self.select();
			if(range.collapsed) {
				var a = self.commonNode({
					a: '*'
				});
				if(a) {
					range.selectNode(a.get());
					self.select();
				}
				_nativeCommand(doc, 'unlink', null);
				if(_WEBKIT && K(range.startContainer).name === 'img') {
					var parent = K(range.startContainer).parent();
					if(parent.name === 'a') {
						parent.remove(true);
					}
				}
			} else {
				_nativeCommand(doc, 'unlink', null);
			}
			return self;
		}
	});

	_each(('formatblock,selectall,justifyleft,justifycenter,justifyright,justifyfull,insertorderedlist,' +
		'insertunorderedlist,indent,outdent,subscript,superscript').split(','), function(i, name) {
		KCmd.prototype[name] = function(val) {
			var self = this;
			self.select();
			_nativeCommand(self.doc, name, val);
			if(_IERANGE && _inArray(name, 'justifyleft,justifycenter,justifyright,justifyfull'.split(',')) >= 0) {
				self.selection();
			}
			if(!_IERANGE || _inArray(name, 'formatblock,selectall,insertorderedlist,insertunorderedlist'.split(',')) >= 0) {
				self.selection();
			}
			return self;
		};
	});
	_each('cut,copy,paste'.split(','), function(i, name) {
		KCmd.prototype[name] = function() {
			var self = this;
			if(!self.doc.queryCommandSupported(name)) {
				throw 'not supported';
			}
			self.select();
			_nativeCommand(self.doc, name, null);
			return self;
		};
	});

	function _cmd(mixed) {
		if(mixed.nodeName) {
			var doc = _getDoc(mixed);
			mixed = _range(doc).selectNodeContents(doc.body).collapse(false);
		}
		return new KCmd(mixed);
	}
	K.CmdClass = KCmd;
	K.cmd = _cmd;

	function _drag(options) {
		var moveEl = options.moveEl,
			moveFn = options.moveFn,
			clickEl = options.clickEl || moveEl,
			beforeDrag = options.beforeDrag,
			iframeFix = options.iframeFix === undefined ? true : options.iframeFix;
		var docs = [document];
		if(iframeFix) {
			K('iframe').each(function() {
				var src = _formatUrl(this.src || '', 'absolute');
				if(/^https?:\/\//.test(src)) {
					return;
				}
				var doc;
				try {
					doc = _iframeDoc(this);
				} catch(e) {}
				if(doc) {
					var pos = K(this).pos();
					K(doc).data('pos-x', pos.x);
					K(doc).data('pos-y', pos.y);
					docs.push(doc);
				}
			});
		}
		clickEl.mousedown(function(e) {
			e.stopPropagation();
			var self = clickEl.get(),
				x = _removeUnit(moveEl.css('left')),
				y = _removeUnit(moveEl.css('top')),
				width = moveEl.width(),
				height = moveEl.height(),
				pageX = e.pageX,
				pageY = e.pageY;
			if(beforeDrag) {
				beforeDrag();
			}

			function moveListener(e) {
				e.preventDefault();
				var kdoc = K(_getDoc(e.target));
				var diffX = _round((kdoc.data('pos-x') || 0) + e.pageX - pageX);
				var diffY = _round((kdoc.data('pos-y') || 0) + e.pageY - pageY);
				moveFn.call(clickEl, x, y, width, height, diffX, diffY);
			}

			function selectListener(e) {
				e.preventDefault();
			}

			function upListener(e) {
				e.preventDefault();
				K(docs).unbind('mousemove', moveListener)
					.unbind('mouseup', upListener)
					.unbind('selectstart', selectListener);
				if(self.releaseCapture) {
					self.releaseCapture();
				}
			}
			K(docs).mousemove(moveListener)
				.mouseup(upListener)
				.bind('selectstart', selectListener);
			if(self.setCapture) {
				self.setCapture();
			}
		});
	}

	function KWidget(options) {
		this.init(options);
	}
	_extend(KWidget, {
		init: function(options) {
			var self = this;
			self.name = options.name || '';
			self.doc = options.doc || document;
			self.win = _getWin(self.doc);
			self.x = _addUnit(options.x);
			self.y = _addUnit(options.y);
			self.z = options.z;
			self.width = _addUnit(options.width);
			self.height = _addUnit(options.height);
			self.div = K('<div style="display:block;"></div>');
			self.options = options;
			self._alignEl = options.alignEl;
			if(self.width) {
				self.div.css('width', self.width);
			}
			if(self.height) {
				self.div.css('height', self.height);
			}
			if(self.z) {
				self.div.css({
					position: 'absolute',
					left: self.x,
					top: self.y,
					'z-index': self.z
				});
			}
			if(self.z && (self.x === undefined || self.y === undefined)) {
				self.autoPos(self.width, self.height);
			}
			if(options.cls) {
				self.div.addClass(options.cls);
			}
			if(options.shadowMode) {
				self.div.addClass('ke-shadow');
			}
			if(options.css) {
				self.div.css(options.css);
			}
			if(options.src) {
				K(options.src).replaceWith(self.div);
			} else {
				K(self.doc.body).append(self.div);
			}
			if(options.html) {
				self.div.html(options.html);
			}
			if(options.autoScroll) {
				if(_IE && _V < 7 || _QUIRKS) {
					var scrollPos = _getScrollPos();
					K(self.win).bind('scroll', function(e) {
						var pos = _getScrollPos(),
							diffX = pos.x - scrollPos.x,
							diffY = pos.y - scrollPos.y;
						self.pos(_removeUnit(self.x) + diffX, _removeUnit(self.y) + diffY, false);
					});
				} else {
					self.div.css('position', 'fixed');
				}
			}
		},
		pos: function(x, y, updateProp) {
			var self = this;
			updateProp = _undef(updateProp, true);
			if(x !== null) {
				x = x < 0 ? 0 : _addUnit(x);
				self.div.css('left', x);
				if(updateProp) {
					self.x = x;
				}
			}
			if(y !== null) {
				y = y < 0 ? 0 : _addUnit(y);
				self.div.css('top', y);
				if(updateProp) {
					self.y = y;
				}
			}
			return self;
		},
		autoPos: function(width, height) {
			var self = this,
				w = _removeUnit(width) || 0,
				h = _removeUnit(height) || 0,
				scrollPos = _getScrollPos();
			if(self._alignEl) {
				var knode = K(self._alignEl),
					pos = knode.pos(),
					diffX = _round(knode[0].clientWidth / 2 - w / 2),
					diffY = _round(knode[0].clientHeight / 2 - h / 2);
				x = diffX < 0 ? pos.x : pos.x + diffX;
				y = diffY < 0 ? pos.y : pos.y + diffY;
			} else {
				var docEl = _docElement(self.doc);
				x = _round(scrollPos.x + (docEl.clientWidth - w) / 2);
				y = _round(scrollPos.y + (docEl.clientHeight - h) / 2);
			}
			if(!(_IE && _V < 7 || _QUIRKS)) {
				x -= scrollPos.x;
				y -= scrollPos.y;
			}
			return self.pos(x, y);
		},
		remove: function() {
			var self = this;
			if(_IE && _V < 7 || _QUIRKS) {
				K(self.win).unbind('scroll');
			}
			self.div.remove();
			_each(self, function(i) {
				self[i] = null;
			});
			return this;
		},
		show: function() {
			this.div.show();
			return this;
		},
		hide: function() {
			this.div.hide();
			return this;
		},
		draggable: function(options) {
			var self = this;
			options = options || {};
			options.moveEl = self.div;
			options.moveFn = function(x, y, width, height, diffX, diffY) {
				if((x = x + diffX) < 0) {
					x = 0;
				}
				if((y = y + diffY) < 0) {
					y = 0;
				}
				self.pos(x, y);
			};
			_drag(options);
			return self;
		}
	});

	function _widget(options) {
		return new KWidget(options);
	}
	K.WidgetClass = KWidget;
	K.widget = _widget;

	function _iframeDoc(iframe) {
		iframe = _get(iframe);
		return iframe.contentDocument || iframe.contentWindow.document;
	}
	var html, _direction = '';
	if((html = document.getElementsByTagName('html'))) {
		_direction = html[0].dir;
	}

	function _getInitHtml(themesPath, bodyClass, cssPath, cssData) {
		var arr = [
			(_direction === '' ? '<html>' : '<html dir="' + _direction + '">'),
			'<head><meta charset="utf-8" /><title></title>',
			'<style>',
			'html {margin:0;padding:0;}',
			'body {margin:0;padding:5px;}',
			'body, td {font:12px/1.5 "sans serif",tahoma,verdana,helvetica;}',
			'body, p, div {word-wrap: break-word;}',
			'p {margin:5px 0;}',
			'table {border-collapse:collapse;}',
			'img {border:0;}',
			'noscript {display:none;}',
			'table.ke-zeroborder td {border:1px dotted #AAA;}',
			'img.ke-flash {',
			'	border:1px solid #AAA;',
			'	background-image:url(' + themesPath + 'common/flash.gif);',
			'	background-position:center center;',
			'	background-repeat:no-repeat;',
			'	width:100px;',
			'	height:100px;',
			'}',
			'img.ke-rm {',
			'	border:1px solid #AAA;',
			'	background-image:url(' + themesPath + 'common/rm.gif);',
			'	background-position:center center;',
			'	background-repeat:no-repeat;',
			'	width:100px;',
			'	height:100px;',
			'}',
			'img.ke-media {',
			'	border:1px solid #AAA;',
			'	background-image:url(' + themesPath + 'common/media.gif);',
			'	background-position:center center;',
			'	background-repeat:no-repeat;',
			'	width:100px;',
			'	height:100px;',
			'}',
			'img.ke-anchor {',
			'	border:1px dashed #666;',
			'	width:16px;',
			'	height:16px;',
			'}',
			'.ke-script, .ke-noscript, .ke-display-none {',
			'	display:none;',
			'	font-size:0;',
			'	width:0;',
			'	height:0;',
			'}',
			'.ke-pagebreak {',
			'	border:1px dotted #AAA;',
			'	font-size:0;',
			'	height:2px;',
			'}',
			'</style>'
		];
		if(!_isArray(cssPath)) {
			cssPath = [cssPath];
		}
		_each(cssPath, function(i, path) {
			if(path) {
				arr.push('<link href="' + path + '" rel="stylesheet" />');
			}
		});
		if(cssData) {
			arr.push('<style>' + cssData + '</style>');
		}
		arr.push('</head><body ' + (bodyClass ? 'class="' + bodyClass + '"' : '') + '></body></html>');
		return arr.join('\n');
	}

	function _elementVal(knode, val) {
		if(knode.hasVal()) {
			if(val === undefined) {
				var html = knode.val();
				html = html.replace(/(<(?:p|p\s[^>]*)>) *(<\/p>)/ig, '');
				return html;
			}
			return knode.val(val);
		}
		return knode.html(val);
	}

	function KEdit(options) {
		this.init(options);
	}
	_extend(KEdit, KWidget, {
		init: function(options) {
			var self = this;
			KEdit.parent.init.call(self, options);
			self.srcElement = K(options.srcElement);
			self.div.addClass('ke-edit');
			self.designMode = _undef(options.designMode, true);
			self.beforeGetHtml = options.beforeGetHtml;
			self.beforeSetHtml = options.beforeSetHtml;
			self.afterSetHtml = options.afterSetHtml;
			var themesPath = _undef(options.themesPath, ''),
				bodyClass = options.bodyClass,
				cssPath = options.cssPath,
				cssData = options.cssData,
				isDocumentDomain = location.protocol != 'res:' && location.host.replace(/:\d+/, '') !== document.domain,
				srcScript = ('document.open();' +
					(isDocumentDomain ? 'document.domain="' + document.domain + '";' : '') +
					'document.close();'),
				iframeSrc = _IE ? ' src="javascript:void(function(){' + encodeURIComponent(srcScript) + '}())"' : '';
			self.iframe = K('<iframe class="ke-edit-iframe" hidefocus="true" frameborder="0"' + iframeSrc + '></iframe>').css('width', '100%');
			self.textarea = K('<textarea class="ke-edit-textarea" hidefocus="true"></textarea>').css('width', '100%');
			self.tabIndex = isNaN(parseInt(options.tabIndex, 10)) ? self.srcElement.attr('tabindex') : parseInt(options.tabIndex, 10);
			self.iframe.attr('tabindex', self.tabIndex);
			self.textarea.attr('tabindex', self.tabIndex);
			if(self.width) {
				self.setWidth(self.width);
			}
			if(self.height) {
				self.setHeight(self.height);
			}
			if(self.designMode) {
				self.textarea.hide();
			} else {
				self.iframe.hide();
			}

			function ready() {
				var doc = _iframeDoc(self.iframe);
				doc.open();
				if(isDocumentDomain) {
					doc.domain = document.domain;
				}
				doc.write(_getInitHtml(themesPath, bodyClass, cssPath, cssData));
				doc.close();
				self.win = self.iframe[0].contentWindow;
				self.doc = doc;
				var cmd = _cmd(doc);
				self.afterChange(function(e) {
					cmd.selection();
				});
				if(_WEBKIT) {
					K(doc).click(function(e) {
						if(K(e.target).name === 'img') {
							cmd.selection(true);
							cmd.range.selectNode(e.target);
							cmd.select();
						}
					});
				}
				if(_IE) {
					self._mousedownHandler = function() {
						var newRange = cmd.range.cloneRange();
						newRange.shrink();
						if(newRange.isControl()) {
							self.blur();
						}
					};
					K(document).mousedown(self._mousedownHandler);
					K(doc).keydown(function(e) {
						if(e.which == 8) {
							cmd.selection();
							var rng = cmd.range;
							if(rng.isControl()) {
								rng.collapse(true);
								K(rng.startContainer.childNodes[rng.startOffset]).remove();
								e.preventDefault();
							}
						}
					});
				}
				self.cmd = cmd;
				self.html(_elementVal(self.srcElement));
				if(_IE) {
					doc.body.disabled = true;
					doc.body.contentEditable = true;
					doc.body.removeAttribute('disabled');
				} else {
					doc.designMode = 'on';
				}
				if(options.afterCreate) {
					options.afterCreate.call(self);
				}
			}
			if(isDocumentDomain) {
				self.iframe.bind('load', function(e) {
					self.iframe.unbind('load');
					if(_IE) {
						ready();
					} else {
						setTimeout(ready, 0);
					}
				});
			}
			self.div.append(self.iframe);
			self.div.append(self.textarea);
			self.srcElement.hide();
			!isDocumentDomain && ready();
		},
		setWidth: function(val) {
			var self = this;
			val = _addUnit(val);
			self.width = val;
			self.div.css('width', val);
			return self;
		},
		setHeight: function(val) {
			var self = this;
			val = _addUnit(val);
			self.height = val;
			self.div.css('height', val);
			self.iframe.css('height', val);
			if((_IE && _V < 8) || _QUIRKS) {
				val = _addUnit(_removeUnit(val) - 2);
			}
			self.textarea.css('height', val);
			return self;
		},
		remove: function() {
			var self = this,
				doc = self.doc;
			K(doc.body).unbind();
			K(doc).unbind();
			K(self.win).unbind();
			if(self._mousedownHandler) {
				K(document).unbind('mousedown', self._mousedownHandler);
			}
			_elementVal(self.srcElement, self.html());
			self.srcElement.show();
			doc.write('');
			self.iframe.unbind();
			self.textarea.unbind();
			KEdit.parent.remove.call(self);
		},
		html: function(val, isFull) {
			var self = this,
				doc = self.doc;
			if(self.designMode) {
				var body = doc.body;
				if(val === undefined) {
					if(isFull) {
						val = '<!doctype html><html>' + body.parentNode.innerHTML + '</html>';
					} else {
						val = body.innerHTML;
					}
					if(self.beforeGetHtml) {
						val = self.beforeGetHtml(val);
					}
					if(_GECKO && val == '<br />') {
						val = '';
					}
					return val;
				}
				if(self.beforeSetHtml) {
					val = self.beforeSetHtml(val);
				}
				if(_IE && _V >= 9) {
					val = val.replace(/(<.*?checked=")checked(".*>)/ig, '$1$2');
				}
				K(body).html(val);
				if(self.afterSetHtml) {
					self.afterSetHtml();
				}
				return self;
			}
			if(val === undefined) {
				return self.textarea.val();
			}
			self.textarea.val(val);
			return self;
		},
		design: function(bool) {
			var self = this,
				val;
			if(bool === undefined ? !self.designMode : bool) {
				if(!self.designMode) {
					val = self.html();
					self.designMode = true;
					self.html(val);
					self.textarea.hide();
					self.iframe.show();
				}
			} else {
				if(self.designMode) {
					val = self.html();
					self.designMode = false;
					self.html(val);
					self.iframe.hide();
					self.textarea.show();
				}
			}
			return self.focus();
		},
		focus: function() {
			var self = this;
			self.designMode ? self.win.focus() : self.textarea[0].focus();
			return self;
		},
		blur: function() {
			var self = this;
			if(_IE) {
				var input = K('<input type="text" style="float:left;width:0;height:0;padding:0;margin:0;border:0;" value="" />', self.div);
				self.div.append(input);
				input[0].focus();
				input.remove();
			} else {
				self.designMode ? self.win.blur() : self.textarea[0].blur();
			}
			return self;
		},
		afterChange: function(fn) {
			var self = this,
				doc = self.doc,
				body = doc.body;
			K(doc).keyup(function(e) {
				if(!e.ctrlKey && !e.altKey && _CHANGE_KEY_MAP[e.which]) {
					fn(e);
				}
			});
			K(doc).mouseup(fn).contextmenu(fn);
			K(self.win).blur(fn);

			function timeoutHandler(e) {
				setTimeout(function() {
					fn(e);
				}, 1);
			}
			K(body).bind('paste', timeoutHandler);
			K(body).bind('cut', timeoutHandler);
			return self;
		}
	});

	function _edit(options) {
		return new KEdit(options);
	}
	K.EditClass = KEdit;
	K.edit = _edit;
	K.iframeDoc = _iframeDoc;

	function _selectToolbar(name, fn) {
		var self = this,
			knode = self.get(name);
		if(knode) {
			if(knode.hasClass('ke-disabled')) {
				return;
			}
			fn(knode);
		}
	}

	function KToolbar(options) {
		this.init(options);
	}
	_extend(KToolbar, KWidget, {
		init: function(options) {
			var self = this;
			KToolbar.parent.init.call(self, options);
			self.disableMode = _undef(options.disableMode, false);
			self.noDisableItemMap = _toMap(_undef(options.noDisableItems, []));
			self._itemMap = {};
			self.div.addClass('ke-toolbar').bind('contextmenu,mousedown,mousemove', function(e) {
				e.preventDefault();
			}).attr('unselectable', 'on');

			function find(target) {
				var knode = K(target);
				if(knode.hasClass('ke-outline')) {
					return knode;
				}
				if(knode.hasClass('ke-toolbar-icon')) {
					return knode.parent();
				}
			}

			function hover(e, method) {
				var knode = find(e.target);
				if(knode) {
					if(knode.hasClass('ke-disabled')) {
						return;
					}
					if(knode.hasClass('ke-selected')) {
						return;
					}
					knode[method]('ke-on');
				}
			}
			self.div.mouseover(function(e) {
					hover(e, 'addClass');
				})
				.mouseout(function(e) {
					hover(e, 'removeClass');
				})
				.click(function(e) {
					var knode = find(e.target);
					if(knode) {
						if(knode.hasClass('ke-disabled')) {
							return;
						}
						self.options.click.call(this, e, knode.attr('data-name'));
					}
				});
		},
		get: function(name) {
			if(this._itemMap[name]) {
				return this._itemMap[name];
			}
			return(this._itemMap[name] = K('span.ke-icon-' + name, this.div).parent());
		},
		select: function(name) {
			_selectToolbar.call(this, name, function(knode) {
				knode.addClass('ke-selected');
			});
			return self;
		},
		unselect: function(name) {
			_selectToolbar.call(this, name, function(knode) {
				knode.removeClass('ke-selected').removeClass('ke-on');
			});
			return self;
		},
		enable: function(name) {
			var self = this,
				knode = name.get ? name : self.get(name);
			if(knode) {
				knode.removeClass('ke-disabled');
				knode.opacity(1);
			}
			return self;
		},
		disable: function(name) {
			var self = this,
				knode = name.get ? name : self.get(name);
			if(knode) {
				knode.removeClass('ke-selected').addClass('ke-disabled');
				knode.opacity(0.5);
			}
			return self;
		},
		disableAll: function(bool, noDisableItems) {
			var self = this,
				map = self.noDisableItemMap,
				item;
			if(noDisableItems) {
				map = _toMap(noDisableItems);
			}
			if(bool === undefined ? !self.disableMode : bool) {
				K('span.ke-outline', self.div).each(function() {
					var knode = K(this),
						name = knode[0].getAttribute('data-name', 2);
					if(!map[name]) {
						self.disable(knode);
					}
				});
				self.disableMode = true;
			} else {
				K('span.ke-outline', self.div).each(function() {
					var knode = K(this),
						name = knode[0].getAttribute('data-name', 2);
					if(!map[name]) {
						self.enable(knode);
					}
				});
				self.disableMode = false;
			}
			return self;
		}
	});

	function _toolbar(options) {
		return new KToolbar(options);
	}
	K.ToolbarClass = KToolbar;
	K.toolbar = _toolbar;

	function KMenu(options) {
		this.init(options);
	}
	_extend(KMenu, KWidget, {
		init: function(options) {
			var self = this;
			options.z = options.z || 811213;
			KMenu.parent.init.call(self, options);
			self.centerLineMode = _undef(options.centerLineMode, true);
			self.div.addClass('ke-menu').bind('click,mousedown', function(e) {
				e.stopPropagation();
			}).attr('unselectable', 'on');
		},
		addItem: function(item) {
			var self = this;
			if(item.title === '-') {
				self.div.append(K('<div class="ke-menu-separator"></div>'));
				return;
			}
			var itemDiv = K('<div class="ke-menu-item" unselectable="on"></div>'),
				leftDiv = K('<div class="ke-inline-block ke-menu-item-left"></div>'),
				rightDiv = K('<div class="ke-inline-block ke-menu-item-right"></div>'),
				height = _addUnit(item.height),
				iconClass = _undef(item.iconClass, '');
			self.div.append(itemDiv);
			if(height) {
				itemDiv.css('height', height);
				rightDiv.css('line-height', height);
			}
			var centerDiv;
			if(self.centerLineMode) {
				centerDiv = K('<div class="ke-inline-block ke-menu-item-center"></div>');
				if(height) {
					centerDiv.css('height', height);
				}
			}
			itemDiv.mouseover(function(e) {
					K(this).addClass('ke-menu-item-on');
					if(centerDiv) {
						centerDiv.addClass('ke-menu-item-center-on');
					}
				})
				.mouseout(function(e) {
					K(this).removeClass('ke-menu-item-on');
					if(centerDiv) {
						centerDiv.removeClass('ke-menu-item-center-on');
					}
				})
				.click(function(e) {
					item.click.call(K(this));
					e.stopPropagation();
				})
				.append(leftDiv);
			if(centerDiv) {
				itemDiv.append(centerDiv);
			}
			itemDiv.append(rightDiv);
			if(item.checked) {
				iconClass = 'ke-icon-checked';
			}
			if(iconClass !== '') {
				leftDiv.html('<span class="ke-inline-block ke-toolbar-icon ke-toolbar-icon-url ' + iconClass + '"></span>');
			}
			rightDiv.html(item.title);
			return self;
		},
		remove: function() {
			var self = this;
			if(self.options.beforeRemove) {
				self.options.beforeRemove.call(self);
			}
			K('.ke-menu-item', self.div[0]).unbind();
			KMenu.parent.remove.call(self);
			return self;
		}
	});

	function _menu(options) {
		return new KMenu(options);
	}
	K.MenuClass = KMenu;
	K.menu = _menu;

	function KColorPicker(options) {
		this.init(options);
	}
	_extend(KColorPicker, KWidget, {
		init: function(options) {
			var self = this;
			options.z = options.z || 811213;
			KColorPicker.parent.init.call(self, options);
			var colors = options.colors || [
				['#E53333', '#E56600', '#FF9900', '#64451D', '#DFC5A4', '#FFE500'],
				['#009900', '#006600', '#99BB00', '#B8D100', '#60D978', '#00D5FF'],
				['#337FE5', '#003399', '#4C33E5', '#9933E5', '#CC33E5', '#EE33EE'],
				['#FFFFFF', '#CCCCCC', '#999999', '#666666', '#333333', '#000000']
			];
			self.selectedColor = (options.selectedColor || '').toLowerCase();
			self._cells = [];
			self.div.addClass('ke-colorpicker').bind('click,mousedown', function(e) {
				e.stopPropagation();
			}).attr('unselectable', 'on');
			var table = self.doc.createElement('table');
			self.div.append(table);
			table.className = 'ke-colorpicker-table';
			table.cellPadding = 0;
			table.cellSpacing = 0;
			table.border = 0;
			var row = table.insertRow(0),
				cell = row.insertCell(0);
			cell.colSpan = colors[0].length;
			self._addAttr(cell, '', 'ke-colorpicker-cell-top');
			for(var i = 0; i < colors.length; i++) {
				row = table.insertRow(i + 1);
				for(var j = 0; j < colors[i].length; j++) {
					cell = row.insertCell(j);
					self._addAttr(cell, colors[i][j], 'ke-colorpicker-cell');
				}
			}
		},
		_addAttr: function(cell, color, cls) {
			var self = this;
			cell = K(cell).addClass(cls);
			if(self.selectedColor === color.toLowerCase()) {
				cell.addClass('ke-colorpicker-cell-selected');
			}
			cell.attr('title', color || self.options.noColor);
			cell.mouseover(function(e) {
				K(this).addClass('ke-colorpicker-cell-on');
			});
			cell.mouseout(function(e) {
				K(this).removeClass('ke-colorpicker-cell-on');
			});
			cell.click(function(e) {
				e.stop();
				self.options.click.call(K(this), color);
			});
			if(color) {
				cell.append(K('<div class="ke-colorpicker-cell-color" unselectable="on"></div>').css('background-color', color));
			} else {
				cell.html(self.options.noColor);
			}
			K(cell).attr('unselectable', 'on');
			self._cells.push(cell);
		},
		remove: function() {
			var self = this;
			_each(self._cells, function() {
				this.unbind();
			});
			KColorPicker.parent.remove.call(self);
			return self;
		}
	});

	function _colorpicker(options) {
		return new KColorPicker(options);
	}
	K.ColorPickerClass = KColorPicker;
	K.colorpicker = _colorpicker;

	function KUploadButton(options) {
		this.init(options);
	}
	_extend(KUploadButton, {
		init: function(options) {
			var self = this,
				button = K(options.button),
				fieldName = options.fieldName || 'file',
				url = options.url || '',
				title = button.val(),
				extraParams = options.extraParams || {},
				cls = button[0].className || '',
				target = options.target || 'kindeditor_upload_iframe_' + new Date().getTime();
			options.afterError = options.afterError || function(str) {
				alert(str);
			};
			var hiddenElements = [];
			for(var k in extraParams) {
				hiddenElements.push('<input type="hidden" name="' + k + '" value="' + extraParams[k] + '" />');
			}
			var html = [
				'<div class="ke-inline-block ' + cls + '">',
				(options.target ? '' : '<iframe name="' + target + '" style="display:none;"></iframe>'),
				(options.form ? '<div class="ke-upload-area">' : '<form class="ke-upload-area ke-form" method="post" enctype="multipart/form-data" target="' + target + '" action="' + url + '">'),
				'<span class="ke-button-common">',
				hiddenElements.join(''),
				'<input type="button" class="ke-button-common ke-button" value="' + title + '" />',
				'</span>',
				'<input type="file" class="ke-upload-file" name="' + fieldName + '" tabindex="-1" />',
				(options.form ? '</div>' : '</form>'),
				'</div>'
			].join('');
			var div = K(html, button.doc);
			button.hide();
			button.before(div);
			self.div = div;
			self.button = button;
			self.iframe = options.target ? K('iframe[name="' + target + '"]') : K('iframe', div);
			self.form = options.form ? K(options.form) : K('form', div);
			self.fileBox = K('.ke-upload-file', div);
			var width = options.width || K('.ke-button-common', div).width();
			K('.ke-upload-area', div).width(width);
			self.options = options;
		},
		submit: function() {
			var self = this,
				iframe = self.iframe;
			iframe.bind('load', function() {
				iframe.unbind();
				var tempForm = document.createElement('form');
				self.fileBox.before(tempForm);
				K(tempForm).append(self.fileBox);
				tempForm.reset();
				K(tempForm).remove(true);
				var doc = K.iframeDoc(iframe),
					pre = doc.getElementsByTagName('pre')[0],
					str = '',
					data;
				if(pre) {
					str = pre.innerHTML;
				} else {
					str = doc.body.innerHTML;
				}
				str = _unescape(str);
				iframe[0].src = 'javascript:false';
				try {
					data = K.json(str);
				} catch(e) {
					self.options.afterError.call(self, '<!doctype html><html>' + doc.body.parentNode.innerHTML + '</html>');
				}
				if(data) {
					self.options.afterUpload.call(self, data);
				}
			});
			self.form[0].submit();
			return self;
		},
		remove: function() {
			var self = this;
			if(self.fileBox) {
				self.fileBox.unbind();
			}
			self.iframe.remove();
			self.div.remove();
			self.button.show();
			return self;
		}
	});

	function _uploadbutton(options) {
		return new KUploadButton(options);
	}
	K.UploadButtonClass = KUploadButton;
	K.uploadbutton = _uploadbutton;

	function _createButton(arg) {
		arg = arg || {};
		var name = arg.name || '',
			span = K('<span class="ke-button-common ke-button-outer" title="' + name + '"></span>'),
			btn = K('<input class="ke-button-common ke-button" type="button" value="' + name + '" />');
		if(arg.click) {
			btn.click(arg.click);
		}
		span.append(btn);
		return span;
	}

	function KDialog(options) {
		this.init(options);
	}
	_extend(KDialog, KWidget, {
		init: function(options) {
			var self = this;
			var shadowMode = _undef(options.shadowMode, true);
			options.z = options.z || 811213;
			options.shadowMode = false;
			options.autoScroll = _undef(options.autoScroll, true);
			KDialog.parent.init.call(self, options);
			var title = options.title,
				body = K(options.body, self.doc),
				previewBtn = options.previewBtn,
				yesBtn = options.yesBtn,
				noBtn = options.noBtn,
				closeBtn = options.closeBtn,
				showMask = _undef(options.showMask, true);
			self.div.addClass('ke-dialog').bind('click,mousedown', function(e) {
				e.stopPropagation();
			});
			var contentDiv = K('<div class="ke-dialog-content"></div>').appendTo(self.div);
			if(_IE && _V < 7) {
				self.iframeMask = K('<iframe src="about:blank" class="ke-dialog-shadow"></iframe>').appendTo(self.div);
			} else if(shadowMode) {
				K('<div class="ke-dialog-shadow"></div>').appendTo(self.div);
			}
			var headerDiv = K('<div class="ke-dialog-header"></div>');
			contentDiv.append(headerDiv);
			headerDiv.html(title);
			self.closeIcon = K('<span class="ke-dialog-icon-close" title="' + closeBtn.name + '"></span>').click(closeBtn.click);
			headerDiv.append(self.closeIcon);
			self.draggable({
				clickEl: headerDiv,
				beforeDrag: options.beforeDrag
			});
			var bodyDiv = K('<div class="ke-dialog-body"></div>');
			contentDiv.append(bodyDiv);
			bodyDiv.append(body);
			var footerDiv = K('<div class="ke-dialog-footer"></div>');
			if(previewBtn || yesBtn || noBtn) {
				contentDiv.append(footerDiv);
			}
			_each([{
				btn: previewBtn,
				name: 'preview'
			}, {
				btn: yesBtn,
				name: 'yes'
			}, {
				btn: noBtn,
				name: 'no'
			}], function() {
				if(this.btn) {
					var button = _createButton(this.btn);
					button.addClass('ke-dialog-' + this.name);
					footerDiv.append(button);
				}
			});
			if(self.height) {
				bodyDiv.height(_removeUnit(self.height) - headerDiv.height() - footerDiv.height());
			}
			self.div.width(self.div.width());
			self.div.height(self.div.height());
			self.mask = null;
			if(showMask) {
				var docEl = _docElement(self.doc),
					docWidth = Math.max(docEl.scrollWidth, docEl.clientWidth),
					docHeight = Math.max(docEl.scrollHeight, docEl.clientHeight);
				self.mask = _widget({
					x: 0,
					y: 0,
					z: self.z - 1,
					cls: 'ke-dialog-mask',
					width: docWidth,
					height: docHeight
				});
			}
			self.autoPos(self.div.width(), self.div.height());
			self.footerDiv = footerDiv;
			self.bodyDiv = bodyDiv;
			self.headerDiv = headerDiv;
			self.isLoading = false;
		},
		setMaskIndex: function(z) {
			var self = this;
			self.mask.div.css('z-index', z);
		},
		showLoading: function(msg) {
			msg = _undef(msg, '');
			var self = this,
				body = self.bodyDiv;
			self.loading = K('<div class="ke-dialog-loading"><div class="ke-inline-block ke-dialog-loading-content" style="margin-top:' + Math.round(body.height() / 3) + 'px;">' + msg + '</div></div>')
				.width(body.width()).height(body.height())
				.css('top', self.headerDiv.height() + 'px');
			body.css('visibility', 'hidden').after(self.loading);
			self.isLoading = true;
			return self;
		},
		hideLoading: function() {
			this.loading && this.loading.remove();
			this.bodyDiv.css('visibility', 'visible');
			this.isLoading = false;
			return this;
		},
		remove: function() {
			var self = this;
			if(self.options.beforeRemove) {
				self.options.beforeRemove.call(self);
			}
			self.mask && self.mask.remove();
			self.iframeMask && self.iframeMask.remove();
			self.closeIcon.unbind();
			K('input', self.div).unbind();
			K('button', self.div).unbind();
			self.footerDiv.unbind();
			self.bodyDiv.unbind();
			self.headerDiv.unbind();
			K('iframe', self.div).each(function() {
				K(this).remove();
			});
			KDialog.parent.remove.call(self);
			return self;
		}
	});

	function _dialog(options) {
		return new KDialog(options);
	}
	K.DialogClass = KDialog;
	K.dialog = _dialog;

	function _tabs(options) {
		var self = _widget(options),
			remove = self.remove,
			afterSelect = options.afterSelect,
			div = self.div,
			liList = [];
		div.addClass('ke-tabs')
			.bind('contextmenu,mousedown,mousemove', function(e) {
				e.preventDefault();
			});
		var ul = K('<ul class="ke-tabs-ul ke-clearfix"></ul>');
		div.append(ul);
		self.add = function(tab) {
			var li = K('<li class="ke-tabs-li">' + tab.title + '</li>');
			li.data('tab', tab);
			liList.push(li);
			ul.append(li);
		};
		self.selectedIndex = 0;
		self.select = function(index) {
			self.selectedIndex = index;
			_each(liList, function(i, li) {
				li.unbind();
				if(i === index) {
					li.addClass('ke-tabs-li-selected');
					K(li.data('tab').panel).show('');
				} else {
					li.removeClass('ke-tabs-li-selected').removeClass('ke-tabs-li-on')
						.mouseover(function() {
							K(this).addClass('ke-tabs-li-on');
						})
						.mouseout(function() {
							K(this).removeClass('ke-tabs-li-on');
						})
						.click(function() {
							self.select(i);
						});
					K(li.data('tab').panel).hide();
				}
			});
			if(afterSelect) {
				afterSelect.call(self, index);
			}
		};
		self.remove = function() {
			_each(liList, function() {
				this.remove();
			});
			ul.remove();
			remove.call(self);
		};
		return self;
	}
	K.tabs = _tabs;

	function _loadScript(url, fn) {
		var head = document.getElementsByTagName('head')[0] || (_QUIRKS ? document.body : document.documentElement),
			script = document.createElement('script');
		head.appendChild(script);
		script.src = url;
		script.charset = 'utf-8';
		script.onload = script.onreadystatechange = function() {
			if(!this.readyState || this.readyState === 'loaded') {
				if(fn) {
					fn();
				}
				script.onload = script.onreadystatechange = null;
				head.removeChild(script);
			}
		};
	}

	function _chopQuery(url) {
		var index = url.indexOf('?');
		return index > 0 ? url.substr(0, index) : url;
	}

	function _loadStyle(url) {
		var head = document.getElementsByTagName('head')[0] || (_QUIRKS ? document.body : document.documentElement),
			link = document.createElement('link'),
			absoluteUrl = _chopQuery(_formatUrl(url, 'absolute'));
		var links = K('link[rel="stylesheet"]', head);
		for(var i = 0, len = links.length; i < len; i++) {
			if(_chopQuery(_formatUrl(links[i].href, 'absolute')) === absoluteUrl) {
				return;
			}
		}
		head.appendChild(link);
		link.href = url;
		link.rel = 'stylesheet';
	}

	function _ajax(url, fn, method, param, dataType) {
		method = method || 'GET';
		dataType = dataType || 'json';
		var xhr = window.XMLHttpRequest ? new window.XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP');
		xhr.open(method, url, true);
		xhr.onreadystatechange = function() {
			if(xhr.readyState == 4 && xhr.status == 200) {
				if(fn) {
					var data = _trim(xhr.responseText);
					if(dataType == 'json') {
						data = _json(data);
					}
					fn(data);
				}
			}
		};
		if(method == 'POST') {
			var params = [];
			_each(param, function(key, val) {
				params.push(encodeURIComponent(key) + '=' + encodeURIComponent(val));
			});
			try {
				xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
			} catch(e) {}
			xhr.send(params.join('&'));
		} else {
			xhr.send(null);
		}
	}
	K.loadScript = _loadScript;
	K.loadStyle = _loadStyle;
	K.ajax = _ajax;
	var _plugins = {};

	function _plugin(name, fn) {
		if(name === undefined) {
			return _plugins;
		}
		if(!fn) {
			return _plugins[name];
		}
		_plugins[name] = fn;
	}
	var _language = {};

	function _parseLangKey(key) {
		var match, ns = 'core';
		if((match = /^(\w+)\.(\w+)$/.exec(key))) {
			ns = match[1];
			key = match[2];
		}
		return {
			ns: ns,
			key: key
		};
	}

	function _lang(mixed, langType) {
		langType = langType === undefined ? K.options.langType : langType;
		if(typeof mixed === 'string') {
			if(!_language[langType]) {
				return 'no language';
			}
			var pos = mixed.length - 1;
			if(mixed.substr(pos) === '.') {
				return _language[langType][mixed.substr(0, pos)];
			}
			var obj = _parseLangKey(mixed);
			return _language[langType][obj.ns][obj.key];
		}
		_each(mixed, function(key, val) {
			var obj = _parseLangKey(key);
			if(!_language[langType]) {
				_language[langType] = {};
			}
			if(!_language[langType][obj.ns]) {
				_language[langType][obj.ns] = {};
			}
			_language[langType][obj.ns][obj.key] = val;
		});
	}

	function _getImageFromRange(range, fn) {
		if(range.collapsed) {
			return;
		}
		range = range.cloneRange().up();
		var sc = range.startContainer,
			so = range.startOffset;
		if(!_WEBKIT && !range.isControl()) {
			return;
		}
		var img = K(sc.childNodes[so]);
		if(!img || img.name != 'img') {
			return;
		}
		if(fn(img)) {
			return img;
		}
	}

	function _bindContextmenuEvent() {
		var self = this,
			doc = self.edit.doc;
		K(doc).contextmenu(function(e) {
			if(self.menu) {
				self.hideMenu();
			}
			if(!self.useContextmenu) {
				e.preventDefault();
				return;
			}
			if(self._contextmenus.length === 0) {
				return;
			}
			var maxWidth = 0,
				items = [];
			_each(self._contextmenus, function() {
				if(this.title == '-') {
					items.push(this);
					return;
				}
				if(this.cond && this.cond()) {
					items.push(this);
					if(this.width && this.width > maxWidth) {
						maxWidth = this.width;
					}
				}
			});
			while(items.length > 0 && items[0].title == '-') {
				items.shift();
			}
			while(items.length > 0 && items[items.length - 1].title == '-') {
				items.pop();
			}
			var prevItem = null;
			_each(items, function(i) {
				if(this.title == '-' && prevItem.title == '-') {
					delete items[i];
				}
				prevItem = this;
			});
			if(items.length > 0) {
				e.preventDefault();
				var pos = K(self.edit.iframe).pos(),
					menu = _menu({
						x: pos.x + e.clientX,
						y: pos.y + e.clientY,
						width: maxWidth,
						css: {
							visibility: 'hidden'
						},
						shadowMode: self.shadowMode
					});
				_each(items, function() {
					if(this.title) {
						menu.addItem(this);
					}
				});
				var docEl = _docElement(menu.doc),
					menuHeight = menu.div.height();
				if(e.clientY + menuHeight >= docEl.clientHeight - 100) {
					menu.pos(menu.x, _removeUnit(menu.y) - menuHeight);
				}
				menu.div.css('visibility', 'visible');
				self.menu = menu;
			}
		});
	}

	function _bindNewlineEvent() {
		var self = this,
			doc = self.edit.doc,
			newlineTag = self.newlineTag;
		if(_IE && newlineTag !== 'br') {
			return;
		}
		if(_GECKO && _V < 3 && newlineTag !== 'p') {
			return;
		}
		if(_OPERA && _V < 9) {
			return;
		}
		var brSkipTagMap = _toMap('h1,h2,h3,h4,h5,h6,pre,li'),
			pSkipTagMap = _toMap('p,h1,h2,h3,h4,h5,h6,pre,li,blockquote');

		function getAncestorTagName(range) {
			var ancestor = K(range.commonAncestor());
			while(ancestor) {
				if(ancestor.type == 1 && !ancestor.isStyle()) {
					break;
				}
				ancestor = ancestor.parent();
			}
			return ancestor.name;
		}
		K(doc).keydown(function(e) {
			if(e.which != 13 || e.shiftKey || e.ctrlKey || e.altKey) {
				return;
			}
			self.cmd.selection();
			var tagName = getAncestorTagName(self.cmd.range);
			if(tagName == 'marquee' || tagName == 'select') {
				return;
			}
			if(newlineTag === 'br' && !brSkipTagMap[tagName]) {
				e.preventDefault();
				self.insertHtml('<br />' + (_IE && _V < 9 ? '' : '\u200B'));
				return;
			}
			if(!pSkipTagMap[tagName]) {
				_nativeCommand(doc, 'formatblock', '<p>');
			}
		});
		K(doc).keyup(function(e) {
			if(e.which != 13 || e.shiftKey || e.ctrlKey || e.altKey) {

				return;
			}
			if(newlineTag == 'br') {
				return;
			}
			if(_GECKO) {
				var root = self.cmd.commonAncestor('p');
				var a = self.cmd.commonAncestor('a');
				if(a && a.text() == '') {
					a.remove(true);
					self.cmd.range.selectNodeContents(root[0]).collapse(true);
					self.cmd.select();
				}
				return;
			}
			self.cmd.selection();
			var tagName = getAncestorTagName(self.cmd.range);
			if(tagName == 'marquee' || tagName == 'select') {
				return;
			}
			if(!pSkipTagMap[tagName]) {
				_nativeCommand(doc, 'formatblock', '<p>');
			}
			var div = self.cmd.commonAncestor('div');
			if(div) {
				var p = K('<p></p>'),
					child = div[0].firstChild;
				while(child) {
					var next = child.nextSibling;
					p.append(child);
					child = next;
				}
				div.before(p);
				div.remove();
				self.cmd.range.selectNodeContents(p[0]);
				self.cmd.select();
			}
		});
	}

	function _bindTabEvent() {
		var self = this,
			doc = self.edit.doc;
		K(doc).keydown(function(e) {
			if(e.which == 9) {
				e.preventDefault();
				if(self.afterTab) {
					self.afterTab.call(self, e);
					return;
				}
				var cmd = self.cmd,
					range = cmd.range;
				range.shrink();
				if(range.collapsed && range.startContainer.nodeType == 1) {
					range.insertNode(K('@&nbsp;', doc)[0]);
					cmd.select();
				}
				self.insertHtml('&nbsp;&nbsp;&nbsp;&nbsp;');
			}
		});
	}

	function _bindFocusEvent() {
		var self = this;
		K(self.edit.textarea[0], self.edit.win).focus(function(e) {
			if(self.afterFocus) {
				self.afterFocus.call(self, e);
			}
		}).blur(function(e) {
			if(self.afterBlur) {
				self.afterBlur.call(self, e);
			}
		});
	}

	function _removeBookmarkTag(html) {
		return _trim(html.replace(/<span [^>]*id="?__kindeditor_bookmark_\w+_\d+__"?[^>]*><\/span>/ig, ''));
	}

	function _removeTempTag(html) {
		return html.replace(/<div[^>]+class="?__kindeditor_paste__"?[^>]*>[\s\S]*?<\/div>/ig, '');
	}

	function _addBookmarkToStack(stack, bookmark) {
		if(stack.length === 0) {
			stack.push(bookmark);
			return;
		}
		var prev = stack[stack.length - 1];
		if(_removeBookmarkTag(bookmark.html) !== _removeBookmarkTag(prev.html)) {
			stack.push(bookmark);
		}
	}

	function _undoToRedo(fromStack, toStack) {
		var self = this,
			edit = self.edit,
			body = edit.doc.body,
			range, bookmark;
		if(fromStack.length === 0) {
			return self;
		}
		if(edit.designMode) {
			range = self.cmd.range;
			bookmark = range.createBookmark(true);
			bookmark.html = body.innerHTML;
		} else {
			bookmark = {
				html: body.innerHTML
			};
		}
		_addBookmarkToStack(toStack, bookmark);
		var prev = fromStack.pop();
		if(_removeBookmarkTag(bookmark.html) === _removeBookmarkTag(prev.html) && fromStack.length > 0) {
			prev = fromStack.pop();
		}
		if(edit.designMode) {
			edit.html(prev.html);
			if(prev.start) {
				range.moveToBookmark(prev);
				self.select();
			}
		} else {
			K(body).html(_removeBookmarkTag(prev.html));
		}
		return self;
	}

	function KEditor(options) {
		var self = this;
		self.options = {};

		function setOption(key, val) {
			if(KEditor.prototype[key] === undefined) {
				self[key] = val;
			}
			self.options[key] = val;
		}
		_each(options, function(key, val) {
			setOption(key, options[key]);
		});
		_each(K.options, function(key, val) {
			if(self[key] === undefined) {
				setOption(key, val);
			}
		});
		var se = K(self.srcElement || '<textarea/>');
		if(!self.width) {
			self.width = se[0].style.width || se.width();
		}
		if(!self.height) {
			self.height = se[0].style.height || se.height();
		}
		setOption('width', _undef(self.width, self.minWidth));
		setOption('height', _undef(self.height, self.minHeight));
		setOption('width', _addUnit(self.width));
		setOption('height', _addUnit(self.height));
		if(_MOBILE && (!_IOS || _V < 534)) {
			self.designMode = false;
		}
		self.srcElement = se;
		self.initContent = '';
		self.plugin = {};
		self.isCreated = false;
		self._handlers = {};
		self._contextmenus = [];
		self._undoStack = [];
		self._redoStack = [];
		self._firstAddBookmark = true;
		self.menu = self.contextmenu = null;
		self.dialogs = [];
	}
	KEditor.prototype = {
		lang: function(mixed) {
			return _lang(mixed, this.langType);
		},
		loadPlugin: function(name, fn) {
			var self = this;
			if(_plugins[name]) {
				if(!_isFunction(_plugins[name])) {
					setTimeout(function() {
						self.loadPlugin(name, fn);
					}, 100);
					return self;
				}
				_plugins[name].call(self, KindEditor);
				if(fn) {
					fn.call(self);
				}
				return self;
			}
			_plugins[name] = 'loading';
			_loadScript(self.pluginsPath + name + '/' + name + '.js?ver=' + encodeURIComponent(K.DEBUG ? _TIME : _VERSION), function() {
				setTimeout(function() {
					if(_plugins[name]) {
						self.loadPlugin(name, fn);
					}
				}, 0);
			});
			return self;
		},
		handler: function(key, fn) {
			var self = this;
			if(!self._handlers[key]) {
				self._handlers[key] = [];
			}
			if(_isFunction(fn)) {
				self._handlers[key].push(fn);
				return self;
			}
			_each(self._handlers[key], function() {
				fn = this.call(self, fn);
			});
			return fn;
		},
		clickToolbar: function(name, fn) {
			var self = this,
				key = 'clickToolbar' + name;
			if(fn === undefined) {
				if(self._handlers[key]) {
					return self.handler(key);
				}
				self.loadPlugin(name, function() {
					self.handler(key);
				});
				return self;
			}
			return self.handler(key, fn);
		},
		updateState: function() {
			var self = this;
			_each(('justifyleft,justifycenter,justifyright,justifyfull,insertorderedlist,insertunorderedlist,' +
				'subscript,superscript,bold,italic,underline,strikethrough,blockquotes').split(','), function(i, name) {
				self.cmd.state(name) ? self.toolbar.select(name) : self.toolbar.unselect(name);
			});
			return self;
		},
		addContextmenu: function(item) {
			this._contextmenus.push(item);
			return this;
		},
		afterCreate: function(fn) {
			return this.handler('afterCreate', fn);
		},
		beforeRemove: function(fn) {
			return this.handler('beforeRemove', fn);
		},
		beforeGetHtml: function(fn) {
			return this.handler('beforeGetHtml', fn);
		},
		beforeSetHtml: function(fn) {
			return this.handler('beforeSetHtml', fn);
		},
		afterSetHtml: function(fn) {
			return this.handler('afterSetHtml', fn);
		},
		create: function() {
			var self = this,
				fullscreenMode = self.fullscreenMode;
			if(self.isCreated) {
				return self;
			}
			if(self.srcElement.data('kindeditor')) {
				return self;
			}
			self.srcElement.data('kindeditor', 'true');
			if(fullscreenMode) {
				_docElement().style.overflow = 'hidden';
			} else {
				_docElement().style.overflow = '';
			}
			var width = fullscreenMode ? _docElement().clientWidth + 'px' : self.width,
				height = fullscreenMode ? _docElement().clientHeight + 'px' : self.height;
			if((_IE && _V < 8) || _QUIRKS) {
				height = _addUnit(_removeUnit(height) + 2);
			}
			var container = self.container = K(self.layout);
			if(fullscreenMode) {
				K(document.body).append(container);
			} else {
				self.srcElement.before(container);
			}
			var toolbarDiv = K('.toolbar', container),
				editDiv = K('.edit', container),
				statusbar = self.statusbar = K('.statusbar', container);
			container.removeClass('container')
				.addClass('ke-container ke-container-' + self.themeType).css('width', width);
			if(fullscreenMode) {
				container.css({
					position: 'absolute',
					left: 0,
					top: 0,
					'z-index': 811211
				});
				if(!_GECKO) {
					self._scrollPos = _getScrollPos();
				}
				window.scrollTo(0, 0);
				K(document.body).css({
					'height': '1px',
					'overflow': 'hidden'
				});
				K(document.body.parentNode).css('overflow', 'hidden');
				self._fullscreenExecuted = true;
			} else {
				if(self._fullscreenExecuted) {
					K(document.body).css({
						'height': '',
						'overflow': ''
					});
					K(document.body.parentNode).css('overflow', '');
				}
				if(self._scrollPos) {
					window.scrollTo(self._scrollPos.x, self._scrollPos.y);
				}
			}
			var htmlList = [];
			K.each(self.items, function(i, name) {
				if(name == '|') {
					htmlList.push('<span class="ke-inline-block ke-separator"></span>');
				} else if(name == '/') {
					htmlList.push('<div class="ke-hr"></div>');
				} else {
					htmlList.push('<span class="ke-outline" data-name="' + name + '" title="' + self.lang(name) + '" unselectable="on">');
					htmlList.push('<span class="ke-toolbar-icon ke-toolbar-icon-url ke-icon-' + name + '" unselectable="on"></span></span>');
				}
			});
			var toolbar = self.toolbar = _toolbar({
				src: toolbarDiv,
				html: htmlList.join(''),
				noDisableItems: self.noDisableItems,
				click: function(e, name) {
					e.stop();
					if(self.menu) {
						var menuName = self.menu.name;
						self.hideMenu();
						if(menuName === name) {
							return;
						}
					}
					self.clickToolbar(name);
				}
			});
			var editHeight = _removeUnit(height) - toolbar.div.height();
			var edit = self.edit = _edit({
				height: editHeight > 0 && _removeUnit(height) > self.minHeight ? editHeight : self.minHeight,
				src: editDiv,
				srcElement: self.srcElement,
				designMode: self.designMode,
				themesPath: self.themesPath,
				bodyClass: self.bodyClass,
				cssPath: self.cssPath,
				cssData: self.cssData,
				beforeGetHtml: function(html) {
					html = self.beforeGetHtml(html);
					html = _removeBookmarkTag(_removeTempTag(html));
					return _formatHtml(html, self.filterMode ? self.htmlTags : null, self.urlType, self.wellFormatMode, self.indentChar);
				},
				beforeSetHtml: function(html) {
					html = _formatHtml(html, self.filterMode ? self.htmlTags : null, '', false);
					return self.beforeSetHtml(html);
				},
				afterSetHtml: function() {
					self.edit = edit = this;
					self.afterSetHtml();
				},
				afterCreate: function() {
					self.edit = edit = this;
					self.cmd = edit.cmd;
					self._docMousedownFn = function(e) {
						if(self.menu) {
							self.hideMenu();
						}
					};
					K(edit.doc, document).mousedown(self._docMousedownFn);
					_bindContextmenuEvent.call(self);
					_bindNewlineEvent.call(self);
					_bindTabEvent.call(self);
					_bindFocusEvent.call(self);
					edit.afterChange(function(e) {
						if(!edit.designMode) {
							return;
						}
						self.updateState();
						self.addBookmark();
						if(self.options.afterChange) {
							self.options.afterChange.call(self);
						}
					});
					edit.textarea.keyup(function(e) {
						if(!e.ctrlKey && !e.altKey && _INPUT_KEY_MAP[e.which]) {
							if(self.options.afterChange) {
								self.options.afterChange.call(self);
							}
						}
					});
					if(self.readonlyMode) {
						self.readonly();
					}
					self.isCreated = true;
					if(self.initContent === '') {
						self.initContent = self.html();
					}
					if(self._undoStack.length > 0) {
						var prev = self._undoStack.pop();
						if(prev.start) {
							self.html(prev.html);
							edit.cmd.range.moveToBookmark(prev);
							self.select();
						}
					}
					self.afterCreate();
					if(self.options.afterCreate) {
						self.options.afterCreate.call(self);
					}
				}
			});
			statusbar.removeClass('statusbar').addClass('ke-statusbar')
				.append('<span class="ke-inline-block ke-statusbar-center-icon"></span>')
				.append('<span class="ke-inline-block ke-statusbar-right-icon"></span>');
			if(self._fullscreenResizeHandler) {
				K(window).unbind('resize', self._fullscreenResizeHandler);
				self._fullscreenResizeHandler = null;
			}

			function initResize() {
				if(statusbar.height() === 0) {
					setTimeout(initResize, 100);
					return;
				}
				self.resize(width, height, false);
			}
			initResize();
			if(fullscreenMode) {
				self._fullscreenResizeHandler = function(e) {
					if(self.isCreated) {
						self.resize(_docElement().clientWidth, _docElement().clientHeight, false);
					}
				};
				K(window).bind('resize', self._fullscreenResizeHandler);
				toolbar.select('fullscreen');
				statusbar.first().css('visibility', 'hidden');
				statusbar.last().css('visibility', 'hidden');
			} else {
				if(_GECKO) {
					K(window).bind('scroll', function(e) {
						self._scrollPos = _getScrollPos();
					});
				}
				if(self.resizeType > 0) {
					_drag({
						moveEl: container,
						clickEl: statusbar,
						moveFn: function(x, y, width, height, diffX, diffY) {
							height += diffY;
							self.resize(null, height);
						}
					});
				} else {
					statusbar.first().css('visibility', 'hidden');
				}
				if(self.resizeType === 2) {
					_drag({
						moveEl: container,
						clickEl: statusbar.last(),
						moveFn: function(x, y, width, height, diffX, diffY) {
							width += diffX;
							height += diffY;
							self.resize(width, height);
						}
					});
				} else {
					statusbar.last().css('visibility', 'hidden');
				}
			}
			return self;
		},
		remove: function() {
			var self = this;
			if(!self.isCreated) {
				return self;
			}
			self.beforeRemove();
			self.srcElement.data('kindeditor', '');
			if(self.menu) {
				self.hideMenu();
			}
			_each(self.dialogs, function() {
				self.hideDialog();
			});
			K(document).unbind('mousedown', self._docMousedownFn);
			self.toolbar.remove();
			self.edit.remove();
			self.statusbar.last().unbind();
			self.statusbar.unbind();
			self.container.remove();
			self.container = self.toolbar = self.edit = self.menu = null;
			self.dialogs = [];
			self.isCreated = false;
			return self;
		},
		resize: function(width, height, updateProp) {
			var self = this;
			updateProp = _undef(updateProp, true);
			if(width) {
				if(!/%/.test(width)) {
					width = _removeUnit(width);
					width = width < self.minWidth ? self.minWidth : width;
				}
				self.container.css('width', _addUnit(width));
				if(updateProp) {
					self.width = _addUnit(width);
				}
			}
			if(height) {
				height = _removeUnit(height);
				editHeight = _removeUnit(height) - self.toolbar.div.height() - self.statusbar.height();
				editHeight = editHeight < self.minHeight ? self.minHeight : editHeight;
				self.edit.setHeight(editHeight);
				if(updateProp) {
					self.height = _addUnit(height);
				}
			}
			return self;
		},
		select: function() {
			this.isCreated && this.cmd.select();
			return this;
		},
		html: function(val) {
			var self = this;
			if(val === undefined) {
				return self.isCreated ? self.edit.html() : _elementVal(self.srcElement);
			}
			self.isCreated ? self.edit.html(val) : _elementVal(self.srcElement, val);
			if(self.isCreated) {
				self.cmd.selection();
			}
			return self;
		},
		fullHtml: function() {
			return this.isCreated ? this.edit.html(undefined, true) : '';
		},
		text: function(val) {
			var self = this;
			if(val === undefined) {
				return _trim(self.html().replace(/<(?!img|embed).*?>/ig, '').replace(/&nbsp;/ig, ' '));
			} else {
				return self.html(_escape(val));
			}
		},
		isEmpty: function() {
			return _trim(this.text().replace(/\r\n|\n|\r/, '')) === '';
		},
		isDirty: function() {
			return _trim(this.initContent.replace(/\r\n|\n|\r|t/g, '')) !== _trim(this.html().replace(/\r\n|\n|\r|t/g, ''));
		},
		selectedHtml: function() {
			var val = this.isCreated ? this.cmd.range.html() : '';
			val = _removeBookmarkTag(_removeTempTag(val));
			return val;
		},
		count: function(mode) {
			var self = this;
			mode = (mode || 'html').toLowerCase();
			if(mode === 'html') {
				return self.html().length;
			}
			if(mode === 'text') {
				return self.text().replace(/<(?:img|embed).*?>/ig, 'K').replace(/\r\n|\n|\r/g, '').length;
			}
			return 0;
		},
		exec: function(key) {
			key = key.toLowerCase();
			var self = this,
				cmd = self.cmd,
				changeFlag = _inArray(key, 'selectall,copy,paste,print'.split(',')) < 0;
			if(changeFlag) {
				self.addBookmark(false);
			}
			cmd[key].apply(cmd, _toArray(arguments, 1));
			if(changeFlag) {
				self.updateState();
				self.addBookmark(false);
				if(self.options.afterChange) {
					self.options.afterChange.call(self);
				}
			}
			return self;
		},
		insertHtml: function(val, quickMode) {
			if(!this.isCreated) {
				return this;
			}
			val = this.beforeSetHtml(val);
			this.exec('inserthtml', val, quickMode);
			return this;
		},
		appendHtml: function(val) {
			this.html(this.html() + val);
			if(this.isCreated) {
				var cmd = this.cmd;
				cmd.range.selectNodeContents(cmd.doc.body).collapse(false);
				cmd.select();
			}
			return this;
		},
		sync: function() {
			_elementVal(this.srcElement, this.html());
			return this;
		},
		focus: function() {
			this.isCreated ? this.edit.focus() : this.srcElement[0].focus();
			return this;
		},
		blur: function() {
			this.isCreated ? this.edit.blur() : this.srcElement[0].blur();
			return this;
		},
		addBookmark: function(checkSize) {
			checkSize = _undef(checkSize, true);
			var self = this,
				edit = self.edit,
				body = edit.doc.body,
				html = _removeTempTag(body.innerHTML),
				bookmark;
			if(checkSize && self._undoStack.length > 0) {
				var prev = self._undoStack[self._undoStack.length - 1];
				if(Math.abs(html.length - _removeBookmarkTag(prev.html).length) < self.minChangeSize) {
					return self;
				}
			}
			if(edit.designMode && !self._firstAddBookmark) {
				var range = self.cmd.range;
				bookmark = range.createBookmark(true);
				bookmark.html = _removeTempTag(body.innerHTML);
				range.moveToBookmark(bookmark);
			} else {
				bookmark = {
					html: html
				};
			}
			self._firstAddBookmark = false;
			_addBookmarkToStack(self._undoStack, bookmark);
			return self;
		},
		undo: function() {
			return _undoToRedo.call(this, this._undoStack, this._redoStack);
		},
		redo: function() {
			return _undoToRedo.call(this, this._redoStack, this._undoStack);
		},
		fullscreen: function(bool) {
			this.fullscreenMode = (bool === undefined ? !this.fullscreenMode : bool);
			this.addBookmark(false);
			return this.remove().create();
		},
		readonly: function(isReadonly) {
			isReadonly = _undef(isReadonly, true);
			var self = this,
				edit = self.edit,
				doc = edit.doc;
			if(self.designMode) {
				self.toolbar.disableAll(isReadonly, []);
			} else {
				_each(self.noDisableItems, function() {
					self.toolbar[isReadonly ? 'disable' : 'enable'](this);
				});
			}
			if(_IE) {
				doc.body.contentEditable = !isReadonly;
			} else {
				doc.designMode = isReadonly ? 'off' : 'on';
			}
			edit.textarea[0].disabled = isReadonly;
		},
		createMenu: function(options) {
			var self = this,
				name = options.name,
				knode = self.toolbar.get(name),
				pos = knode.pos();
			options.x = pos.x;
			options.y = pos.y + knode.height();
			options.z = self.options.zIndex;
			options.shadowMode = _undef(options.shadowMode, self.shadowMode);
			if(options.selectedColor !== undefined) {
				options.cls = 'ke-colorpicker-' + self.themeType;
				options.noColor = self.lang('noColor');
				self.menu = _colorpicker(options);
			} else {
				options.cls = 'ke-menu-' + self.themeType;
				options.centerLineMode = false;
				self.menu = _menu(options);
			}
			return self.menu;
		},
		hideMenu: function() {
			this.menu.remove();
			this.menu = null;
			return this;
		},
		hideContextmenu: function() {
			this.contextmenu.remove();
			this.contextmenu = null;
			return this;
		},
		createDialog: function(options) {
			var self = this,
				name = options.name;
			options.z = self.options.zIndex;
			options.shadowMode = _undef(options.shadowMode, self.shadowMode);
			options.closeBtn = _undef(options.closeBtn, {
				name: self.lang('close'),
				click: function(e) {
					self.hideDialog();
					if(_IE && self.cmd) {
						self.cmd.select();
					}
				}
			});
			options.noBtn = _undef(options.noBtn, {
				name: self.lang(options.yesBtn ? 'no' : 'close'),
				click: function(e) {
					self.hideDialog();
					if(_IE && self.cmd) {
						self.cmd.select();
					}
				}
			});
			if(self.dialogAlignType != 'page') {
				options.alignEl = self.container;
			}
			options.cls = 'ke-dialog-' + self.themeType;
			if(self.dialogs.length > 0) {
				var firstDialog = self.dialogs[0],
					parentDialog = self.dialogs[self.dialogs.length - 1];
				firstDialog.setMaskIndex(parentDialog.z + 2);
				options.z = parentDialog.z + 3;
				options.showMask = false;
			}
			var dialog = _dialog(options);
			self.dialogs.push(dialog);
			return dialog;
		},
		hideDialog: function() {
			var self = this;
			if(self.dialogs.length > 0) {
				self.dialogs.pop().remove();
			}
			if(self.dialogs.length > 0) {
				var firstDialog = self.dialogs[0],
					parentDialog = self.dialogs[self.dialogs.length - 1];
				firstDialog.setMaskIndex(parentDialog.z - 1);
			}
			return self;
		},
		errorDialog: function(html) {
			var self = this;
			var dialog = self.createDialog({
				width: 750,
				title: self.lang('uploadError'),
				body: '<div style="padding:10px 20px;"><iframe frameborder="0" style="width:708px;height:400px;"></iframe></div>'
			});
			var iframe = K('iframe', dialog.div),
				doc = K.iframeDoc(iframe);
			doc.open();
			doc.write(html);
			doc.close();
			K(doc.body).css('background-color', '#FFF');
			iframe[0].contentWindow.focus();
			return self;
		}
	};

	function _editor(options) {
		return new KEditor(options);
	}
	_instances = [];

	function _create(expr, options) {
		options = options || {};
		options.basePath = _undef(options.basePath, K.basePath);
		options.themesPath = _undef(options.themesPath, options.basePath + 'themes/');
		options.langPath = _undef(options.langPath, options.basePath + 'lang/');
		options.pluginsPath = _undef(options.pluginsPath, options.basePath + 'plugins/');
		if(_undef(options.loadStyleMode, K.options.loadStyleMode)) {
			var themeType = _undef(options.themeType, K.options.themeType);
			_loadStyle(options.themesPath + 'default/default.css');
			_loadStyle(options.themesPath + themeType + '/' + themeType + '.css');
		}

		function create(editor) {
			_each(_plugins, function(name, fn) {
				if(_isFunction(fn)) {
					fn.call(editor, KindEditor);
				}
			});
			return editor.create();
		}
		var knode = K(expr);
		if(!knode || knode.length === 0) {
			return;
		}
		if(knode.length > 1) {
			knode.each(function() {
				_create(this, options);
			});
			return _instances[0];
		}
		options.srcElement = knode[0];
		var editor = new KEditor(options);
		_instances.push(editor);
		if(_language[editor.langType]) {
			return create(editor);
		}
		_loadScript(editor.langPath + editor.langType + '.js?ver=' + encodeURIComponent(K.DEBUG ? _TIME : _VERSION), function() {
			create(editor);
		});
		return editor;
	}

	function _eachEditor(expr, fn) {
		K(expr).each(function(i, el) {
			K.each(_instances, function(j, editor) {
				if(editor && editor.srcElement[0] == el) {
					fn.call(editor, j);
					return false;
				}
			});
		});
	}
	K.remove = function(expr) {
		_eachEditor(expr, function(i) {
			this.remove();
			_instances.splice(i, 1);
		});
	};
	K.sync = function(expr) {
		_eachEditor(expr, function() {
			this.sync();
		});
	};
	K.html = function(expr, val) {
		_eachEditor(expr, function() {
			this.html(val);
		});
	};
	K.insertHtml = function(expr, val) {
		_eachEditor(expr, function() {
			this.insertHtml(val);
		});
	};
	K.appendHtml = function(expr, val) {
		_eachEditor(expr, function() {
			this.appendHtml(val);
		});
	};
	if(_IE && _V < 7) {
		_nativeCommand(document, 'BackgroundImageCache', true);
	}
	K.EditorClass = KEditor;
	K.editor = _editor;
	K.create = _create;
	K.instances = _instances;
	K.plugin = _plugin;
	K.lang = _lang;
	_plugin('core', function(K) {
		var self = this,
			shortcutKeys = {
				undo: 'Z',
				redo: 'Y',
				bold: 'B',
				italic: 'I',
				underline: 'U',
				print: 'P',
				selectall: 'A'
			};
		self.afterSetHtml(function() {
			if(self.options.afterChange) {
				self.options.afterChange.call(self);
			}
		});
		self.afterCreate(function() {
			if(self.syncType != 'form') {
				return;
			}
			var el = K(self.srcElement),
				hasForm = false;
			while((el = el.parent())) {
				if(el.name == 'form') {
					hasForm = true;
					break;
				}
			}
			if(hasForm) {
				el.bind('submit', function(e) {
					self.sync();
					K(window).bind('unload', function() {
						self.edit.textarea.remove();
					});
				});
				var resetBtn = K('[type="reset"]', el);
				resetBtn.click(function() {
					self.html(self.initContent);
					self.cmd.selection();
				});
				self.beforeRemove(function() {
					el.unbind();
					resetBtn.unbind();
				});
			}
		});
		self.clickToolbar('source', function() {
			if(self.edit.designMode) {
				self.toolbar.disableAll(true);
				self.edit.design(false);
				self.toolbar.select('source');
			} else {
				self.toolbar.disableAll(false);
				self.edit.design(true);
				self.toolbar.unselect('source');
				if(_GECKO) {
					setTimeout(function() {
						self.cmd.selection();
					}, 0);
				} else {
					self.cmd.selection();
				}
			}
			self.designMode = self.edit.designMode;
		});
		self.afterCreate(function() {
			if(!self.designMode) {
				self.toolbar.disableAll(true).select('source');
			}
		});
		self.clickToolbar('fullscreen', function() {
			self.fullscreen();
		});
		if(self.fullscreenShortcut) {
			var loaded = false;
			self.afterCreate(function() {
				K(self.edit.doc, self.edit.textarea).keyup(function(e) {
					if(e.which == 27) {
						setTimeout(function() {
							self.fullscreen();
						}, 0);
					}
				});
				if(loaded) {
					if(_IE && !self.designMode) {
						return;
					}
					self.focus();
				}
				if(!loaded) {
					loaded = true;
				}
			});
		}
		_each('undo,redo'.split(','), function(i, name) {
			if(shortcutKeys[name]) {
				self.afterCreate(function() {
					_ctrl(this.edit.doc, shortcutKeys[name], function() {
						self.clickToolbar(name);
					});
				});
			}
			self.clickToolbar(name, function() {
				self[name]();
			});
		});
		self.clickToolbar('formatblock', function() {
			var blocks = self.lang('formatblock.formatBlock'),
				heights = {
					h1: 28,
					h2: 24,
					h3: 18,
					H4: 14,
					p: 12
				},
				curVal = self.cmd.val('formatblock'),
				menu = self.createMenu({
					name: 'formatblock',
					width: self.langType == 'en' ? 200 : 150
				});
			_each(blocks, function(key, val) {
				var style = 'font-size:' + heights[key] + 'px;';
				if(key.charAt(0) === 'h') {
					style += 'font-weight:bold;';
				}
				menu.addItem({
					title: '<span style="' + style + '" unselectable="on">' + val + '</span>',
					height: heights[key] + 12,
					checked: (curVal === key || curVal === val),
					click: function() {
						self.select().exec('formatblock', '<' + key + '>').hideMenu();
					}
				});
			});
		});
		/***************** 2016-05-23 增加段前距，段后距  修改人：Three Knives *****************/
		//段前距
		self.clickToolbar('rowspacingtop', function() {
			var curVal = self.cmd.val('rowspacingtop'),
				menu = self.createMenu({
					name: 'rowspacingtop',
					width: 150
				});
			_each(self.fontRowspacingtop, function(i, val) {
				menu.addItem({
					title: '<span style="margin-top: ' + val + ';" unselectable="on">' + val + '</span>',
					checked: (curVal === val),
					click: function() {
						self.exec('rowspacingtop', this.text() + 'px').hideMenu();
					}
				});
			});
		});
		//段后距
		self.clickToolbar('rowspacingbottom', function() {
			var curVal = self.cmd.val('rowspacingbottom'),
				menu = self.createMenu({
					name: 'rowspacingbottom',
					width: 150
				});
			_each(self.fontRowspacingbottom, function(i, val) {
				menu.addItem({
					title: '<span style="margin-bottom: ' + key + ';" unselectable="on">' + val + '</span>',
					checked: (curVal === key || curVal === val),
					click: function() {
						self.exec('rowspacingbottom', this.text() + 'px').hideMenu();
					}
				});
			});
		});
		self.clickToolbar('fontname', function() {
			var curVal = self.cmd.val('fontname'),
				menu = self.createMenu({
					name: 'fontname',
					width: 150
				});
			_each(self.lang('fontname.fontName'), function(key, val) {
				menu.addItem({
					title: '<span style="font-family: ' + key + ';" unselectable="on">' + val + '</span>',
					checked: (curVal === key.toLowerCase() || curVal === val.toLowerCase()),
					click: function() {
						self.exec('fontname', key).hideMenu();
					}
				});
			});
		});
		self.clickToolbar('fontsize', function() {
			var curVal = self.cmd.val('fontsize'),
				menu = self.createMenu({
					name: 'fontsize',
					width: 150
				});
			_each(self.fontSizeTable, function(i, val) {
				menu.addItem({
					title: '<span style="font-size:' + val + ';" unselectable="on">' + val + '</span>',
					height: _removeUnit(val) + 12,
					checked: curVal === val,
					click: function() {
						self.exec('fontsize', val).hideMenu();
					}
				});
			});
		});
		_each('forecolor,hilitecolor'.split(','), function(i, name) {
			self.clickToolbar(name, function() {
				self.createMenu({
					name: name,
					selectedColor: self.cmd.val(name) || 'default',
					colors: self.colorTable,
					click: function(color) {
						self.exec(name, color).hideMenu();
					}
				});
			});
		});
		_each(('cut,copy,paste').split(','), function(i, name) {
			self.clickToolbar(name, function() {
				self.focus();
				try {
					self.exec(name, null);
				} catch(e) {
					alert(self.lang(name + 'Error'));
				}
			});
		});
		self.clickToolbar('about', function() {
			var html = '<div style="margin:20px;">' +
				'<div>KindEditor ' + _VERSION + '</div>' +
				'<div>Copyright &copy; <a href="http://www.kindsoft.net/" target="_blank">kindsoft.net</a> All rights reserved.</div>' +
				'</div>';
			self.createDialog({
				name: 'about',
				width: 350,
				title: self.lang('about'),
				body: html
			});
		});
		self.plugin.getSelectedLink = function() {
			return self.cmd.commonAncestor('a');
		};
		self.plugin.getSelectedImage = function() {
			return _getImageFromRange(self.edit.cmd.range, function(img) {
				return !/^ke-\w+$/i.test(img[0].className);
			});
		};
		self.plugin.getSelectedFlash = function() {
			return _getImageFromRange(self.edit.cmd.range, function(img) {
				return img[0].className == 'ke-flash';
			});
		};
		self.plugin.getSelectedMedia = function() {
			return _getImageFromRange(self.edit.cmd.range, function(img) {
				return img[0].className == 'ke-media' || img[0].className == 'ke-rm';
			});
		};
		self.plugin.getSelectedAnchor = function() {
			return _getImageFromRange(self.edit.cmd.range, function(img) {
				return img[0].className == 'ke-anchor';
			});
		};
		_each('link,image,flash,media,anchor'.split(','), function(i, name) {
			var uName = name.charAt(0).toUpperCase() + name.substr(1);
			_each('edit,delete'.split(','), function(j, val) {
				self.addContextmenu({
					title: self.lang(val + uName),
					click: function() {
						self.loadPlugin(name, function() {
							self.plugin[name][val]();
							self.hideMenu();
						});
					},
					cond: self.plugin['getSelected' + uName],
					width: 150,
					iconClass: val == 'edit' ? 'ke-icon-' + name : undefined
				});
			});
			self.addContextmenu({
				title: '-'
			});
		});
		self.plugin.getSelectedTable = function() {
			return self.cmd.commonAncestor('table');
		};
		self.plugin.getSelectedRow = function() {
			return self.cmd.commonAncestor('tr');
		};
		self.plugin.getSelectedCell = function() {
			return self.cmd.commonAncestor('td');
		};
		_each(('prop,cellprop,colinsertleft,colinsertright,rowinsertabove,rowinsertbelow,rowmerge,colmerge,' +
			'rowsplit,colsplit,coldelete,rowdelete,insert,delete').split(','), function(i, val) {
			var cond = _inArray(val, ['prop', 'delete']) < 0 ? self.plugin.getSelectedCell : self.plugin.getSelectedTable;
			self.addContextmenu({
				title: self.lang('table' + val),
				click: function() {
					self.loadPlugin('table', function() {
						self.plugin.table[val]();
						self.hideMenu();
					});
				},
				cond: cond,
				width: 170,
				iconClass: 'ke-icon-table' + val
			});
		});
		self.addContextmenu({
			title: '-'
		});
		_each(('selectall,justifyleft,justifycenter,justifyright,blockquotes,justifyfull,insertorderedlist,' +
			'insertunorderedlist,indent,outdent,subscript,superscript,hr,print,' +
			'bold,italic,underline,strikethrough,removeformat,unlink').split(','), function(i, name) {
			if(shortcutKeys[name]) {
				self.afterCreate(function() {
					_ctrl(this.edit.doc, shortcutKeys[name], function() {
						self.cmd.selection();
						self.clickToolbar(name);
					});
				});
			}
			self.clickToolbar(name, function() {
				self.focus().exec(name, null);
			});
		});
		self.afterCreate(function() {
			var doc = self.edit.doc,
				cmd, bookmark, div,
				cls = '__kindeditor_paste__',
				pasting = false;

			function movePastedData() {
				cmd.range.moveToBookmark(bookmark);
				cmd.select();
				if(_WEBKIT) {
					K('div.' + cls, div).each(function() {
						K(this).after('<br />').remove(true);
					});
					K('span.Apple-style-span', div).remove(true);
					K('span.Apple-tab-span', div).remove(true);
					K('span[style]', div).each(function() {
						if(K(this).css('white-space') == 'nowrap') {
							K(this).remove(true);
						}
					});
					K('meta', div).remove();
				}
				var html = div[0].innerHTML;
				div.remove();
				if(html === '') {
					return;
				}
				if(_WEBKIT) {
					html = html.replace(/(<br>)\1/ig, '$1');
				}
				if(self.pasteType === 2) {
					html = html.replace(/(<(?:p|p\s[^>]*)>) *(<\/p>)/ig, '');
					if(/schemas-microsoft-com|worddocument|mso-\w+/i.test(html)) {
						html = _clearMsWord(html, self.filterMode ? self.htmlTags : K.options.htmlTags);
					} else {
						html = _formatHtml(html, self.filterMode ? self.htmlTags : null);
						html = self.beforeSetHtml(html);
					}
				}
				if(self.pasteType === 1) {
					html = html.replace(/&nbsp;/ig, ' ');
					html = html.replace(/\n\s*\n/g, '\n');
					html = html.replace(/<br[^>]*>/ig, '\n');
					html = html.replace(/<\/p><p[^>]*>/ig, '\n');
					html = html.replace(/<[^>]+>/g, '');
					html = html.replace(/ {2}/g, ' &nbsp;');
					if(self.newlineTag == 'p') {
						if(/\n/.test(html)) {
							html = html.replace(/^/, '<p>').replace(/$/, '<br /></p>').replace(/\n/g, '<br /></p><p>');
						}
					} else {
						html = html.replace(/\n/g, '<br />$&');
					}
				}
				self.insertHtml(html, true);
			}
			K(doc.body).bind('paste', function(e) {
				if(self.pasteType === 0) {
					e.stop();
					return;
				}
				if(pasting) {
					return;
				}
				pasting = true;
				K('div.' + cls, doc).remove();
				cmd = self.cmd.selection();
				bookmark = cmd.range.createBookmark();
				div = K('<div class="' + cls + '"></div>', doc).css({
					position: 'absolute',
					width: '1px',
					height: '1px',
					overflow: 'hidden',
					left: '-1981px',
					top: K(bookmark.start).pos().y + 'px',
					'white-space': 'nowrap'
				});
				K(doc.body).append(div);
				if(_IE) {
					var rng = cmd.range.get(true);
					rng.moveToElementText(div[0]);
					rng.select();
					rng.execCommand('paste');
					e.preventDefault();
				} else {
					cmd.range.selectNodeContents(div[0]);
					cmd.select();
				}
				setTimeout(function() {
					movePastedData();
					pasting = false;
				}, 0);
			});
		});
		self.beforeGetHtml(function(html) {
			if(_IE && _V <= 8) {
				html = html.replace(/<div\s+[^>]*data-ke-input-tag="([^"]*)"[^>]*>([\s\S]*?)<\/div>/ig, function(full, tag) {
					return unescape(tag);
				});
				html = html.replace(/(<input)((?:\s+[^>]*)?>)/ig, function($0, $1, $2) {
					if(!/\s+type="[^"]+"/i.test($0)) {
						return $1 + ' type="text"' + $2;
					}
					return $0;
				});
			}
			return html.replace(/(<(?:noscript|noscript\s[^>]*)>)([\s\S]*?)(<\/noscript>)/ig, function($0, $1, $2, $3) {
					return $1 + _unescape($2).replace(/\s+/g, ' ') + $3;
				})
				.replace(/<img[^>]*class="?ke-(flash|rm|media)"?[^>]*>/ig, function(full) {
					var imgAttrs = _getAttrList(full);
					var styles = _getCssList(imgAttrs.style || '');
					var attrs = _mediaAttrs(imgAttrs['data-ke-tag']);
					var width = _undef(styles.width, '');
					var height = _undef(styles.height, '');
					if(/px/i.test(width)) {
						width = _removeUnit(width);
					}
					if(/px/i.test(height)) {
						height = _removeUnit(height);
					}
					attrs.width = _undef(imgAttrs.width, width);
					attrs.height = _undef(imgAttrs.height, height);
					return _mediaEmbed(attrs);
				})
				.replace(/<img[^>]*class="?ke-anchor"?[^>]*>/ig, function(full) {
					var imgAttrs = _getAttrList(full);
					return '<a name="' + unescape(imgAttrs['data-ke-name']) + '"></a>';
				})
				.replace(/<div\s+[^>]*data-ke-script-attr="([^"]*)"[^>]*>([\s\S]*?)<\/div>/ig, function(full, attr, code) {
					return '<script' + unescape(attr) + '>' + unescape(code) + '</script>';
				})
				.replace(/<div\s+[^>]*data-ke-noscript-attr="([^"]*)"[^>]*>([\s\S]*?)<\/div>/ig, function(full, attr, code) {
					return '<noscript' + unescape(attr) + '>' + unescape(code) + '</noscript>';
				})
				.replace(/(<[^>]*)data-ke-src="([^"]*)"([^>]*>)/ig, function(full, start, src, end) {
					full = full.replace(/(\s+(?:href|src)=")[^"]*(")/i, function($0, $1, $2) {
						return $1 + _unescape(src) + $2;
					});
					full = full.replace(/\s+data-ke-src="[^"]*"/i, '');
					return full;
				})
				.replace(/(<[^>]+\s)data-ke-(on\w+="[^"]*"[^>]*>)/ig, function(full, start, end) {
					return start + end;
				});
		});
		self.beforeSetHtml(function(html) {
			if(_IE && _V <= 8) {
				html = html.replace(/<input[^>]*>|<(select|button)[^>]*>[\s\S]*?<\/\1>/ig, function(full) {
					var attrs = _getAttrList(full);
					var styles = _getCssList(attrs.style || '');
					if(styles.display == 'none') {
						return '<div class="ke-display-none" data-ke-input-tag="' + escape(full) + '"></div>';
					}
					return full;
				});
			}
			return html.replace(/<embed[^>]*type="([^"]+)"[^>]*>(?:<\/embed>)?/ig, function(full) {
					var attrs = _getAttrList(full);
					attrs.src = _undef(attrs.src, '');
					attrs.width = _undef(attrs.width, 0);
					attrs.height = _undef(attrs.height, 0);
					return _mediaImg(self.themesPath + 'common/blank.gif', attrs);
				})
				.replace(/<a[^>]*name="([^"]+)"[^>]*>(?:<\/a>)?/ig, function(full) {
					var attrs = _getAttrList(full);
					if(attrs.href !== undefined) {
						return full;
					}
					return '<img class="ke-anchor" src="' + self.themesPath + 'common/anchor.gif" data-ke-name="' + escape(attrs.name) + '" />';
				})
				.replace(/<script([^>]*)>([\s\S]*?)<\/script>/ig, function(full, attr, code) {
					return '<div class="ke-script" data-ke-script-attr="' + escape(attr) + '">' + escape(code) + '</div>';
				})
				.replace(/<noscript([^>]*)>([\s\S]*?)<\/noscript>/ig, function(full, attr, code) {
					return '<div class="ke-noscript" data-ke-noscript-attr="' + escape(attr) + '">' + escape(code) + '</div>';
				})
				.replace(/(<[^>]*)(href|src)="([^"]*)"([^>]*>)/ig, function(full, start, key, src, end) {
					if(full.match(/\sdata-ke-src="[^"]*"/i)) {
						return full;
					}
					full = start + key + '="' + src + '"' + ' data-ke-src="' + _escape(src) + '"' + end;
					return full;
				})
				.replace(/(<[^>]+\s)(on\w+="[^"]*"[^>]*>)/ig, function(full, start, end) {
					return start + 'data-ke-' + end;
				})
				.replace(/<table[^>]*\s+border="0"[^>]*>/ig, function(full) {
					if(full.indexOf('ke-zeroborder') >= 0) {
						return full;
					}
					return _addClassToTag(full, 'ke-zeroborder');
				});
		});
	});
})(window);;
/*******************************************************************************
 * KindEditor - WYSIWYG HTML Editor for Internet
 * Copyright (C) 2006-2011 kindsoft.net
 *
 * @author Roddy <luolonghao@gmail.com>
 * @site http://www.kindsoft.net/
 * @licence http://www.kindsoft.net/license.php
 *******************************************************************************/

KindEditor.lang({
	source: 'HTML代码',
	preview: '预览',
	undo: '后退(Ctrl+Z)',
	redo: '前进(Ctrl+Y)',
	cut: '剪切(Ctrl+X)',
	copy: '复制(Ctrl+C)',
	paste: '粘贴(Ctrl+V)',
	plainpaste: '粘贴为无格式文本',
	wordpaste: '从Word粘贴',
	selectall: '全选(Ctrl+A)',
	justifyleft: '左对齐',
	justifycenter: '居中',
	justifyright: '右对齐',
	justifyfull: '两端对齐',
	insertorderedlist: '编号',
	insertunorderedlist: '项目符号',
	indent: '增加缩进',
	outdent: '减少缩进',
	subscript: '下标',
	superscript: '上标',
	formatblock: '段落',
	fontname: '字体',
	fontsize: '文字大小',
	rowspacingtop: '段前距',
	rowspacingbottom: '段后距',
	forecolor: '文字颜色',
	hilitecolor: '文字背景',
	bold: '粗体(Ctrl+B)',
	italic: '斜体(Ctrl+I)',
	underline: '下划线(Ctrl+U)',
	strikethrough: '删除线',
	removeformat: '删除格式',
	image: '图片',
	multiimage: '批量图片上传',
	flash: 'Flash',
	media: '视音频',
	table: '表格',
	tablecell: '单元格',
	hr: '插入横线',
	emoticons: '插入表情',
	link: '超级链接',
	unlink: '取消超级链接',
	fullscreen: '全屏显示',
	about: '关于',
	print: '打印(Ctrl+P)',
	filemanager: '文件空间',
	code: '插入程序代码',
	map: 'Google地图',
	baidumap: '百度地图',
	lineheight: '行距',
	clearhtml: '清理HTML代码',
	pagebreak: '插入分页符',
	quickformat: '一键排版',
	insertfile: '插入文件',
	template: '插入模板',
	anchor: '锚点',
	yes: '确定',
	no: '取消',
	close: '关闭',
	editImage: '图片属性',
	deleteImage: '删除图片',
	editFlash: 'Flash属性',
	deleteFlash: '删除Flash',
	editMedia: '视音频属性',
	deleteMedia: '删除视音频',
	editLink: '超级链接属性',
	deleteLink: '取消超级链接',
	editAnchor: '锚点属性',
	deleteAnchor: '删除锚点',
	tableprop: '表格属性',
	tablecellprop: '单元格属性',
	tableinsert: '插入表格',
	tabledelete: '删除表格',
	tablecolinsertleft: '左侧插入列',
	tablecolinsertright: '右侧插入列',
	tablerowinsertabove: '上方插入行',
	tablerowinsertbelow: '下方插入行',
	blockquotes: '引用',
	tablerowmerge: '向下合并单元格',
	tablecolmerge: '向右合并单元格',
	tablerowsplit: '拆分行',
	tablecolsplit: '拆分列',
	tablecoldelete: '删除列',
	tablerowdelete: '删除行',
	noColor: '无颜色',
	pleaseSelectFile: '请选择文件。',
	invalidImg: "请输入有效的URL地址。\n只允许jpg,gif,bmp,png格式。",
	invalidMedia: "请输入有效的URL地址。\n只允许swf,flv,mp3,wav,wma,wmv,mid,avi,mpg,asf,rm,rmvb格式。",
	invalidWidth: "宽度必须为数字。",
	invalidHeight: "高度必须为数字。",
	invalidBorder: "边框必须为数字。",
	invalidUrl: "请输入有效的URL地址。",
	invalidRows: '行数为必选项，只允许输入大于0的数字。',
	invalidCols: '列数为必选项，只允许输入大于0的数字。',
	invalidPadding: '边距必须为数字。',
	invalidSpacing: '间距必须为数字。',
	invalidJson: '服务器发生故障。',
	uploadSuccess: '上传成功。',
	cutError: '您的浏览器安全设置不允许使用剪切操作，请使用快捷键(Ctrl+X)来完成。',
	copyError: '您的浏览器安全设置不允许使用复制操作，请使用快捷键(Ctrl+C)来完成。',
	pasteError: '您的浏览器安全设置不允许使用粘贴操作，请使用快捷键(Ctrl+V)来完成。',
	ajaxLoading: '加载中，请稍候 ...',
	uploadLoading: '上传中，请稍候 ...',
	uploadError: '上传错误',
	'plainpaste.comment': '请使用快捷键(Ctrl+V)把内容粘贴到下面的方框里。',
	'wordpaste.comment': '请使用快捷键(Ctrl+V)把内容粘贴到下面的方框里。',
	'code.pleaseInput': '请输入程序代码。',
	'link.url': 'URL',
	'link.linkType': '打开类型',
	'link.newWindow': '新窗口',
	'link.selfWindow': '当前窗口',
	'flash.url': 'URL',
	'flash.width': '宽度',
	'flash.height': '高度',
	'flash.upload': '上传',
	'flash.viewServer': '文件空间',
	'media.url': 'URL',
	'media.width': '宽度',
	'media.height': '高度',
	'media.autostart': '自动播放',
	'media.upload': '上传',
	'media.viewServer': '文件空间',
	'image.remoteImage': '网络图片',
	'image.localImage': '本地上传',
	'image.remoteUrl': '图片地址',
	'image.localUrl': '上传文件',
	'image.size': '图片大小',
	'image.width': '宽',
	'image.height': '高',
	'image.resetSize': '重置大小',
	'image.align': '对齐方式',
	'image.defaultAlign': '默认方式',
	'image.leftAlign': '左对齐',
	'image.rightAlign': '右对齐',
	'image.imgTitle': '图片说明',
	'image.upload': '浏览...',
	'image.viewServer': '图片空间',
	'multiimage.uploadDesc': '允许用户同时上传<%=uploadLimit%>张图片，单张图片容量不超过<%=sizeLimit%>',
	'multiimage.startUpload': '开始上传',
	'multiimage.clearAll': '全部清空',
	'multiimage.insertAll': '全部插入',
	'multiimage.queueLimitExceeded': '文件数量超过限制。',
	'multiimage.fileExceedsSizeLimit': '文件大小超过限制。',
	'multiimage.zeroByteFile': '无法上传空文件。',
	'multiimage.invalidFiletype': '文件类型不正确。',
	'multiimage.unknownError': '发生异常，无法上传。',
	'multiimage.pending': '等待上传',
	'multiimage.uploadError': '上传失败',
	'filemanager.emptyFolder': '空文件夹',
	'filemanager.moveup': '移到上一级文件夹',
	'filemanager.viewType': '显示方式：',
	'filemanager.viewImage': '缩略图',
	'filemanager.listImage': '详细信息',
	'filemanager.orderType': '排序方式：',
	'filemanager.fileName': '名称',
	'filemanager.fileSize': '大小',
	'filemanager.fileType': '类型',
	'insertfile.url': 'URL',
	'insertfile.title': '文件说明',
	'insertfile.upload': '上传',
	'insertfile.viewServer': '文件空间',
	'table.cells': '单元格数',
	'table.rows': '行数',
	'table.cols': '列数',
	'table.size': '大小',
	'table.width': '宽度',
	'table.height': '高度',
	'table.percent': '%',
	'table.px': 'px',
	'table.space': '边距间距',
	'table.padding': '边距',
	'table.spacing': '间距',
	'table.align': '对齐方式',
	'table.textAlign': '水平对齐',
	'table.verticalAlign': '垂直对齐',
	'table.alignDefault': '默认',
	'table.alignLeft': '左对齐',
	'table.alignCenter': '居中',
	'table.alignRight': '右对齐',
	'table.alignTop': '顶部',
	'table.alignMiddle': '中部',
	'table.alignBottom': '底部',
	'table.alignBaseline': '基线',
	'table.border': '边框',
	'table.borderWidth': '边框',
	'table.borderColor': '颜色',
	'table.backgroundColor': '背景颜色',
	'map.address': '地址: ',
	'map.search': '搜索',
	'baidumap.address': '地址: ',
	'baidumap.search': '搜索',
	'baidumap.insertDynamicMap': '插入动态地图',
	'anchor.name': '锚点名称',
	'formatblock.formatBlock': {
		h1: '标题 1',
		h2: '标题 2',
		h3: '标题 3',
		h4: '标题 4',
		p: '正 文'
	},
	'fontname.fontName': {
		'SimSun': '宋体',
		'NSimSun': '新宋体',
		'FangSong_GB2312': '仿宋_GB2312',
		'KaiTi_GB2312': '楷体_GB2312',
		'SimHei': '黑体',
		'Microsoft YaHei': '微软雅黑',
		'Arial': 'Arial',
		'Arial Black': 'Arial Black',
		'Times New Roman': 'Times New Roman',
		'Courier New': 'Courier New',
		'Tahoma': 'Tahoma',
		'Verdana': 'Verdana'
	},
	'lineheight.lineHeight': [{
		'1': '单倍行距'
	}, {
		'1.5': '1.5倍行距'
	}, {
		'2': '2倍行距'
	}, {
		'2.5': '2.5倍行距'
	}, {
		'3': '3倍行距'
	}],
	'template.selectTemplate': '可选模板',
	'template.replaceContent': '替换当前内容',
	'template.fileList': {
		'1.html': '图片和文字',
		'2.html': '表格',
		'3.html': '项目编号'
	}
}, 'zh_CN');;
var q = null;
window.PR_SHOULD_USE_CONTINUATION = !0;
(function() {
	function L(a) {
		function m(a) {
			var f = a.charCodeAt(0);
			if(f !== 92) return f;
			var b = a.charAt(1);
			return(f = r[b]) ? f : "0" <= b && b <= "7" ? parseInt(a.substring(1), 8) : b === "u" || b === "x" ? parseInt(a.substring(2), 16) : a.charCodeAt(1)
		}

		function e(a) {
			if(a < 32) return(a < 16 ? "\\x0" : "\\x") + a.toString(16);
			a = String.fromCharCode(a);
			if(a === "\\" || a === "-" || a === "[" || a === "]") a = "\\" + a;
			return a
		}

		function h(a) {
			for(var f = a.substring(1, a.length - 1).match(/\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\[0-3][0-7]{0,2}|\\[0-7]{1,2}|\\[\S\s]|[^\\]/g), a = [], b = [], o = f[0] === "^", c = o ? 1 : 0, i = f.length; c < i; ++c) {
				var j = f[c];
				if(/\\[bdsw]/i.test(j)) a.push(j);
				else {
					var j = m(j),
						d;
					c + 2 < i && "-" === f[c + 1] ? (d = m(f[c + 2]), c += 2) : d = j;
					b.push([j, d]);
					d < 65 || j > 122 || (d < 65 || j > 90 || b.push([Math.max(65, j) | 32, Math.min(d, 90) | 32]), d < 97 || j > 122 || b.push([Math.max(97, j) & -33, Math.min(d, 122) & -33]))
				}
			}
			b.sort(function(a, f) {
				return a[0] - f[0] || f[1] - a[1]
			});
			f = [];
			j = [NaN, NaN];
			for(c = 0; c < b.length; ++c) i = b[c], i[0] <= j[1] + 1 ? j[1] = Math.max(j[1], i[1]) : f.push(j = i);
			b = ["["];
			o && b.push("^");
			b.push.apply(b, a);
			for(c = 0; c <
				f.length; ++c) i = f[c], b.push(e(i[0])), i[1] > i[0] && (i[1] + 1 > i[0] && b.push("-"), b.push(e(i[1])));
			b.push("]");
			return b.join("")
		}

		function y(a) {
			for(var f = a.source.match(/\[(?:[^\\\]]|\\[\S\s])*]|\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\\d+|\\[^\dux]|\(\?[!:=]|[()^]|[^()[\\^]+/g), b = f.length, d = [], c = 0, i = 0; c < b; ++c) {
				var j = f[c];
				j === "(" ? ++i : "\\" === j.charAt(0) && (j = +j.substring(1)) && j <= i && (d[j] = -1)
			}
			for(c = 1; c < d.length; ++c) - 1 === d[c] && (d[c] = ++t);
			for(i = c = 0; c < b; ++c) j = f[c], j === "(" ? (++i, d[i] === void 0 && (f[c] = "(?:")) : "\\" === j.charAt(0) &&
				(j = +j.substring(1)) && j <= i && (f[c] = "\\" + d[i]);
			for(i = c = 0; c < b; ++c) "^" === f[c] && "^" !== f[c + 1] && (f[c] = "");
			if(a.ignoreCase && s)
				for(c = 0; c < b; ++c) j = f[c], a = j.charAt(0), j.length >= 2 && a === "[" ? f[c] = h(j) : a !== "\\" && (f[c] = j.replace(/[A-Za-z]/g, function(a) {
					a = a.charCodeAt(0);
					return "[" + String.fromCharCode(a & -33, a | 32) + "]"
				}));
			return f.join("")
		}
		for(var t = 0, s = !1, l = !1, p = 0, d = a.length; p < d; ++p) {
			var g = a[p];
			if(g.ignoreCase) l = !0;
			else if(/[a-z]/i.test(g.source.replace(/\\u[\da-f]{4}|\\x[\da-f]{2}|\\[^UXux]/gi, ""))) {
				s = !0;
				l = !1;
				break
			}
		}
		for(var r = {
				b: 8,
				t: 9,
				n: 10,
				v: 11,
				f: 12,
				r: 13
			}, n = [], p = 0, d = a.length; p < d; ++p) {
			g = a[p];
			if(g.global || g.multiline) throw Error("" + g);
			n.push("(?:" + y(g) + ")")
		}
		return RegExp(n.join("|"), l ? "gi" : "g")
	}

	function M(a) {
		function m(a) {
			switch(a.nodeType) {
				case 1:
					if(e.test(a.className)) break;
					for(var g = a.firstChild; g; g = g.nextSibling) m(g);
					g = a.nodeName;
					if("BR" === g || "LI" === g) h[s] = "\n", t[s << 1] = y++, t[s++ << 1 | 1] = a;
					break;
				case 3:
				case 4:
					g = a.nodeValue, g.length && (g = p ? g.replace(/\r\n?/g, "\n") : g.replace(/[\t\n\r ]+/g, " "), h[s] = g, t[s << 1] = y, y += g.length,
						t[s++ << 1 | 1] = a)
			}
		}
		var e = /(?:^|\s)nocode(?:\s|$)/,
			h = [],
			y = 0,
			t = [],
			s = 0,
			l;
		a.currentStyle ? l = a.currentStyle.whiteSpace : window.getComputedStyle && (l = document.defaultView.getComputedStyle(a, q).getPropertyValue("white-space"));
		var p = l && "pre" === l.substring(0, 3);
		m(a);
		return {
			a: h.join("").replace(/\n$/, ""),
			c: t
		}
	}

	function B(a, m, e, h) {
		m && (a = {
			a: m,
			d: a
		}, e(a), h.push.apply(h, a.e))
	}

	function x(a, m) {
		function e(a) {
			for(var l = a.d, p = [l, "pln"], d = 0, g = a.a.match(y) || [], r = {}, n = 0, z = g.length; n < z; ++n) {
				var f = g[n],
					b = r[f],
					o = void 0,
					c;
				if(typeof b ===
					"string") c = !1;
				else {
					var i = h[f.charAt(0)];
					if(i) o = f.match(i[1]), b = i[0];
					else {
						for(c = 0; c < t; ++c)
							if(i = m[c], o = f.match(i[1])) {
								b = i[0];
								break
							}
						o || (b = "pln")
					}
					if((c = b.length >= 5 && "lang-" === b.substring(0, 5)) && !(o && typeof o[1] === "string")) c = !1, b = "src";
					c || (r[f] = b)
				}
				i = d;
				d += f.length;
				if(c) {
					c = o[1];
					var j = f.indexOf(c),
						k = j + c.length;
					o[2] && (k = f.length - o[2].length, j = k - c.length);
					b = b.substring(5);
					B(l + i, f.substring(0, j), e, p);
					B(l + i + j, c, C(b, c), p);
					B(l + i + k, f.substring(k), e, p)
				} else p.push(l + i, b)
			}
			a.e = p
		}
		var h = {},
			y;
		(function() {
			for(var e = a.concat(m),
					l = [], p = {}, d = 0, g = e.length; d < g; ++d) {
				var r = e[d],
					n = r[3];
				if(n)
					for(var k = n.length; --k >= 0;) h[n.charAt(k)] = r;
				r = r[1];
				n = "" + r;
				p.hasOwnProperty(n) || (l.push(r), p[n] = q)
			}
			l.push(/[\S\s]/);
			y = L(l)
		})();
		var t = m.length;
		return e
	}

	function u(a) {
		var m = [],
			e = [];
		a.tripleQuotedStrings ? m.push(["str", /^(?:'''(?:[^'\\]|\\[\S\s]|''?(?=[^']))*(?:'''|$)|"""(?:[^"\\]|\\[\S\s]|""?(?=[^"]))*(?:"""|$)|'(?:[^'\\]|\\[\S\s])*(?:'|$)|"(?:[^"\\]|\\[\S\s])*(?:"|$))/, q, "'\""]) : a.multiLineStrings ? m.push(["str", /^(?:'(?:[^'\\]|\\[\S\s])*(?:'|$)|"(?:[^"\\]|\\[\S\s])*(?:"|$)|`(?:[^\\`]|\\[\S\s])*(?:`|$))/,
			q, "'\"`"
		]) : m.push(["str", /^(?:'(?:[^\n\r'\\]|\\.)*(?:'|$)|"(?:[^\n\r"\\]|\\.)*(?:"|$))/, q, "\"'"]);
		a.verbatimStrings && e.push(["str", /^@"(?:[^"]|"")*(?:"|$)/, q]);
		var h = a.hashComments;
		h && (a.cStyleComments ? (h > 1 ? m.push(["com", /^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/, q, "#"]) : m.push(["com", /^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\b|[^\n\r]*)/, q, "#"]), e.push(["str", /^<(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h|[a-z]\w*)>/, q])) : m.push(["com", /^#[^\n\r]*/,
			q, "#"
		]));
		a.cStyleComments && (e.push(["com", /^\/\/[^\n\r]*/, q]), e.push(["com", /^\/\*[\S\s]*?(?:\*\/|$)/, q]));
		a.regexLiterals && e.push(["lang-regex", /^(?:^^\.?|[!+-]|!=|!==|#|%|%=|&|&&|&&=|&=|\(|\*|\*=|\+=|,|-=|->|\/|\/=|:|::|;|<|<<|<<=|<=|=|==|===|>|>=|>>|>>=|>>>|>>>=|[?@[^]|\^=|\^\^|\^\^=|{|\||\|=|\|\||\|\|=|~|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\s*(\/(?=[^*/])(?:[^/[\\]|\\[\S\s]|\[(?:[^\\\]]|\\[\S\s])*(?:]|$))+\/)/]);
		(h = a.types) && e.push(["typ", h]);
		a = ("" + a.keywords).replace(/^ | $/g,
			"");
		a.length && e.push(["kwd", RegExp("^(?:" + a.replace(/[\s,]+/g, "|") + ")\\b"), q]);
		m.push(["pln", /^\s+/, q, " \r\n\t\xa0"]);
		e.push(["lit", /^@[$_a-z][\w$@]*/i, q], ["typ", /^(?:[@_]?[A-Z]+[a-z][\w$@]*|\w+_t\b)/, q], ["pln", /^[$_a-z][\w$@]*/i, q], ["lit", /^(?:0x[\da-f]+|(?:\d(?:_\d+)*\d*(?:\.\d*)?|\.\d\+)(?:e[+-]?\d+)?)[a-z]*/i, q, "0123456789"], ["pln", /^\\[\S\s]?/, q], ["pun", /^.[^\s\w"-$'./@\\`]*/, q]);
		return x(m, e)
	}

	function D(a, m) {
		function e(a) {
			switch(a.nodeType) {
				case 1:
					if(k.test(a.className)) break;
					if("BR" === a.nodeName) h(a),
						a.parentNode && a.parentNode.removeChild(a);
					else
						for(a = a.firstChild; a; a = a.nextSibling) e(a);
					break;
				case 3:
				case 4:
					if(p) {
						var b = a.nodeValue,
							d = b.match(t);
						if(d) {
							var c = b.substring(0, d.index);
							a.nodeValue = c;
							(b = b.substring(d.index + d[0].length)) && a.parentNode.insertBefore(s.createTextNode(b), a.nextSibling);
							h(a);
							c || a.parentNode.removeChild(a)
						}
					}
			}
		}

		function h(a) {
			function b(a, d) {
				var e = d ? a.cloneNode(!1) : a,
					f = a.parentNode;
				if(f) {
					var f = b(f, 1),
						g = a.nextSibling;
					f.appendChild(e);
					for(var h = g; h; h = g) g = h.nextSibling, f.appendChild(h)
				}
				return e
			}
			for(; !a.nextSibling;)
				if(a = a.parentNode, !a) return;
			for(var a = b(a.nextSibling, 0), e;
				(e = a.parentNode) && e.nodeType === 1;) a = e;
			d.push(a)
		}
		var k = /(?:^|\s)nocode(?:\s|$)/,
			t = /\r\n?|\n/,
			s = a.ownerDocument,
			l;
		a.currentStyle ? l = a.currentStyle.whiteSpace : window.getComputedStyle && (l = s.defaultView.getComputedStyle(a, q).getPropertyValue("white-space"));
		var p = l && "pre" === l.substring(0, 3);
		for(l = s.createElement("LI"); a.firstChild;) l.appendChild(a.firstChild);
		for(var d = [l], g = 0; g < d.length; ++g) e(d[g]);
		m === (m | 0) && d[0].setAttribute("value",
			m);
		var r = s.createElement("OL");
		r.className = "linenums";
		for(var n = Math.max(0, m - 1 | 0) || 0, g = 0, z = d.length; g < z; ++g) l = d[g], l.className = "L" + (g + n) % 10, l.firstChild || l.appendChild(s.createTextNode("\xa0")), r.appendChild(l);
		a.appendChild(r)
	}

	function k(a, m) {
		for(var e = m.length; --e >= 0;) {
			var h = m[e];
			A.hasOwnProperty(h) ? window.console && console.warn("cannot override language handler %s", h) : A[h] = a
		}
	}

	function C(a, m) {
		if(!a || !A.hasOwnProperty(a)) a = /^\s*</.test(m) ? "default-markup" : "default-code";
		return A[a]
	}

	function E(a) {
		var m =
			a.g;
		try {
			var e = M(a.h),
				h = e.a;
			a.a = h;
			a.c = e.c;
			a.d = 0;
			C(m, h)(a);
			var k = /\bMSIE\b/.test(navigator.userAgent),
				m = /\n/g,
				t = a.a,
				s = t.length,
				e = 0,
				l = a.c,
				p = l.length,
				h = 0,
				d = a.e,
				g = d.length,
				a = 0;
			d[g] = s;
			var r, n;
			for(n = r = 0; n < g;) d[n] !== d[n + 2] ? (d[r++] = d[n++], d[r++] = d[n++]) : n += 2;
			g = r;
			for(n = r = 0; n < g;) {
				for(var z = d[n], f = d[n + 1], b = n + 2; b + 2 <= g && d[b + 1] === f;) b += 2;
				d[r++] = z;
				d[r++] = f;
				n = b
			}
			for(d.length = r; h < p;) {
				var o = l[h + 2] || s,
					c = d[a + 2] || s,
					b = Math.min(o, c),
					i = l[h + 1],
					j;
				if(i.nodeType !== 1 && (j = t.substring(e, b))) {
					k && (j = j.replace(m, "\r"));
					i.nodeValue =
						j;
					var u = i.ownerDocument,
						v = u.createElement("SPAN");
					v.className = d[a + 1];
					var x = i.parentNode;
					x.replaceChild(v, i);
					v.appendChild(i);
					e < o && (l[h + 1] = i = u.createTextNode(t.substring(b, o)), x.insertBefore(i, v.nextSibling))
				}
				e = b;
				e >= o && (h += 2);
				e >= c && (a += 2)
			}
		} catch(w) {
			"console" in window && console.log(w && w.stack ? w.stack : w)
		}
	}
	var v = ["break,continue,do,else,for,if,return,while"],
		w = [
			[v, "auto,case,char,const,default,double,enum,extern,float,goto,int,long,register,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile"],
			"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof"
		],
		F = [w, "alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,dynamic_cast,explicit,export,friend,inline,late_check,mutable,namespace,nullptr,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where"],
		G = [w, "abstract,boolean,byte,extends,final,finally,implements,import,instanceof,null,native,package,strictfp,super,synchronized,throws,transient"],
		H = [G, "as,base,by,checked,decimal,delegate,descending,dynamic,event,fixed,foreach,from,group,implicit,in,interface,internal,into,is,lock,object,out,override,orderby,params,partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,var"],
		w = [w, "debugger,eval,export,function,get,null,set,undefined,var,with,Infinity,NaN"],
		I = [v, "and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None"],
		J = [v, "alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END"],
		v = [v, "case,done,elif,esac,eval,fi,function,in,local,set,then,until"],
		K = /^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)/,
		N = /\S/,
		O = u({
			keywords: [F, H, w, "caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END" +
				I, J, v
			],
			hashComments: !0,
			cStyleComments: !0,
			multiLineStrings: !0,
			regexLiterals: !0
		}),
		A = {};
	k(O, ["default-code"]);
	k(x([], [
		["pln", /^[^<?]+/],
		["dec", /^<!\w[^>]*(?:>|$)/],
		["com", /^<\!--[\S\s]*?(?:--\>|$)/],
		["lang-", /^<\?([\S\s]+?)(?:\?>|$)/],
		["lang-", /^<%([\S\s]+?)(?:%>|$)/],
		["pun", /^(?:<[%?]|[%?]>)/],
		["lang-", /^<xmp\b[^>]*>([\S\s]+?)<\/xmp\b[^>]*>/i],
		["lang-js", /^<script\b[^>]*>([\S\s]*?)(<\/script\b[^>]*>)/i],
		["lang-css", /^<style\b[^>]*>([\S\s]*?)(<\/style\b[^>]*>)/i],
		["lang-in.tag", /^(<\/?[a-z][^<>]*>)/i]
	]), ["default-markup", "htm", "html", "mxml", "xhtml", "xml", "xsl"]);
	k(x([
		["pln", /^\s+/, q, " \t\r\n"],
		["atv", /^(?:"[^"]*"?|'[^']*'?)/, q, "\"'"]
	], [
		["tag", /^^<\/?[a-z](?:[\w-.:]*\w)?|\/?>$/i],
		["atn", /^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i],
		["lang-uq.val", /^=\s*([^\s"'>]*(?:[^\s"'/>]|\/(?=\s)))/],
		["pun", /^[/<->]+/],
		["lang-js", /^on\w+\s*=\s*"([^"]+)"/i],
		["lang-js", /^on\w+\s*=\s*'([^']+)'/i],
		["lang-js", /^on\w+\s*=\s*([^\s"'>]+)/i],
		["lang-css", /^style\s*=\s*"([^"]+)"/i],
		["lang-css", /^style\s*=\s*'([^']+)'/i],
		["lang-css",
			/^style\s*=\s*([^\s"'>]+)/i
		]
	]), ["in.tag"]);
	k(x([], [
		["atv", /^[\S\s]+/]
	]), ["uq.val"]);
	k(u({
		keywords: F,
		hashComments: !0,
		cStyleComments: !0,
		types: K
	}), ["c", "cc", "cpp", "cxx", "cyc", "m"]);
	k(u({
		keywords: "null,true,false"
	}), ["json"]);
	k(u({
		keywords: H,
		hashComments: !0,
		cStyleComments: !0,
		verbatimStrings: !0,
		types: K
	}), ["cs"]);
	k(u({
		keywords: G,
		cStyleComments: !0
	}), ["java"]);
	k(u({
		keywords: v,
		hashComments: !0,
		multiLineStrings: !0
	}), ["bsh", "csh", "sh"]);
	k(u({
		keywords: I,
		hashComments: !0,
		multiLineStrings: !0,
		tripleQuotedStrings: !0
	}), ["cv", "py"]);
	k(u({
		keywords: "caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END",
		hashComments: !0,
		multiLineStrings: !0,
		regexLiterals: !0
	}), ["perl", "pl", "pm"]);
	k(u({
		keywords: J,
		hashComments: !0,
		multiLineStrings: !0,
		regexLiterals: !0
	}), ["rb"]);
	k(u({
		keywords: w,
		cStyleComments: !0,
		regexLiterals: !0
	}), ["js"]);
	k(u({
		keywords: "all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,true,try,unless,until,when,while,yes",
		hashComments: 3,
		cStyleComments: !0,
		multilineStrings: !0,
		tripleQuotedStrings: !0,
		regexLiterals: !0
	}), ["coffee"]);
	k(x([], [
		["str", /^[\S\s]+/]
	]), ["regex"]);
	window.prettyPrintOne = function(a, m, e) {
		var h = document.createElement("PRE");
		h.innerHTML = a;
		e && D(h, e);
		E({
			g: m,
			i: e,
			h: h
		});
		return h.innerHTML
	};
	window.prettyPrint = function(a) {
		function m() {
			for(var e = window.PR_SHOULD_USE_CONTINUATION ? l.now() + 250 : Infinity; p < h.length && l.now() < e; p++) {
				var n = h[p],
					k = n.className;
				if(k.indexOf("prettyprint") >= 0) {
					var k = k.match(g),
						f, b;
					if(b = !k) {
						b = n;
						for(var o = void 0, c = b.firstChild; c; c = c.nextSibling) var i = c.nodeType,
							o = i === 1 ? o ? b : c : i === 3 ? N.test(c.nodeValue) ? b : o : o;
						b = (f = o === b ? void 0 : o) && "CODE" === f.tagName
					}
					b && (k = f.className.match(g));
					k && (k = k[1]);
					b = !1;
					for(o = n.parentNode; o; o = o.parentNode)
						if((o.tagName === "pre" || o.tagName === "code" || o.tagName === "xmp") && o.className && o.className.indexOf("prettyprint") >= 0) {
							b = !0;
							break
						}
					b || ((b = (b = n.className.match(/\blinenums\b(?::(\d+))?/)) ? b[1] && b[1].length ? +b[1] : !0 : !1) && D(n, b), d = {
						g: k,
						h: n,
						i: b
					}, E(d))
				}
			}
			p < h.length ? setTimeout(m,
				250) : a && a()
		}
		for(var e = [document.getElementsByTagName("pre"), document.getElementsByTagName("code"), document.getElementsByTagName("xmp")], h = [], k = 0; k < e.length; ++k)
			for(var t = 0, s = e[k].length; t < s; ++t) h.push(e[k][t]);
		var e = q,
			l = Date;
		l.now || (l = {
			now: function() {
				return +new Date
			}
		});
		var p = 0,
			d, g = /\blang(?:uage)?-([\w.]+)(?!\S)/;
		m()
	};
	window.PR = {
		createSimpleLexer: x,
		registerLangHandler: k,
		sourceDecorator: u,
		PR_ATTRIB_NAME: "atn",
		PR_ATTRIB_VALUE: "atv",
		PR_COMMENT: "com",
		PR_DECLARATION: "dec",
		PR_KEYWORD: "kwd",
		PR_LITERAL: "lit",
		PR_NOCODE: "nocode",
		PR_PLAIN: "pln",
		PR_PUNCTUATION: "pun",
		PR_SOURCE: "src",
		PR_STRING: "str",
		PR_TAG: "tag",
		PR_TYPE: "typ"
	}
})();;
/*form-calc-1.0.min.js*/

function calcItem(table, obj, cal) {
	var calReal = cal;
	var items = cal.split(/[{}]/);
	for(var i = 1; i < items.length; i = i + 2) {
		var item = items[i];
		var j = item.indexOf('.');
		if(j < 0) {
			var itemObj = table.find('tr:not([nrowid]):not([rowid]) [name="' + item + '"]');
			if(itemObj.length == 0) {
				itemObj = table.find('tr:not([nrowid]):not([rowid]) input[name^="' + item + '+"]:checked');
			}
			if(itemObj.length == 1) {
				var oc = obj.attr('oc');
				var v = itemObj.val();
				if(oc !== "number") oc = '"';
				else {
					oc = "";
					if(v == "") v = "0";
				}
				calReal = calReal.replace('{' + item + '}', '[' + oc + v + oc + ']');
			}
		} else if(j > 0) {
			var arr = item.split('.');
			var vals = '';
			if(arr[0].substring(0, 1) == "[") {
				var itemObj = table.find('tr[nrowid="' + arr[0].replace('[', '') + '"] [name="' + arr[1].replace(']', '') + '"]');
				if(itemObj.length == 0) {
					itemObj = table.find('tr[nrowid="' + arr[0].replace('[', '') + '"] [name^="' + arr[1].replace(']', '') + '+"]:checked');
				}
			} else {
				var ptr = obj.parents('tr');
				var itemObj = ptr.find('[name="' + arr[1].replace(']', '') + '"]');
				if(itemObj.length == 0) {
					itemObj = ptr.find('[name^="' + arr[1].replace(']', '') + '+"]:checked');
				}
				if(arr[1] == "RowNumber") {
					vals = 'RowNumber';
					var ptrID = ptr.attr('nrowid');
					var n = 1;
					table.find('tr[nrowid="' + ptrID + '"]').each(function() {
						if(this == ptr[0])
							calReal = n;
						n++;
					});
				}
			}
			if(vals !== "RowNumber") {
				for(var n = 0; n < itemObj.length; n++) {
					if(vals !== "") vals += ',';
					var v = itemObj.eq(n).val();
					var oc = obj.attr('oc');
					if(oc !== "number") oc = '"';
					else {
						oc = "";
						if(v == "") v = "0";
					}
					vals += oc + v + oc;
				}
				calReal = calReal.replace('{' + item + '}', '[' + vals + ']');
			}
		}
	}
	var v = '';
	try {
		if(calReal) {
			var script = calReal.toString();
			if(script && script.indexOf('.RowNumber}') < 0)
				v = eval(script);
		}
		if(v == "---------------------------")
			v = "";
	} catch(e) {
		console.log(e, calReal);
		v = '';
	}
	return v;
}

function calcTable(table, obj, inited) {
	table.find('[calculation]').each(function() {
		if(obj) {
			if($(this).attr('name') == $(obj).attr('name')) {
				return;
			}
		}
		if(inited && $(this).val() !== "") {} else {
			var that = this;
			if(!that.calced) {
				that.calced = true;
				setTimeout(function() {
					var cal = unescape($(that).attr("calculation"));
					var v = calcItem(table, $(that), cal);
					putInputValue($(that), v);
					that.calced = false;
				}, 300);
			}
			if($(this).attr('ct') == "3") $(this).removeAttr('calculation');
		}
	})
	table.find('[hiddincalc]').each(function() {
		var cal = unescape($(this).attr("hiddincalc"));
		var ho = $(this);
		var v = calcItem(table, ho, cal);
		if($(this).attr('ct') == "3") $(this).removeAttr('calculation');
		if($(this).attr('hiddinRow') == "true") ho = $(this).parents('tr');
		if(!v)
			ho.hide();
		else
			ho.show();
	})
}

function getTableItemFromName(t, n) {
	var itemObj = t.find('[name="' + n + '"]');
	if(itemObj.length == 0)
		itemObj = t.find('input[name^="' + n + '+"]');
	return itemObj;
}

function calcTemplate(source, data, ev) {
	var render = template.compile(source);
	var result = render(data);
	if(ev) {
		try {
			var re = eval(result);
			return re;
		} catch(e) {
			console.log('error:' + result);
			return null;
		}
	} else
		return result;
}

/*verify-1.0.min.js*/
﻿
var MSGTIMER = 20;
var MSGSPEED = 5;
var MSGOFFSET = 3;
var MSGHIDE = 3;
var validate = '';
var _vIter = {
	"mail": {
		"pattern": /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i,
		"message": "不是合法的邮箱，请重新填写!"
	},
	"url": {
		"pattern": /^(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i,
		"message": "不是合法的网址，请重新填写!"
	},
	'dateISO': {
		"pattern": /((^((1[8-9]\d{2})|([2-9]\d{3}))([-\/\._])(10|12|0?[13578])([-\/\._])(3[01]|[12][0-9]|0?[1-9])$)|(^((1[8-9]\d{2})|([2-9]\d{3}))([-\/\._])(11|0?[469])([-\/\._])(30|[12][0-9]|0?[1-9])$)|(^((1[8-9]\d{2})|([2-9]\d{3}))([-\/\._])(0?2)([-\/\._])(2[0-8]|1[0-9]|0?[1-9])$)|(^([2468][048]00)([-\/\._])(0?2)([-\/\._])(29)$)|(^([3579][26]00)([-\/\._])(0?2)([-\/\._])(29)$)|(^([1][89][0][48])([-\/\._])(0?2)([-\/\._])(29)$)|(^([2-9][0-9][0][48])([-\/\._])(0?2)([-\/\._])(29)$)|(^([1][89][2468][048])([-\/\._])(0?2)([-\/\._])(29)$)|(^([2-9][0-9][2468][048])([-\/\._])(0?2)([-\/\._])(29)$)|(^([1][89][13579][26])([-\/\._])(0?2)([-\/\._])(29)$)|(^([2-9][0-9][13579][26])([-\/\._])(0?2)([-\/\._])(29)$))/,
		"message": "不是合法的日期，请重新填写!"
	},
	'number': {
		"pattern": /^[+-]?(\d+(\.\d*)?|\.\d+)([Ee]-?\d+)?$/,
		"message": "只能输入数字，请重新填写!"
	},
	'digits': {
		"pattern": /^\d+$/,
		"message": "只能输入整数，请重新填写!"
	}
};

function _VerifyRequired(srcObj, valueObj, cnName) {
	if(srcObj.val() == null ||
		srcObj.val().length == 0) {
		inlineMsg(srcObj, '' + valueObj.code + '', '' + cnName + '不能为空，请重新填写！', 2);
		return false;
	}
	return true;
}

function _VerifyMaxlength(srcObj, valueObj, cnName, nSize) {
	if(srcObj.val().length > nSize && srcObj.val().length != 0) {
		inlineMsg(srcObj, '' + valueObj.code + '', '' + cnName + '超过了限定字符，请重新填写！', 2);
		return false;
	}
	return true;
}

function _VerifyTextarea(vfy_textarea1, srcObj, valueObj, cnName, nSize) {
	if(vfy_textarea1) {
		var _n = vfy_textarea1.replaceAll('\n', '');
		var _t = _n.replaceAll('\t', '');
		var _valiObj = $.parseJSON(_t.replace(/\'/g, "\""));
		if(srcObj.val().length != 0) {
			var _reg = new RegExp(_valiObj.pattern, 'i');
			if(!srcObj.val().match(_reg)) {
				inlineMsg(srcObj, '' + valueObj.code + '', '' + cnName + _valiObj.message + '', 2);
				return false;
			}
		}
	}
	return true;
}

function _VerifyMaxRegExp(v, valueObj, srcObj) {
	for(var _key in _vIter) {
		if(_key == v && srcObj.val().length != 0) {
			var reg = _vIter[_key].pattern;
			if(!srcObj.val().match(reg)) {
				inlineMsg(srcObj, '' + valueObj.code + '', '' + _vIter[_key].message + '', 2);
				return false;
			}
		}
	}
	return true;
}

function _VerifyForm(table) {
	var _result = true;
	table.find('tr:not([rowid])').find("[verify][verify!='{}']").each(function(index) {
		var _obj = $(this);
		var tr = _obj.closest('tr');
		if(tr.attr('nrowid')) {
			if(!tr[0].isDirty)
				return true;
		}
		var _verifyStr = _obj.attr("verify");
		if(_verifyStr) {
			var _verify = StrToJson(_verifyStr);
			for(var _v in _verify) {
				if(_v == "required" && _verify[_v]) {
					_result = _VerifyRequired(_obj, _verify, _verify["title"]);
				} else if(_v == "maxlength" && _verify[_v]) {
					_result = _VerifyMaxlength(_obj, _verify, _verify["title"], _verify["length"]);
				} else if(_v == "textarea1" && _verify[_v]) {
					_result = _VerifyTextarea(_verify["validate"], _obj, _verify, _verify["title"], _verify["length"]);
				} else {
					_result = _VerifyMaxRegExp(_v, _verify, _obj);
				}
				if(!_result) {
					return false;
				}
			}
		}
	});
	return _result;
}

function _ConfigVerify(options) {
	var _verify = {};
	for(var _key in options) {
		if(_key.substr(0, 4) == "vfy_") {
			if(!_verify.title) {
				_verify.title = options.displayname ? options.displayname : options.codename;
				_verify.length = options.characterlength;
				if(options.vfy_textarea) {
					_verify.validate = options.vfy_textarea[1];
				}
			}
			_key = _key.replace("vfy_", "");
			eval('_verify.' + _key + ' = true;');
		}
	}
	return _verify;
}

function inlineMsg(srcObj, target, string, autohide) {
	var msg;
	var msgcontent;
	if(!document.getElementById('msg')) {
		msg = document.createElement('div');
		msg.id = 'msg';
		msgcontent = document.createElement('div');
		msgcontent.id = 'msgcontent';
		document.body.appendChild(msg);
		msg.appendChild(msgcontent);
		msg.style.filter = 'alpha(opacity=0)';
		msg.style.opacity = 0;
		msg.alpha = 0;
	} else {
		msg = document.getElementById('msg');
		msgcontent = document.getElementById('msgcontent');
	}
	msgcontent.innerHTML = string;
	msg.style.display = 'block';
	var msgheight = msg.offsetHeight;
	var targetdiv = '';
	if(srcObj[0].localName == 'select') {
		targetdiv = srcObj.next()[0];
	} else {
		targetdiv = srcObj[0];
	}
	targetdiv.focus();
	var targetheight = targetdiv.offsetHeight;
	var targetwidth = targetdiv.offsetWidth;
	var topposition = topPosition(targetdiv) - ((msgheight - targetheight) / 2);
	var leftposition = leftPosition(targetdiv) + targetwidth + MSGOFFSET - targetwidth;
	msg.style.top = topposition + 'px';
	msg.style.left = leftposition + 'px';
	clearInterval(msg.timer);
	msg.timer = setInterval("fadeMsg(1)", MSGTIMER);
	if(!autohide) {
		autohide = MSGHIDE;
	}
	window.setTimeout("hideMsg()", (autohide * 1000));
}

function hideMsg(msg) {
	var msg = document.getElementById('msg');
	if(!msg.timer) {
		msg.timer = setInterval("fadeMsg(0)", MSGTIMER);
	}
}

function fadeMsg(flag) {
	if(flag == null) {
		flag = 1;
	}
	var msg = document.getElementById('msg');
	var value;
	if(flag == 1) {
		value = msg.alpha + MSGSPEED;
	} else {
		value = msg.alpha - MSGSPEED;
	}
	msg.alpha = value;
	msg.style.opacity = (value / 100);
	msg.style.filter = 'alpha(opacity=' + value + ')';
	if(value >= 99) {
		clearInterval(msg.timer);
		msg.timer = null;
	} else if(value <= 1) {
		msg.style.display = "none";
		clearInterval(msg.timer);
	}
}

function leftPosition(target) {
	var left = 0;
	if(target.offsetParent) {
		while(1) {
			left += target.offsetLeft;
			if(!target.offsetParent) {
				break;
			}
			target = target.offsetParent;
		}
	} else if(target.x) {
		left += target.x;
	}
	return left;
}

function topPosition(target) {
	var top = 0;
	if(target.offsetParent) {
		while(1) {
			top += target.offsetTop;
			if(!target.offsetParent) {
				break;
			}
			target = target.offsetParent;
		}
	} else if(target.y) {
		top += target.y;
	}
	return top;
}
if(document.images) {
	arrow = new Image(31, 7);
	arrow.src = "/assets/img/msg_arrow.gif";
}

/*table-form-data-1.0.min.js*/

function makeRemoteData(data, level) {
	var rows;
	if(data.root) {
		rows = data.root.children;
		if(level == 2) {
			var grows = [];
			for(var i = 0; i < rows.length; i++) {
				var child = rows[i].children;
				if(child) {
					for(var j = 0; j < rows[i].children.length; j++) {
						var row = rows[i].children[j];
						row.group = rows[i].text;
						grows.push(row);
					}
				}
			}
			rows = grows;
		}
	} else if(data.data)
		rows = data.data;
	else if(data.rows)
		rows = data.rows;
	else if(data.viewentry) {
		var entry = data.viewentry;
		rows = [];
		for(var i = 0; i < entry.length; i++) {
			var row = {};
			if(entry[i].entrydata) {
				for(var j = 0; j < entry[i].entrydata.length; j++) {
					if(entry[i].entrydata[j]['text']) {
						row[entry[i].entrydata[j]['@name']] = entry[i].entrydata[j]['text']['0'];
					} else if(entry[i].entrydata[j]['number']) {
						row[entry[i].entrydata[j]['@name']] = entry[i].entrydata[j]['number']['0'];
					}
				}
			}
			rows.push(row);
		}
	} else
		rows = data;
	return rows;
}

function makeData(obj) {
	var form = $('<form></form');
	obj.wrap(form);
	var data = obj.parent().serializeObject();
	for(var key in data) {
		if(data[key] instanceof Array) {
			data[key] = data[key].join(',');
		}
	}
	obj.unwrap();
	return data;
}

function wrapFormData(table, convert, onlyMain) {
	var name = table.attr("code");
	var datas = [];
	var master = {};
	table.find('tr:not([rowid]):not([nrow])').each(function() {
		var code = $(this).attr('rowid');
		if(!code) code = $(this).attr('nrowid');
		if(!code) {
			var wdata = makeData($(this));
			for(var key in wdata)
				master[key] = wdata[key];
		}
	});
	var data = {};
	data.name = name;
	data.data = master;
	datas.push(data);
	if(!onlyMain) {
		var detail = [];
		var orgCode = '';
		table.find('tr[nrowid]').each(function() {
			var code = $(this).attr("nrowid");
			if(code && this.isDirty) {
				if(orgCode == "") orgCode = code;
				if(orgCode !== code) {
					var data = {};
					data.name = orgCode;
					data.data = detail;
					datas.push(data);
					detail = [];
					orgCode = code;
				}
				var wdata = makeData($(this));
				var d = {}
				for(var key in wdata)
					d[key] = wdata[key];
				detail.push(d);
			}
		})
		var data = {};
		if(orgCode !== "") {
			data.name = orgCode;
			data.data = detail;
			datas.push(data);
		}
	}
	if(convert) {
		var wdata = datas[0].data;
		for(var i = 1; i < datas.length; i++) {
			wdata[datas[i].name] = datas[i].data;
		}
		return wdata;
	} else {
		var queueList = table.find('.queue_list');
		if(queueList.length == 1 && queueList[0].isDirty) {
			var AttFiles = [];
			queueList.find('a').each(function() {
				AttFiles.push({
					id: this._file.id,
					name: name,
					filestatus: this._file.filestatus,
					index: this._file.index,
					filename: this._file.name,
					uid: this._file.uid,
					size: this._file.size,
					type: this._file.type,
					creationdate: (new Date(this._file.creationdate)).format("yyyy-MM-dd hh:mm:ss"),
					modificationdate: (new Date(this._file.modificationdate)).format("yyyy-MM-dd hh:mm:ss")
				})
			})
			datas.push({
				name: '_files',
				data: AttFiles
			});
		}
		return datas;
	}
}

function SaveFormData(table, that) {
	if($(that).attr('btn-clicked')) {
		return;
	}
	var _chk = _VerifyForm(table);
	if(!_chk) {
		return;
	}
	$(that).attr('btn-clicked', '1');
	var datas = wrapFormData(table);
	datas.push({
		"delete": _deleteRows
	});
	SaveDataToDB(datas, function(data) {
		$(that).removeAttr('btn-clicked');
		if(data.success == true) {
			var keys = data.keyid;
			var keyV = '';
			if(keys) {
				var keyArr = keys.split(",");
				for(var i = 0; i < keyArr.length; i++) {
					keyV = keyArr[i].split('=');
					$('input[type="hidden"][name="id"][value="' + keyV[0] + '"]').val(keyV[1]);
				}
			}
			datas[0].data.id = keyV[1];
			if($('body').attr('workflow'))
				initWorkFlow(table, null, datas[0].data);
			alert('保存成功!');
		} else {
			alert(unescape(data.errors));
		}
	});
}

function SaveDataToDB(datas, _handle, params) {
	var pms = {
		param: 'save',
		data: JSON.stringify(datas)
	};
	if(params) {
		for(var key in params) {
			pms[key] = params[key];
		}
	}
	Mask('正在提交数据,请稍候...');
	OnlineData(pms, function(data) {
		UnMask();
		if(_handle) _handle(data);
	}, TABLE_URL);
}

function FindTableDetailNames(table) {
	var res = '';
	table.find('tr[rowid]').each(function() {
		var code = $(this).attr("rowid");
		if(code) {
			if(res !== "") res += ',';
			res += code;
		}
	})
	return res;
}

/*table-form-data-1.0-ndt.min.js*/
function SaveFormDataNDT(table, that, config) {
	if($(that).attr('btn-clicked')) {
		return;
	}
	var _chk = _VerifyForm(table);
	if(!_chk) {
		return;
	}
	$(that).attr('btn-clicked', '1');
	var datas = wrapFormData(table);
	config = StrToJson(config);
	var _pmls = [];
	var _opp = {};
	var _nP = 0;
	for(var i = 0; i < datas.length; i++) {
		var _d = datas[i];
		if(_d) {
			if(0 == i) {
				var _c = config.main;
				if(_c && _d.data) {
					var _pml = BuildProtocol(_c, _d.data, false);
					_pmls.push(_pml);
				}
			} else {
				var _cTbls = config[_d.name];
				if(_cTbls && _d.data) {
					for(var n = 0; n < _d.data.length; n++) {
						var _pml = BuildProtocol(_cTbls, _d.data[n], true);
						_pmls.push(_pml);
					}
				}
			}
		}
	}
	if(_deleteRows) {
		for(var j = 0; j < _deleteRows.length; j++) {
			var _dIt = _deleteRows[j];
			if(_dIt) {
				var _cTbls = config[_dIt.name];
				if(_cTbls) {
					var _t = {};
					_t.name = "id";
					_t.value = _dIt.id;
					var _pml = {};
					_pml.namespace = 'protocol';
					_pml.cmd = 'data';
					_pml.version = 1;
					_pml.paras = [];
					_pml.id = _cTbls.deleteVml;
					_pml.paras.push(_t);
					_pmls.push(_pml);
				}
			}
		}
	}
	PostContent("/Portal.aspx", JsonToStr(_pmls), 'json', false, function(data) {
		$(that).removeAttr('btn-clicked');
		for(var n = 0; n < data.length; n++) {
			var _ret = data[n];
			if(_ret.result && _ret.rs && _ret.rs.length > 0) {
				if(_ret.rs[0].rows && _ret.rs[0].rows.length > 0) {
					var __row = _ret.rs[0].rows[0];
					for(var jobj in __row) {
						if(jobj.toLowerCase() == "id") {
							var _idStr = _opp[n];
							if(_idStr) {
								$('input[type="hidden"][name="id"][value="' + _idStr + '"]').val(__row[jobj]);
							}
						}
					}
				}
			}
			if(_ret.result) {
				if(typeof(_ret.rs[0]) != 'undefined') {
					Result(_ret);
				} else {
					alert("保存成功！");
					setInterval(back(), 5000);
				}
			}
		}
	}, function() {});

	function BuildProtocol(config, _data, details) {
		var _pml = {};
		_pml.namespace = 'protocol';
		_pml.cmd = 'data';
		_pml.version = 1;
		_pml.paras = [];
		for(var jobj in _data) {
			var _t = {};
			_t.name = jobj;
			_t.value = _data[jobj];
			_pml.paras.push(_t);
		}
		var _id = _data.id;
		if(_id.length >= 32) {
			_opp[_nP] = _id;
			_pml.id = config.insertVml;
		} else {
			_pml.id = config.updateVml;
		}
		if(details) {
			var _t = $('tr:not([nrowid]) input[type="hidden"][name="id"]');
			if(_t && _t.length > 0) {
				var _tDid = _t.val();
				if(_tDid.length < 32 && _tDid.length > 0) {
					var __t = {};
					__t.name = "did";
					__t.value = _tDid;
					_pml.paras.push(__t);
				}
			}
		}
		_nP++;
		return _pml;
	}
}

/*form-combo-1.0.min.js*/

function initCombobox(that, _option, _handle) {
	if(_option.cls == "url" || _option.cls == "tree") {
		var _DataID = _option.id;
		var _DataValue = _option.text;
		GetContent(unescape(_option.url), {}, 'json', false, function(data) {
			var _level = _option.cls == "tree" ? 2 : 1;
			var rows = makeRemoteData(data, _level);
			if(rows.length > 0) {
				if(_level !== 2 && !_DataID) {
					var n = 0;
					for(var key in rows[0]) {
						if(n == 0)
							_DataID = key;
						else if(n == 1) {
							_DataValue = key;
							break;
						}
						n++;
					}
				}
				if(!_DataValue) _DataValue = _DataID;
				var _arrs = [];
				for(var i = 0; i < rows.length; i++) {
					if(_level == 2)
						_arrs.push({
							id: rows[i]["id"],
							text: rows[i]["text"],
							group: rows[i]["group"]
						});
					else
						_arrs.push({
							id: rows[i][_DataID],
							text: rows[i][_DataValue]
						});
				}
				var _html = '';
				if(_option.linkfield && _option.linkfield != "" && _option.linkcombo && _option.linkcombo != "") {
					_html = makeComboOptions([]);
				} else {
					_html = makeComboOptions(_arrs);
				}
				$(that).html(_html);
				if(_handle) _handle(data);
				var tr = $(that).closest('tr');
				if(!tr.attr('rowid'))
					initSelectControl(that);
			} else if(_handle) _handle(false);
		}, function() {
			if(_handle) _handle(false);
		});
	} else {
		if(_handle) _handle(true);
		var tr = $(that).closest('tr');
		if(!tr.attr('rowid')) {
			initSelectControl(that);
		}
	}
}

function initSelectControl(that) {
	var _that = $(that);
	if(!_that.hasClass('selectCarr')) {
		_that = _that.find('select.edit');
	}
	if(!_that[0].inited) {
		_that[0].inited = true;
		_that.selectpicker({
			'selectedText': 'cat'
		});
	}
}

function _ShowComboWithUrlData(options, urldata, val, flt) {
	var selects = '';
	var _DataID = options.optValue;
	var _DataValue = options.optText;
	if(location.href.indexOf('?') != -1) {
		selects += '<option value="0">-------------------------</option>';
	} else {
		selects += '<option value="">-------------------------</option>';
	}
	var rows = makeRemoteData(urldata);
	if(rows.length > 0) {
		if(!_DataID) {
			var n = 0;
			for(var key in rows[0]) {
				if(key == 'id') {
					_DataID = key;
				} else if(key == 'name') {
					_DataValue = key;
					break;
				}
			}
		}
		if(!_DataValue)
			_DataValue = _DataID;
		for(var i = 0; i < rows.length; i++) {
			var _show = true;
			if(options.linkfield) {
				var _curVal = rows[i][options.linkfield];
				if(_curVal) {
					if(flt == _curVal) {
						_show = true;
					} else {
						_show = false;
					}
				}
			}
			if(_show) {
				selects += '<option value="' + rows[i][_DataID] + '"';
				if(val == rows[i][_DataID])
					selects += ' selected';
				selects += ' >' + rows[i][_DataValue] + '</option>';
			}
		}
	}
	return selects;
}

function _DoComboLinking(obj) {
	if(obj) {
		var _name = $(obj).attr("name");
		if(_name) {
			_name = _name.substr(0, _name.length - 3);
			var _flt = $(obj).val();
			if(!_flt) {
				_flt = '';
			}
			var _rowObj = $(obj).closest("tr[nrowid]");
			_DoLinkedComboRefresh(_name, _flt, _rowObj)
		}
	}
}

function _DoLinkedComboRefresh(name, flt, rowObj) {
	var _targets = null;
	var _optionsObj = '';
	$('select').each(function() {
		var _options = $(this).attr('f-options');
		_optionsObj = StrToJson(_options);
		if(_optionsObj) {
			if(rowObj && rowObj.length > 0) {
				_targets = rowObj.find('select[linkcombo="' + name + '"]');
			} else {
				if(_optionsObj.linkcombo == name) {
					_targets = $(this);
				}
			}
		}
	});
	if(_targets != null) {
		_targets.each(function(index) {
			var _obj = $(this);
			var _options = _obj.attr('f-options');
			_optionsObj = StrToJson(_options);
			var _url = unescape(_optionsObj.url);
			var _vml = unescape(_optionsObj.vml);
			if(_url != 'undefined') {
				var that = this;
				OnlineData({}, function(data) {
					_obj.children().remove();
					var selects = _ShowComboWithUrlData(_optionsObj, data, '', flt);
					$(selects).appendTo(_obj);
					var _li = '';
					for(var i = 0; i < $(selects).length; i++) {
						_li += '<li rel="' + i + '" class>';
						_li += '<a tabindex="-1" class style href="#">';
						_li += '<span class="text">' + $($(selects)[i]).text() + '</span>';
						_li += '<i class="glyphicon glyphicon-ok icon-ok check-mark"></i>';
						_li += '</a></li>';
					}
					$(_obj).next().find('ul').html(_li);
					$(_obj).find('option').each(function() {
						if($(_obj).prev().val() == $(this).text()) {
							$(this).attr('selected', 'selected');
							_obj.trigger('change');
							return false;
						} else {
							$(_obj).next().find('span:eq(0)').text('---------------------------');
						}
					});
				}, _url);
			} else if(_vml != 'undefined') {
				var that = this;
				var _jsonPara = NSF.System.Json.ToJson(_vml);
				NSF.System.Data.RecordSet("/", _jsonPara, function(result, config, data) {
					if(result) {
						_obj.children().remove();
						var selects = _ShowComboWithUrlData(_optionsObj, data[0], '', flt);
						$(selects).appendTo(_obj);
						var _li = '';
						for(var i = 0; i < $(selects).length; i++) {
							_li += '<li rel="' + i + '" class>';
							_li += '<a tabindex="-1" class style href="#">';
							_li += '<span class="text">' + $($(selects)[i]).text() + '</span>';
							_li += '<i class="glyphicon glyphicon-ok icon-ok check-mark"></i>';
							_li += '</a></li>';
						}
						$(_obj).next().find('ul').html(_li);
						$(_obj).find('option').each(function() {
							if($(_obj).prev().val() == $(this).text()) {
								$(this).attr('selected', 'selected');
								_obj.trigger('change');
								return false;
							} else {
								$(_obj).prev().val(0);
								$(_obj).next().find('span:eq(0)').text('---------------------------');
							}
						});
					}
				});
			}
		});
	}
}

function makeComboOptions(_arrs) {
	var _eHtml = '<option value="">---------------------------</option>';
	if(_arrs.length > 0) {
		var _group = _arrs[0]["group"];
		var _group_old = '';
		for(var i = 0; i < _arrs.length; i++) {
			if(_group) {
				if(_group_old !== $.trim(_arrs[i]["group"])) {
					if(_group_old !== "")
						_eHtml += '</optgroup>';
					_group_old = $.trim(_arrs[i]["group"]);
					_eHtml += '<optgroup label="' + _group_old + '">';
				}
			}
			_eHtml += '<option value="' + $.trim(_arrs[i]["id"]) + '">';
			_eHtml += $.trim(_arrs[i]["text"]) + '</option>';
		}
		if(_group)
			_eHtml += '</optgroup>';
	}
	return _eHtml;
}

function pushDisplayValue(select) {
	var opt = $(select).find("option:selected");
	if(opt.parent()[0].tagName == 'OPTGROUP') {
		$(select).prev().val(opt.parent().attr('label') + '/' + opt.text());
	} else {
		var v = opt.val();
		if(v == "---------------------------") v = "";
		$(select).prev().val(v);
	}
}

/*form-inputbox-1.0.min.js*/

function initInputBox(that, _option, _handle) {
	if(_option.cls == "url") {
		var _DataID = _option.id;
		var _DataValue = _option.text;
		GetContent(unescape(_option.url), {}, 'json', false, function(data) {
			var rows = makeRemoteData(data, 1);
			if(rows.length > 0) {
				if(!_DataID) {
					var n = 0;
					for(var key in rows[0]) {
						if(n == 0)
							_DataID = key;
						else if(n == 1) {
							_DataValue = key;
							break;
						}
						n++;
					}
				}
				if(!_DataValue) _DataValue = _DataID;
				var _arrs = [];
				for(var i = 0; i < rows.length; i++) {
					_arrs.push({
						id: rows[i][_DataID],
						text: rows[i][_DataValue]
					});
				}
				makeInputBox(that, _arrs);
				if(_handle) _handle(data);
			} else if(_handle) _handle(false);
		}, function() {
			if(_handle) _handle(false);
		});
	} else if(_handle) _handle(true);
}

function makeInputBox(that, _arrs) {
	$(that).find('label:not(:hidden)').remove();
	var input = $(that).find('label:hidden input');
	for(var i = 0; i < _arrs.length; i++) {
		var nInput = input.clone();
		nInput.attr('value', $.trim(_arrs[i]["id"]));
		$(that).append($('<label></label>').append(nInput[0]).append($.trim(_arrs[i]["text"])));
	}
}

/*form-date-1.0.min.js*/
function TrigerDateEvent(that, options) {
	options.choose = function(dates) {
		$(that).trigger('change');
	};
	laydate(options);
	$('#laydate_hms').show();
}

/*form-dialogue-1.0.min.js*/

function initDialogue(that, _option, _handle) {
	if(_option.modalWindow) {} else {
		var data_content = '';
		if(_option.cls == "frame") {
			data_content = '<iframe src="' + unescape(_option.url) + '" />';
		} else if(_option.cls == "tree") {
			data_content = '<div style="width:470px;height:300px;overflow:auto;border: 1px solid #ddd; border-radius: 5px;"><div class="mindMapTree"></div></div>';
		}
		data_content += '<div align="center" style="padding-top:10px;">  ';
		data_content += '<button class="btn btn-sm btn-default ok" type="button" onclick="inputTreeValue(this)" full>确定</button>  ';
		data_content += '<button class="btn btn-sm btn-default" type="button" onclick="hideprover(this)">取消</button>  ';
		data_content += '<button class="btn btn-sm btn-default cleaninput" type="button" onclick="cleaninput(this)">清空</button>  ';
		data_content += '</div>  ';
		var popover;
		if($(that).attr("data-toggle") == "popover")
			popover = $(that);
		else
			popover = $(that).find('[data-toggle="popover"]');
		popover.attr('data-content', data_content);
		if(_option.outputurl == "on") popover.attr('fullPath', true);
		if(_option.optionsson == "on") popover.attr('leafOnly', true);
		if(_option.multiple == "on") popover.attr('multiple', true);
		popover.popover();
		var multiple = '';
		var plugins = ["wholerow"]
		if(_option.multiple) plugins.push("checkbox");

		function makeTreePopover(data) {
			var mmt = popover.parent().find('.mindMapTree');
			mmt.jstree({
				"checkbox": {
					"keep_selected_style": true
				},
				'core': {
					'data': data,
					'force_text': false,
					'themes': {
						'responsive': true,
					},
					dblclick_toggle: true
				},
				"plugins": plugins
			});
			mmt.on("dblclick.jstree",
				function(evt, data) {
					inputTreeValue($(this).parent().parent().find('.ok')[0]);
				}
			);
		}
		popover.on('show.bs.popover', function() {
			var data = $(that).data("mmt");
			if(!data) {
				GetContent(unescape(_option.url), {}, 'json', false, function(data) {
					var data = data.root ? data.root : data;
					$(that).data("mmt", data);
					makeTreePopover(data);
				});
			} else
				setTimeout(function() {
					makeTreePopover(data);
				}, 100);
		})
	}
	if(_handle) _handle(true);
}

function inputTreeValue(obj) {
	var popover = $(obj).closest('.popover');
	var tree = popover.find('.mindMapTree');
	var inputprover = $(obj).closest('.popover').prev();
	var instance = tree.jstree(true);
	var select = instance.get_selected(true);
	if(select && select.length < 0)
		return;
	var _str = '';
	var _str1 = '';
	if(inputprover.attr('multiple')) {
		for(var n = 0; n < select.length; n++) {
			if(_str !== "") {
				_str += ',';
				_str1 += ',';
			}
			_str1 += select[n].id;
			_str += instance.get_text(select[n]);
		}
	} else {
		_str1 = select[0].id;
		var _fullPath = false;
		if(inputprover.attr("fullPath")) {
			if(inputprover.attr("fullPath").toLowerCase() == "true") {
				_fullPath = true;
			}
		}
		if(inputprover.attr("leafOnly")) {
			if(inputprover.attr("leafOnly").toLowerCase() == "true" &&
				select[0].children.length > 0) {
				popover.find('.msg').html('只能选择叶子节点!');
				return;
			}
		}
		if(select[0]) {
			if(_fullPath) {
				for(var i = 0; i < select[0].parents.length; i++) {
					if(select[0].parents.length == 1) {
						_str += instance.get_text(select[0]);
					} else {
						var _len = select[0].parents.length;
						if(i == _len - 1) {
							_str += instance.get_text(select[0]);
						} else {
							_str += instance.get_text(select[0].parents[_len - i - 2]);
						}
					}
					if(i < select[0].parents.length - 1) {
						_str += '/';
					}
				}
			} else {
				_str = instance.get_text(select[0]);
			}
		}
	}
	$(inputprover).val(_str);
	$(inputprover).prev().val(_str1);
	$(inputprover).trigger('change');
	$(inputprover).popover('hide');
	var _inputObj = $(obj).parent().parent().parent().parent().find('input:eq(1)');
	var _name = $(_inputObj).attr("name");
	var _flt = select[0].id;
	_DoLinkedComboRefresh(_name, _flt)
	_DoComboLinking(_inputObj);
}

function hideprover(obj) {
	var inputprover = $(obj).closest('.popover').prev();
	$(inputprover).popover('hide');
}

function cleaninput(obj) {
	var inputprover = $(obj).closest('.popover').prev();
	$(inputprover).val('');
	$(inputprover).prev().val('');
}

function showModalWindow(btn, titleStr, valueObj, addiParams, evSubmit) {
	var _option = $(btn).attr('f-options');
	_option = eval('(' + _option + ')');
	var _value;
	var _sup = '';
	if(valueObj) {
		_sup = valueObj.val();
		if(typeof(_sup) == 'undefined') {
			_sup = '';
		}
	}
	if(_option.cls == "frame") {
		var table = $(btn).closest("table");
		var data = wrapFormData(table, true, true);
		var _url = calcTemplate(unescape(_option.url), data);
		var _html = "				<div class=\"dialogue-header\" style=\"background-color:#f27302;position:relative;margin-left:10px;margin-right:10px;margin-top:20px; margin-bottom:20px;\">\n" +
			"                   <p style=\"text-align:left;background-color:white;margin-left:3px;padding-left:10px; color:#666; font-size:14px;\">" + titleStr + "</p>\n" +
			"                   <div style=\"position:absolute;top:-6px; right:0;\">\n" +
			"					    <button type=\"button\" class=\"btn btn-default pull-right\" data-dismiss=\"modal\" aria-label=\"Close\" title=\"关闭\" style=\"box-shadow:none;text-shadow:none;\"><span aria-hidden=\"true\" class=\"\">关闭</span><span class=\"glyphicon glyphicon-remove\" style=\"margin-left:2px;color:#888;\"></span></button>\n" +
			"					    <button type=\"button\" class=\"btn btn-default pull-right okButton footKeepBtn\" style=\"margin-right:10px;box-shadow:none;text-shadow:none;\" aria-label=\"OK\" title=\"确定\" ><span aria-hidden=\"true\" class=\"\">确定</span><span class=\"glyphicon glyphicon-ok\" style=\"margin-left:2px;\"></span></button>\n" +
			"                   </div>\n" +
			"				</div>\n" +
			"<iframe src='" + _url + "?value=" + _sup;
		if(addiParams && addiParams != "") {
			_html += "&" + addiParams;
		}
		_html += "' />";
		$('#win-Common-Dialog .content').html(_html);
		$('#win-Common-Dialog .okButton').unbind('click');
		$('#win-Common-Dialog .okButton')[0]._btn = btn;
		$('#win-Common-Dialog .okButton')[0]._option = _option;
		$('#win-Common-Dialog .okButton').bind('click', function() {
			var thatBtn = this._btn;
			var thatOption = this._option;
			Assignment(thatBtn, thatOption);
		});
		$('#win-Common-Dialog').modal('show');

		function Assignment(thatBtn, thatOption) {
			var frame = $('#win-Common-Dialog .content iframe');
			var tr = frame[0].contentWindow.selectTrData();
			if(!tr) {
				return;
			}

			function GetTrVals(fld) {
				var _v = '';
				for(var n = 0; n < tr.length; n++) {
					var _tr = tr[n];
					if(_v !== "")
						_v += ",";
					if(fld == "id")
						_v += _tr.find('[name="' + fld + '"]').val();
					else
						_v += _tr.find('[fld="' + fld + '"]').html();
				}
				return _v;
			};
			$(thatBtn).find('input[type="hidden"]').val(GetTrVals('id'));
			var btnTr = $(thatBtn).closest('tr');
			if(!btnTr.attr("nrowid")) {
				btnTr = table.find("tr:not([nrowid]):not(rowid)");
			}
			var pushValus = thatOption.vals;
			if(pushValus) {
				var arrs = pushValus.split(',');
				for(var i = 0; i < arrs.length; i++) {
					var arr = arrs[i].split('=');
					var _v = GetTrVals(arr[1]);
					if(arr[1] == 'id') {
						_value = _v;
					}
					if(_v) {
						btnTr.find('[name="' + arr[0] + '"]').val(_v);
						var _select;
						_select = btnTr.find('[name="' + arr[0] + '"]').next();
						_select.find('option').each(function() {
							if(_select.attr('name').split('_')[0] == arr[0]) {
								if($(this).val() == _v) {
									$(this).attr('selected', 'selected');
									$(this).parent().next().find('button').attr('title', $(this).text());
									$(this).parent().next().find('.filter-option').text($(this).text());
									pushDisplayValue($(this).parent());
									_DoComboLinking($(this).parent());
								}
							}
						});
					} else
						btnTr.find('[name="' + arr[0] + '"]').val('');
				}
			}
			if(evSubmit) {
				if(evSubmit(_value)) {
					$('#win-Common-Dialog').modal('hide');
				} else {
					$('#win-Common-Dialog').modal('hide');
					$(btn).closest('tr').remove();
				}
			} else {
				$('#win-Common-Dialog').modal('hide');
			}
		}
	}
}

function selectTrRow(obj) {
	var radio = $(obj).find('td:first-child input[name="approve"]');
	radio[0].checked = true;
}

/*form-file-1.0.min.js*/

function initInputFile(that, _option, _handle) {
	var fileInput = $('#' + _option.code + '_upload');
	var uid = uuid();
	var _that = $(that).parent();
	fileInput.uploadify({
		'buttonText': '选择文件',
		'swf': '/assets/plugins/uploadFile/uploadify.swf',
		'uploader': '/code/files/uploadify.chi',
		'formData': {
			'param': '_file',
			'token': uid
		},
		'onUploadComplete': function(file) {
			var queueList = _that.find('.queue_list');
			queueList[0].isDirty = true;
			var aFile = $('<a href="/uploads/' + uid + '-' + file.name + '" target="_blank">' + file.name + '</a>');
			queueList.append(aFile);
			file.uid = uid;
			aFile[0]._file = file;
		}
	});
	if(_handle) _handle(true);
}

/*form-image-1.0.min.js*/

function initInputImage(that, _option, _handle) {
	var imageInput = $(that);
	imageInput.attr('data-width', $(that).width());
	imageInput.attr('data-height', $(that).height());
	initDroparea(imageInput);
	if(_handle) _handle(true);
}

function initDroparea(_droparea, dataFile) {
	var w = _droparea.data('width');
	var h = _droparea.data('height');
	var hpx = h + 'px';
	if(!dataFile) {
		_droparea.droparea({
			'instructions': '拖动文件到此处<br />或点击此处',
			'over': '将文件放在此处',
			'nosupport': 'No support for the File API in this web browser',
			'noimage': '不支持的文件类型!',
			'uploaded': '上传完成',
			'maxsize': '10',
			'init': function(result) {},
			'start': function(area) {
				area.find('.error').remove();
			},
			'error': function(result, input, area) {
				$('<div class="error">').html(result.error).prependTo(area);
				return 0;
			},
			'complete': function(result, file, input, area) {
				_droparea = input;
				if((/image/i).test(file.type)) {
					initImages(area, result.path + result.filename);
				} else
					alert('不支持的文件类型!');
			}
		});
	}
	var img = _droparea.attr('data-file');
	if(img) {
		var area = _droparea.parents('.droparea');
		initImages(area, img);
		area.find('.instructions').css('z-index', '-1');
	} else {
		var area = _droparea.parents('.droparea');
		area.find('.instructions').css('text-align', 'center');
		area.find('.instructions').html('<a style="display:block;">点击上传</a>');
		area.find('.instructions').find('a').css('line-height', hpx);
		initImages(area, '');
	}

	function initImages(area, img) {
		area.find('img').remove();
		_DoDropAreaImageDelete(area.find("input:eq(0)").attr("name"));
		$('<img>', {
			'src': img,
			'name': _droparea.attr('name') + '_image'
		}).css({
			"maxHeight": "100%",
			"maxWidth": "90%"
		}).appendTo(area);
		var attFile = area.find('input[type="hidden"][name="' + _droparea.attr('name') + '"]');
		if(attFile.length == 0) {
			attFile = $('<input type="hidden" name="' + _droparea.attr('name') + '" />');
			attFile.appendTo(area);
		}
		attFile.val(img);
		area.css('text-align', 'center');
		if(img != '' && img != null) {
			var _html = '<button type="button" name="' + _droparea.attr('name') + '_delbtn" onclick="_DoDropAreaImageDelete(\'' + _droparea.attr('name') + '\')"><i class="glyphicon glyphicon-trash"></i></button>';
			_html += '<button type="button" name="' + _droparea.attr('name') + '_delbtn" onclick="_DoDropAreaImageZoom( this )"><i class="glyphicon glyphicon-zoom-in"></i></button>';
			_html += '<div class="modal fade" id="zoomModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="">';
			_html += '<div class="modal-dialog" style="width: 600px;padding-top:50px">';
			_html += '<div class="modal-content" style="width: 642px;">';
			_html += '<div class="modal-header" style=" padding-bottom:0;padding-top:20px;"><h4 class="modal-title text-left" id="myModalLabel"><div style="padding-left: 3px; background-color: #f27302;"> <p style="background-color: white; padding-left: 8px; height: 20px;margin-bottom:0; line-height: 20px; margin-bottom: 20px;color:#666; font-size:14px;font-family:\'微软雅黑\';">查看大图</p> </div></h4></div>';
			_html += '<div class="modal-body"><img src="' + img + '" width="600" height="400"></div>';
			_html += '<div class="modal-footer" style="position:absolute; top:0; width:100%; padding-bottom:0;"><button type="button" class="btn btn-default " data-dismiss="modal" aria-label="Close" title="关闭" style="box-shadow:none;margin-left:0;"><span aria-hidden="true" class="">关闭</span><span class="glyphicon glyphicon-remove" style="margin-left: 2px; color: #888;"></span></button></div>';
			_html += '</div></div></div>';
			var _btn = $(_html);
			area.after(_btn);
		}
		setTimeout(function() {
			var mt = (area.height() - area.find('img').height()) / 2;
			area.find('img').css('margin-top', mt + 'px');
		}, 500);
	}
}

function _DoDropAreaImageZoom(button) {
	$(button).next().modal("show");
	$("div.modal-backdrop").removeClass('modal-backdrop');
}

function _DoDropAreaImageDelete(name) {
	var _droparea = $('input.droparea[name="' + name + '"]');
	if(_droparea &&
		_droparea.length > 0) {
		_droparea = _droparea.parent();
		if(_droparea.length > 0) {
			try {
				_droparea.find('input[name="' + name + '"]').val('');
				_droparea.find('img[name="' + name + '_image"]').remove();
				$('button[name="' + name + '_delbtn"]').remove();
				$('button[name="' + name + '_searchbtn"]').remove();
				_droparea.find('div.uploaded').remove();
				_droparea.parent().find("div#zoomModal").remove();
			} catch(e) {}
		}
	}
	return;
}

/*form-editor-1.0.min.js*/
function initInputWebEditor() {
	var _tbl = $('.FormTable');
	if(_tbl.length > 0) {
		var _lst = _tbl.find('textarea[f-options][name]');
		_lst.each(function() {
			var ostr = $(this).attr("f-options");
			var _option = eval('(' + ostr + ')');
			var that = this;
			if(_option.type == "editor") {
				_initInputWebEditor(that, _option);
			}
		});
	}
}

function _initInputWebEditor(that, _option, _handle) {
	KindEditor.ready(function(K) {
		var editor1 = K.create('textarea[name="' + _option.code + '"]:first', {
			cssPath: '/assets/kindeditor/plugins/code/prettify.css',
			uploadJson: '/ImageUploader.aspx',
			allowFileManager: false,
			afterCreate: function() {
				var self = this;
				K.ctrl(document, 13, function() {
					self.sync();
					var _form = $('textarea[name="' + _option.code + '"]').closest('form');
					if(_form.length > 0) {
						_form[0].submit();
					}
				});
				K.ctrl(self.edit.doc, 13, function() {
					self.sync();
					var _form = $('textarea[name="' + _option.code + '"]').closest('form');
					if(_form.length > 0) {
						_form[0].submit();
					}
				});
			},
			afterBlur: function() {
				this.sync();
				return;
			}
		});
		prettyPrint();
	});
	if(_handle) _handle(true);
}

/*form-textarea-1.0.min.js*/

function initTextarea(that, _option, _handle) {
	if(_handle) _handle(true);
}
(function($) {
	$.fn.autoTextarea = function(options) {
		var defaults = {
			maxHeight: null,
			minHeight: $(this).height()
		};
		var opts = $.extend({}, defaults, options);
		return $(this).each(function() {
			$(this).bind("paste cut keydown keyup focus blur", function() {
				var that = this;
				if(!that.calced) {
					that.calced = true;
					setTimeout(function() {
						var height, style = that.style;
						that.style.height = opts.minHeight + 'px';
						if(that.scrollHeight > opts.minHeight) {
							if(opts.maxHeight && that.scrollHeight > opts.maxHeight) {
								height = opts.maxHeight;
								style.overflowY = 'scroll';
							} else {
								height = that.scrollHeight;
								style.overflowY = 'hidden';
							}
							style.height = height + 'px';
						}
						that.calced = false;
					}, 1000);
				}
			});
		});
	};
})(jQuery);

/*form-normal-1.0.min.js*/

function initNormal(that, _option, _handle) {
	showLocation($(that));
	if(_handle) _handle(true);
}

function showLocation(that, province, city, town) {
	var loc = new Location();
	var title = ['省份', '地级市', '市、县、区'];
	$.each(title, function(k, v) {
		title[k] = '<option value="">' + v + '</option>';
	})
	that.find('select.loc_province').append(title[0]);
	that.find('select.loc_city').append(title[1]);
	that.find('select.loc_town').append(title[2]);
	if(!that[0].inited) {
		that[0].inited = true;
		that.find("select.loc_province,select.loc_city,select.loc_town").selectpicker({
			'selectedText': 'cat'
		});
	}
	that.find('select.loc_province').change(function() {
		that.find('select.loc_city').empty();
		that.find('select.loc_city').append(title[1]);
		loc.fillOption(that, 'loc_city', '0,' + that.find('.loc_province').val());
		that.find('select.loc_city').change();
		that.find('input[type="hidden"]:eq(0)').val($(this).val());
		that.find('input[type="hidden"]:eq(1)').val($(this).find("option:selected").text());
	})
	that.find('select.loc_city').change(function() {
		that.find('select.loc_town').empty();
		that.find('select.loc_town').append(title[2]);
		loc.fillOption(that, 'loc_town', '0,' + that.find('select.loc_province').val() + ',' + that.find('select.loc_city').val());
		that.find('input[type="hidden"]:eq(0)').val(that.find('select.loc_province').val() + '-' + $(this).val());
		that.find('input[type="hidden"]:eq(1)').val(that.find('select.loc_province').find("option:selected").text() + '-' + $(this).find("option:selected").text());
	})
	that.find('select.loc_town').change(function() {
		that.find('input[type="hidden"]:eq(0)').val(that.find('select.loc_province').val() + '-' + that.find('select.loc_city').val() + '-' + $(this).val());
		that.find('input[type="hidden"]:eq(1)').val(that.find('select.loc_province').find("option:selected").text() + '-' + that.find('select.loc_city').find("option:selected").text() + '-' + $(this).find("option:selected").text());
	})
	if(province) {
		loc.fillOption(that, 'loc_province', '0', province);
		if(city) {
			loc.fillOption(that, 'loc_city', '0,' + province, city);
			if(town) {
				loc.fillOption(that, 'loc_town', '0,' + province + ',' + city, town);
			}
		}
	} else {
		loc.fillOption(that, 'loc_province', '0');
	}
}

function Location() {
	this.items = {
		'0': {
			1: '北京市',
			22: '天津市',
			44: '上海市',
			66: '重庆市',
			108: '河北省',
			406: '山西省',
			622: '内蒙古',
			804: '辽宁省',
			945: '吉林省',
			1036: '黑龙江省',
			1226: '江苏省',
			1371: '浙江省',
			1500: '安徽省',
			1679: '福建省',
			1812: '江西省',
			1992: '山东省',
			2197: '河南省',
			2456: '湖北省',
			2613: '湖南省',
			2822: '广东省',
			3015: '广西',
			3201: '海南省',
			3235: '四川省',
			3561: '贵州省',
			3728: '云南省',
			3983: '西藏',
			4136: '陕西省',
			4334: '甘肃省',
			4499: '青海省',
			4588: '宁夏',
			4624: '新疆',
			4802: '香港',
			4822: '澳门',
			4825: '台湾省'
		},
		'0,1': {
			2: '北京市'
		},
		'0,1,2': {
			3: '东城区',
			4: '西城区',
			5: '崇文区',
			6: '宣武区',
			7: '朝阳区',
			8: '丰台区',
			9: '石景山区',
			10: '海淀区',
			11: '门头沟区',
			12: '房山区',
			13: '通州区',
			14: '顺义区',
			15: '昌平区',
			16: '大兴区',
			17: '怀柔区',
			18: '平谷区',
			19: '密云县',
			20: '延庆县',
			21: '延庆镇'
		},
		'0,22': {
			23: '天津市'
		},
		'0,22,23': {
			24: '和平区',
			25: '河东区',
			26: '河西区',
			27: '南开区',
			28: '河北区',
			29: '红桥区',
			30: '塘沽区',
			31: '汉沽区',
			32: '大港区',
			33: '东丽区',
			34: '西青区',
			35: '津南区',
			36: '北辰区',
			37: '武清区',
			38: '宝坻区',
			39: '蓟县',
			40: '宁河县',
			41: '芦台镇',
			42: '静海县',
			43: '静海镇'
		},
		'0,44': {
			45: '上海市'
		},
		'0,44,45': {
			46: '黄浦区',
			47: '卢湾区',
			48: '徐汇区',
			49: '长宁区',
			50: '静安区',
			51: '普陀区',
			52: '闸北区',
			53: '虹口区',
			54: '杨浦区',
			55: '闵行区',
			56: '宝山区',
			57: '嘉定区',
			58: '浦东新区',
			59: '金山区',
			60: '松江区',
			61: '青浦区',
			62: '南汇区',
			63: '奉贤区',
			64: '崇明县',
			65: '城桥镇'
		},
		'0,66': {
			67: '重庆市'
		},
		'0,66,67': {
			68: '渝中区',
			69: '大渡口区',
			70: '江北区',
			71: '沙坪坝区',
			72: '九龙坡区',
			73: '南岸区',
			74: '北碚区',
			75: '万盛区',
			76: '双桥区',
			77: '渝北区',
			78: '巴南区',
			79: '万州区',
			80: '涪陵区',
			81: '黔江区',
			82: '长寿区',
			83: '合川市',
			84: '永川区市',
			85: '江津市',
			86: '南川市',
			87: '綦江县',
			88: '潼南县',
			89: '铜梁县',
			90: '大足县',
			91: '荣昌县',
			92: '璧山县',
			93: '垫江县',
			94: '武隆县',
			95: '丰都县',
			96: '城口县',
			97: '梁平县',
			98: '开县',
			99: '巫溪县',
			100: '巫山县',
			101: '奉节县',
			102: '云阳县',
			103: '忠县',
			104: '石柱土家族自治县',
			105: '彭水苗族土家族自治县',
			106: '酉阳土家族苗族自治县',
			107: '秀山土家族苗族自治县'
		},
		'0,108': {
			109: '石家庄市',
			145: '张家口市',
			176: '承德市',
			196: '秦皇岛市',
			208: '唐山市',
			229: '廊坊市',
			246: '保定市',
			290: '衡水市',
			310: '沧州市',
			337: '邢台市',
			372: '邯郸市'
		},
		'0,108,109': {
			110: '长安区',
			111: '桥东区',
			112: '桥西区',
			113: '新华区',
			114: '裕华区',
			115: '井陉矿区',
			116: '辛集市',
			117: '藁城市',
			118: '晋州市',
			119: '新乐市',
			120: '鹿泉市',
			121: '井陉县',
			122: '微水镇',
			123: '正定县',
			124: '正定镇',
			125: '栾城县',
			126: '栾城镇',
			127: '行唐县',
			128: '龙州镇',
			129: '灵寿县',
			130: '灵寿镇',
			131: '高邑县',
			132: '高邑镇',
			133: '深泽县',
			134: '深泽镇',
			135: '赞皇县',
			136: '赞皇镇',
			137: '无极县',
			138: '无极镇',
			139: '平山县',
			140: '平山镇',
			141: '元氏县',
			142: '槐阳镇',
			143: '赵县',
			144: '赵州镇'
		},
		'0,108,145': {
			146: '桥西区',
			147: '桥东区',
			148: '宣化区',
			149: '下花园区',
			150: '宣化县',
			151: '张家口市宣化区',
			152: '张北县',
			153: '张北镇',
			154: '康保县',
			155: '康保镇',
			156: '沽源县',
			157: '平定堡镇',
			158: '尚义县',
			159: '南壕堑镇',
			160: '蔚县',
			161: '蔚州镇',
			162: '阳原县',
			163: '西城镇',
			164: '怀安县',
			165: '柴沟堡镇',
			166: '万全县',
			167: '孔家庄镇',
			168: '怀来县',
			169: '沙城镇',
			170: '涿鹿县',
			171: '涿鹿镇',
			172: '赤城县',
			173: '赤城镇',
			174: '崇礼县',
			175: '西湾子镇'
		},
		'0,108,176': {
			177: '双桥区',
			178: '双滦区',
			179: '鹰手营子矿区',
			180: '承德县',
			181: '下板城镇',
			182: '兴隆县',
			183: '兴隆镇',
			184: '平泉县',
			185: '平泉镇',
			186: '滦平县',
			187: '滦平镇',
			188: '隆化县',
			189: '隆化镇',
			190: '丰宁满族自治县',
			191: '大阁镇',
			192: '宽城满族自治县',
			193: '宽城镇',
			194: '围场满族蒙古族自治县',
			195: '围场镇'
		},
		'0,108,196': {
			197: '海港区',
			198: '山海关区',
			199: '北戴河区',
			200: '昌黎县',
			201: '昌黎镇',
			202: '抚宁县',
			203: '抚宁镇',
			204: '卢龙县',
			205: '卢龙镇',
			206: '青龙满族自治县',
			207: '青龙镇'
		},
		'0,108,208': {
			209: '路北区',
			210: '路南区',
			211: '古冶区',
			212: '开平区',
			213: '丰润区',
			214: '丰南区',
			215: '遵化市',
			216: '迁安市',
			217: '滦县',
			218: '滦州镇',
			219: '滦南县',
			220: '倴城镇',
			221: '乐亭县',
			222: '乐亭镇',
			223: '迁西县',
			224: '兴城镇',
			225: '玉田县',
			226: '玉田镇',
			227: '唐海县',
			228: '唐海镇'
		},
		'0,108,229': {
			230: '安次区',
			231: '广阳区',
			232: '霸州市',
			233: '三河市',
			234: '固安县',
			235: '固安镇',
			236: '永清县',
			237: '永清镇',
			238: '香河县',
			239: '淑阳镇',
			240: '大城县',
			241: '平舒镇',
			242: '文安县',
			243: '文安镇',
			244: '大厂回族自治县',
			245: '大厂镇'
		},
		'0,108,246': {
			247: '新市区',
			248: '北市区',
			249: '南市区',
			250: '定州市',
			251: '涿州市',
			252: '安国市',
			253: '高碑店市',
			254: '满城县',
			255: '满城镇',
			256: '清苑县',
			257: '清苑镇',
			258: '易县',
			259: '易州镇',
			260: '徐水县',
			261: '安肃镇',
			262: '涞源县',
			263: '涞源镇',
			264: '定兴县',
			265: '定兴镇',
			266: '顺平县',
			267: '蒲阳镇',
			268: '唐县',
			269: '仁厚镇',
			270: '望都县',
			271: '望都镇',
			272: '涞水县',
			273: '涞水镇',
			274: '高阳县',
			275: '高阳镇',
			276: '安新县',
			277: '安新镇',
			278: '雄县',
			279: '雄州镇',
			280: '容城县',
			281: '容城镇',
			282: '曲阳县',
			283: '恒州镇',
			284: '阜平县',
			285: '阜平镇',
			286: '博野县',
			287: '博陵镇',
			288: '蠡县',
			289: '蠡吾镇'
		},
		'0,108,290': {
			291: '桃城区',
			292: '冀州市',
			293: '深州市',
			294: '枣强县',
			295: '枣强镇',
			296: '武邑县',
			297: '武邑镇',
			298: '武强县',
			299: '武强镇',
			300: '饶阳县',
			301: '饶阳镇',
			302: '安平县',
			303: '安平镇',
			304: '故城县',
			305: '郑口镇',
			306: '景县',
			307: '景州镇',
			308: '阜城县',
			309: '阜城镇'
		},
		'0,108,310': {
			311: '运河区',
			312: '新华区',
			313: '泊头市',
			314: '任丘市',
			315: '黄骅市',
			316: '河间市',
			317: '沧县',
			318: '沧州市新华区',
			319: '青县',
			320: '清州镇',
			321: '东光县',
			322: '东光镇',
			323: '海兴县',
			324: '苏基镇',
			325: '盐山县',
			326: '盐山镇',
			327: '肃宁县',
			328: '肃宁镇',
			329: '南皮县',
			330: '南皮镇',
			331: '吴桥县',
			332: '桑园镇',
			333: '献县',
			334: '乐寿镇',
			335: '孟村回族自治县',
			336: '孟村镇'
		},
		'0,108,337': {
			338: '桥东区',
			339: '桥西区',
			340: '南宫市',
			341: '沙河市',
			342: '邢台县',
			343: '邢台市桥东区',
			344: '临城县',
			345: '临城镇',
			346: '内丘县',
			347: '内丘镇',
			348: '柏乡县',
			349: '柏乡镇',
			350: '隆尧县',
			351: '隆尧镇',
			352: '任县',
			353: '任城镇',
			354: '南和县',
			355: '和阳镇',
			356: '宁晋县',
			357: '凤凰镇',
			358: '巨鹿县',
			359: '巨鹿镇',
			360: '新河县',
			361: '新河镇',
			362: '广宗县',
			363: '广宗镇',
			364: '平乡县',
			365: '丰州镇',
			366: '威县',
			367: '洺州镇',
			368: '清河县',
			369: '葛仙庄镇',
			370: '临西县',
			371: '临西镇'
		},
		'0,108,372': {
			373: '丛台区',
			374: '邯山区',
			375: '复兴区',
			376: '峰峰矿区',
			377: '武安市',
			378: '邯郸县',
			379: '南堡乡东小屯村',
			380: '临漳县',
			381: '临漳镇',
			382: '成安县',
			383: '成安镇',
			384: '大名县',
			385: '大名镇',
			386: '涉县',
			387: '涉城镇',
			388: '磁县',
			389: '磁州镇',
			390: '肥乡县',
			391: '肥乡镇',
			392: '永年县',
			393: '临洺关镇',
			394: '邱县',
			395: '新马头镇',
			396: '鸡泽县',
			397: '鸡泽镇',
			398: '广平县',
			399: '广平镇',
			400: '馆陶县',
			401: '馆陶镇',
			402: '魏县',
			403: '魏城镇',
			404: '曲周县',
			405: '曲周镇'
		},
		'0,406': {
			407: '太原市',
			421: '朔州市',
			432: '大同市',
			451: '阳泉市',
			459: '长治市',
			483: '晋城市',
			494: '忻州市',
			521: '晋中市',
			542: '临汾市',
			574: '吕梁市',
			598: '运城市'
		},
		'0,406,407': {
			408: '杏花岭区',
			409: '小店区',
			410: '迎泽区',
			411: '尖草坪区',
			412: '万柏林区',
			413: '晋源区',
			414: '古交市',
			415: '清徐县',
			416: '清源镇',
			417: '阳曲县',
			418: '黄寨镇',
			419: '娄烦县',
			420: '娄烦镇'
		},
		'0,406,421': {
			422: '朔城区',
			423: '平鲁区',
			424: '山阴县',
			425: '岱岳乡',
			426: '应县',
			427: '金城镇',
			428: '右玉县',
			429: '新城镇',
			430: '怀仁县',
			431: '云中镇'
		},
		'0,406,432': {
			433: '城区',
			434: '矿区',
			435: '南郊区',
			436: '新荣区',
			437: '阳高县',
			438: '龙泉镇',
			439: '天镇县',
			440: '玉泉镇',
			441: '广灵县',
			442: '壶泉镇',
			443: '灵丘县',
			444: '武灵镇',
			445: '浑源县',
			446: '永安镇',
			447: '左云县',
			448: '云兴镇',
			449: '大同县',
			450: '西坪镇'
		},
		'0,406,451': {
			452: '城区',
			453: '矿区',
			454: '郊区',
			455: '平定县',
			456: '冠山镇',
			457: '盂县',
			458: '秀水镇'
		},
		'0,406,459': {
			460: '城区',
			461: '郊区',
			462: '潞城市',
			463: '长治县',
			464: '韩店镇',
			465: '襄垣县',
			466: '古韩镇',
			467: '屯留县',
			468: '麟绛镇',
			469: '平顺县',
			470: '青羊镇',
			471: '黎城县',
			472: '黎侯镇',
			473: '壶关县',
			474: '龙泉镇',
			475: '长子县',
			476: '丹朱镇',
			477: '武乡县',
			478: '丰州镇',
			479: '沁县',
			480: '定昌镇',
			481: '沁源县',
			482: '沁河镇'
		},
		'0,406,483': {
			484: '城区',
			485: '高平市',
			486: '泽州县',
			487: '南村镇',
			488: '沁水县',
			489: '龙港镇',
			490: '阳城县',
			491: '凤城镇',
			492: '陵川县',
			493: '崇文镇'
		},
		'0,406,494': {
			495: '忻府区',
			496: '原平市',
			497: '定襄县',
			498: '晋昌镇',
			499: '五台县',
			500: '台城镇',
			501: '代县',
			502: '上馆镇',
			503: '繁峙县',
			504: '繁城镇',
			505: '宁武县',
			506: '凤凰镇',
			507: '静乐县',
			508: '鹅城镇',
			509: '神池县',
			510: '龙泉镇',
			511: '五寨县',
			512: '砚城镇',
			513: '岢岚县',
			514: '岚漪镇',
			515: '河曲县',
			516: '文笔镇',
			517: '保德县',
			518: '东关镇',
			519: '偏关县',
			520: '新关镇'
		},
		'0,406,521': {
			522: '榆次区',
			523: '介休市',
			524: '榆社县',
			525: '箕城镇',
			526: '左权县',
			527: '辽阳镇',
			528: '和顺县',
			529: '义兴镇',
			530: '昔阳县',
			531: '乐平镇',
			532: '寿阳县',
			533: '朝阳镇',
			534: '太谷县',
			535: '明星镇',
			536: '祁县',
			537: '昭余镇',
			538: '平遥县',
			539: '古陶镇',
			540: '灵石县',
			541: '翠峰镇'
		},
		'0,406,542': {
			543: '尧都区',
			544: '侯马市',
			545: '霍州市',
			546: '曲沃县',
			547: '乐昌镇',
			548: '翼城县',
			549: '唐兴镇',
			550: '襄汾县',
			551: '新城镇',
			552: '洪洞县',
			553: '大槐树镇',
			554: '古县',
			555: '岳阳镇',
			556: '安泽县',
			557: '府城镇',
			558: '浮山县',
			559: '天坛镇',
			560: '吉县',
			561: '吉昌镇',
			562: '乡宁县',
			563: '昌宁镇',
			564: '蒲县',
			565: '蒲城镇',
			566: '大宁县',
			567: '昕水镇',
			568: '永和县',
			569: '芝河镇',
			570: '隰县',
			571: '龙泉镇',
			572: '汾西县',
			573: '永安镇'
		},
		'0,406,574': {
			575: '离石区',
			576: '孝义市',
			577: '汾阳市',
			578: '文水县',
			579: '凤城镇',
			580: '中阳县',
			581: '宁乡镇',
			582: '兴县',
			583: '蔚汾镇',
			584: '临县',
			585: '临泉镇',
			586: '方山县',
			587: '圪洞镇',
			588: '柳林县',
			589: '柳林镇',
			590: '岚县',
			591: '东村镇',
			592: '交口县',
			593: '水头镇',
			594: '交城县',
			595: '天宁镇',
			596: '石楼县',
			597: '灵泉镇'
		},
		'0,406,598': {
			599: '盐湖区',
			600: '永济市',
			601: '河津市',
			602: '芮城县',
			603: '古魏镇',
			604: '临猗县',
			605: '猗氏镇',
			606: '万荣县',
			607: '解店镇',
			608: '新绛县',
			609: '龙兴镇',
			610: '稷山县',
			611: '稷峰镇',
			612: '闻喜县',
			613: '桐城镇',
			614: '夏县',
			615: '瑶峰镇',
			616: '绛县',
			617: '古绛镇',
			618: '平陆县',
			619: '圣人涧镇',
			620: '垣曲县',
			621: '新城镇'
		},
		'0,622': {
			623: '呼和浩特市',
			638: '包头市',
			651: '乌海市',
			655: '赤峰市',
			677: '通辽市',
			692: '呼伦贝尔市',
			713: '鄂尔多斯市',
			729: '乌兰察布市',
			750: '巴彦淖尔市',
			764: '兴安盟',
			775: '锡林郭勒盟',
			798: '阿拉善盟'
		},
		'0,622,623': {
			624: '回民区',
			625: '新城区',
			626: '玉泉区',
			627: '赛罕区',
			628: '托克托县',
			629: '双河镇',
			630: '武川县',
			631: '可可以力更镇',
			632: '和林格尔县',
			633: '城关镇',
			634: '清水河县',
			635: '城关镇',
			636: '土默特左旗',
			637: '察素齐镇'
		},
		'0,622,638': {
			639: '昆都仑区',
			640: '东河区',
			641: '青山区',
			642: '石拐区',
			643: '白云矿区',
			644: '九原区',
			645: '固阳县',
			646: '金山镇',
			647: '土默特右旗',
			648: '萨拉齐镇',
			649: '达尔罕茂明安联合旗',
			650: '百灵庙镇'
		},
		'0,622,651': {
			652: '海勃湾区',
			653: '海南区',
			654: '乌达区'
		},
		'0,622,655': {
			656: '红山区',
			657: '元宝山区',
			658: '松山区',
			659: '宁城县',
			660: '天义镇',
			661: '林西县',
			662: '林西镇',
			663: '阿鲁科尔沁旗',
			664: '天山镇',
			665: '巴林左旗',
			666: '林东镇',
			667: '巴林右旗',
			668: '大板镇',
			669: '克什克腾旗',
			670: '经棚镇',
			671: '翁牛特旗',
			672: '乌丹镇',
			673: '喀喇沁旗',
			674: '锦山镇',
			675: '敖汉旗',
			676: '新惠镇'
		},
		'0,622,677': {
			678: '科尔沁区',
			679: '霍林郭勒市',
			680: '开鲁县',
			681: '开鲁镇',
			682: '库伦旗',
			683: '库伦镇',
			684: '奈曼旗',
			685: '大沁他拉镇',
			686: '扎鲁特旗',
			687: '鲁北镇',
			688: '科尔沁左翼中旗',
			689: '保康镇',
			690: '科尔沁左翼后旗',
			691: '甘旗卡镇'
		},
		'0,622,692': {
			693: '海拉尔区',
			694: '满洲里市',
			695: '扎兰屯市',
			696: '牙克石市',
			697: '根河市',
			698: '额尔古纳市',
			699: '阿荣旗',
			700: '那吉镇',
			701: '新巴尔虎右旗',
			702: '阿拉坦额莫勒镇',
			703: '新巴尔虎左旗',
			704: '阿穆古郎镇',
			705: '陈巴尔虎旗',
			706: '巴彦库仁镇',
			707: '鄂伦春自治旗',
			708: '阿里河镇',
			709: '鄂温克族自治旗',
			710: '巴彦托海镇',
			711: '莫力达瓦达斡尔族自治旗',
			712: '尼尔基镇'
		},
		'0,622,713': {
			714: '东胜区',
			715: '达拉特旗',
			716: '树林召镇',
			717: '准格尔旗',
			718: '薛家湾镇',
			719: '鄂托克前旗',
			720: '敖勒召其镇',
			721: '鄂托克旗',
			722: '乌兰镇',
			723: '杭锦旗',
			724: '锡尼镇',
			725: '乌审旗',
			726: '嘎鲁图镇',
			727: '伊金霍洛旗',
			728: '阿勒腾席热镇'
		},
		'0,622,729': {
			730: '集宁区',
			731: '丰镇市',
			732: '卓资县',
			733: '卓资山镇',
			734: '化德县',
			735: '长顺镇',
			736: '商都县',
			737: '商都镇',
			738: '兴和县',
			739: '城关镇',
			740: '凉城县',
			741: '岱海镇',
			742: '察哈尔右翼前旗',
			743: '土贵乌拉镇',
			744: '察哈尔右翼中旗',
			745: '科布尔镇',
			746: '察哈尔右翼后旗',
			747: '白音察干镇',
			748: '四子王旗',
			749: '乌兰花镇'
		},
		'0,622,750': {
			751: '临河区',
			752: '五原县',
			753: '隆兴昌镇',
			754: '磴口县',
			755: '巴彦高勒镇',
			756: '乌拉特前旗',
			757: '乌拉山镇',
			758: '乌拉特中旗',
			759: '海流图镇',
			760: '乌拉特后旗',
			761: '巴音宝力格镇',
			762: '杭锦后旗',
			763: '陕坝镇'
		},
		'0,622,764': {
			765: '乌兰浩特市',
			766: '阿尔山市',
			767: '突泉县',
			768: '突泉镇',
			769: '科尔沁右翼前旗',
			770: '大坝沟镇',
			771: '科尔沁右翼中旗',
			772: '巴彦呼硕镇',
			773: '扎赉特旗',
			774: '音德尔镇'
		},
		'0,622,775': {
			776: '锡林浩特市',
			777: '二连浩特市',
			778: '多伦县',
			779: '多伦淖尔镇',
			780: '阿巴嘎旗',
			781: '别力古台镇',
			782: '苏尼特左旗',
			783: '满都拉图镇',
			784: '苏尼特右旗',
			785: '赛汉塔拉镇',
			786: '东乌珠穆沁旗',
			787: '乌里雅斯太镇',
			788: '西乌珠穆沁旗',
			789: '巴拉嘎尔郭勒镇',
			790: '太仆寺旗',
			791: '宝昌镇',
			792: '镶黄旗',
			793: '新宝拉格镇',
			794: '正镶白旗',
			795: '明安图镇',
			796: '正蓝旗',
			797: '上都镇'
		},
		'0,622,798': {
			799: '巴彦浩特镇',
			800: '阿拉善右旗',
			801: '额肯呼都格镇',
			802: '额济纳旗',
			803: '达来呼布镇'
		},
		'0,804': {
			805: '沈阳市',
			822: '朝阳市',
			832: '阜新市',
			842: '铁岭市',
			853: '抚顺市',
			864: '本溪市',
			873: '辽阳市',
			882: '鞍山市',
			892: '丹东市',
			900: '大连市',
			912: '营口市',
			919: '盘锦市',
			926: '锦州市',
			936: '葫芦岛市'
		},
		'0,804,805': {
			806: '沈河区',
			807: '和平区',
			808: '大东区',
			809: '皇姑区',
			810: '铁西区',
			811: '苏家屯区',
			812: '东陵区',
			813: '新城子区',
			814: '于洪区',
			815: '新民市',
			816: '辽中县',
			817: '辽中镇',
			818: '康平县',
			819: '康平镇',
			820: '法库县',
			821: '法库镇'
		},
		'0,804,822': {
			823: '双塔区',
			824: '龙城区',
			825: '北票市',
			826: '凌源市',
			827: '朝阳县',
			828: '朝阳市双塔区',
			829: '建平县',
			830: '喀喇沁左翼蒙古族自治县',
			831: '大城子镇'
		},
		'0,804,832': {
			833: '海州区',
			834: '新邱区',
			835: '太平区',
			836: '清河门区',
			837: '细河区',
			838: '彰武县',
			839: '彰武镇',
			840: '阜新蒙古族自治县',
			841: '阜新镇'
		},
		'0,804,842': {
			843: '银州区',
			844: '清河区',
			845: '调兵山市',
			846: '开原市',
			847: '铁岭县',
			848: '铁岭市银州区',
			849: '西丰县',
			850: '西丰镇',
			851: '昌图县',
			852: '昌图镇'
		},
		'0,804,853': {
			854: '顺城区',
			855: '新抚区',
			856: '东洲区',
			857: '望花区',
			858: '抚顺县',
			859: '抚顺市顺城区',
			860: '新宾满族自治县',
			861: '新宾镇',
			862: '清原满族自治县',
			863: '清原镇'
		},
		'0,804,864': {
			865: '平山区',
			866: '溪湖区',
			867: '明山区',
			868: '南芬区',
			869: '本溪满族自治县',
			870: '小市镇',
			871: '桓仁满族自治县',
			872: '桓仁镇'
		},
		'0,804,873': {
			874: '白塔区',
			875: '文圣区',
			876: '宏伟区',
			877: '弓长岭区',
			878: '太子河区',
			879: '灯塔市',
			880: '辽阳县',
			881: '首山镇'
		},
		'0,804,882': {
			883: '铁东区',
			884: '铁西区',
			885: '立山区',
			886: '千山区',
			887: '海城市',
			888: '台安县',
			889: '台安镇',
			890: '岫岩满族自治县',
			891: '岫岩镇'
		},
		'0,804,892': {
			893: '振兴区',
			894: '元宝区',
			895: '振安区',
			896: '凤城市',
			897: '东港市',
			898: '宽甸满族自治县',
			899: '宽甸镇'
		},
		'0,804,900': {
			901: '西岗区',
			902: '中山区',
			903: '沙河口区',
			904: '甘井子区',
			905: '旅顺口区',
			906: '金州区',
			907: '瓦房店市',
			908: '普兰店市',
			909: '庄河市',
			910: '长海县',
			911: '大长山岛镇'
		},
		'0,804,912': {
			913: '站前区',
			914: '西市区',
			915: '鲅鱼圈区',
			916: '老边区',
			917: '大石桥市',
			918: '盖州市'
		},
		'0,804,919': {
			920: '兴隆台区',
			921: '双台子区',
			922: '大洼县',
			923: '大洼镇',
			924: '盘山县',
			925: '盘锦市双台子区'
		},
		'0,804,926': {
			927: '太和区',
			928: '古塔区',
			929: '凌河区',
			930: '凌海市',
			931: '北宁市',
			932: '黑山县',
			933: '黑山镇',
			934: '义县',
			935: '义州镇'
		},
		'0,804,936': {
			937: '龙港区',
			938: '连山区',
			939: '南票区',
			940: '兴城市',
			941: '绥中县',
			942: '绥中镇',
			943: '建昌县',
			944: '建昌镇'
		},
		'0,945': {
			946: '长春市',
			958: '白城市',
			966: '松原市',
			976: '吉林市',
			987: '四平市',
			996: '辽源市',
			1003: '通化市',
			1014: '白山市',
			1025: '延边州'
		},
		'0,945,946': {
			947: '朝阳区',
			948: '南关区',
			949: '宽城区',
			950: '二道区',
			951: '绿园区',
			952: '双阳区',
			953: '德惠市',
			954: '九台市',
			955: '榆树市',
			956: '农安县',
			957: '农安镇'
		},
		'0,945,958': {
			959: '洮北区',
			960: '大安市',
			961: '洮南市',
			962: '镇赉县',
			963: '镇赉镇',
			964: '通榆县',
			965: '开通镇'
		},
		'0,945,966': {
			967: '宁江区',
			968: '扶余县',
			969: '三岔河镇',
			970: '长岭县',
			971: '长岭镇',
			972: '乾安县',
			973: '乾安镇',
			974: '前郭尔罗斯蒙古族自治县',
			975: '前郭镇'
		},
		'0,945,976': {
			977: '船营区',
			978: '龙潭区',
			979: '昌邑区',
			980: '丰满区',
			981: '磐石市',
			982: '蛟河市',
			983: '桦甸市',
			984: '舒兰市',
			985: '永吉县',
			986: '口前镇'
		},
		'0,945,987': {
			988: '铁西区',
			989: '铁东区',
			990: '双辽市',
			991: '公主岭市',
			992: '梨树县',
			993: '梨树镇',
			994: '伊通满族自治县',
			995: '伊通镇'
		},
		'0,945,996': {
			997: '龙山区',
			998: '西安区',
			999: '东丰县',
			1000: '东丰镇',
			1001: '东辽县',
			1002: '白泉镇'
		},
		'0,945,1003': {
			1004: '东昌区',
			1005: '二道江区',
			1006: '梅河口市',
			1007: '集安市',
			1008: '通化县',
			1009: '快大茂镇',
			1010: '辉南县',
			1011: '朝阳镇',
			1012: '柳河县',
			1013: '柳河镇'
		},
		'0,945,1014': {
			1015: '八道江区',
			1016: '临江市',
			1017: '江源县',
			1018: '孙家堡子镇',
			1019: '抚松县',
			1020: '抚松镇',
			1021: '靖宇县',
			1022: '靖宇镇',
			1023: '长白朝鲜族自治县',
			1024: '长白镇'
		},
		'0,945,1025': {
			1026: '延吉市',
			1027: '图们市',
			1028: '敦化市',
			1029: '珲春市',
			1030: '龙井市',
			1031: '和龙市',
			1032: '汪清县',
			1033: '汪清镇',
			1034: '安图县',
			1035: '明月镇'
		},
		'0,1036': {
			1037: '哈尔滨市',
			1064: '齐齐哈尔市',
			1089: '七台河市',
			1095: '黑河市',
			1105: '大庆市',
			1119: '鹤岗市',
			1130: '伊春市',
			1149: '佳木斯市',
			1165: '双鸭山市',
			1178: '鸡西市',
			1189: '牡丹江市',
			1202: '绥化市',
			1219: '大兴安岭地区'
		},
		'0,1036,1037': {
			1038: '松北区',
			1039: '道里区',
			1040: '南岗区',
			1041: '道外区',
			1042: '香坊区',
			1043: '动力区',
			1044: '平房区',
			1045: '呼兰区',
			1046: '双城市',
			1047: '尚志市',
			1048: '五常市',
			1049: '阿城市',
			1050: '依兰县',
			1051: '依兰镇',
			1052: '方正县',
			1053: '方正镇',
			1054: '宾县',
			1055: '宾州镇',
			1056: '巴彦县',
			1057: '巴彦镇',
			1058: '木兰县',
			1059: '木兰镇',
			1060: '通河县',
			1061: '通河镇',
			1062: '延寿县',
			1063: '延寿镇'
		},
		'0,1036,1064': {
			1065: '建华区',
			1066: '龙沙区',
			1067: '铁锋区',
			1068: '昂昂溪区',
			1069: '富拉尔基区',
			1070: '碾子山区',
			1071: '梅里斯达斡尔族区',
			1072: '讷河市',
			1073: '龙江县',
			1074: '龙江镇',
			1075: '依安县',
			1076: '依安镇',
			1077: '泰来县',
			1078: '泰来镇',
			1079: '甘南县',
			1080: '甘南镇',
			1081: '富裕县',
			1082: '富裕镇',
			1083: '克山县',
			1084: '克山镇',
			1085: '克东县',
			1086: '克东镇',
			1087: '拜泉县',
			1088: '拜泉镇'
		},
		'0,1036,1089': {
			1090: '桃山区',
			1091: '新兴区',
			1092: '茄子河区',
			1093: '勃利县',
			1094: '勃利镇'
		},
		'0,1036,1095': {
			1096: '爱辉区',
			1097: '北安市',
			1098: '五大连池市',
			1099: '嫩江县',
			1100: '嫩江镇',
			1101: '逊克县',
			1102: '边疆镇',
			1103: '孙吴县',
			1104: '孙吴镇'
		},
		'0,1036,1105': {
			1106: '萨尔图区',
			1107: '龙凤区',
			1108: '让胡路区',
			1109: '大同区',
			1110: '红岗区',
			1111: '肇州县',
			1112: '肇州镇',
			1113: '肇源县',
			1114: '肇源镇',
			1115: '林甸县',
			1116: '林甸镇',
			1117: '杜尔伯特蒙古族自治县',
			1118: '泰康镇'
		},
		'0,1036,1119': {
			1120: '兴山区',
			1121: '向阳区',
			1122: '工农区',
			1123: '南山区',
			1124: '兴安区',
			1125: '东山区',
			1126: '萝北县',
			1127: '凤翔镇',
			1128: '绥滨县',
			1129: '绥滨镇'
		},
		'0,1036,1130': {
			1131: '伊春区',
			1132: '南岔区',
			1133: '友好区',
			1134: '西林区',
			1135: '翠峦区',
			1136: '新青区',
			1137: '美溪区',
			1138: '金山屯区',
			1139: '五营区',
			1140: '乌马河区',
			1141: '汤旺河区',
			1142: '带岭区',
			1143: '乌伊岭区',
			1144: '红星区',
			1145: '上甘岭区',
			1146: '铁力市',
			1147: '嘉荫县',
			1148: '朝阳镇'
		},
		'0,1036,1149': {
			1150: '前进区',
			1151: '永红区',
			1152: '向阳区',
			1153: '东风区',
			1154: '郊区',
			1155: '同江市',
			1156: '富锦市',
			1157: '桦南县',
			1158: '桦南镇',
			1159: '桦川县',
			1160: '悦来镇',
			1161: '汤原县',
			1162: '汤原镇',
			1163: '抚远县',
			1164: '抚远镇'
		},
		'0,1036,1165': {
			1166: '尖山区',
			1167: '岭东区',
			1168: '四方台区',
			1169: '宝山区',
			1170: '集贤县',
			1171: '福利镇',
			1172: '友谊县',
			1173: '友谊镇',
			1174: '宝清县',
			1175: '宝清镇',
			1176: '饶河县',
			1177: '饶河镇'
		},
		'0,1036,1178': {
			1179: '鸡冠区',
			1180: '恒山区',
			1181: '滴道区',
			1182: '梨树区',
			1183: '城子河区',
			1184: '麻山区',
			1185: '虎林市',
			1186: '密山市',
			1187: '鸡东县',
			1188: '鸡东镇'
		},
		'0,1036,1189': {
			1190: '爱民区',
			1191: '东安区',
			1192: '阳明区',
			1193: '西安区',
			1194: '穆棱市',
			1195: '绥芬河市',
			1196: '海林市',
			1197: '宁安市',
			1198: '东宁县',
			1199: '东宁镇',
			1200: '林口县',
			1201: '林口镇'
		},
		'0,1036,1202': {
			1203: '北林区',
			1204: '安达市',
			1205: '肇东市',
			1206: '海伦市',
			1207: '望奎县',
			1208: '望奎镇',
			1209: '兰西县',
			1210: '兰西镇',
			1211: '青冈县',
			1212: '青冈镇',
			1213: '庆安县',
			1214: '庆安镇',
			1215: '明水县',
			1216: '明水镇',
			1217: '绥棱县',
			1218: '绥棱镇'
		},
		'0,1036,1219': {
			1220: '呼玛县',
			1221: '呼玛镇',
			1222: '塔河县',
			1223: '塔河镇',
			1224: '漠河县',
			1225: '西林吉镇'
		},
		'0,1226': {
			1227: '南京市',
			1243: '徐州市',
			1259: '连云港市',
			1271: '宿迁市',
			1280: '淮安市',
			1293: '盐城市',
			1308: '扬州市',
			1317: '泰州市',
			1324: '南通市',
			1335: '镇江市',
			1342: '常州市',
			1350: '无锡市',
			1359: '苏州市'
		},
		'0,1226,1227': {
			1228: '玄武区',
			1229: '白下区',
			1230: '秦淮区',
			1231: '建邺区',
			1232: '鼓楼区',
			1233: '下关区',
			1234: '浦口区',
			1235: '六合区',
			1236: '栖霞区',
			1237: '雨花台区',
			1238: '江宁区',
			1239: '溧水县',
			1240: '永阳镇',
			1241: '高淳县',
			1242: '淳溪镇'
		},
		'0,1226,1243': {
			1244: '云龙区',
			1245: '鼓楼区',
			1246: '九里区',
			1247: '贾汪区',
			1248: '泉山区',
			1249: '邳州市',
			1250: '新沂市',
			1251: '铜山县',
			1252: '铜山镇',
			1253: '睢宁县',
			1254: '睢城镇',
			1255: '沛县',
			1256: '沛城镇',
			1257: '丰县',
			1258: '凤城镇'
		},
		'0,1226,1259': {
			1260: '新浦区',
			1261: '连云区',
			1262: '海州区',
			1263: '赣榆县',
			1264: '青口镇',
			1265: '灌云县',
			1266: '伊山镇',
			1267: '东海县',
			1268: '牛山镇',
			1269: '灌南县',
			1270: '新安镇'
		},
		'0,1226,1271': {
			1272: '宿城区',
			1273: '宿豫区',
			1274: '沭阳县',
			1275: '沭城镇',
			1276: '泗阳县',
			1277: '众兴镇',
			1278: '泗洪县',
			1279: '青阳镇'
		},
		'0,1226,1280': {
			1281: '清河区',
			1282: '清浦区',
			1283: '楚州区',
			1284: '淮阴区',
			1285: '金湖县',
			1286: '黎城镇',
			1287: '盱眙县',
			1288: '盱城镇',
			1289: '洪泽县',
			1290: '高良涧镇',
			1291: '涟水县',
			1292: '涟城镇'
		},
		'0,1226,1293': {
			1294: '亭湖区',
			1295: '盐都区',
			1296: '东台市',
			1297: '大丰市',
			1298: '射阳县',
			1299: '合德镇',
			1300: '阜宁县',
			1301: '阜城镇',
			1302: '滨海县',
			1303: '东坎镇',
			1304: '响水县',
			1305: '响水镇',
			1306: '建湖县',
			1307: '近湖镇'
		},
		'0,1226,1308': {
			1309: '维扬区',
			1310: '广陵区',
			1311: '邗江区',
			1312: '仪征市',
			1313: '江都市',
			1314: '高邮市',
			1315: '宝应县',
			1316: '安宜镇'
		},
		'0,1226,1317': {
			1318: '海陵区',
			1319: '高港区',
			1320: '靖江市',
			1321: '泰兴市',
			1322: '姜堰市',
			1323: '兴化市'
		},
		'0,1226,1324': {
			1325: '崇川区',
			1326: '港闸区',
			1327: '海门市',
			1328: '启东市',
			1329: '通州市',
			1330: '如皋市',
			1331: '如东县',
			1332: '掘港镇',
			1333: '海安县',
			1334: '海安镇'
		},
		'0,1226,1335': {
			1336: '京口区',
			1337: '润州区',
			1338: '丹徒区',
			1339: '扬中市',
			1340: '丹阳市',
			1341: '句容市'
		},
		'0,1226,1342': {
			1343: '钟楼区',
			1344: '天宁区',
			1345: '戚墅堰区',
			1346: '新北区',
			1347: '武进区',
			1348: '金坛市',
			1349: '溧阳市'
		},
		'0,1226,1350': {
			1351: '崇安区',
			1352: '南长区',
			1353: '北塘区',
			1354: '滨湖区',
			1355: '惠山区',
			1356: '锡山区',
			1357: '江阴市',
			1358: '宜兴市'
		},
		'0,1226,1359': {
			1360: '金阊区',
			1361: '沧浪区',
			1362: '平江区',
			1363: '虎丘区',
			1364: '吴中区',
			1365: '相城区',
			1366: '吴江市',
			1367: '昆山市',
			1368: '太仓市',
			1369: '常熟市',
			1370: '张家港市'
		},
		'0,1371': {
			1372: '杭州市',
			1387: '湖州市',
			1396: '嘉兴市',
			1406: '舟山市',
			1413: '宁波市',
			1425: '绍兴市',
			1433: '衢州市',
			1442: '金华市',
			1453: '台州市',
			1465: '温州市',
			1483: '丽水市'
		},
		'0,1371,1372': {
			1373: '拱墅区',
			1374: '上城区',
			1375: '下城区',
			1376: '江干区',
			1377: '西湖区',
			1378: '滨江区',
			1379: '余杭区',
			1380: '萧山区',
			1381: '临安市',
			1382: '富阳市',
			1383: '建德市',
			1384: '桐庐县',
			1385: '淳安县',
			1386: '千岛湖镇'
		},
		'0,1371,1387': {
			1388: '吴兴区',
			1389: '南浔区',
			1390: '长兴县',
			1391: '雉城镇',
			1392: '德清县',
			1393: '武康镇',
			1394: '安吉县',
			1395: '递铺镇'
		},
		'0,1371,1396': {
			1397: '南湖区',
			1398: '秀洲区',
			1399: '平湖市',
			1400: '海宁市',
			1401: '桐乡市',
			1402: '嘉善县',
			1403: '魏塘镇',
			1404: '海盐县',
			1405: '武原镇'
		},
		'0,1371,1406': {
			1407: '定海区',
			1408: '普陀区',
			1409: '岱山县',
			1410: '高亭镇',
			1411: '嵊泗县',
			1412: '菜园镇'
		},
		'0,1371,1413': {
			1414: '海曙区',
			1415: '江东区',
			1416: '江北区',
			1417: '北仑区',
			1418: '镇海区',
			1419: '鄞州区',
			1420: '慈溪市',
			1421: '余姚市',
			1422: '奉化市',
			1423: '宁海县',
			1424: '象山县'
		},
		'0,1371,1425': {
			1426: '越城区',
			1427: '诸暨市',
			1428: '上虞市',
			1429: '嵊州市',
			1430: '绍兴县',
			1431: '新昌县',
			1432: '城关镇'
		},
		'0,1371,1433': {
			1434: '柯城区',
			1435: '衢江区',
			1436: '江山市',
			1437: '常山县',
			1438: '天马镇',
			1439: '开化县',
			1440: '城关镇',
			1441: '龙游县'
		},
		'0,1371,1442': {
			1443: '婺城区',
			1444: '金东区',
			1445: '兰溪市',
			1446: '永康市',
			1447: '义乌市',
			1448: '东阳市',
			1449: '武义县',
			1450: '浦江县',
			1451: '磐安县',
			1452: '安文镇'
		},
		'0,1371,1453': {
			1454: '椒江区',
			1455: '黄岩区',
			1456: '路桥区',
			1457: '临海市',
			1458: '温岭市',
			1459: '三门县',
			1460: '海游镇',
			1461: '天台县',
			1462: '仙居县',
			1463: '玉环县',
			1464: '珠港镇'
		},
		'0,1371,1465': {
			1466: '鹿城区',
			1467: '龙湾区',
			1468: '瓯海区',
			1469: '瑞安市',
			1470: '乐清市',
			1471: '永嘉县',
			1472: '上塘镇',
			1473: '文成县',
			1474: '大峃镇',
			1475: '平阳县',
			1476: '昆阳镇',
			1477: '泰顺县',
			1478: '罗阳镇',
			1479: '洞头县',
			1480: '北岙镇',
			1481: '苍南县',
			1482: '灵溪镇'
		},
		'0,1371,1483': {
			1484: '莲都区',
			1485: '龙泉市',
			1486: '缙云县',
			1487: '五云镇',
			1488: '青田县',
			1489: '鹤城镇',
			1490: '云和县',
			1491: '云和镇',
			1492: '遂昌县',
			1493: '妙高镇',
			1494: '松阳县',
			1495: '西屏镇',
			1496: '庆元县',
			1497: '松源镇',
			1498: '景宁畲族自治县',
			1499: '鹤溪镇'
		},
		'0,1500': {
			1501: '合肥市',
			1512: '宿州市',
			1522: '淮北市',
			1528: '亳州市',
			1536: '阜阳市',
			1549: '蚌埠市',
			1560: '淮南市',
			1568: '滁州市',
			1581: '马鞍山市',
			1587: '芜湖市',
			1598: '铜陵市',
			1604: '安庆市',
			1623: '黄山市',
			1635: '六安市',
			1648: '巢湖市',
			1658: '池州市',
			1666: '宣城市'
		},
		'0,1500,1501': {
			1502: '庐阳区',
			1503: '瑶海区',
			1504: '蜀山区',
			1505: '包河区',
			1506: '长丰县',
			1507: '水湖镇',
			1508: '肥东县',
			1509: '店埠镇',
			1510: '肥西县',
			1511: '上派镇'
		},
		'0,1500,1512': {
			1513: '埇桥区',
			1514: '砀山县',
			1515: '砀城镇',
			1516: '萧县',
			1517: '龙城镇',
			1518: '灵璧县',
			1519: '灵城镇',
			1520: '泗县',
			1521: '泗城镇'
		},
		'0,1500,1522': {
			1523: '相山区',
			1524: '杜集区',
			1525: '烈山区',
			1526: '濉溪县',
			1527: '濉溪镇'
		},
		'0,1500,1528': {
			1529: '谯城区',
			1530: '涡阳县',
			1531: '城关镇',
			1532: '蒙城县',
			1533: '城关镇',
			1534: '利辛县',
			1535: '城关镇'
		},
		'0,1500,1536': {
			1537: '颍州区',
			1538: '颍东区',
			1539: '颍泉区',
			1540: '界首市',
			1541: '临泉县',
			1542: '城关镇',
			1543: '太和县',
			1544: '城关镇',
			1545: '阜南县',
			1546: '城关镇',
			1547: '颍上县',
			1548: '慎城镇'
		},
		'0,1500,1549': {
			1550: '蚌山区',
			1551: '龙子湖区',
			1552: '禹会区',
			1553: '淮上区',
			1554: '怀远县',
			1555: '城关镇',
			1556: '五河县',
			1557: '城关镇',
			1558: '固镇县',
			1559: '城关镇'
		},
		'0,1500,1560': {
			1561: '田家庵区',
			1562: '大通区',
			1563: '谢家集区',
			1564: '八公山区',
			1565: '潘集区',
			1566: '凤台县',
			1567: '城关镇'
		},
		'0,1500,1568': {
			1569: '琅区',
			1570: '南谯区',
			1571: '明光市',
			1572: '天长市',
			1573: '来安县',
			1574: '新安镇',
			1575: '全椒县',
			1576: '襄河镇',
			1577: '定远县',
			1578: '定城镇',
			1579: '凤阳县',
			1580: '府城镇'
		},
		'0,1500,1581': {
			1582: '雨山区',
			1583: '花山区',
			1584: '金家庄区',
			1585: '当涂县',
			1586: '姑孰镇'
		},
		'0,1500,1587': {
			1588: '镜湖区',
			1589: '弋江区',
			1590: '三山区',
			1591: '鸠江区',
			1592: '芜湖县',
			1593: '湾镇',
			1594: '繁昌县',
			1595: '繁阳镇',
			1596: '南陵县',
			1597: '籍山镇'
		},
		'0,1500,1598': {
			1599: '铜官山区',
			1600: '狮子山区',
			1601: '郊区',
			1602: '铜陵县',
			1603: '五松镇'
		},
		'0,1500,1604': {
			1605: '迎江区',
			1606: '大观区',
			1607: '宜秀区',
			1608: '桐城市',
			1609: '怀宁县',
			1610: '高河镇',
			1611: '枞阳县',
			1612: '枞阳镇',
			1613: '潜山县',
			1614: '梅城镇',
			1615: '太湖县',
			1616: '晋熙镇',
			1617: '宿松县',
			1618: '孚玉镇',
			1619: '望江县',
			1620: '雷阳镇',
			1621: '岳西县',
			1622: '天堂镇'
		},
		'0,1500,1623': {
			1624: '屯溪区',
			1625: '黄山区',
			1626: '徽州区',
			1627: '歙县',
			1628: '徽城镇',
			1629: '休宁县',
			1630: '海阳镇',
			1631: '黟县',
			1632: '碧阳镇',
			1633: '祁门县',
			1634: '祁山镇'
		},
		'0,1500,1635': {
			1636: '金安区',
			1637: '裕安区',
			1638: '寿县',
			1639: '寿春镇',
			1640: '霍邱县',
			1641: '城关镇',
			1642: '舒城县',
			1643: '城关镇',
			1644: '金寨县',
			1645: '梅山镇',
			1646: '霍山县',
			1647: '衡山镇'
		},
		'0,1500,1648': {
			1649: '居巢区',
			1650: '庐江县',
			1651: '庐城镇',
			1652: '无为县',
			1653: '无城镇',
			1654: '含山县',
			1655: '环峰镇',
			1656: '和县',
			1657: '历阳镇'
		},
		'0,1500,1658': {
			1659: '贵池区',
			1660: '东至县',
			1661: '尧渡镇',
			1662: '石台县',
			1663: '七里镇',
			1664: '青阳县',
			1665: '蓉城镇'
		},
		'0,1500,1666': {
			1667: '宣州区',
			1668: '宁国市',
			1669: '郎溪县',
			1670: '建平镇',
			1671: '广德县',
			1672: '桃州镇',
			1673: '泾县',
			1674: '泾川镇',
			1675: '旌德县',
			1676: '旌阳镇',
			1677: '绩溪县',
			1678: '华阳镇'
		},
		'0,1679': {
			1680: '福州市',
			1699: '南平市',
			1713: '莆田市',
			1719: '三明市',
			1740: '泉州市',
			1758: '厦门市',
			1765: '漳州市',
			1785: '龙岩市',
			1798: '宁德市'
		},
		'0,1679,1680': {
			1681: '鼓楼区',
			1682: '台江区',
			1683: '仓山区',
			1684: '马尾区',
			1685: '晋安区',
			1686: '福清市',
			1687: '长乐市',
			1688: '闽侯县',
			1689: '连江县',
			1690: '凤城镇',
			1691: '罗源县',
			1692: '凤山镇',
			1693: '闽清县',
			1694: '梅城镇',
			1695: '永泰县',
			1696: '樟城镇',
			1697: '平潭县',
			1698: '潭城镇'
		},
		'0,1679,1699': {
			1700: '延平区',
			1701: '邵武市',
			1702: '武夷山市',
			1703: '建瓯市',
			1704: '建阳市',
			1705: '顺昌县',
			1706: '浦城县',
			1707: '光泽县',
			1708: '杭川镇',
			1709: '松溪县',
			1710: '松源镇',
			1711: '政和县',
			1712: '熊山镇'
		},
		'0,1679,1713': {
			1714: '城厢区',
			1715: '涵江区',
			1716: '荔城区',
			1717: '秀屿区',
			1718: '仙游县'
		},
		'0,1679,1719': {
			1720: '梅列区',
			1721: '三元区',
			1722: '永安市',
			1723: '明溪县',
			1724: '雪峰镇',
			1725: '清流县',
			1726: '龙津镇',
			1727: '宁化县',
			1728: '翠江镇',
			1729: '大田县',
			1730: '均溪镇',
			1731: '尤溪县',
			1732: '城关镇',
			1733: '沙县',
			1734: '将乐县',
			1735: '古镛镇',
			1736: '泰宁县',
			1737: '杉城镇',
			1738: '建宁县',
			1739: '濉城镇'
		},
		'0,1679,1740': {
			1741: '鲤城区',
			1742: '丰泽区',
			1743: '洛江区',
			1744: '泉港区',
			1745: '石狮市',
			1746: '晋江市',
			1747: '南安市',
			1748: '惠安县',
			1749: '螺城镇',
			1750: '安溪县',
			1751: '凤城镇',
			1752: '永春县',
			1753: '桃城镇',
			1754: '德化县',
			1755: '浔中镇',
			1756: '金门县',
			1757: '☆'
		},
		'0,1679,1758': {
			1759: '思明区',
			1760: '海沧区',
			1761: '湖里区',
			1762: '集美区',
			1763: '同安区',
			1764: '翔安区'
		},
		'0,1679,1765': {
			1766: '芗城区',
			1767: '龙文区',
			1768: '龙海市',
			1769: '云霄县',
			1770: '云陵镇',
			1771: '漳浦县',
			1772: '绥安镇',
			1773: '诏安县',
			1774: '南诏镇',
			1775: '长泰县',
			1776: '武安镇',
			1777: '东山县',
			1778: '西埔镇',
			1779: '南靖县',
			1780: '山城镇',
			1781: '平和县',
			1782: '小溪镇',
			1783: '华安县',
			1784: '华丰镇'
		},
		'0,1679,1785': {
			1786: '新罗区',
			1787: '漳平市',
			1788: '长汀县',
			1789: '汀州镇',
			1790: '永定县',
			1791: '凤城镇',
			1792: '上杭县',
			1793: '临江镇',
			1794: '武平县',
			1795: '平川镇',
			1796: '连城县',
			1797: '莲峰镇'
		},
		'0,1679,1798': {
			1799: '蕉城区',
			1800: '福安市',
			1801: '福鼎市',
			1802: '寿宁县',
			1803: '鳌阳镇',
			1804: '霞浦县',
			1805: '柘荣县',
			1806: '双城镇',
			1807: '屏南县',
			1808: '古峰镇',
			1809: '古田县',
			1810: '周宁县',
			1811: '狮城镇'
		},
		'0,1812': {
			1813: '南昌市',
			1827: '九江市',
			1849: '景德镇市',
			1855: '鹰潭市',
			1860: '新余市',
			1864: '萍乡市',
			1873: '赣州市',
			1907: '上饶市',
			1930: '抚州市',
			1952: '宜春市',
			1967: '吉安市'
		},
		'0,1812,1813': {
			1814: '东湖区',
			1815: '西湖区',
			1816: '青云谱区',
			1817: '湾里区',
			1818: '青山湖区',
			1819: '南昌县',
			1820: '莲塘镇',
			1821: '新建县',
			1822: '长堎镇',
			1823: '安义县',
			1824: '龙津镇',
			1825: '进贤县',
			1826: '民和镇'
		},
		'0,1812,1827': {
			1828: '浔阳区',
			1829: '庐山区',
			1830: '瑞昌市',
			1831: '九江县',
			1832: '沙河街镇',
			1833: '武宁县',
			1834: '新宁镇',
			1835: '修水县',
			1836: '义宁镇',
			1837: '永修县',
			1838: '涂埠镇',
			1839: '德安县',
			1840: '蒲亭镇',
			1841: '星子县',
			1842: '南康镇',
			1843: '都昌县',
			1844: '都昌镇',
			1845: '湖口县',
			1846: '双钟镇',
			1847: '彭泽县',
			1848: '龙城镇'
		},
		'0,1812,1849': {
			1850: '珠山区',
			1851: '昌江区',
			1852: '乐平市',
			1853: '浮梁县',
			1854: '浮梁镇'
		},
		'0,1812,1855': {
			1856: '月湖区',
			1857: '贵溪市',
			1858: '余江县',
			1859: '邓埠镇'
		},
		'0,1812,1860': {
			1861: '渝水区',
			1862: '分宜县',
			1863: '分宜镇'
		},
		'0,1812,1864': {
			1865: '安源区',
			1866: '湘东区',
			1867: '莲花县',
			1868: '琴亭镇',
			1869: '上栗县',
			1870: '上栗镇',
			1871: '芦溪县',
			1872: '芦溪镇'
		},
		'0,1812,1873': {
			1874: '章贡区',
			1875: '瑞金市',
			1876: '南康市',
			1877: '赣县',
			1878: '梅林镇',
			1879: '信丰县',
			1880: '嘉定镇',
			1881: '大余县',
			1882: '南安镇',
			1883: '上犹县',
			1884: '东山镇',
			1885: '崇义县',
			1886: '横水镇',
			1887: '安远县',
			1888: '欣山镇',
			1889: '龙南县',
			1890: '龙南镇',
			1891: '定南县',
			1892: '历市镇',
			1893: '全南县',
			1894: '城厢镇',
			1895: '宁都县',
			1896: '梅江镇',
			1897: '于都县',
			1898: '贡江镇',
			1899: '兴国县',
			1900: '潋江镇',
			1901: '会昌县',
			1902: '文武坝镇',
			1903: '寻乌县',
			1904: '长宁镇',
			1905: '石城县',
			1906: '琴江镇'
		},
		'0,1812,1907': {
			1908: '信州区',
			1909: '德兴市',
			1910: '上饶县',
			1911: '旭日镇',
			1912: '广丰县',
			1913: '永丰镇',
			1914: '玉山县',
			1915: '冰溪镇',
			1916: '铅山县',
			1917: '河口镇',
			1918: '横峰县',
			1919: '岑阳镇',
			1920: '弋阳县',
			1921: '弋江镇',
			1922: '余干县',
			1923: '玉亭镇',
			1924: '鄱阳县',
			1925: '鄱阳镇',
			1926: '万年县',
			1927: '陈营镇',
			1928: '婺源县',
			1929: '紫阳镇'
		},
		'0,1812,1930': {
			1931: '临川区',
			1932: '南城县',
			1933: '建昌镇',
			1934: '黎川县',
			1935: '日峰镇',
			1936: '南丰县',
			1937: '琴城镇',
			1938: '崇仁县',
			1939: '巴山镇',
			1940: '乐安县',
			1941: '鳌溪镇',
			1942: '宜黄县',
			1943: '凤冈镇',
			1944: '金溪县',
			1945: '秀谷镇',
			1946: '资溪县',
			1947: '鹤城镇',
			1948: '东乡县',
			1949: '孝岗镇',
			1950: '广昌县',
			1951: '旴江镇'
		},
		'0,1812,1952': {
			1953: '袁州区',
			1954: '丰城市',
			1955: '樟树市',
			1956: '高安市',
			1957: '奉新县',
			1958: '冯川镇',
			1959: '万载县',
			1960: '上高县',
			1961: '宜丰县',
			1962: '新昌镇',
			1963: '靖安县',
			1964: '双溪镇',
			1965: '铜鼓县',
			1966: '永宁镇'
		},
		'0,1812,1967': {
			1968: '吉州区',
			1969: '青原区',
			1970: '井冈山市',
			1971: '厦坪镇',
			1972: '吉安县',
			1973: '敦厚镇',
			1974: '吉水县',
			1975: '文峰镇',
			1976: '峡江县',
			1977: '水边镇',
			1978: '新干县',
			1979: '金川镇',
			1980: '永丰县',
			1981: '恩江镇',
			1982: '泰和县',
			1983: '澄江镇',
			1984: '遂川县',
			1985: '泉江镇',
			1986: '万安县',
			1987: '芙蓉镇',
			1988: '安福县',
			1989: '平都镇',
			1990: '永新县',
			1991: '禾川镇'
		},
		'0,1992': {
			1993: '济南市',
			2006: '青岛市',
			2019: '聊城市',
			2029: '德州市',
			2047: '东营市',
			2056: '淄博市',
			2068: '潍坊市',
			2081: '烟台市',
			2095: '威海市',
			2100: '日照市',
			2107: '临沂市',
			2129: '枣庄市',
			2136: '济宁市',
			2154: '泰安市',
			2163: '莱芜市',
			2166: '滨州市',
			2179: '菏泽市'
		},
		'0,1992,1993': {
			1994: '市中区',
			1995: '历下区',
			1996: '槐荫区',
			1997: '天桥区',
			1998: '历城区',
			1999: '长清区',
			2000: '章丘市',
			2001: '平阴县',
			2002: '平阴镇',
			2003: '济阳县',
			2004: '济阳镇',
			2005: '商河县'
		},
		'0,1992,2006': {
			2007: '市南区',
			2008: '市北区',
			2009: '四方区',
			2010: '黄岛区',
			2011: '崂山区',
			2012: '城阳区',
			2013: '李沧区',
			2014: '胶州市',
			2015: '即墨市',
			2016: '平度市',
			2017: '胶南市',
			2018: '莱西市'
		},
		'0,1992,2019': {
			2020: '东昌府区',
			2021: '临清市',
			2022: '阳谷县',
			2023: '莘县',
			2024: '茌平县',
			2025: '东阿县',
			2026: '冠县',
			2027: '冠城镇',
			2028: '高唐县'
		},
		'0,1992,2029': {
			2030: '德城区',
			2031: '乐陵市',
			2032: '禹城市',
			2033: '陵县',
			2034: '陵城镇',
			2035: '平原县',
			2036: '夏津县',
			2037: '夏津镇',
			2038: '武城县',
			2039: '武城镇',
			2040: '齐河县',
			2041: '晏城镇',
			2042: '临邑县',
			2043: '宁津县',
			2044: '宁津镇',
			2045: '庆云县',
			2046: '庆云镇'
		},
		'0,1992,2047': {
			2048: '东营区',
			2049: '河口区',
			2050: '垦利县',
			2051: '垦利镇',
			2052: '利津县',
			2053: '利津镇',
			2054: '广饶县',
			2055: '广饶镇'
		},
		'0,1992,2056': {
			2057: '张店区',
			2058: '淄川区',
			2059: '博山区',
			2060: '临淄区',
			2061: '周村区',
			2062: '桓台县',
			2063: '索镇',
			2064: '高青县',
			2065: '田镇',
			2066: '沂源县',
			2067: '南麻镇'
		},
		'0,1992,2068': {
			2069: '潍城区',
			2070: '寒亭区',
			2071: '坊子区',
			2072: '奎文区',
			2073: '安丘市',
			2074: '昌邑市',
			2075: '高密市',
			2076: '青州市',
			2077: '诸城市',
			2078: '寿光市',
			2079: '临朐县',
			2080: '昌乐县'
		},
		'0,1992,2081': {
			2082: '莱山区',
			2083: '芝罘区',
			2084: '福山区',
			2085: '牟平区',
			2086: '栖霞市',
			2087: '海阳市',
			2088: '龙口市',
			2089: '莱阳市',
			2090: '莱州市',
			2091: '蓬莱市',
			2092: '招远市',
			2093: '长岛县',
			2094: '南长山镇'
		},
		'0,1992,2095': {
			2096: '环翠区',
			2097: '荣成市',
			2098: '乳山市',
			2099: '文登市'
		},
		'0,1992,2100': {
			2101: '东港区',
			2102: '岚山区',
			2103: '五莲县',
			2104: '洪凝镇',
			2105: '莒县',
			2106: '城阳镇'
		},
		'0,1992,2107': {
			2108: '兰山区',
			2109: '罗庄区',
			2110: '河东区',
			2111: '郯城县',
			2112: '郯城镇',
			2113: '苍山县',
			2114: '卞庄镇',
			2115: '莒南县',
			2116: '十字路镇',
			2117: '沂水县',
			2118: '沂水镇',
			2119: '蒙阴县',
			2120: '蒙阴镇',
			2121: '平邑县',
			2122: '平邑镇',
			2123: '费县',
			2124: '费城镇',
			2125: '沂南县',
			2126: '界湖镇',
			2127: '临沭县',
			2128: '临沭镇'
		},
		'0,1992,2129': {
			2130: '薛城区',
			2131: '市中区',
			2132: '峄城区',
			2133: '台儿庄区',
			2134: '山亭区',
			2135: '滕州市'
		},
		'0,1992,2136': {
			2137: '市中区',
			2138: '任城区',
			2139: '曲阜市',
			2140: '兖州市',
			2141: '邹城市',
			2142: '微山县',
			2143: '鱼台县',
			2144: '谷亭镇',
			2145: '金乡县',
			2146: '金乡镇',
			2147: '嘉祥县',
			2148: '嘉祥镇',
			2149: '汶上县',
			2150: '汶上镇',
			2151: '泗水县',
			2152: '梁山县',
			2153: '梁山镇'
		},
		'0,1992,2154': {
			2155: '泰山区',
			2156: '岱岳区',
			2157: '新泰市',
			2158: '肥城市',
			2159: '宁阳县',
			2160: '宁阳镇',
			2161: '东平县',
			2162: '东平镇'
		},
		'0,1992,2163': {
			2164: '莱城区',
			2165: '钢城区'
		},
		'0,1992,2166': {
			2167: '滨城区',
			2168: '惠民县',
			2169: '惠民镇',
			2170: '阳信县',
			2171: '阳信镇',
			2172: '无棣县',
			2173: '无棣镇',
			2174: '沾化县',
			2175: '富国镇',
			2176: '博兴县',
			2177: '博兴镇',
			2178: '邹平县'
		},
		'0,1992,2179': {
			2180: '牡丹区',
			2181: '曹县',
			2182: '曹城镇',
			2183: '定陶县',
			2184: '定陶镇',
			2185: '成武县',
			2186: '成武镇',
			2187: '单县',
			2188: '单城镇',
			2189: '巨野县',
			2190: '巨野镇',
			2191: '郓城县',
			2192: '郓城镇',
			2193: '鄄城县',
			2194: '鄄城镇',
			2195: '东明县',
			2196: '城关镇'
		},
		'0,2197': {
			2198: '郑州市',
			2212: '开封市',
			2228: '三门峡市',
			2238: '洛阳市',
			2262: '焦作市',
			2277: '新乡市',
			2296: '鹤壁市',
			2304: '安阳市',
			2318: '濮阳市',
			2330: '商丘市',
			2346: '许昌市',
			2356: '漯河市',
			2364: '平顶山市',
			2379: '南阳市',
			2400: '信阳市',
			2417: '周口市',
			2436: '驻马店市',
			2455: '济源市'
		},
		'0,2197,2198': {
			2199: '中原区',
			2200: '二七区',
			2201: '管城回族区',
			2202: '金水区',
			2203: '上街区',
			2204: '惠济区',
			2205: '新郑市',
			2206: '登封市',
			2207: '新密市',
			2208: '巩义市',
			2209: '荥阳市',
			2210: '中牟县',
			2211: '城关镇'
		},
		'0,2197,2212': {
			2213: '鼓楼区',
			2214: '龙亭区',
			2215: '顺河回族区',
			2216: '禹王台区',
			2217: '金明区',
			2218: '杞县',
			2219: '城关镇',
			2220: '通许县',
			2221: '城关镇',
			2222: '尉氏县',
			2223: '城关镇',
			2224: '开封县',
			2225: '城关镇',
			2226: '兰考县',
			2227: '城关镇'
		},
		'0,2197,2228': {
			2229: '湖滨区',
			2230: '义马市',
			2231: '灵宝市',
			2232: '渑池县',
			2233: '城关镇',
			2234: '陕县',
			2235: '大营镇',
			2236: '卢氏县',
			2237: '城关镇'
		},
		'0,2197,2238': {
			2239: '西工区',
			2240: '老城区',
			2241: '瀍河回族区',
			2242: '涧西区',
			2243: '吉利区',
			2244: '洛龙区',
			2245: '偃师市',
			2246: '孟津县',
			2247: '城关镇',
			2248: '新安县',
			2249: '城关镇',
			2250: '栾川县',
			2251: '城关镇',
			2252: '嵩县',
			2253: '城关镇',
			2254: '汝阳县',
			2255: '城关镇',
			2256: '宜阳县',
			2257: '城关镇',
			2258: '洛宁县',
			2259: '城关镇',
			2260: '伊川县',
			2261: '城关镇'
		},
		'0,2197,2262': {
			2263: '解放区',
			2264: '山阳区',
			2265: '中站区',
			2266: '马村区',
			2267: '孟州市',
			2268: '沁阳市',
			2269: '修武县',
			2270: '城关镇',
			2271: '博爱县',
			2272: '清化镇',
			2273: '武陟县',
			2274: '木城镇',
			2275: '温县',
			2276: '温泉镇'
		},
		'0,2197,2277': {
			2278: '卫滨区',
			2279: '红旗区',
			2280: '凤泉区',
			2281: '牧野区',
			2282: '卫辉市',
			2283: '辉县市',
			2284: '新乡县',
			2285: '新乡市红旗区',
			2286: '获嘉县',
			2287: '城关镇',
			2288: '原阳县',
			2289: '城关镇',
			2290: '延津县',
			2291: '城关镇',
			2292: '封丘县',
			2293: '城关镇',
			2294: '长垣县',
			2295: '城关镇'
		},
		'0,2197,2296': {
			2297: '淇滨区',
			2298: '山城区',
			2299: '鹤山区',
			2300: '浚县',
			2301: '城关镇',
			2302: '淇县',
			2303: '朝歌镇'
		},
		'0,2197,2304': {
			2305: '北关区',
			2306: '文峰区',
			2307: '殷都区',
			2308: '龙安区',
			2309: '林州市',
			2310: '安阳县',
			2311: '安阳市北关区',
			2312: '汤阴县',
			2313: '城关镇',
			2314: '滑县',
			2315: '道口镇',
			2316: '内黄县',
			2317: '城关镇'
		},
		'0,2197,2318': {
			2319: '华龙区',
			2320: '清丰县',
			2321: '城关镇',
			2322: '南乐县',
			2323: '城关镇',
			2324: '范县',
			2325: '城关镇',
			2326: '台前县',
			2327: '城关镇',
			2328: '濮阳县',
			2329: '城关镇'
		},
		'0,2197,2330': {
			2331: '梁园区',
			2332: '睢阳区',
			2333: '永城市',
			2334: '虞城县',
			2335: '城关镇',
			2336: '民权县',
			2337: '城关镇',
			2338: '宁陵县',
			2339: '城关镇',
			2340: '睢县',
			2341: '城关镇',
			2342: '夏邑县',
			2343: '城关镇',
			2344: '柘城县',
			2345: '城关镇'
		},
		'0,2197,2346': {
			2347: '魏都区',
			2348: '禹州市',
			2349: '长葛市',
			2350: '许昌县',
			2351: '许昌市魏都区',
			2352: '鄢陵县',
			2353: '安陵镇',
			2354: '襄城县',
			2355: '城关镇'
		},
		'0,2197,2356': {
			2357: '源汇区',
			2358: '郾城区',
			2359: '召陵区',
			2360: '舞阳县',
			2361: '舞泉镇',
			2362: '临颍县',
			2363: '城关镇'
		},
		'0,2197,2364': {
			2365: '新华区',
			2366: '卫东区',
			2367: '湛河区',
			2368: '石龙区',
			2369: '舞钢市',
			2370: '汝州市',
			2371: '宝丰县',
			2372: '城关镇',
			2373: '叶县',
			2374: '昆阳镇',
			2375: '鲁山县',
			2376: '鲁阳镇',
			2377: '郏县',
			2378: '城关镇'
		},
		'0,2197,2379': {
			2380: '卧龙区',
			2381: '宛城区',
			2382: '邓州市',
			2383: '南召县',
			2384: '城关镇',
			2385: '方城县',
			2386: '城关镇',
			2387: '西峡县',
			2388: '镇平县',
			2389: '城关镇',
			2390: '内乡县',
			2391: '城关镇',
			2392: '淅川县',
			2393: '社旗县',
			2394: '赊店镇',
			2395: '唐河县',
			2396: '新野县',
			2397: '城关镇',
			2398: '桐柏县',
			2399: '城关镇'
		},
		'0,2197,2400': {
			2401: '河区',
			2402: '平桥区',
			2403: '息县',
			2404: '城关镇',
			2405: '淮滨县',
			2406: '城关镇',
			2407: '潢川县',
			2408: '光山县',
			2409: '固始县',
			2410: '城关镇',
			2411: '商城县',
			2412: '城关镇',
			2413: '罗山县',
			2414: '城关镇',
			2415: '新县',
			2416: '新集镇'
		},
		'0,2197,2417': {
			2418: '川汇区',
			2419: '项城市',
			2420: '扶沟县',
			2421: '城关镇',
			2422: '西华县',
			2423: '城关镇',
			2424: '商水县',
			2425: '城关镇',
			2426: '太康县',
			2427: '城关镇',
			2428: '鹿邑县',
			2429: '城关镇',
			2430: '郸城县',
			2431: '城关镇',
			2432: '淮阳县',
			2433: '城关镇',
			2434: '沈丘县',
			2435: '槐店镇'
		},
		'0,2197,2436': {
			2437: '驿城区',
			2438: '确山县',
			2439: '盘龙镇',
			2440: '泌阳县',
			2441: '泌水镇',
			2442: '遂平县',
			2443: '灈阳镇',
			2444: '西平县',
			2445: '上蔡县',
			2446: '蔡都镇',
			2447: '汝南县',
			2448: '汝宁镇',
			2449: '平舆县',
			2450: '古槐镇',
			2451: '新蔡县',
			2452: '古吕镇',
			2453: '正阳县',
			2454: '真阳镇'
		},
		'0,2456': {
			2457: '武汉市',
			2471: '十堰市',
			2485: '襄樊市',
			2498: '荆门市',
			2506: '孝感市',
			2517: '黄冈市',
			2535: '鄂州市',
			2539: '黄石市',
			2547: '咸宁市',
			2558: '荆州市',
			2570: '宜昌市',
			2589: '随州市',
			2592: '省直辖县级行政单位',
			2598: '恩施州'
		},
		'0,2456,2457': {
			2458: '江岸区',
			2459: '江汉区',
			2460: '硚口区',
			2461: '汉阳区',
			2462: '武昌区',
			2463: '青山区',
			2464: '洪山区',
			2465: '东西湖区',
			2466: '汉南区',
			2467: '蔡甸区',
			2468: '江夏区',
			2469: '黄陂区',
			2470: '新洲区'
		},
		'0,2456,2471': {
			2472: '张湾区',
			2473: '茅箭区',
			2474: '丹江口市',
			2475: '郧县',
			2476: '城关镇',
			2477: '竹山县',
			2478: '城关镇',
			2479: '房县',
			2480: '城关镇',
			2481: '郧西县',
			2482: '城关镇',
			2483: '竹溪县',
			2484: '城关镇'
		},
		'0,2456,2485': {
			2486: '襄城区',
			2487: '樊城区',
			2488: '襄阳区',
			2489: '老河口市',
			2490: '枣阳市',
			2491: '宜城市',
			2492: '南漳县',
			2493: '城关镇',
			2494: '谷城县',
			2495: '城关镇',
			2496: '保康县',
			2497: '城关镇'
		},
		'0,2456,2498': {
			2499: '东宝区',
			2500: '掇刀区',
			2501: '钟祥市',
			2502: '沙洋县',
			2503: '沙洋镇',
			2504: '京山县',
			2505: '新市镇'
		},
		'0,2456,2506': {
			2507: '孝南区',
			2508: '应城市',
			2509: '安陆市',
			2510: '汉川市',
			2511: '孝昌县',
			2512: '花园镇',
			2513: '大悟县',
			2514: '城关镇',
			2515: '云梦县',
			2516: '城关镇'
		},
		'0,2456,2517': {
			2518: '黄州区',
			2519: '麻城市',
			2520: '武穴市',
			2521: '红安县',
			2522: '城关镇',
			2523: '罗田县',
			2524: '凤山镇',
			2525: '英山县',
			2526: '温泉镇',
			2527: '浠水县',
			2528: '清泉镇',
			2529: '蕲春县',
			2530: '漕河镇',
			2531: '黄梅县',
			2532: '黄梅镇',
			2533: '团风县',
			2534: '团风镇'
		},
		'0,2456,2535': {
			2536: '鄂城区',
			2537: '梁子湖区',
			2538: '华容区'
		},
		'0,2456,2539': {
			2540: '黄石港区',
			2541: '西塞山区',
			2542: '下陆区',
			2543: '铁山区',
			2544: '大冶市',
			2545: '阳新县',
			2546: '兴国镇'
		},
		'0,2456,2547': {
			2548: '咸安区',
			2549: '赤壁市',
			2550: '嘉鱼县',
			2551: '鱼岳镇',
			2552: '通城县',
			2553: '隽水镇',
			2554: '崇阳县',
			2555: '天城镇',
			2556: '通山县',
			2557: '通羊镇'
		},
		'0,2456,2558': {
			2559: '沙市区',
			2560: '荆州区',
			2561: '石首市',
			2562: '洪湖市',
			2563: '松滋市',
			2564: '江陵县',
			2565: '郝穴镇',
			2566: '公安县',
			2567: '斗湖堤镇',
			2568: '监利县',
			2569: '容城镇'
		},
		'0,2456,2570': {
			2571: '西陵区',
			2572: '伍家岗区',
			2573: '点军区',
			2574: '猇亭区',
			2575: '夷陵区',
			2576: '枝江市',
			2577: '宜都市',
			2578: '当阳市',
			2579: '远安县',
			2580: '鸣凤镇',
			2581: '兴山县',
			2582: '古夫镇',
			2583: '秭归县',
			2584: '茅坪镇',
			2585: '长阳土家族自治县',
			2586: '龙舟坪镇',
			2587: '五峰土家族自治县',
			2588: '五峰镇'
		},
		'0,2456,2589': {
			2590: '曾都区',
			2591: '广水市'
		},
		'0,2456,2592': {
			2593: '仙桃市',
			2594: '天门市',
			2595: '潜江市',
			2596: '神农架林区',
			2597: '松柏镇'
		},
		'0,2456,2598': {
			2599: '恩施市',
			2600: '利川市',
			2601: '建始县',
			2602: '业州镇',
			2603: '巴东县',
			2604: '信陵镇',
			2605: '宣恩县',
			2606: '珠山镇',
			2607: '咸丰县',
			2608: '高乐山镇',
			2609: '来凤县',
			2610: '翔凤镇',
			2611: '鹤峰县',
			2612: '容美镇'
		},
		'0,2613': {
			2614: '长沙市',
			2628: '张家界市',
			2635: '常德市',
			2651: '益阳市',
			2661: '岳阳市',
			2675: '株洲市',
			2689: '湘潭市',
			2696: '衡阳市',
			2714: '郴州市',
			2734: '永州市',
			2755: '邵阳市',
			2776: '怀化市',
			2799: '娄底市',
			2807: '湘西州'
		},
		'0,2613,2614': {
			2615: '长沙市',
			2616: '岳麓区',
			2617: '芙蓉区',
			2618: '天心区',
			2619: '开福区',
			2620: '雨花区',
			2621: '浏阳市',
			2622: '长沙县',
			2623: '星沙镇',
			2624: '望城县',
			2625: '高塘岭镇',
			2626: '宁乡县',
			2627: '玉潭镇'
		},
		'0,2613,2628': {
			2629: '永定区',
			2630: '武陵源区',
			2631: '慈利县',
			2632: '零阳镇',
			2633: '桑植县',
			2634: '澧源镇'
		},
		'0,2613,2635': {
			2636: '武陵区',
			2637: '鼎城区',
			2638: '津市市',
			2639: '安乡县',
			2640: '城关镇',
			2641: '汉寿县',
			2642: '龙阳镇',
			2643: '澧县',
			2644: '澧阳镇',
			2645: '临澧县',
			2646: '安福镇',
			2647: '桃源县',
			2648: '漳江镇',
			2649: '石门县',
			2650: '楚江镇'
		},
		'0,2613,2651': {
			2652: '赫山区',
			2653: '资阳区',
			2654: '沅江市',
			2655: '南县',
			2656: '南洲镇',
			2657: '桃江县',
			2658: '桃花江镇',
			2659: '安化县',
			2660: '东坪镇'
		},
		'0,2613,2661': {
			2662: '岳阳楼区',
			2663: '君山区',
			2664: '云溪区',
			2665: '汨罗市',
			2666: '临湘市',
			2667: '岳阳县',
			2668: '荣家湾镇',
			2669: '华容县',
			2670: '城关镇',
			2671: '湘阴县',
			2672: '文星镇',
			2673: '平江县',
			2674: '汉昌镇'
		},
		'0,2613,2675': {
			2676: '天元区',
			2677: '荷塘区',
			2678: '芦淞区',
			2679: '石峰区',
			2680: '醴陵市',
			2681: '株洲县',
			2682: '渌口镇',
			2683: '攸县',
			2684: '城关镇',
			2685: '茶陵县',
			2686: '城关镇',
			2687: '炎陵县',
			2688: '霞阳镇'
		},
		'0,2613,2689': {
			2690: '岳塘区',
			2691: '雨湖区',
			2692: '湘乡市',
			2693: '韶山市',
			2694: '湘潭县',
			2695: '易俗河镇'
		},
		'0,2613,2696': {
			2697: '雁峰区',
			2698: '珠晖区',
			2699: '石鼓区',
			2700: '蒸湘区',
			2701: '南岳区',
			2702: '常宁市',
			2703: '耒阳市',
			2704: '衡阳县',
			2705: '西渡镇',
			2706: '衡南县',
			2707: '云集镇',
			2708: '衡山县',
			2709: '开云镇',
			2710: '衡东县',
			2711: '城关镇',
			2712: '祁东县',
			2713: '洪桥镇'
		},
		'0,2613,2714': {
			2715: '北湖区',
			2716: '苏仙区',
			2717: '资兴市',
			2718: '桂阳县',
			2719: '城关镇',
			2720: '永兴县',
			2721: '城关镇',
			2722: '宜章县',
			2723: '城关镇',
			2724: '嘉禾县',
			2725: '城关镇',
			2726: '临武县',
			2727: '城关镇',
			2728: '汝城县',
			2729: '城关镇',
			2730: '桂东县',
			2731: '城关镇',
			2732: '安仁县',
			2733: '城关镇'
		},
		'0,2613,2734': {
			2735: '冷水滩区',
			2736: '零陵区',
			2737: '东安县',
			2738: '白牙市镇',
			2739: '道县',
			2740: '道江镇',
			2741: '宁远县',
			2742: '舜陵镇',
			2743: '江永县',
			2744: '潇浦镇',
			2745: '蓝山县',
			2746: '塔峰镇',
			2747: '新田县',
			2748: '龙泉镇',
			2749: '双牌县',
			2750: '泷泊镇',
			2751: '祁阳县',
			2752: '浯溪镇',
			2753: '江华瑶族自治县',
			2754: '沱江镇'
		},
		'0,2613,2755': {
			2756: '双清区',
			2757: '大祥区',
			2758: '北塔区',
			2759: '武冈市',
			2760: '邵东县',
			2761: '两市镇',
			2762: '邵阳县',
			2763: '塘渡口镇',
			2764: '新邵县',
			2765: '酿溪镇',
			2766: '隆回县',
			2767: '桃洪镇',
			2768: '洞口县',
			2769: '洞口镇',
			2770: '绥宁县',
			2771: '长铺镇',
			2772: '新宁县',
			2773: '金石镇',
			2774: '城步苗族自治县',
			2775: '儒林镇'
		},
		'0,2613,2776': {
			2777: '鹤城区',
			2778: '洪江市',
			2779: '沅陵县',
			2780: '沅陵镇',
			2781: '辰溪县',
			2782: '辰阳镇',
			2783: '溆浦县',
			2784: '卢峰镇',
			2785: '中方县',
			2786: '中方镇',
			2787: '会同县',
			2788: '林城镇',
			2789: '麻阳苗族自治县',
			2790: '高村镇',
			2791: '新晃侗族自治县',
			2792: '新晃镇',
			2793: '芷江侗族自治县',
			2794: '芷江镇',
			2795: '靖州苗族侗族自治县',
			2796: '渠阳镇',
			2797: '通道侗族自治县',
			2798: '双江镇'
		},
		'0,2613,2799': {
			2800: '娄星区',
			2801: '冷水江市',
			2802: '涟源市',
			2803: '双峰县',
			2804: '永丰镇',
			2805: '新化县',
			2806: '上梅镇'
		},
		'0,2613,2807': {
			2808: '吉首市',
			2809: '泸溪县',
			2810: '白沙镇',
			2811: '凤凰县',
			2812: '沱江镇',
			2813: '花垣县',
			2814: '花垣镇',
			2815: '保靖县',
			2816: '迁陵镇',
			2817: '古丈县',
			2818: '古阳镇',
			2819: '永顺县',
			2820: '灵溪镇',
			2821: '龙山县'
		},
		'0,2822': {
			2823: '广州市',
			2836: '深圳市',
			2843: '清远市',
			2857: '韶关市',
			2872: '河源市',
			2884: '梅州市',
			2899: '潮州市',
			2905: '汕头市',
			2914: '揭阳市',
			2923: '汕尾市',
			2930: '惠州市',
			2937: '东莞市',
			2938: '深圳市',
			2945: '珠海市',
			2949: '中山市',
			2950: '江门市',
			2958: '佛山市',
			2964: '肇庆市',
			2976: '云浮市',
			2985: '阳江市',
			2992: '茂名市',
			3000: '湛江市'
		},
		'0,2822,2823': {
			2824: '越秀区',
			2825: '荔湾区',
			2826: '海珠区',
			2827: '天河区',
			2828: '白云区',
			2829: '黄埔区',
			2830: '番禺区',
			2831: '花都区',
			2832: '南沙区',
			2833: '萝岗区',
			2834: '增城市',
			2835: '从化市'
		},
		'0,2822,2836': {
			2837: '福田区',
			2838: '罗湖区',
			2839: '南山区',
			2840: '宝安区',
			2841: '龙岗区',
			2842: '盐田区'
		},
		'0,2822,2843': {
			2844: '清城区',
			2845: '英德市',
			2846: '连州市',
			2847: '佛冈县',
			2848: '石角镇',
			2849: '阳山县',
			2850: '阳城镇',
			2851: '清新县',
			2852: '太和镇',
			2853: '连山壮族瑶族自治县',
			2854: '吉田镇',
			2855: '连南瑶族自治县',
			2856: '三江镇'
		},
		'0,2822,2857': {
			2858: '浈江区',
			2859: '武江区',
			2860: '曲江区',
			2861: '乐昌市',
			2862: '南雄市',
			2863: '始兴县',
			2864: '太平镇',
			2865: '仁化县',
			2866: '仁化镇',
			2867: '翁源县',
			2868: '龙仙镇',
			2869: '新丰县',
			2870: '乳源瑶族自治县',
			2871: '乳城镇'
		},
		'0,2822,2872': {
			2873: '源城区',
			2874: '紫金县',
			2875: '紫城镇',
			2876: '龙川县',
			2877: '老隆镇',
			2878: '连平县',
			2879: '元善镇',
			2880: '和平县',
			2881: '阳明镇',
			2882: '东源县',
			2883: '仙塘镇'
		},
		'0,2822,2884': {
			2885: '梅江区',
			2886: '兴宁市',
			2887: '梅县',
			2888: '程江镇',
			2889: '大埔县',
			2890: '湖寮镇',
			2891: '丰顺县',
			2892: '汤坑镇',
			2893: '五华县',
			2894: '水寨镇',
			2895: '平远县',
			2896: '大柘镇',
			2897: '蕉岭县',
			2898: '蕉城镇'
		},
		'0,2822,2899': {
			2900: '湘桥区',
			2901: '潮安县',
			2902: '庵埠镇',
			2903: '饶平县',
			2904: '黄冈镇'
		},
		'0,2822,2905': {
			2906: '金平区',
			2907: '濠江区',
			2908: '龙湖区',
			2909: '潮阳区',
			2910: '潮南区',
			2911: '澄海区',
			2912: '南澳县',
			2913: '后宅镇'
		},
		'0,2822,2914': {
			2915: '榕城区',
			2916: '普宁市',
			2917: '揭东县',
			2918: '曲溪镇',
			2919: '揭西县',
			2920: '河婆镇',
			2921: '惠来县',
			2922: '惠城镇'
		},
		'0,2822,2923': {
			2924: '城区',
			2925: '陆丰市',
			2926: '海丰县',
			2927: '海城镇',
			2928: '陆河县',
			2929: '河田镇'
		},
		'0,2822,2930': {
			2931: '惠城区',
			2932: '惠阳区',
			2933: '博罗县',
			2934: '罗阳镇',
			2935: '惠东县',
			2936: '龙门县'
		},
		'0,2822,2938': {
			2939: '福田区',
			2940: '罗湖区',
			2941: '南山区',
			2942: '宝安区',
			2943: '龙岗区',
			2944: '盐田区'
		},
		'0,2822,2945': {
			2946: '香洲区',
			2947: '斗门区',
			2948: '金湾区'
		},
		'0,2822,2950': {
			2951: '江海区',
			2952: '蓬江区',
			2953: '新会区',
			2954: '恩平市',
			2955: '台山市',
			2956: '开平市',
			2957: '鹤山市'
		},
		'0,2822,2958': {
			2959: '禅城区',
			2960: '南海区',
			2961: '顺德区',
			2962: '三水区',
			2963: '高明区'
		},
		'0,2822,2964': {
			2965: '端州区',
			2966: '鼎湖区',
			2967: '高要市',
			2968: '四会市',
			2969: '广宁县',
			2970: '南街镇',
			2971: '怀集县',
			2972: '怀城镇',
			2973: '封开县',
			2974: '江口镇',
			2975: '德庆县'
		},
		'0,2822,2976': {
			2977: '云城区',
			2978: '罗定市',
			2979: '云安县',
			2980: '六都镇',
			2981: '新兴县',
			2982: '新城镇',
			2983: '郁南县',
			2984: '都城镇'
		},
		'0,2822,2985': {
			2986: '江城区',
			2987: '阳春市',
			2988: '阳西县',
			2989: '织镇',
			2990: '阳东县',
			2991: '东城镇'
		},
		'0,2822,2992': {
			2993: '茂南区',
			2994: '茂港区',
			2995: '化州市',
			2996: '信宜市',
			2997: '高州市',
			2998: '电白县',
			2999: '水东镇'
		},
		'0,2822,3000': {
			3001: '赤坎区',
			3002: '霞山区',
			3003: '坡头区',
			3004: '麻章区',
			3005: '吴川市',
			3006: '廉江市',
			3007: '雷州市',
			3008: '遂溪县',
			3009: '遂城镇',
			3010: '徐闻县',
			3011: '撤销广州市东山区',
			3012: '芳村区',
			3013: '设立广州市南沙区',
			3014: '萝岗区'
		},
		'0,3015': {
			3016: '南宁市',
			3029: '桂林市',
			3059: '柳州市',
			3076: '梧州市',
			3087: '贵港市',
			3094: '玉林市',
			3105: '钦州市',
			3112: '北海市',
			3118: '防城港市',
			3124: '崇左市',
			3137: '百色市',
			3161: '河池市',
			3182: '来宾市',
			3193: '贺州市'
		},
		'0,3015,3016': {
			3017: '青秀区',
			3018: '兴宁区',
			3019: '江南区',
			3020: '西乡塘区',
			3021: '良庆区',
			3022: '邕宁区',
			3023: '武鸣县',
			3024: '横县',
			3025: '宾阳县',
			3026: '上林县',
			3027: '隆安县',
			3028: '马山县'
		},
		'0,3015,3029': {
			3030: '象山区',
			3031: '叠彩区',
			3032: '秀峰区',
			3033: '七星区',
			3034: '雁山区',
			3035: '阳朔县',
			3036: '阳朔镇',
			3037: '临桂县',
			3038: '临桂镇',
			3039: '灵川县',
			3040: '灵川镇',
			3041: '全州县',
			3042: '全州镇',
			3043: '兴安县',
			3044: '兴安镇',
			3045: '永福县',
			3046: '永福镇',
			3047: '灌阳县',
			3048: '灌阳镇',
			3049: '资源县',
			3050: '资源镇',
			3051: '平乐县',
			3052: '平乐镇',
			3053: '荔浦县',
			3054: '荔城镇',
			3055: '龙胜各族自治县',
			3056: '龙胜镇',
			3057: '恭城瑶族自治县',
			3058: '恭城镇'
		},
		'0,3015,3059': {
			3060: '城中区',
			3061: '鱼峰区',
			3062: '柳南区',
			3063: '柳北区',
			3064: '柳江县',
			3065: '拉堡镇',
			3066: '柳城县',
			3067: '大埔镇',
			3068: '鹿寨县',
			3069: '鹿寨镇',
			3070: '融安县',
			3071: '长安镇',
			3072: '三江侗族自治县',
			3073: '古宜镇',
			3074: '融水苗族自治县',
			3075: '融水镇'
		},
		'0,3015,3076': {
			3077: '万秀区',
			3078: '蝶山区',
			3079: '长洲区',
			3080: '岑溪市',
			3081: '苍梧县',
			3082: '龙圩镇',
			3083: '藤县',
			3084: '藤州镇',
			3085: '蒙山县',
			3086: '蒙山镇'
		},
		'0,3015,3087': {
			3088: '港北区',
			3089: '港南区',
			3090: '覃塘区',
			3091: '桂平市',
			3092: '平南县',
			3093: '平南镇'
		},
		'0,3015,3094': {
			3095: '玉州区',
			3096: '北流市',
			3097: '兴业县',
			3098: '石南镇',
			3099: '容县',
			3100: '容州镇',
			3101: '陆川县',
			3102: '陆城镇',
			3103: '博白县',
			3104: '博白镇'
		},
		'0,3015,3105': {
			3106: '钦南区',
			3107: '钦北区',
			3108: '灵山县',
			3109: '灵城镇',
			3110: '浦北县',
			3111: '小江镇'
		},
		'0,3015,3112': {
			3113: '海城区',
			3114: '银海区',
			3115: '铁山港区',
			3116: '合浦县',
			3117: '廉州镇'
		},
		'0,3015,3118': {
			3119: '港口区',
			3120: '防城区',
			3121: '东兴市',
			3122: '上思县',
			3123: '思阳镇'
		},
		'0,3015,3124': {
			3125: '江州区',
			3126: '凭祥市',
			3127: '扶绥县',
			3128: '新宁镇',
			3129: '大新县',
			3130: '桃城镇',
			3131: '天等县',
			3132: '天等镇',
			3133: '宁明县',
			3134: '城中镇',
			3135: '龙州县',
			3136: '龙州镇'
		},
		'0,3015,3137': {
			3138: '右江区',
			3139: '田阳县',
			3140: '田州镇',
			3141: '田东县',
			3142: '平马镇',
			3143: '平果县',
			3144: '马头镇',
			3145: '德保县',
			3146: '城关镇',
			3147: '靖西县',
			3148: '新靖镇',
			3149: '那坡县',
			3150: '城厢镇',
			3151: '凌云县',
			3152: '泗城镇',
			3153: '乐业县',
			3154: '同乐镇',
			3155: '西林县',
			3156: '八达镇',
			3157: '田林县',
			3158: '乐里镇',
			3159: '隆林各族自治县',
			3160: '新州镇'
		},
		'0,3015,3161': {
			3162: '金城江区',
			3163: '宜州市',
			3164: '南丹县',
			3165: '城关镇',
			3166: '天峨县',
			3167: '六排镇',
			3168: '凤山县',
			3169: '凤城镇',
			3170: '东兰县',
			3171: '东兰镇',
			3172: '巴马瑶族自治县',
			3173: '巴马镇',
			3174: '都安瑶族自治县',
			3175: '安阳镇',
			3176: '大化瑶族自治县',
			3177: '大化镇',
			3178: '罗城仫佬族自治县',
			3179: '东门镇',
			3180: '环江毛南族自治县',
			3181: '思恩镇'
		},
		'0,3015,3182': {
			3183: '兴宾区',
			3184: '合山市',
			3185: '象州县',
			3186: '象州镇',
			3187: '武宣县',
			3188: '武宣镇',
			3189: '忻城县',
			3190: '城关镇',
			3191: '金秀瑶族自治县',
			3192: '金秀镇'
		},
		'0,3015,3193': {
			3194: '八步区',
			3195: '昭平县',
			3196: '昭平镇',
			3197: '钟山县',
			3198: '钟山镇',
			3199: '富川瑶族自治县',
			3200: '富阳镇'
		},
		'0,3201': {
			3202: '海口市',
			3207: '三亚市',
			3208: '省直辖行政单位'
		},
		'0,3201,3202': {
			3203: '龙华区',
			3204: '秀英区',
			3205: '琼山区',
			3206: '美兰区'
		},
		'0,3201,3208': {
			3209: '文昌市',
			3210: '琼海市',
			3211: '万宁市',
			3212: '五指山市',
			3213: '东方市',
			3214: '儋州市',
			3215: '临高县',
			3216: '临城镇',
			3217: '澄迈县',
			3218: '金江镇',
			3219: '定安县',
			3220: '定城镇',
			3221: '屯昌县',
			3222: '屯城镇',
			3223: '昌江黎族自治县',
			3224: '石碌镇',
			3225: '白沙黎族自治县',
			3226: '牙叉镇',
			3227: '琼中黎族苗族自治县',
			3228: '营根镇',
			3229: '陵水黎族自治县',
			3230: '椰林镇',
			3231: '保亭黎族苗族自治县',
			3232: '保城镇',
			3233: '乐东黎族自治县',
			3234: '抱由镇'
		},
		'0,3235': {
			3236: '成都市',
			3261: '广元市',
			3273: '绵阳市',
			3289: '德阳市',
			3298: '南充市',
			3313: '广安市',
			3322: '遂宁市',
			3331: '内江市',
			3340: '乐山市',
			3358: '自贡市',
			3367: '泸州市',
			3379: '宜宾市',
			3399: '攀枝花市',
			3407: '巴中市',
			3415: '达州市',
			3428: '资阳市',
			3435: '眉山市',
			3447: '雅安市',
			3463: '阿坝州',
			3490: '甘孜州',
			3527: '凉山州'
		},
		'0,3235,3236': {
			3237: '青羊区',
			3238: '锦江区',
			3239: '金牛区',
			3240: '武侯区',
			3241: '成华区',
			3242: '龙泉驿区',
			3243: '青白江区',
			3244: '新都区',
			3245: '温江区',
			3246: '都江堰市',
			3247: '彭州市',
			3248: '邛崃市',
			3249: '崇州市',
			3250: '金堂县',
			3251: '赵镇',
			3252: '双流县',
			3253: '郫县',
			3254: '郫筒镇',
			3255: '大邑县',
			3256: '晋原镇',
			3257: '蒲江县',
			3258: '鹤山镇',
			3259: '新津县',
			3260: '五津镇'
		},
		'0,3235,3261': {
			3262: '市中区',
			3263: '元坝区',
			3264: '朝天区',
			3265: '旺苍县',
			3266: '东河镇',
			3267: '青川县',
			3268: '乔庄镇',
			3269: '剑阁县',
			3270: '下寺镇',
			3271: '苍溪县',
			3272: '陵江镇'
		},
		'0,3235,3273': {
			3274: '涪城区',
			3275: '游仙区',
			3276: '江油市',
			3277: '三台县',
			3278: '潼川镇',
			3279: '盐亭县',
			3280: '云溪镇',
			3281: '安县',
			3282: '花荄镇',
			3283: '梓潼县',
			3284: '文昌镇',
			3285: '北川羌族自治县',
			3286: '曲山镇',
			3287: '平武县',
			3288: '龙安镇'
		},
		'0,3235,3289': {
			3290: '旌阳区',
			3291: '什邡市',
			3292: '广汉市',
			3293: '绵竹市',
			3294: '罗江县',
			3295: '罗江镇',
			3296: '中江县',
			3297: '凯江镇'
		},
		'0,3235,3298': {
			3299: '顺庆区',
			3300: '高坪区',
			3301: '嘉陵区',
			3302: '阆中市',
			3303: '南部县',
			3304: '南隆镇',
			3305: '营山县',
			3306: '朗池镇',
			3307: '蓬安县',
			3308: '周口镇',
			3309: '仪陇县',
			3310: '新政镇',
			3311: '西充县',
			3312: '晋城镇'
		},
		'0,3235,3313': {
			3314: '广安区',
			3315: '华蓥市',
			3316: '岳池县',
			3317: '九龙镇',
			3318: '武胜县',
			3319: '沿口镇',
			3320: '邻水县',
			3321: '鼎屏镇'
		},
		'0,3235,3322': {
			3323: '船山区',
			3324: '安居区',
			3325: '蓬溪县',
			3326: '赤城镇',
			3327: '射洪县',
			3328: '太和镇',
			3329: '大英县',
			3330: '蓬莱镇'
		},
		'0,3235,3331': {
			3332: '市中区',
			3333: '东兴区',
			3334: '威远县',
			3335: '严陵镇',
			3336: '资中县',
			3337: '重龙镇',
			3338: '隆昌县',
			3339: '金鹅镇'
		},
		'0,3235,3340': {
			3341: '市中区',
			3342: '沙湾区',
			3343: '五通桥区',
			3344: '金口河区',
			3345: '峨眉山市',
			3346: '犍为县',
			3347: '玉津镇',
			3348: '井研县',
			3349: '研城镇',
			3350: '夹江县',
			3351: '漹城镇',
			3352: '沐川县',
			3353: '沐溪镇',
			3354: '峨边彝族自治县',
			3355: '沙坪镇',
			3356: '马边彝族自治县',
			3357: '民建镇'
		},
		'0,3235,3358': {
			3359: '自流井区',
			3360: '大安区',
			3361: '贡井区',
			3362: '沿滩区',
			3363: '荣县',
			3364: '旭阳镇',
			3365: '富顺县',
			3366: '富世镇'
		},
		'0,3235,3367': {
			3368: '江阳区',
			3369: '纳溪区',
			3370: '龙马潭区',
			3371: '泸县',
			3372: '福集镇',
			3373: '合江县',
			3374: '合江镇',
			3375: '叙永县',
			3376: '叙永镇',
			3377: '古蔺县',
			3378: '古蔺镇'
		},
		'0,3235,3379': {
			3380: '翠屏区',
			3381: '宜宾县',
			3382: '柏溪镇',
			3383: '南溪县',
			3384: '南溪镇',
			3385: '江安县',
			3386: '江安镇',
			3387: '长宁县',
			3388: '长宁镇',
			3389: '高县',
			3390: '庆符镇',
			3391: '筠连县',
			3392: '筠连镇',
			3393: '珙县',
			3394: '巡场镇',
			3395: '兴文县',
			3396: '中城镇',
			3397: '屏山县',
			3398: '屏山镇'
		},
		'0,3235,3399': {
			3400: '东区',
			3401: '西区',
			3402: '仁和区',
			3403: '米易县',
			3404: '攀莲镇',
			3405: '盐边县',
			3406: '桐子林镇'
		},
		'0,3235,3407': {
			3408: '巴州区',
			3409: '通江县',
			3410: '诺江镇',
			3411: '南江县',
			3412: '南江镇',
			3413: '平昌县',
			3414: '江口镇'
		},
		'0,3235,3415': {
			3416: '通川区',
			3417: '万源市',
			3418: '达县',
			3419: '南外镇',
			3420: '宣汉县',
			3421: '东乡镇',
			3422: '开江县',
			3423: '新宁镇',
			3424: '大竹县',
			3425: '竹阳镇',
			3426: '渠县',
			3427: '渠江镇'
		},
		'0,3235,3428': {
			3429: '雁江区',
			3430: '简阳市',
			3431: '乐至县',
			3432: '天池镇',
			3433: '安岳县',
			3434: '岳阳镇'
		},
		'0,3235,3435': {
			3436: '东坡区',
			3437: '仁寿县',
			3438: '文林镇',
			3439: '彭山县',
			3440: '凤鸣镇',
			3441: '洪雅县',
			3442: '洪川镇',
			3443: '丹棱县',
			3444: '丹棱镇',
			3445: '青神县',
			3446: '城厢镇'
		},
		'0,3235,3447': {
			3448: '雨城区',
			3449: '名山县',
			3450: '蒙阳镇',
			3451: '荥经县',
			3452: '严道镇',
			3453: '汉源县',
			3454: '富林镇',
			3455: '石棉县',
			3456: '新棉镇',
			3457: '天全县',
			3458: '城厢镇',
			3459: '芦山县',
			3460: '芦阳镇',
			3461: '宝兴县',
			3462: '穆坪镇'
		},
		'0,3235,3463': {
			3464: '马尔康县',
			3465: '马尔康镇',
			3466: '汶川县',
			3467: '威州镇',
			3468: '理县',
			3469: '杂谷脑镇',
			3470: '茂县',
			3471: '凤仪镇',
			3472: '松潘县',
			3473: '进安镇',
			3474: '九寨沟县',
			3475: '永乐镇',
			3476: '金川县',
			3477: '金川镇',
			3478: '小金县',
			3479: '美兴镇',
			3480: '黑水县',
			3481: '芦花镇',
			3482: '壤塘县',
			3483: '壤柯镇',
			3484: '阿坝县',
			3485: '阿坝镇',
			3486: '若尔盖县',
			3487: '达扎寺镇',
			3488: '红原县',
			3489: '邛溪镇'
		},
		'0,3235,3490': {
			3491: '康定县',
			3492: '炉城镇',
			3493: '泸定县',
			3494: '泸桥镇',
			3495: '丹巴县',
			3496: '章谷镇',
			3497: '九龙县',
			3498: '呷尔镇',
			3499: '雅江县',
			3500: '河口镇',
			3501: '道孚县',
			3502: '鲜水镇',
			3503: '炉霍县',
			3504: '新都镇',
			3505: '甘孜县',
			3506: '甘孜镇',
			3507: '新龙县',
			3508: '茹龙镇',
			3509: '德格县',
			3510: '更庆镇',
			3511: '白玉县',
			3512: '建设镇',
			3513: '石渠县',
			3514: '尼呷镇',
			3515: '色达县',
			3516: '色柯镇',
			3517: '理塘县',
			3518: '高城镇',
			3519: '巴塘县',
			3520: '夏邛镇',
			3521: '乡城县',
			3522: '桑披镇',
			3523: '稻城县',
			3524: '金珠镇',
			3525: '得荣县',
			3526: '松麦镇'
		},
		'0,3235,3527': {
			3528: '西昌市',
			3529: '盐源县',
			3530: '盐井镇',
			3531: '德昌县',
			3532: '德州镇',
			3533: '会理县',
			3534: '城关镇',
			3535: '会东县',
			3536: '会东镇',
			3537: '宁南县',
			3538: '披砂镇',
			3539: '普格县',
			3540: '普基镇',
			3541: '布拖县',
			3542: '特木里镇',
			3543: '金阳县',
			3544: '天地坝镇',
			3545: '昭觉县',
			3546: '新城镇',
			3547: '喜德县',
			3548: '光明镇',
			3549: '冕宁县',
			3550: '城厢镇',
			3551: '越西县',
			3552: '越城镇',
			3553: '甘洛县',
			3554: '新市坝镇',
			3555: '美姑县',
			3556: '巴普镇',
			3557: '雷波县',
			3558: '锦城镇',
			3559: '木里藏族自治县',
			3560: '乔瓦镇'
		},
		'0,3561': {
			3562: '贵阳市',
			3576: '六盘水市',
			3583: '遵义市',
			3608: '安顺市',
			3620: '毕节地区',
			3636: '铜仁地区',
			3656: '黔东南州',
			3688: '黔南州',
			3711: '黔西南州'
		},
		'0,3561,3562': {
			3563: '乌当区',
			3564: '南明区',
			3565: '云岩区',
			3566: '花溪区',
			3567: '白云区',
			3568: '小河区',
			3569: '清镇市',
			3570: '开阳县',
			3571: '城关镇',
			3572: '修文县',
			3573: '龙场镇',
			3574: '息烽县',
			3575: '永靖镇'
		},
		'0,3561,3576': {
			3577: '钟山区',
			3578: '盘县',
			3579: '红果镇',
			3580: '六枝特区',
			3581: '平寨镇',
			3582: '水城县'
		},
		'0,3561,3583': {
			3584: '红花岗区',
			3585: '汇川区',
			3586: '赤水市',
			3587: '仁怀市',
			3588: '遵义县',
			3589: '南白镇',
			3590: '桐梓县',
			3591: '娄山关镇',
			3592: '绥阳县',
			3593: '洋川镇',
			3594: '正安县',
			3595: '凤仪镇',
			3596: '凤冈县',
			3597: '龙泉镇',
			3598: '湄潭县',
			3599: '湄江镇',
			3600: '余庆县',
			3601: '白泥镇',
			3602: '习水县',
			3603: '东皇镇',
			3604: '道真仡佬族苗族自治县',
			3605: '玉溪镇',
			3606: '务川仡佬族苗族自治县',
			3607: '都濡镇'
		},
		'0,3561,3608': {
			3609: '西秀区',
			3610: '平坝县',
			3611: '城关镇',
			3612: '普定县',
			3613: '城关镇',
			3614: '关岭布依族苗族自治县',
			3615: '关索镇',
			3616: '镇宁布依族苗族自治县',
			3617: '城关镇',
			3618: '紫云苗族布依族自治县',
			3619: '松山镇'
		},
		'0,3561,3620': {
			3621: '毕节市',
			3622: '大方县',
			3623: '大方镇',
			3624: '黔西县',
			3625: '城关镇',
			3626: '金沙县',
			3627: '城关镇',
			3628: '织金县',
			3629: '城关镇',
			3630: '纳雍县',
			3631: '雍熙镇',
			3632: '赫章县',
			3633: '城关镇',
			3634: '威宁彝族回族苗族自治县',
			3635: '草海镇'
		},
		'0,3561,3636': {
			3637: '铜仁市',
			3638: '江口县',
			3639: '双江镇',
			3640: '石阡县',
			3641: '汤山镇',
			3642: '思南县',
			3643: '思唐镇',
			3644: '德江县',
			3645: '青龙镇',
			3646: '玉屏侗族自治县',
			3647: '平溪镇',
			3648: '印江土家族苗族自治县',
			3649: '峨岭镇',
			3650: '沿河土家族自治县',
			3651: '和平镇',
			3652: '松桃苗族自治县',
			3653: '蓼皋镇',
			3654: '万山特区',
			3655: '万山镇'
		},
		'0,3561,3656': {
			3657: '凯里市',
			3658: '黄平县',
			3659: '新州镇',
			3660: '施秉县',
			3661: '城关镇',
			3662: '三穗县',
			3663: '八弓镇',
			3664: '镇远县',
			3665: '阳镇',
			3666: '岑巩县',
			3667: '思旸镇',
			3668: '天柱县',
			3669: '凤城镇',
			3670: '锦屏县',
			3671: '三江镇',
			3672: '剑河县',
			3673: '革东镇',
			3674: '台江县',
			3675: '台拱镇',
			3676: '黎平县',
			3677: '德凤镇',
			3678: '榕江县',
			3679: '古州镇',
			3680: '从江县',
			3681: '丙妹镇',
			3682: '雷山县',
			3683: '丹江镇',
			3684: '麻江县',
			3685: '杏山镇',
			3686: '丹寨县',
			3687: '龙泉镇'
		},
		'0,3561,3688': {
			3689: '都匀市',
			3690: '福泉市',
			3691: '荔波县',
			3692: '玉屏镇',
			3693: '贵定县',
			3694: '城关镇',
			3695: '瓮安县',
			3696: '雍阳镇',
			3697: '独山县',
			3698: '城关镇',
			3699: '平塘县',
			3700: '平湖镇',
			3701: '罗甸县',
			3702: '龙坪镇',
			3703: '长顺县',
			3704: '长寨镇',
			3705: '龙里县',
			3706: '龙山镇',
			3707: '惠水县',
			3708: '和平镇',
			3709: '三都水族自治县',
			3710: '三合镇'
		},
		'0,3561,3711': {
			3712: '兴义市',
			3713: '兴仁县',
			3714: '城关镇',
			3715: '普安县',
			3716: '盘水镇',
			3717: '晴隆县',
			3718: '莲城镇',
			3719: '贞丰县',
			3720: '珉谷镇',
			3721: '望谟县',
			3722: '复兴镇',
			3723: '册亨县',
			3724: '者楼镇',
			3725: '安龙县',
			3726: '新安镇',
			3727: '剑河县人民政府驻地由柳川镇迁至革东镇'
		},
		'0,3728': {
			3729: '昆明市',
			3752: '曲靖市',
			3769: '玉溪市',
			3787: '保山市',
			3797: '昭通市',
			3819: '丽江市',
			3829: '思茅市',
			3849: '临沧市',
			3865: '德宏州',
			3874: '怒江州',
			3884: '迪庆州',
			3891: '大理州',
			3915: '楚雄州',
			3935: '红河州',
			3960: '文山州',
			3977: '西双版纳州'
		},
		'0,3728,3729': {
			3730: '盘龙区',
			3731: '五华区',
			3732: '官渡区',
			3733: '西山区',
			3734: '东川区',
			3735: '安宁市',
			3736: '呈贡县',
			3737: '龙城镇',
			3738: '晋宁县',
			3739: '昆阳镇',
			3740: '富民县',
			3741: '永定镇',
			3742: '宜良县',
			3743: '匡远镇',
			3744: '嵩明县',
			3745: '嵩阳镇',
			3746: '石林彝族自治县',
			3747: '鹿阜镇',
			3748: '禄劝彝族苗族自治县',
			3749: '屏山镇',
			3750: '寻甸回族彝族自治县',
			3751: '仁德镇'
		},
		'0,3728,3752': {
			3753: '麒麟区',
			3754: '宣威市',
			3755: '马龙县',
			3756: '通泉镇',
			3757: '沾益县',
			3758: '西平镇',
			3759: '富源县',
			3760: '中安镇',
			3761: '罗平县',
			3762: '罗雄镇',
			3763: '师宗县',
			3764: '丹凤镇',
			3765: '陆良县',
			3766: '中枢镇',
			3767: '会泽县',
			3768: '金钟镇'
		},
		'0,3728,3769': {
			3770: '红塔区',
			3771: '江川县',
			3772: '大街镇',
			3773: '澄江县',
			3774: '凤麓镇',
			3775: '通海县',
			3776: '秀山镇',
			3777: '华宁县',
			3778: '宁州镇',
			3779: '易门县',
			3780: '龙泉镇',
			3781: '峨山彝族自治县',
			3782: '双江镇',
			3783: '新平彝族傣族自治县',
			3784: '桂山镇',
			3785: '元江哈尼族彝族傣族自治县',
			3786: '澧江镇'
		},
		'0,3728,3787': {
			3788: '隆阳区',
			3789: '施甸县',
			3790: '甸阳镇',
			3791: '腾冲县',
			3792: '腾越镇',
			3793: '龙陵县',
			3794: '龙山镇',
			3795: '昌宁县',
			3796: '田园镇'
		},
		'0,3728,3797': {
			3798: '昭阳区',
			3799: '鲁甸县',
			3800: '文屏镇',
			3801: '巧家县',
			3802: '新华镇',
			3803: '盐津县',
			3804: '盐井镇',
			3805: '大关县',
			3806: '翠华镇',
			3807: '永善县',
			3808: '溪落渡镇',
			3809: '绥江县',
			3810: '中城镇',
			3811: '镇雄县',
			3812: '乌峰镇',
			3813: '彝良县',
			3814: '角奎镇',
			3815: '威信县',
			3816: '扎西镇',
			3817: '水富县',
			3818: '向家坝镇'
		},
		'0,3728,3819': {
			3820: '古城区',
			3821: '永胜县',
			3822: '永北镇',
			3823: '华坪县',
			3824: '中心镇',
			3825: '玉龙纳西族自治县',
			3826: '黄山镇',
			3827: '宁蒗彝族自治县',
			3828: '大兴镇'
		},
		'0,3728,3829': {
			3830: '翠云区',
			3831: '普洱哈尼族彝族自治县',
			3832: '宁洱镇',
			3833: '墨江哈尼族自治县',
			3834: '联珠镇',
			3835: '景东彝族自治县',
			3836: '锦屏镇',
			3837: '景谷傣族彝族自治县',
			3838: '威远镇',
			3839: '镇沅彝族哈尼族拉祜族自治县',
			3840: '恩乐镇',
			3841: '江城哈尼族彝族自治县',
			3842: '勐烈镇',
			3843: '孟连傣族拉祜族佤族自治县',
			3844: '娜允镇',
			3845: '澜沧拉祜族自治县',
			3846: '勐朗镇',
			3847: '西盟佤族自治县',
			3848: '勐梭镇'
		},
		'0,3728,3849': {
			3850: '临翔区',
			3851: '凤庆县',
			3852: '凤山镇',
			3853: '云县',
			3854: '爱华镇',
			3855: '永德县',
			3856: '德党镇',
			3857: '镇康县',
			3858: '南伞镇',
			3859: '双江拉祜族佤族布朗族傣族自治县',
			3860: '勐勐镇',
			3861: '耿马傣族佤族自治县',
			3862: '耿马镇',
			3863: '沧源佤族自治县',
			3864: '勐董镇'
		},
		'0,3728,3865': {
			3866: '潞西市',
			3867: '瑞丽市',
			3868: '梁河县',
			3869: '遮岛镇',
			3870: '盈江县',
			3871: '平原镇',
			3872: '陇川县',
			3873: '章凤镇'
		},
		'0,3728,3874': {
			3875: '泸水县六库镇',
			3876: '泸水县',
			3877: '六库镇',
			3878: '福贡县',
			3879: '上帕镇',
			3880: '贡山独龙族怒族自治县',
			3881: '茨开镇',
			3882: '兰坪白族普米族自治县',
			3883: '金顶镇'
		},
		'0,3728,3884': {
			3885: '香格里拉县',
			3886: '建塘镇',
			3887: '德钦县',
			3888: '升平镇',
			3889: '维西傈僳族自治县',
			3890: '保和镇'
		},
		'0,3728,3891': {
			3892: '大理市',
			3893: '祥云县',
			3894: '祥城镇',
			3895: '宾川县',
			3896: '金牛镇',
			3897: '弥渡县',
			3898: '弥城镇',
			3899: '永平县',
			3900: '博南镇',
			3901: '云龙县',
			3902: '诺邓镇',
			3903: '洱源县',
			3904: '茈碧湖镇',
			3905: '剑川县',
			3906: '金华镇',
			3907: '鹤庆县',
			3908: '云鹤镇',
			3909: '漾濞彝族自治县',
			3910: '苍山西镇',
			3911: '南涧彝族自治县',
			3912: '南涧镇',
			3913: '巍山彝族回族自治县',
			3914: '南诏镇'
		},
		'0,3728,3915': {
			3916: '楚雄市',
			3917: '双柏县',
			3918: '妥甸镇',
			3919: '牟定县',
			3920: '共和镇',
			3921: '南华县',
			3922: '龙川镇',
			3923: '姚安县',
			3924: '栋川镇',
			3925: '大姚县',
			3926: '金碧镇',
			3927: '永仁县',
			3928: '永定镇',
			3929: '元谋县',
			3930: '元马镇',
			3931: '武定县',
			3932: '狮山镇',
			3933: '禄丰县',
			3934: '金山镇'
		},
		'0,3728,3935': {
			3936: '蒙自县',
			3937: '文澜镇',
			3938: '个旧市',
			3939: '开远市',
			3940: '绿春县',
			3941: '大兴镇',
			3942: '建水县',
			3943: '临安镇',
			3944: '石屏县',
			3945: '异龙镇',
			3946: '弥勒县',
			3947: '弥阳镇',
			3948: '泸西县',
			3949: '中枢镇',
			3950: '元阳县',
			3951: '南沙镇',
			3952: '红河县',
			3953: '迤萨镇',
			3954: '金平苗族瑶族傣族自治县',
			3955: '金河镇',
			3956: '河口瑶族自治县',
			3957: '河口镇',
			3958: '屏边苗族自治县',
			3959: '玉屏镇'
		},
		'0,3728,3960': {
			3961: '文山县',
			3962: '开化镇',
			3963: '砚山县',
			3964: '江那镇',
			3965: '西畴县',
			3966: '西洒镇',
			3967: '麻栗坡县',
			3968: '麻栗镇',
			3969: '马关县',
			3970: '马白镇',
			3971: '丘北县',
			3972: '锦屏镇',
			3973: '广南县',
			3974: '莲城镇',
			3975: '富宁县',
			3976: '新华镇'
		},
		'0,3728,3977': {
			3978: '景洪市',
			3979: '勐海县',
			3980: '勐海镇',
			3981: '勐腊县',
			3982: '勐腊镇'
		},
		'0,3983': {
			3984: '拉萨市',
			4000: '那曲地区',
			4021: '昌都地区',
			4044: '林芝地区',
			4059: '山南地区',
			4084: '日喀则地区',
			4120: '阿里地区'
		},
		'0,3983,3984': {
			3985: '城关区',
			3986: '林周县',
			3987: '甘丹曲果镇',
			3988: '当雄县',
			3989: '当曲卡镇',
			3990: '尼木县',
			3991: '塔荣镇',
			3992: '曲水县',
			3993: '曲水镇',
			3994: '堆龙德庆县',
			3995: '东嘎镇',
			3996: '达孜县',
			3997: '德庆镇',
			3998: '墨竹工卡县',
			3999: '工卡镇'
		},
		'0,3983,4000': {
			4001: '那曲县',
			4002: '那曲镇',
			4003: '嘉黎县',
			4004: '阿扎镇',
			4005: '比如县',
			4006: '比如镇',
			4007: '聂荣县',
			4008: '聂荣镇',
			4009: '安多县',
			4010: '帕那镇',
			4011: '申扎县',
			4012: '申扎镇',
			4013: '索县',
			4014: '亚拉镇',
			4015: '班戈县',
			4016: '普保镇',
			4017: '巴青县',
			4018: '拉西镇',
			4019: '尼玛县',
			4020: '尼玛镇'
		},
		'0,3983,4021': {
			4022: '昌都县',
			4023: '城关镇',
			4024: '江达县',
			4025: '江达镇',
			4026: '贡觉县',
			4027: '莫洛镇',
			4028: '类乌齐县',
			4029: '桑多镇',
			4030: '丁青县',
			4031: '丁青镇',
			4032: '察雅县',
			4033: '烟多镇',
			4034: '八宿县',
			4035: '白玛镇',
			4036: '左贡县',
			4037: '旺达镇',
			4038: '芒康县',
			4039: '嘎托镇',
			4040: '洛隆县',
			4041: '孜托镇',
			4042: '边坝县',
			4043: '草卡镇'
		},
		'0,3983,4044': {
			4045: '林芝县',
			4046: '八一镇',
			4047: '工布江达县',
			4048: '工布江达镇',
			4049: '米林县',
			4050: '米林镇',
			4051: '墨脱县',
			4052: '墨脱镇',
			4053: '波密县',
			4054: '扎木镇',
			4055: '察隅县',
			4056: '竹瓦根镇',
			4057: '朗县',
			4058: '朗镇'
		},
		'0,3983,4059': {
			4060: '乃东县',
			4061: '泽当镇',
			4062: '扎囊县',
			4063: '扎塘镇',
			4064: '贡嘎县',
			4065: '吉雄镇',
			4066: '桑日县',
			4067: '桑日镇',
			4068: '琼结县',
			4069: '琼结镇',
			4070: '曲松县',
			4071: '曲松镇',
			4072: '措美县',
			4073: '措美镇',
			4074: '洛扎县',
			4075: '洛扎镇',
			4076: '加查县',
			4077: '安绕镇',
			4078: '隆子县',
			4079: '隆子镇',
			4080: '错那县',
			4081: '错那镇',
			4082: '浪卡子县',
			4083: '浪卡子镇'
		},
		'0,3983,4084': {
			4085: '日喀则市',
			4086: '南木林县',
			4087: '南木林镇',
			4088: '江孜县',
			4089: '江孜镇',
			4090: '定日县',
			4091: '协格尔镇',
			4092: '萨迦县',
			4093: '萨迦镇',
			4094: '拉孜县',
			4095: '曲下镇',
			4096: '昂仁县',
			4097: '卡嘎镇',
			4098: '谢通门县',
			4099: '卡嘎镇',
			4100: '白朗县',
			4101: '洛江镇',
			4102: '仁布县',
			4103: '德吉林镇',
			4104: '康马县',
			4105: '康马镇',
			4106: '定结县',
			4107: '江嘎镇',
			4108: '仲巴县',
			4109: '拉让乡',
			4110: '亚东县',
			4111: '下司马镇',
			4112: '吉隆县',
			4113: '宗嘎镇',
			4114: '聂拉木县',
			4115: '聂拉木镇',
			4116: '萨嘎县',
			4117: '加加镇',
			4118: '岗巴县',
			4119: '岗巴镇'
		},
		'0,3983,4120': {
			4121: '噶尔县',
			4122: '狮泉河镇',
			4123: '普兰县',
			4124: '普兰镇',
			4125: '札达县',
			4126: '托林镇',
			4127: '日土县',
			4128: '日土镇',
			4129: '革吉县',
			4130: '革吉镇',
			4131: '改则县',
			4132: '改则镇',
			4133: '措勤县',
			4134: '措勤镇',
			4135: '林芝县人民政府驻地由林芝镇迁至八一镇'
		},
		'0,4136': {
			4137: '西安市',
			4155: '延安市',
			4181: '铜川市',
			4187: '渭南市',
			4207: '咸阳市',
			4232: '宝鸡市',
			4254: '汉中市',
			4276: '榆林市',
			4300: '安康市',
			4320: '商洛市'
		},
		'0,4136,4137': {
			4138: '莲湖区',
			4139: '新城区',
			4140: '碑林区',
			4141: '灞桥区',
			4142: '未央区',
			4143: '雁塔区',
			4144: '阎良区',
			4145: '临潼区',
			4146: '长安区',
			4147: '蓝田县',
			4148: '蓝关镇',
			4149: '周至县',
			4150: '二曲镇',
			4151: '户县',
			4152: '甘亭镇',
			4153: '高陵县',
			4154: '鹿苑镇'
		},
		'0,4136,4155': {
			4156: '宝塔区',
			4157: '延长县',
			4158: '七里村镇',
			4159: '延川县',
			4160: '延川镇',
			4161: '子长县',
			4162: '瓦窑堡镇',
			4163: '安塞县',
			4164: '真武洞镇',
			4165: '志丹县',
			4166: '保安镇',
			4167: '吴起县',
			4168: '吴旗镇',
			4169: '甘泉县',
			4170: '城关镇',
			4171: '富县',
			4172: '富城镇',
			4173: '洛川县',
			4174: '凤栖镇',
			4175: '宜川县',
			4176: '丹州镇',
			4177: '黄龙县',
			4178: '石堡镇',
			4179: '黄陵县',
			4180: '桥山镇'
		},
		'0,4136,4181': {
			4182: '耀州区',
			4183: '王益区',
			4184: '印台区',
			4185: '宜君县',
			4186: '城关镇'
		},
		'0,4136,4187': {
			4188: '临渭区',
			4189: '华阴市',
			4190: '韩城市',
			4191: '华县',
			4192: '华州镇',
			4193: '潼关县',
			4194: '城关镇',
			4195: '大荔县',
			4196: '城关镇',
			4197: '蒲城县',
			4198: '城关镇',
			4199: '澄城县',
			4200: '城关镇',
			4201: '白水县',
			4202: '城关镇',
			4203: '合阳县',
			4204: '城关镇',
			4205: '富平县',
			4206: '窦村镇'
		},
		'0,4136,4207': {
			4208: '秦都区',
			4209: '杨陵区',
			4210: '渭城区',
			4211: '兴平市',
			4212: '三原县',
			4213: '城关镇',
			4214: '泾阳县',
			4215: '泾干镇',
			4216: '乾县',
			4217: '城关镇',
			4218: '礼泉县',
			4219: '城关镇',
			4220: '永寿县',
			4221: '监军镇',
			4222: '彬县',
			4223: '城关镇',
			4224: '长武县',
			4225: '昭仁镇',
			4226: '旬邑县',
			4227: '城关镇',
			4228: '淳化县',
			4229: '城关镇',
			4230: '武功县',
			4231: '普集镇'
		},
		'0,4136,4232': {
			4233: '渭滨区',
			4234: '金台区',
			4235: '陈仓区',
			4236: '凤翔县',
			4237: '城关镇',
			4238: '岐山县',
			4239: '凤鸣镇',
			4240: '扶风县',
			4241: '城关镇',
			4242: '眉县',
			4243: '首善镇',
			4244: '陇县',
			4245: '城关镇',
			4246: '千阳县',
			4247: '城关镇',
			4248: '麟游县',
			4249: '九成宫镇',
			4250: '凤县',
			4251: '双石铺镇',
			4252: '太白县',
			4253: '嘴头镇'
		},
		'0,4136,4254': {
			4255: '汉台区',
			4256: '南郑县',
			4257: '城关镇',
			4258: '城固县',
			4259: '博望镇',
			4260: '洋县',
			4261: '洋州镇',
			4262: '西乡县',
			4263: '城关镇',
			4264: '勉县',
			4265: '勉阳镇',
			4266: '宁强县',
			4267: '汉源镇',
			4268: '略阳县',
			4269: '城关镇',
			4270: '镇巴县',
			4271: '泾洋镇',
			4272: '留坝县',
			4273: '城关镇',
			4274: '佛坪县',
			4275: '袁家庄镇'
		},
		'0,4136,4276': {
			4277: '榆阳区',
			4278: '神木县',
			4279: '神木镇',
			4280: '府谷县',
			4281: '府谷镇',
			4282: '横山县',
			4283: '横山镇',
			4284: '靖边县',
			4285: '张家畔镇',
			4286: '定边县',
			4287: '定边镇',
			4288: '绥德县',
			4289: '名州镇',
			4290: '米脂县',
			4291: '银州镇',
			4292: '佳县',
			4293: '佳芦镇',
			4294: '吴堡县',
			4295: '宋家川镇',
			4296: '清涧县',
			4297: '宽洲镇',
			4298: '子洲县',
			4299: '双湖峪镇'
		},
		'0,4136,4300': {
			4301: '汉滨区',
			4302: '汉阴县',
			4303: '城关镇',
			4304: '石泉县',
			4305: '城关镇',
			4306: '宁陕县',
			4307: '城关镇',
			4308: '紫阳县',
			4309: '城关镇',
			4310: '岚皋县',
			4311: '城关镇',
			4312: '平利县',
			4313: '城关镇',
			4314: '镇坪县',
			4315: '城关镇',
			4316: '旬阳县',
			4317: '城关镇',
			4318: '白河县',
			4319: '城关镇'
		},
		'0,4136,4320': {
			4321: '商州区',
			4322: '洛南县',
			4323: '城关镇',
			4324: '丹凤县',
			4325: '龙驹寨镇',
			4326: '商南县',
			4327: '城关镇',
			4328: '山阳县',
			4329: '城关镇',
			4330: '镇安县',
			4331: '永乐镇',
			4332: '柞水县',
			4333: '乾佑镇'
		},
		'0,4334': {
			4335: '兰州市',
			4347: '嘉峪关市',
			4352: '白银市',
			4361: '天水市',
			4374: '武威市',
			4382: '酒泉市',
			4394: '张掖市',
			4406: '庆阳市',
			4422: '平凉市',
			4436: '定西市',
			4450: '陇南市',
			4467: '临夏州',
			4483: '甘南州'
		},
		'0,4334,4335': {
			4336: '城关区',
			4337: '七里河区',
			4338: '西固区',
			4339: '安宁区',
			4340: '红古区',
			4341: '永登县',
			4342: '城关镇',
			4343: '皋兰县',
			4344: '石洞镇',
			4345: '榆中县',
			4346: '城关镇'
		},
		'0,4334,4347': {
			4348: '金昌市',
			4349: '金川区',
			4350: '永昌县',
			4351: '城关镇'
		},
		'0,4334,4352': {
			4353: '白银区',
			4354: '平川区',
			4355: '靖远县',
			4356: '乌兰镇',
			4357: '会宁县',
			4358: '会师镇',
			4359: '景泰县',
			4360: '一条山镇'
		},
		'0,4334,4361': {
			4362: '秦州区',
			4363: '麦积区',
			4364: '清水县',
			4365: '永清镇',
			4366: '秦安县',
			4367: '兴国镇',
			4368: '甘谷县',
			4369: '大像山镇',
			4370: '武山县',
			4371: '城关镇',
			4372: '张家川回族自治县',
			4373: '张家川镇'
		},
		'0,4334,4374': {
			4375: '凉州区',
			4376: '民勤县',
			4377: '城关镇',
			4378: '古浪县',
			4379: '古浪镇',
			4380: '天祝藏族自治县',
			4381: '华藏寺镇'
		},
		'0,4334,4382': {
			4383: '肃州区',
			4384: '玉门市',
			4385: '敦煌市',
			4386: '金塔县',
			4387: '金塔镇',
			4388: '安西县',
			4389: '渊泉镇',
			4390: '肃北蒙古族自治县',
			4391: '党城湾镇',
			4392: '阿克塞哈萨克族自治县',
			4393: '红柳湾镇'
		},
		'0,4334,4394': {
			4395: '甘州区',
			4396: '民乐县',
			4397: '洪水镇',
			4398: '临泽县',
			4399: '沙河镇',
			4400: '高台县',
			4401: '城关镇',
			4402: '山丹县',
			4403: '清泉镇',
			4404: '肃南裕固族自治县',
			4405: '红湾寺镇'
		},
		'0,4334,4406': {
			4407: '西峰区',
			4408: '庆城县',
			4409: '庆城镇',
			4410: '环县',
			4411: '环城镇',
			4412: '华池县',
			4413: '柔远镇',
			4414: '合水县',
			4415: '西华池镇',
			4416: '正宁县',
			4417: '山河镇',
			4418: '宁县',
			4419: '新宁镇',
			4420: '镇原县',
			4421: '城关镇'
		},
		'0,4334,4422': {
			4423: '崆峒区',
			4424: '泾川县',
			4425: '城关镇',
			4426: '灵台县',
			4427: '中台镇',
			4428: '崇信县',
			4429: '锦屏镇',
			4430: '华亭县',
			4431: '东华镇',
			4432: '庄浪县',
			4433: '水洛镇',
			4434: '静宁县',
			4435: '城关镇'
		},
		'0,4334,4436': {
			4437: '安定区',
			4438: '通渭县',
			4439: '平襄镇',
			4440: '临洮县',
			4441: '洮阳镇',
			4442: '漳县',
			4443: '武阳镇',
			4444: '岷县',
			4445: '岷阳镇',
			4446: '渭源县',
			4447: '清源镇',
			4448: '陇西县',
			4449: '巩昌镇'
		},
		'0,4334,4450': {
			4451: '武都区',
			4452: '成县',
			4453: '城关镇',
			4454: '宕昌县',
			4455: '城关镇',
			4456: '康县',
			4457: '文县',
			4458: '城关镇',
			4459: '西和县',
			4460: '汉源镇',
			4461: '礼县',
			4462: '城关镇',
			4463: '两当县',
			4464: '城关镇',
			4465: '徽县',
			4466: '城关镇'
		},
		'0,4334,4467': {
			4468: '临夏市',
			4469: '临夏县',
			4470: '韩集镇',
			4471: '康乐县',
			4472: '附城镇',
			4473: '永靖县',
			4474: '刘家峡镇',
			4475: '广河县',
			4476: '城关镇',
			4477: '和政县',
			4478: '城关镇',
			4479: '东乡族自治县',
			4480: '锁南坝镇',
			4481: '积石山保安族东乡族撒拉族自治县',
			4482: '吹麻滩镇'
		},
		'0,4334,4483': {
			4484: '合作市',
			4485: '临潭县',
			4486: '城关镇',
			4487: '卓尼县',
			4488: '柳林镇',
			4489: '舟曲县',
			4490: '城关镇',
			4491: '迭部县',
			4492: '电尕镇',
			4493: '玛曲县',
			4494: '尼玛镇',
			4495: '碌曲县',
			4496: '玛艾镇',
			4497: '夏河县',
			4498: '拉卜楞镇'
		},
		'0,4499': {
			4500: '西宁市',
			4511: '海东地区',
			4524: '海北州',
			4533: '海南州',
			4544: '黄南州',
			4553: '果洛州',
			4566: '玉树州',
			4579: '海西州'
		},
		'0,4499,4500': {
			4501: '城中区',
			4502: '城东区',
			4503: '城西区',
			4504: '城北区',
			4505: '大通回族土族自治县',
			4506: '桥头镇',
			4507: '湟源县',
			4508: '城关镇',
			4509: '湟中县',
			4510: '鲁沙尔镇'
		},
		'0,4499,4511': {
			4512: '平安县',
			4513: '平安镇',
			4514: '乐都县',
			4515: '碾伯镇',
			4516: '民和回族土族自治县',
			4517: '川口镇',
			4518: '互助土族自治县',
			4519: '威远镇',
			4520: '化隆回族自治县',
			4521: '巴燕镇',
			4522: '循化撒拉族自治县',
			4523: '积石镇'
		},
		'0,4499,4524': {
			4525: '海晏县',
			4526: '三角城镇',
			4527: '祁连县',
			4528: '八宝镇',
			4529: '刚察县',
			4530: '沙柳河镇',
			4531: '门源回族自治县',
			4532: '浩门镇'
		},
		'0,4499,4533': {
			4534: '共和县',
			4535: '恰卜恰镇',
			4536: '同德县',
			4537: '尕巴松多镇',
			4538: '贵德县',
			4539: '河阴镇',
			4540: '兴海县',
			4541: '子科滩镇',
			4542: '贵南县',
			4543: '茫曲镇'
		},
		'0,4499,4544': {
			4545: '同仁县',
			4546: '隆务镇',
			4547: '尖扎县',
			4548: '马克唐镇',
			4549: '泽库县',
			4550: '泽曲镇',
			4551: '河南蒙古族自治县',
			4552: '优干宁镇'
		},
		'0,4499,4553': {
			4554: '玛沁县',
			4555: '大武镇',
			4556: '班玛县',
			4557: '赛来塘镇',
			4558: '甘德县',
			4559: '柯曲镇',
			4560: '达日县',
			4561: '吉迈镇',
			4562: '久治县',
			4563: '智青松多镇',
			4564: '玛多县',
			4565: '黄河乡'
		},
		'0,4499,4566': {
			4567: '玉树县',
			4568: '结古镇',
			4569: '杂多县',
			4570: '萨呼腾镇',
			4571: '称多县',
			4572: '称文镇',
			4573: '治多县',
			4574: '加吉博洛镇',
			4575: '囊谦县',
			4576: '香达镇',
			4577: '曲麻莱县',
			4578: '约改镇'
		},
		'0,4499,4579': {
			4580: '德令哈市',
			4581: '格尔木市',
			4582: '乌兰县',
			4583: '希里沟镇',
			4584: '都兰县',
			4585: '察汗乌苏镇',
			4586: '天峻县',
			4587: '新源镇'
		},
		'0,4588': {
			4589: '银川市',
			4598: '石嘴山市',
			4603: '吴忠市',
			4610: '固原市',
			4620: '中卫市'
		},
		'0,4588,4589': {
			4590: '兴庆区',
			4591: '金凤区',
			4592: '西夏区',
			4593: '灵武市',
			4594: '永宁县',
			4595: '杨和镇',
			4596: '贺兰县',
			4597: '习岗镇'
		},
		'0,4588,4598': {
			4599: '大武口区',
			4600: '惠农区',
			4601: '平罗县',
			4602: '城关镇'
		},
		'0,4588,4603': {
			4604: '利通区',
			4605: '青铜峡市',
			4606: '盐池县',
			4607: '花马池镇',
			4608: '同心县',
			4609: '豫海镇'
		},
		'0,4588,4610': {
			4611: '原州区',
			4612: '西吉县',
			4613: '吉强镇',
			4614: '隆德县',
			4615: '城关镇',
			4616: '泾源县',
			4617: '香水镇',
			4618: '彭阳县',
			4619: '白阳镇'
		},
		'0,4588,4620': {
			4621: '沙坡头区',
			4622: '中宁县',
			4623: '海原县'
		},
		'0,4624': {
			4625: '乌鲁木齐市',
			4635: '克拉玛依市',
			4640: '自治区直辖县级行政单位',
			4645: '喀什地区',
			4669: '阿克苏地区',
			4687: '和田地区',
			4702: '吐鲁番地区',
			4708: '哈密地区',
			4714: '克孜勒苏柯州',
			4722: '博尔塔拉州',
			4728: '昌吉州',
			4742: '巴音郭楞州',
			4760: '伊犁州',
			4779: '塔城地区',
			4792: '阿勒泰地区'
		},
		'0,4624,4625': {
			4626: '天山区',
			4627: '沙依巴克区',
			4628: '新市区',
			4629: '水磨沟区',
			4630: '头屯河区',
			4631: '达坂城区',
			4632: '东山区',
			4633: '乌鲁木齐县',
			4634: '乌鲁木齐市水磨沟区'
		},
		'0,4624,4635': {
			4636: '克拉玛依区',
			4637: '独山子区',
			4638: '白碱滩区',
			4639: '乌尔禾区'
		},
		'0,4624,4640': {
			4641: '石河子市',
			4642: '阿拉尔市',
			4643: '图木舒克市',
			4644: '五家渠市'
		},
		'0,4624,4645': {
			4646: '喀什市',
			4647: '疏附县',
			4648: '托克扎克镇',
			4649: '疏勒县',
			4650: '疏勒镇',
			4651: '英吉沙县',
			4652: '英吉沙镇',
			4653: '泽普县',
			4654: '泽普镇',
			4655: '莎车县',
			4656: '莎车镇',
			4657: '叶城县',
			4658: '喀格勒克镇',
			4659: '麦盖提县',
			4660: '麦盖提镇',
			4661: '岳普湖县',
			4662: '岳普湖镇',
			4663: '伽师县',
			4664: '巴仁镇',
			4665: '巴楚县',
			4666: '巴楚镇',
			4667: '塔什库尔干塔吉克自治县',
			4668: '塔什库尔干镇'
		},
		'0,4624,4669': {
			4670: '阿克苏市',
			4671: '温宿县',
			4672: '温宿镇',
			4673: '库车县',
			4674: '库车镇',
			4675: '沙雅县',
			4676: '沙雅镇',
			4677: '新和县',
			4678: '新和镇',
			4679: '拜城县',
			4680: '拜城镇',
			4681: '乌什县',
			4682: '乌什镇',
			4683: '阿瓦提县',
			4684: '阿瓦提镇',
			4685: '柯坪县',
			4686: '柯坪镇'
		},
		'0,4624,4687': {
			4688: '和田市',
			4689: '和田县',
			4690: '墨玉县',
			4691: '喀拉喀什镇',
			4692: '皮山县',
			4693: '固玛镇',
			4694: '洛浦县',
			4695: '洛浦镇',
			4696: '策勒县',
			4697: '策勒镇',
			4698: '于田县',
			4699: '木尕拉镇',
			4700: '民丰县',
			4701: '尼雅镇'
		},
		'0,4624,4702': {
			4703: '吐鲁番市',
			4704: '鄯善县',
			4705: '鄯善镇',
			4706: '托克逊县',
			4707: '托克逊镇'
		},
		'0,4624,4708': {
			4709: '哈密市',
			4710: '伊吾县',
			4711: '伊吾镇',
			4712: '巴里坤哈萨克自治县',
			4713: '巴里坤镇'
		},
		'0,4624,4714': {
			4715: '阿图什市',
			4716: '阿克陶县',
			4717: '阿克陶镇',
			4718: '阿合奇县',
			4719: '阿合奇镇',
			4720: '乌恰县',
			4721: '乌恰镇'
		},
		'0,4624,4722': {
			4723: '博乐市',
			4724: '精河县',
			4725: '精河镇',
			4726: '温泉县',
			4727: '博格达尔镇'
		},
		'0,4624,4728': {
			4729: '昌吉市',
			4730: '阜康市',
			4731: '米泉市',
			4732: '呼图壁县',
			4733: '呼图壁镇',
			4734: '玛纳斯县',
			4735: '玛纳斯镇',
			4736: '奇台县',
			4737: '奇台镇',
			4738: '吉木萨尔县',
			4739: '吉木萨尔镇',
			4740: '木垒哈萨克自治县',
			4741: '木垒镇'
		},
		'0,4624,4742': {
			4743: '库尔勒市',
			4744: '轮台县',
			4745: '轮台镇',
			4746: '尉犁县',
			4747: '尉犁镇',
			4748: '若羌县',
			4749: '若羌镇',
			4750: '且末县',
			4751: '且末镇',
			4752: '和静县',
			4753: '和静镇',
			4754: '和硕县',
			4755: '特吾里克镇',
			4756: '博湖县',
			4757: '博湖镇',
			4758: '焉耆回族自治县',
			4759: '焉耆镇'
		},
		'0,4624,4760': {
			4761: '伊宁市',
			4762: '奎屯市',
			4763: '伊宁县',
			4764: '吉里于孜镇',
			4765: '霍城县',
			4766: '水定镇',
			4767: '巩留县',
			4768: '巩留镇',
			4769: '新源县',
			4770: '新源镇',
			4771: '昭苏县',
			4772: '昭苏镇',
			4773: '特克斯县',
			4774: '特克斯镇',
			4775: '尼勒克县',
			4776: '尼勒克镇',
			4777: '察布查尔锡伯自治县',
			4778: '察布查尔镇'
		},
		'0,4624,4779': {
			4780: '塔城市',
			4781: '乌苏市',
			4782: '额敏县',
			4783: '额敏镇',
			4784: '沙湾县',
			4785: '三道河子镇',
			4786: '托里县',
			4787: '托里镇',
			4788: '裕民县',
			4789: '哈拉布拉镇',
			4790: '和布克赛尔蒙古自治县',
			4791: '和布克赛尔镇'
		},
		'0,4624,4792': {
			4793: '阿勒泰市',
			4794: '布尔津县',
			4795: '布尔津镇',
			4796: '富蕴县',
			4797: '库额尔齐斯镇',
			4798: '福海县',
			4799: '哈巴河县',
			4800: '青河县',
			4801: '吉木乃县'
		},
		'0,4802': {
			4803: '香港特别行政区'
		},
		'0,4802,4803': {
			4804: '中西区',
			4805: '东区',
			4806: '九龙城区',
			4807: '观塘区',
			4808: '南区',
			4809: '深水埗区',
			4810: '湾仔区',
			4811: '黄大仙区',
			4812: '油尖旺区',
			4813: '离岛区',
			4814: '葵青区',
			4815: '北区',
			4816: '西贡区',
			4817: '沙田区',
			4818: '屯门区',
			4819: '大埔区',
			4820: '荃湾区',
			4821: '元朗区'
		},
		'0,4822': {
			4823: '澳门特别行政区'
		},
		'0,4822,4823': {
			4824: '澳门特别行政区'
		},
		'0,4825': {
			4826: '台北',
			4827: '高雄',
			4828: '台中',
			4829: '花莲',
			4830: '基隆',
			4831: '嘉义',
			4832: '金门',
			4833: '连江',
			4834: '苗栗',
			4835: '南投',
			4836: '澎湖',
			4837: '屏东',
			4838: '台东',
			4839: '台南',
			4840: '桃园',
			4841: '新竹',
			4842: '宜兰',
			4843: '云林',
			4844: '彰化'
		}
	};
}
Location.prototype.find = function(id) {
	if(typeof(this.items[id]) == "undefined")
		return false;
	return this.items[id];
}
Location.prototype.fillOption = function(that, el_id, loc_id, selected_id) {
	var el = that.find('select.' + el_id);
	var json = this.find(loc_id);
	if(json) {
		var index = 1;
		var selected_index = 0;
		$.each(json, function(k, v) {
			var option = '<option value="' + k + '">' + v + '</option>';
			el.append(option);
			if(k == selected_id) {
				selected_index = index;
			}
			index++;
		})
	}
	el.selectpicker('val', '');
	el.selectpicker('refresh');
}

/*form-print-1.0.min.js*/

function printTable(that, w) {
	if(!w) w = 794;
	_table_make_width(that, w);
	that.find(".edit,.edit-list,.editarea").each(function() {
		$(this).removeAttr('readonly').removeAttr('disabled');
		$(this).closest('td').html(getInputText($(this)));
	});
	that.find('tbody').find("a").each(function() {
		if($(this).hasClass('button'))
			$(this).closest('td').html('');
		else {
			$(this).closest('td').html($(this).html());
		}
	});
	that.parent().printArea();
}

function printURLTable(table) {
	var url = 'print.chi?id=' + table.find('tr:not([rowid]):not([nrowid]) input[name="id"]').val();
	var a = document.createElement('a');
	a.href = url;
	a.target = "_blank";
	a.click();
	a.remove();
}

/*form-button-1.0.min.js*/

function MakeButtonAction(_btn, _handle) {
	var table = $(_btn).closest('table');
	var tar = $(_btn).attr("tar");
	if(tar)
		_btn.row = table.find('tr[rowid="' + tar + '"]');
	_btn.td = $(_btn).closest('td');
	$(_btn).on('click', function() {
		var that = this;
		var _execute = $(_btn).attr('executecode');
		_execute = unescape(_execute);
		console.log(_execute);
		var ws = makeDefaultEvent(_execute);
		try {
			eval(ws);
		} catch(e) {
			console.log(e);
		}
	});
	if(_handle) _handle(true);
}

function initToolbarButton(table) {
	table.find('.toolbar a[ev]').each(function() {
		this.td = $(this).closest('td');
		var _btn = this;
		$(_btn).on('click', function() {
			var that = this;
			var _execute = $(_btn).attr('ev');
			_execute = unescape(_execute);
			var ws = makeDefaultEvent(_execute);
			try {
				eval(ws);
			} catch(e) {
				console.log(e);
			}
		});
	})
}

function _row_add(row, prow, css) {
	var nid = row.attr("rowid");
	var nrow = row.clone().removeAttr('rowid');
	if(css) nrow.addClass(css);
	nrow.attr("nrowid", nid);
	var idbtn = nrow.find('input[type="hidden"][name="id"]');
	if(idbtn.length == 0)
		nrow.find('td:eq(0)').append('<input type = "hidden" name="id" value="' + uuid() + '" />');
	else
		idbtn.val(uuid());
	if(prow) {
		nrow.insertAfter(prow);
	} else {
		var rows = row.parent().find('[nrowid="' + nid + '"]');
		if(rows.length > 0) {
			nrow.insertAfter(rows.eq(rows.length - 1));
		} else
			nrow.insertAfter(row);
	}
	nrow.find('.button').each(function() {
		this.td = $(this).parent()[0];
		MakeButtonAction(this);
	});
	nrow.show();
	initNrowList(nrow);
	return nrow;
}

function _action_clone(row, btn) {
	var prow = btn.closest('tr');
	var nrow = _row_add(prow, prow, "_cloned");
	var idbtn = nrow.find('input[type="hidden"][name="id"]');
	idbtn.val(uuid());
}
var _deleteRows = [];

function _action_delete(row, btn) {
	var prow = btn.closest('tr');
	var keyname = "id";
	if(prompt) {
		var keyname = prow.attr("nrowkey");
		if(!keyname) {
			keyname = "id";
		}
	}
	var idbtn = prow.find('input[type="hidden"][name="' + keyname + '"]');
	if(idbtn.length == 1) {
		if(idbtn.val().length < 16)
			_deleteRows.push({
				name: prow.attr("nrowid"),
				id: idbtn.val()
			});
	}
	prow.remove();
}

function _action_clear(row, btn) {
	var prow = btn.closest('tr');
	var idbtn = prow.find('input[type="hidden"][name="id"]');
	if(idbtn.length == 1)
		if(idbtn.val().length < 16)
			_deleteRows.push({
				name: prow.attr("nrowid"),
				id: idbtn.val()
			});
	prow[0].isDirty = false;
	prow.find('input[type!="hidden"]:not([readonly])').val('');
	prow.find('select').each(function() {
		if(this.inited)
			$(this).selectpicker('val', '');
		else
			$(this).val('');
	})
	calcTable(prow.closest('table'));
}

function makeDefaultEvent(script) {
	script = script.replaceAll('#add#', '_row_add(that.row);');
	script = script.replaceAll('#save#', 'PostFormDataToDB(that);');
	script = script.replaceAll('#saveNDT#', 'PostFormDataToNDT(that, __saveNdtCfg);');
	script = script.replaceAll('#clone#', '_action_clone(that.row,$(that));');
	script = script.replaceAll('#delete#', '_action_delete(that.row, $(that));');
	script = script.replaceAll('#deleteNDT#', '_action_deleteNDT(that.row, $(that));');
	script = script.replaceAll('#clear#', '_action_clear(that.row, $(that));');
	script = script.replaceAll('#print#', 'printTable(that);');
	return script;
}

function PostFormDataToDB(that) {
	var table = $(that.td).closest('table');
	SaveFormData(table, $(that));
}

function PostFormDataToNDT(that, config) {
	var table = $(that.td).closest('table');
	SaveFormDataNDT(table, $(that), config);
}

/*table-form-action-1.0.min.js*/

function initTableForm(table, _readonly, _handle, mid) {
	if(!table) table = $('.FormTable');
	Mask();
	table.closest('.formcontainer').show();
	var optionList = table.find('[f-options][name]');
	var cou = optionList.length;
	var icou = 0;

	function _initMain(obj, e) {
		icou++;
		if(icou == cou) {
			_initTable(table);
			var defaults = table.find('td:eq(0)').attr('default');
			if(!defaults)
				defaults = '';
			else
				defaults = unescape(defaults);
			initTableFormData(table, mid, defaults, _readonly, function() {
				UnMask();
				if(_handle) _handle();
				if(self != top) {
					$(parent.document.all("mainFrame")).height(document.body.scrollHeight);
					$(parent.document.all("mainFrame")).width(document.body.scrollWidth);
				}
			});
		}
		if(!e) {
			console.log('error:' + obj.getAttribute('name') + ',' + obj.getAttribute('title'));
		}
	}
	optionList.each(function() {
		var ostr = $(this).attr("f-options");
		var _option = eval('(' + ostr + ')');
		var that = this;
		if(_option.type == "combobox") {
			initCombobox(that, _option, function(e) {
				_initMain(that, e)
			})
		} else if(_option.type == "richtext") {
			initTextarea(that, _option, function(e) {
				_initMain(that, true);
			});
		} else if(_option.type == "checkbox" || _option.type == "radio") {
			initInputBox(that, _option, function(e) {
				_initMain(that, e)
			});
		} else if(_option.type == "dialogue") {
			initDialogue(that, _option, function(e) {
				_initMain(that, e)
			});
		} else if(_option.type == "file") {
			initInputFile(that, _option, function(e) {
				_initMain(that, e)
			});
		} else if(_option.type == "image") {
			initInputImage(that, _option, function(e) {
				_initMain(that, e)
			});
		} else if(_option.type == "_button") {
			MakeButtonAction(that, function(e) {
				_initMain(that, e)
			});
		} else if(_option.type == "_normal") {
			initNormal(that, _option, function(e) {
				_initMain(that, e);
			})
		} else
			_initMain(that, true);
	});
}

function initNrowList(nrow) {
	nrow.find('[f-options]').each(function() {
		var ostr = $(this).attr("f-options");
		var _option = eval('(' + ostr + ')');
		var that = this;
		if(_option.type == "combobox") {
			initSelectControl(that);
		} else if(_option.type == "richtext") {
			initTextarea(that, _option);
		}
	});
}

function clearTableData(table) {
	table.find('[f-options][name]').each(function() {
		putInputValue($(this), null);
	})
}

function initTableData(table, data, _readonly, _handle) {
	clearTableData(table);
	var code = table.attr("code");
	var master = data[code][0];
	var mrows = table.find('tr:not([rowid]):not([nrow])');
	for(key in master) {
		var _input = mrows.find('[name="' + key + '"]');
		putInputValue(_input, master[key]);
	}
	var tr = table.find('tr[rowid]:hidden');
	tr.each(function() {
		var rowid = $(this).attr('rowid');
		if(table.find('tr[nrowid="' + rowid + '"]').length == 0) {
			var details = data[rowid];
			var ostr = $(this).attr("fb-options");
			var _option = eval('(' + unescape(ostr) + ')');
			var _irows = _option.initialRows ? _option.initialRows : 1;
			var i = 0;
			if(details) {
				for(; i < details.length; i++) {
					var nrow = _row_add($(this));
					var detail = details[i];
					for(key in detail) {
						var _input = nrow.find('[name="' + key + '"]');
						putInputValue(_input, detail[key]);
					}
				}
			}
			for(; i < _irows; i++) {
				_row_add($(this));
			}
		}
	});
	calcTable(table, null, true);
	if(_readonly) {
		table.find('.uploadify').hide();
		table.find('tbody').find(".edit,.edit-list,.editarea").attr("disabled", "disabled");
		table.find('tbody').find("a").each(function() {
			if($(this).hasClass('btn')) {} else if($(this).hasClass('button'))
				$(this).parent().html('');
			else {
				var prt = $(this).parent();
				if(prt.attr("target") == "_blank")
				;
				else
					prt.html($(this).html());
			}
		});
	}
	if(_handle) _handle(table);
}

function initTableFormData(table, mid, defaults, _readonly, _handle) {
	var code = table.attr("code");
	var id;
	if(mid)
		id = mid;
	else {
		id = getUrlParam("id");
	}
	var ro = getUrlParam("ro");
	if(ro) {
		_readonly = true;
	}
	if(id) {
		if(!__saveNdtCfg) {
			var datas = code;
			table.find('tr[rowid]:hidden').each(function() {
				datas += "," + $(this).attr('rowid');
			});
			var queueList = table.find('.queue_list');
			if(queueList.length == 1)
				datas += ',_files';
			var _workflow = $('body').attr('workflow');
			if(_workflow)
				datas += ',_workflow';
			GetContent(TABLE_URL, {
				param: 'datas',
				datas: datas,
				id: id
			}, 'json', false, function(data) {
				if(data.success !== false) {
					var _nodedata = data._workflow;
					if(_workflow && _nodedata) {
						delete data._workflow;
						if(_nodedata.length > 0) {
							try {
								makeWorkFlowTimeLine(table, $('.workflowcontainer'), _nodedata);
								initWorkFlowFromData(table, data[code][0], _nodedata[0], function(result) {
									initTableData(table, data, true, _handle);
								}, function() {
									initTableData(table, data, true, _handle);
								});
							} catch(e) {
								initTableData(table, data, _readonly, _handle);
							}
						} else
							initTableData(table, data, _readonly, _handle);
					} else {
						initTableData(table, data, _readonly, _handle);
					}
					if(queueList.length == 1) {
						for(var i = 0; i < data._files.length; i++) {
							var _file = data._files[i];
							var aFile = $('<a href="/uploads/' + _file.uid + '-' + _file.filename + '">' + _file.filename + '</a>');
							queueList.parent().find('.queue_list').append(aFile);
							aFile[0]._file = _file;
						}
					}
				} else {
					alert('数据获取失败或您无权访问此数据!');
				}
			});
		} else {
			initTableFormDataNDT(table, id, defaults, _readonly, _handle);
		}
	} else {
		if(defaults) {
			GetContent(TABLE_URL, {
				param: 'default',
				def: defaults
			}, 'json', false, function(data) {
				var mdata = {};
				data.id = uuid();
				mdata[code] = [data];
				initTableData(table, mdata, _readonly, _handle);
			});
		} else {
			var mdata = {};
			var data = {
				id: uuid()
			}
			mdata[code] = [data];
			initTableData(table, mdata, _readonly, _handle);
		}
	}
}

function _initTable(table) {
	initToolbarButton(table);
	table.find('tbody').delegate(".edit,.edit-list", "change", function() {
		if(!this._stopchange) {
			calcTable(table, this);
			$(this).closest('tr')[0].isDirty = true;
		}
	});
}

function _table_make_width(table, w) {
	var tw = table.width();
	if(tw > 0) {
		w -= 10;
		table.width(w);
		table.find("colgroup col").each(function() {
			$(this).width($(this).width() * w / tw);
			var area = table.find(".editarea");
			area.width(area.parent().width() - 4);
		})
	}
}

function getTableItemFromName(t, n) {
	var itemObj = t.find('[name="' + n + '"]');
	if(itemObj.length == 0)
		itemObj = t.find('input[name^="' + n + '+"]');
	return itemObj;
}

function putInputValue(_input, _val) {
	var t = _input.attr('type');
	if(t == "radio") {
		for(var i = 0; i < _input.length; i++) {
			if(_input[i].value == _val) {
				_input[i].checked = true;
				break;
			}
		}
	} else if(t == "checkbox") {
		for(var i = 0; i < _input.length; i++) {
			if(_val && ("," + _val + ",").indexOf("," + _input[i].value + ",") >= 0) {
				_input[i].checked = true;
			}
		}
	} else if(t == "file") {
		_input.attr('data-file', _val);
		initDroparea(_input, true);
	} else if(t == "_normal") {
		if(_val) {
			var _arr = _val.split('-');
			if(_input[0].inited) {
				if(_arr.length > 0)
					_input.find('select.loc_province').selectpicker('val', _arr[0]);
				if(_arr.length > 1)
					_input.find('select.loc_city').selectpicker('val', _arr[1]);
				if(_arr.length > 2)
					_input.find('select.loc_town').selectpicker('val', _arr[2]);
			}
		}
	} else if(_input.length == 1) {
		var that = _input[0];
		t = that.tagName.toLowerCase();
		if(!_val) _val = '';
		_input.val(_val);
		if(t == "select") {
			try {
				if(_input.is(':hidden')) {
					if(_input[0].inited) {
						that._stopchange = true;
						_input.selectpicker('val', _val);
						that._stopchange = null;
					} else
						_input.val(_val);
				}
			} catch(e) {
				console.log(e);
			}
		} else if(t == "textarea") {
			try {
				var oc = _input.attr("oc");
				if(oc == "editor") {
					if(typeof(KindEditor) == "undefined") {
						InitialEditorContent(_input);
					} else {
						KindEditor.html(_input, _input.val());
					}
				}
				_input.text(_input.val());
			} catch(e) {
				console.log(e);
			}
		}
	}
}

function getInputText(_input) {
	var t = _input.attr('type');
	if(t == "radio") {
		for(var i = 0; i < _input.length; i++) {
			if(_input[i].checked) {
				return _input[i].value;
			}
		}
	} else if(t == "checkbox") {
		var _val = '';
		for(var i = 0; i < _input.length; i++) {
			if(_input[i].checked) {
				if(_val !== "") _val += ',';
				_val += _input[i].value;
			}
		}
		return _val;
	} else {
		return _input.val();
	}
}

/*table-form-action-1.0-ndt.min.js*/
function initTableFormDataNDT(table, id, defaults, _readonly, _handle) {
	var config = StrToJson(__saveNdtCfg);
	var _input = $('tr:not([nrowid]) input[type="hidden"][name="id"]');
	putInputValue(_input, id);
	var _pmls = [];
	var _opp = {};
	var _nTbl = 0;
	for(var _cfg in config) {
		var _pml = {};
		_pml.namespace = 'protocol';
		_pml.cmd = 'data';
		_pml.version = 1;
		_pml.id = config[_cfg].queryVml;
		_pml.paras = [{}];
		if(_pml.id != 'company_reading') {
			if(_cfg == "main") {
				_pml.paras[0].name = "id";
			} else {
				_pml.paras[0].name = "did";
			}
			_pml.paras[0].value = id;
		}
		_pmls.push(_pml);
		_opp[_nTbl] = _cfg;
		_nTbl++;
	}
	PostContent("/Portal.aspx", JsonToStr(_pmls), 'json', false, function(data) {
		if(data && data.length > 0) {
			for(var i = 0; i < data.length; i++) {
				var _rs = data[i];
				if(_rs.result) {
					var _t = _opp[i];
					if(_t == "main") {
						initMainTableDataNDT(table, _rs, _readonly, _handle);
					} else {
						initDetailsTableDataNDT(table, _rs, _readonly, _handle, _t);
					}
				}
			}
		}
	});
}

function initDetailsTableDataNDT(table, data, _readonly, _handle, tblName) {
	var tr = table.find('tr[rowid="' + tblName + '"]:hidden');
	tr.each(function() {
		var rowid = tblName;
		if(table.find('tr[nrowid="' + rowid + '"]').length == 0) {
			if(data.rs.length != 0) {
				var details = data.rs[0].rows;
				var ostr = $(this).attr("fb-options");
				var _option = eval('(' + unescape(ostr) + ')');
				var _irows = _option.initialRows ? _option.initialRows : 1;
				var i = 0;
				if(details) {
					for(; i < details.length; i++) {
						var nrow = _row_add($(this));
						var detail = details[i];
						for(key in detail) {
							var _input = nrow.find('[name="' + key + '"]');
							if($(_input).parent().find('select').length == 0) {
								putInputValue(_input, detail[key]);
							} else {
								$(_input).parent().find('select option').each(function() {
									if($(this).val() == detail[key]) {
										$(this).attr('selected', 'selected');
									}
								});
								putInputValue(_input, detail[key]);
							}
						}
					}
				}
				for(; i < _irows; i++) {
					_row_add($(this));
				}
			}
		}
	});
}

function initMainTableDataNDT(table, data, _readonly, _handle) {
	clearTableData(table);
	var code = table.attr("code");
	var master = data.rs;
	if(master && data.rs.length > 0) {
		master = data.rs[0].rows;
		if(master && data.rs[0].rows.length > 0) {
			master = data.rs[0].rows[0];
		}
	}
	var mrows = table.find('tr:not([rowid]):not([nrow])');
	for(var key in master) {
		var _input = mrows.find('[name="' + key + '"]');
		if($(_input).parent().find('select').length == 0) {
			putInputValue(_input, master[key]);
		} else {
			$(_input).parent().find('button span:eq(0)').text($(_input).next().find('[value="' + master[key] + '"]').text());
			putInputValue(_input, master[key]);
		}
	}
	if(_handle) _handle(table);
	return;
}

/*table-form-1.0.1.min.js*/
﻿
function MakeExtractAttrs(_option, _readOnly) {
	var extractAttr = '';
	if(_option.workflowFlag && _option.workflowFlag !== "0") {
		extractAttr += ' workflowFlag="' + _option.workflowFlag + '"';
	}
	if(_option.displayname) {
		extractAttr += ' title="' + _option.displayname + '"';
	}
	if(_readOnly || _option.readOnly)
		extractAttr += ' readOnly="readOnly"';
	if(_option.edittype !== "editable" && _option.setting) {
		extractAttr += ' calculation="' + escape(encode(_option.setting)) + '"';
		if(_option.edittype == "creatcalculation") extractAttr += ' ct="3"';
	}
	if(_option.conditionhiding == 2 && _option.conditionhidingcontent) {
		extractAttr += ' hiddincalc="' + escape(encode(_option.conditionhidingcontent)) + '"';
		if(_option.hiddinRow)
			extractAttr += 'hiddinRow="' + _option.hiddinRow + '"';
	}
	if(extractAttr !== "") {
		extractAttr += ' oc="' + _option.codetype + '"'
	}
	if(_option.conditionhiding == 1) {
		extractAttr += ' style="display:none;"';
	}
	if(extractAttr.length < 10)
		extractAttr = '';
	return extractAttr;
}

function MakeEditorGroup(_option, _arrs, _ext) {
	var n = _option.codename;
	var checks = '<div class="edit form-control" name="' + n + '" type="' + _option.codetype + '">';
	for(var i = 0; i < _arrs.length; i++) {
		checks += '<label';
		if(_option.datasourcetype == "url") {
			checks += ' style="display:none"';
		}
		checks += '><input type="' + _option.codetype + '" name="' + n + '" value="' + $.trim(_arrs[i]["id"]) + '"' + _ext + ' class="edit-list transparent" ';
		checks += '/>';
		checks += $.trim(_arrs[i]["text"]) + '</label>';
	}
	checks += '</div>';
	return checks;
}

function MakeEditorDate(_option, _ext) {
	var dateformate = 'YYYY-MM-DD hh:mm:ss';
	if(_option.dateformat) dateformate = _option.dateformat;
	var laydate = "{format: '" + dateformate + "'";
	if(_option.istime)
		laydate += ",istime:" + _option.istime;
	if(_option.festival)
		laydate += ",festival:true";
	if(_option.dateMin)
		laydate += ",min:" + _option.dateMin;
	if(_option.dateMax)
		laydate += ",max:" + _option.dateMax;
	if(_option.istoday)
		laydate += ",istoday:true";
	laydate += '}';
	var _html = '<input name="' + _option.codename + '" placeholder="' + _option.placeholder + '"' + _ext + ' class="laydate-icon edit"';
	if(!_option.readOnly || (_option.readOnly && _option.readOnly !== "on")) {
		_html += ' onclick="TrigerDateEvent(this,' + laydate + ')"';
	}
	_html += '/>';
	return _html;
}

function MakeEditorComboBox(_option, _arrs, _ext) {
	var _eHtml = '';
	_eHtml += '<input type="hidden" name="' + _option.codename + '" />';
	_eHtml += '<select name="' + _option.codename + '_id" ' + _ext + ' class="edit transparent selectCarr show-tick form-control"  data-live-search="true" onchange="pushDisplayValue(this);_DoComboLinking(this);" >';
	_eHtml += '<option value="&nbsp;">---------------------------</option>';
	if(_arrs.length > 0) {
		var _group = _arrs[0]["group"];
		var _group_old = '';
		for(var i = 0; i < _arrs.length; i++) {
			if(_group) {
				if(_group_old !== $.trim(_arrs[i]["group"])) {
					if(_group_old !== "")
						_eHtml += '</optgroup>';
					_group_old = $.trim(_arrs[i]["group"]);
					_eHtml += '<optgroup label="' + _group_old + '">';
				}
			}
			if(_option.datasourcetype == 'vml') {
				_eHtml += '<option value="' + $.trim(_arrs[i].id) + '">';
				_eHtml += $.trim(_arrs[i].name) + '</option>';
			} else {
				_eHtml += '<option value="' + $.trim(_arrs[i]["id"]) + '">';
				_eHtml += $.trim(_arrs[i]["text"]) + '</option>';
			}
		}
		if(_group)
			_eHtml += '</optgroup>';
	}
	_eHtml += '</select>';
	return _eHtml;
}

function MakeEditorComboVml(_option, _ext) {
	var _eHtml;
	var _jsonPara = NSF.System.Json.ToJson(_option.datasourcetsetting);
	NSF.System.Data.RecordSet("/", _jsonPara, function(result, config, data) {
		if(result) {
			var _rows = data[0].rows;
			if(_option.linkfield && _option.linkfield != "" && _option.linkcombo && _option.linkcombo != "") {
				_eHtml = MakeEditorComboBox(_option, [], _ext);
			} else {
				_eHtml = MakeEditorComboBox(_option, _rows, _ext);
			}
		}
	});
	return _eHtml;
}

function MakeEditorComboTree(_option, _ext) {
	var _eHtml = '<input type="text" data-toggle="modal" data-target="#win-Common-Dialog" readOnly="readOnly" ' + _ext + ' class="edit form-control transparent" name="' + _option.codename + '" /> ';
	return _eHtml;
}

function MakeEditorWebEditor(_td, _option, _ext) {
	var _eHtml = '<textarea name="' + _option.codename + '" ' + _ext + ' style="width: ' + Math.max(($(_td).width() - 4), 700) +
		'px;height:' + Math.max($(_td).height() - 4, 100) + 'px;visibility:hidden;" class="edit form-control transparent"></textarea>';
	return _eHtml;
}

function MakeEditorImage(_td, _option, _ext) {
	var _droparea = $('<input type="file" ' + _ext + ' class="edit form-control droparea spot" name="' + _option.codename +
		'" data-post="/code/files/uploadify.chi?param=upload&filename=' + _option.codename + '" data-width="' + Math.max(($(_td).width() - 4), 50) +
		'" data-height="' + Math.max($(_td).height() - 4, 50) + '" data-crop="true" data-file="" />');
	return _droparea;
}

function MakeEditorFile(_td, _option, _ext) {
	var _eHtml = '';
	if(_option.characterlength)
		_eHtml += '<input name="' + _option.codename + '"  type="file" multiple="false" >';
	else {
		_eHtml = '<div class="queue"></div>';
		_eHtml += '<input id="' + _option.codename + '_upload" name="' + _option.codename + '" type="file" class="edit form-control"  multiple="true">';
		_eHtml += '<div class="queue_list"></div>';
	}
	return _eHtml;
}

function MakeEditorDialogue(_option) {
	return '';
}

function MakeEditorPopover(_option, _ext) {
	var fm_popover_postion = "bottom";
	switch(parseInt(_option.windowType)) {
		case 1:
			fm_popover_postion = "left";
			break;
		case 2:
			fm_popover_postion = "right";
			break;
		case 3:
			fm_popover_postion = "top";
			break;
		case 4:
			fm_popover_postion = "bottom";
			break;
		default:
			break;
	}
	var btn = '<input type="hidden" name="' + _option.codename + '_id"' + _ext + ' />';
	btn += '<input type="text" data-toggle="popover" data-html="true" readOnly="readOnly"  class="edit form-control transparent" name="' + _option.codename + '" data-placement="' + fm_popover_postion + '" data-original-title="" />';
	return btn;
}

function MakeNormal(_td, _option) {
	var _eHtml = '';
	if(_option.constControl == "address") {
		if(_option.province == "1") {
			_eHtml += '<select name="' + _option.codename + '_province"  class="loc_province selectCarr show-tick"  data-live-search="true" ></select>';
		}
		if(_option.city == "1") {
			_eHtml += '<select name="' + _option.codename + '_city"  class="loc_city selectCarr show-tick" data-live-search="true" ></select>';
		}
		if(_option.district == "1") {
			_eHtml += '<select name="' + _option.codename + '_town"  class="loc_town selectCarr show-tick"  data-live-search="true"></select>';
		}
		if(_option.address == "1") {
			_eHtml += '<input type="text" name="' + _option.codename + '_addr" class="loc_addr edit transparent" style="width: auto;"/>';
		}
	}
	return '<div class="edit transparent" name="' + _option.codename + '_id" type="_normal"><input type="hidden" name="' + _option.codename + '_id" /><input type="hidden" name="' + _option.codename + '" />' + _eHtml + '</div>';
}

function MakeEditorFromOption(_td, _option, _readOnly) {
	var _eHtml = '';
	var verify = _ConfigVerify(_option);
	var f_opts = {
		code: _option.codename,
		type: _option.codetype,
		etype: _option.edittype,
		len: _option.characterlength
	};
	if(!_option.placeholder) _option.placeholder = '';
	var _extract = MakeExtractAttrs(_option, _readOnly);
	if(_option.codetype == "text") {
		_eHtml = '<input name="' + _option.codename + '" placeholder="' + _option.placeholder + '"' + _extract + ' class="edit form-control transparent" />';
	} else if(_option.codetype == "number") {
		_eHtml = '<input name="' + _option.codename + '" placeholder="' + _option.placeholder + '"' + _extract + ' class="edit form-control transparent" />';
	} else if(_option.codetype == 'richtext') {
		_eHtml = '<textarea name="' + _option.codename + '" class="edit form-control transparent"' + _extract + ' placeholder="' + _option.placeholder + '"></textarea>';
	} else if(_option.codetype == 'date') {
		_eHtml = MakeEditorDate(_option, _extract);
	} else if(_option.codetype == "image") {
		_eHtml = MakeEditorImage(_td, _option, _extract);
	} else if(_option.codetype == "editor") {
		_eHtml = MakeEditorWebEditor(_td, _option, _extract);
	} else if(_option.codetype == "file") {
		_eHtml = MakeEditorFile(_td, _option, _extract);
	} else if(_option.codetype == "checkbox" || _option.codetype == "radio") {
		f_opts.cls = _option.datasourcetype;
		f_opts.url = _option.datasourcetsetting;
		f_opts.id = _option.optValue;
		f_opts.text = _option.optText;
		if(_option.datasourcetype == "list") {
			var arrs = _option.datasourcetsetting.split('\n');
			var _arrs = [];
			for(var i = 0; i < arrs.length; i++) {
				var _arr = arrs[i].split('=');
				if(_arr.length == 2)
					_arrs.push({
						id: _arr[0],
						text: _arr[1]
					});
				else
					_arrs.push({
						id: arrs[i],
						text: arrs[i]
					});
			}
			_eHtml = '<div class="groupedit">' + MakeEditorGroup(_option, _arrs, _extract) + '</div>';
		} else {
			_eHtml = '<div class="groupedit">' + MakeEditorGroup(_option, [{
				id: '',
				text: ''
			}], _extract) + '</div>';
		}
	} else if(_option.codetype == "combobox") {
		if(_option.datasourcetype == "list") {
			var arrs = _option.datasourcetsetting.split('\n');
			var _arrs = [];
			for(var i = 0; i < arrs.length; i++) {
				var _arr = arrs[i].split('=');
				if(_arr.length == 2)
					_arrs.push({
						id: _arr[0],
						text: _arr[1]
					});
				else
					_arrs.push({
						id: i,
						text: arrs[i]
					});
			}
			_eHtml = MakeEditorComboBox(_option, _arrs, _extract);
		} else if(_option.datasourcetype == "url") {
			f_opts.cls = _option.datasourcetype;
			f_opts.url = escape(_option.datasourcetsetting);
			f_opts.id = _option.optValue;
			f_opts.text = _option.optText;
			f_opts.linkfield = _option.linkfield;
			f_opts.linkcombo = _option.linkcombo;
			_eHtml = MakeEditorComboBox(_option, [], _extract);
		} else if(_option.datasourcetype == "tree") {
			_eHtml = MakeEditorComboTree(_option, _extract);
		} else if(_option.datasourcetype == "vml") {
			f_opts.cls = _option.datasourcetype;
			f_opts.vml = escape(_option.datasourcetsetting);
			f_opts.id = _option.optValue;
			f_opts.text = _option.optText;
			f_opts.linkfield = _option.linkfield;
			f_opts.linkcombo = _option.linkcombo;
			_eHtml = MakeEditorComboVml(_option, [], _extract);
		}
	} else if(_option.codetype == "dialogue") {
		f_opts.cls = _option.datasourcetype;
		f_opts.url = escape(_option.datasourcetsetting);
		f_opts.vals = _option.pushValus;
		f_opts.outputurl = _option.outputurl;
		f_opts.optionsson = _option.optionsson;
		f_opts.modalWindow = _option.modalWindow;
		f_opts.multiple = _option.multiple;
		if(_option.modalWindow) {
			var tdHtml = $(_td).html();
			if(tdHtml == "")
				_eHtml = '<input type="text" onclick="showModalWindow(this)" ' + _extract + ' class="edit form-control transparent" name="' + _option.codename + '" />';
			else
				_eHtml = '<a href="javascript:void(0);" onclick="showModalWindow(this)" ' + _extract + ' class="edit"><input type="hidden" name="' + _option.codename + '" />' + $(_td).html() + '</a>';
			_eHtml += MakeEditorDialogue(_option);
		} else {
			_eHtml = MakeEditorPopover(_option, _extract);
		}
	} else if(_option.codetype == "_button") {
		_eHtml = MakeTdButton(_td, _option);
	} else if(_option.codetype == "_normal") {
		_eHtml = MakeNormal(_td, _option);
	}
	if(_eHtml) {
		var oHtml = $.trim($(_td).html());
		if(oHtml !== "") {
			if(oHtml.indexOf('{{FB}}') >= 0) {
				var _th = oHtml.split('{{FB}}');
				_eHtml = '<table class="innerTable"><tr><td>' + _th[0] + '</td><td>' + _eHtml + '</td>';
				if(_th.length > 0) _eHtml += '<td>' + _th[1] + '</td>';
				_eHtml += '</table>';
			}
		}
		$(_td).html(_eHtml);
		$(_td).find('.edit').attr('f-options', JsonToStr(f_opts)).attr('verify', JsonToStr(verify));
	}
}

function MakeTableTds(table, _readOnly) {
	var td0 = table.find('td').eq(0);
	var defaults = '';
	table.find('td[fb-options]').each(function() {
		var ostr = $(this).attr("fb-options");
		var _option = eval('(' + ostr + ')');
		if(_option.edittype == 'editable') {
			var setting = _option.setting;
			if(setting) {
				if(defaults !== "") defaults += '\n';
				defaults += _option.codename + '=' + setting;
			}
		}
		MakeEditorFromOption(this, _option, _readOnly);
		$(this).removeAttr('fb-options');
	});
	td0.attr('default', escape(defaults));
}

function MakeTableFormOptions(_tableHtml, _toolbar) {
	var table = $(_tableHtml);
	table.find('td').each(function() {
		if($(this).css('display') == "none") {
			$(this).remove();
		}
	});
	var cols = table.find('colgroup col').length;
	$('<tr><td colspan="' + cols + '"><input type="hidden" name="id" />' + _toolbar + '</td></tr>').insertBefore(table.find('tr:eq(0)'));
	MakeTableTds(table);
	table.find('tr[rowid]').hide();
	table.find('.ui-state-highlight').removeClass('ui-state-highlight');
	return $(table.viewSource(true)).html();
}
var encodeNumber = 6521;

function encode(code) {
	return code;
	code = code.replace(/[\r\n]+/g, '');
	code = code.replace(/'/g, "\\'");
	var tmp = code.match(/\b(\w+)\b/g);
	tmp.sort();
	var dict = [];
	var i, t = '';
	for(var i = 0; i < tmp.length; i++) {
		if(tmp[i] != t) dict.push(t = tmp[i]);
	}
	var len = dict.length;
	var ch;
	for(i = 0; i < len; i++) {
		ch = num(i);
		code = code.replace(new RegExp('\\b' + dict[i] + '\\b', 'g'), ch);
		if(ch == dict[i]) dict[i] = '';
	}
	return "eval(function(p,a,c,k,e,d){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)d[e(c)]=k[c]e(c);k=[function(e){return d[e]}];e=function(){return'\\\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\\\b'+e(c)+'\\\\b','g'),k[c]);return p}(" +
		"'" + code + "'," + encodeNumber + "," + len + ",'" + dict.join('') + "'.split(''),0,{}))";
}

function num(c) {
	return(c < encodeNumber ? '' : num(parseInt(c / encodeNumber))) + ((c = c % encodeNumber) > 35 ? String.fromCharCode(c + 29) : c.toString(36));
}

function run(code) {
	eval(code);
}

function decode(code) {
	code = code.replace(/^eval/, '');
	return eval(code);
}

function MakeTdButton(_td, _option) {
	var _e = encode(_option.ExecuteCode);
	if(_option.innerText) {
		$(_td).html(_option.innerText);
		var href = $(_td).find('a');
		href.addClass("edit").addClass("innerButton").attr("tar", _option.target).attr("href", "javascript:void(0);").attr("executecode", escape(_e));
		return $(_td).html();
	} else {
		var href = $(_td).find('a');
		if(href.length == 0)
			return '<a href="javascript:void(0);" tar="' + _option.target + '" name="' + _option.codename + '" class="button edit" executecode="' + escape(_e) + '">' + $(_td).html() + '</a>';
		else {
			href.addClass("button").attr('name', _option.codename).attr("tar", _option.target).attr("href", "javascript:void(0);");
			return $(_td).html();
		}
	}
}

/*table-form-workflow-1.0.min.js*/

function GetWFDataFromFile(_path, _handle) {
	OnlineData({
		param: 'file',
		path: _path + '/default.zwfl'
	}, function(data) {
		_handle(data);
	}, FILE_URL);
}

function CalcStartNodeFromData(_wdata, _rdata, _data) {
	var lines = _wdata.lines;
	var nodes = _wdata.nodes;
	var _node = _rdata.node;
	if(!_node) {
		if(_rdata && ((_rdata.orga && _rdata.posi) || _rdata.user)) {
			for(var key in nodes) {
				var node = nodes[key];
				if(node.type == "task" && node._start == 1) {
					if(node.user == _rdata.user) {
						_node = key;
					} else if((node.orga == '-8' || node.orga == '-9' || node.orga == "-10" || node.orga == _rdata.orga) && node.posi == _rdata.posi) {
						_node = key;
					}
				}
			}
		}
		if(!_node)
			for(var key in nodes) {
				if(nodes[key].type == "start") {
					_node = key;
					break;
				}
			}
	}
	return _node;
}

function CalcNextNodeFromData(_wdata, _rdata, _data) {
	var lines = _wdata.lines;
	var nodes = _wdata.nodes;
	var _node = _rdata.node;
	if(!_node) _node = CalcStartNodeFromData(_wdata, _rdata, _data);
	var nextNodes = [];
	for(var key in lines) {
		if(lines[key].from == _node) {
			var _to = lines[key].to;
			nodes[_to].__node_id = _to;
			nextNodes.push(nodes[_to]);
		}
	}
	nextNodes.sort(function(a, b) {
		return b._order < a._order;
	});
	return {
		node: _node,
		nexts: nextNodes
	};
}

function CalcNextNode(_node, _wdata) {
	var nodes = _wdata.nodes;
	var lines = _wdata.lines;
	for(var key in lines) {
		if(nodes[lines[key].from] == _node) {
			var _to = lines[key].to;
			return {
				__node_id: _to,
				node: nodes[_to]
			};
		}
	}
	return null;
}

function CalcNodeTaskRes(_name, _nodes, _wdata, _data) {
	var nodes = _wdata.nodes;
	var lines = _wdata.lines;
	var sucNext = [];
	for(var i = 0; i < _nodes.length; i++) {
		var _relation = _nodes[i]._relation;
		if(_relation && _relation !== "") {
			var w = calcTemplate(_relation, _data, true);
			if(w == true) {
				sucNext.push(_nodes[i]);
			}
		} else {
			sucNext.push(_nodes[i]);
		}
	}
	var nextTaskNodes = [];
	for(var i = 0; i < sucNext.length; i++) {
		if(sucNext[i].type == "task") {
			nextTaskNodes.push(sucNext[i]);
		} else if(sucNext[i].type == "fork") {
			for(var key in lines) {
				if(nodes[lines[key].from] == sucNext[i]) {
					var tNode = nodes[lines[key].to];
					tNode.__node_id = lines[key].to;
					nextTaskNodes.push(tNode);
				}
			}
		} else if(sucNext[i].type == "join") {} else if(sucNext[i].type == "end") {
			nextTaskNodes.push(sucNext[i]);
		} else {}
	}
	var taskOrgTexts = [];
	var nextTaskRes = [];
	for(var i = 0; i < nextTaskNodes.length; i++) {
		var nNode = nextTaskNodes[i];
		if(nNode.type == "end") {
			nextTaskRes.push({
				name: _name,
				node: nNode.__node_id,
				flag: 16
			});
			break;
		}
		var _config = nNode._config;
		if(_config && _config !== "") {
			var w = calcTemplate(_config, _data, true);
			if(w) {
				w.node = nNode.__node_id;
				w.name = _name;
				nextTaskRes.push(w);
			}
		} else {
			nextTaskRes.push({
				name: _name,
				node: nNode.__node_id,
				orga: nNode.orga,
				orgText: nNode.orgText,
				posi: nNode.posi,
				user: nNode.user
			});
		}
		if(nNode.orgText)
			taskOrgTexts.push(nNode);
		var nNext = CalcNextNode(nNode, _wdata);
		if(nNext && nNext.node.type == "task") {
			break;
		}
	}
	return {
		taskOrgTexts: taskOrgTexts,
		nexts: nextTaskRes
	};
}

function GetOrgDataFromOnline(table, _handle) {
	var _path = table.attr("path");
	var i = _path.indexOf('/');
	_path = _path.substring(0, i);
	OnlineData({
		param: 'file',
		path: _path + '/org.data'
	}, function(data) {
		_handle(data);
	}, FILE_URL);
}

function postToWF(table, btn, _handle) {
	var _table = table.get(0);
	var _data = _table._data;
	if(!_data)
		_data = wrapFormData(table, true);
	var _rdata = _table._rdata;
	if(_rdata && _rdata.user) {
		var _wdata = _table._wdata;
		postWFToDB(table, _wdata, _rdata, _data, _handle ? function(data) {
			_handle(data)
		} : null);
	} else {
		alert('请先保存数据！');
	}
}

function postWFToDB(table, _wdata, _rdata, _data, _handle) {
	var _name = table.attr('code');
	var nextNodes = CalcNextNodeFromData(_wdata, _rdata, _data);
	var nextTasks = CalcNodeTaskRes(_name, nextNodes.nexts, _wdata, _data);
	var prs;
	var nextTaskRes = nextTasks.nexts;
	if(nextTaskRes.length == 0) {
		alert('流程配置错误,无法计算下一组节点!');
	} else {
		if(nextTasks.taskOrgTexts.length > 0) {
			var orgID = _rdata.orga;
			if(orgID == "-8") {
				var orgaControl = table.find('[workflowFlag="1"]');
				var orgID = '';
				if(orgaControl.length == 1)
					orgID = orgaControl.val();
			}
			GetOrgDataFromOnline(table, function(_odata) {
				findOrgParent(_odata.root, orgID);
				if(prs) {
					for(var i = 0; i < nextTaskRes.length; i++) {
						for(var j = 0; j < prs.children.length; j++) {
							var _otext = ',' + nextTaskRes[i].orgText + ',';
							if(_otext.indexOf(',' + prs.children[j].text + ',') >= 0) {
								nextTaskRes[i].orga = prs.children[j].id;
							}
						}
					}
				}
				pushDataToDB();
			});
		} else
			pushDataToDB();
	}

	function findOrgParent(org, nid) {
		if(org.children) {
			for(var i = 0; i < org.children.length; i++) {
				if(org.children[i].id == nid) {
					prs = org;
					break;
				} else
					findOrgParent(org.children[i], nid);
			}
		}
	}

	function pushDataToDB() {
		var datas = [];
		var content = table.closest('.formcontainer').find('.content_workflow textarea[name="content"]').val();
		var agree = table.closest('.formcontainer').find('.content_workflow input[name="agree"]:checked').val();
		if(_rdata.isStart) {
			content = '提交[' + document.title + ']编号[' + table.find('tr:not([rowid]):not([nrowid]) input[name="code"]').val() + ']';
			agree = 2;
		}
		datas.push({
			name: _name,
			historyid: _rdata.id,
			did: _data.id,
			calcType: 1,
			node: nextNodes.node,
			orga: _user_status.orga,
			posi: _user_status.posi,
			user: _user_status.user,
			username: _user_status.username,
			flag: 1,
			content: content,
			agree: agree
		});
		for(var i = 0; i < nextTaskRes.length; i++) {
			var ndata = nextTaskRes[i];
			if(ndata.orga == "-9")
				ndata.orga = "";
			else if(ndata.orga == "-10" || ndata.orga == "-8") {
				var orgaControl = table.find('[workflowFlag="1"]');
				if(orgaControl.length == 1)
					ndata.orga = orgaControl.val();
				else
					ndata.orga = "0";
			}
			ndata.calcType = 1;
			ndata.historyid = _rdata.id;
			ndata.did = _data.id;
			ndata.content = content;
			ndata.agree = agree;
			datas.push(ndata);
		}
		table[0]._postData = datas;
		SaveWFDataToDB(datas, function(data) {
			if(_handle) _handle(data);
		})
	}
}

function backWFToStart(table, btn, _handle) {
	var _name = table.attr('code');
	var _table = table.get(0);
	var _data = _table._data;
	if(!_data)
		_data = wrapFormData(table, true);
	var _details = FindTableDetailNames(table);
	var _rdata = _table._rdata;
	if(_rdata && _rdata.user) {
		var datas = [];
		var content = table.closest('.formcontainer').find('.content_workflow textarea[name="content"]').val();
		var agree = table.closest('.formcontainer').find('.content_workflow input[name="agree"]:checked').val();
		datas.push({
			name: _name,
			details: _details,
			did: _data.id,
			historyid: _rdata.id,
			calcType: 1,
			node: "-1",
			orga: _user_status.orga,
			posi: _user_status.posi,
			user: _user_status.user,
			username: _user_status.username,
			flag: 5,
			content: content,
			agree: agree
		});
		SaveWFDataToDB(datas, function(data) {
			if(_handle) _handle(data);
		})
	} else {
		alert('请先保存数据！');
	}
}

function SaveWFDataToDB(datas, _handle) {
	OnlineData({
		param: 'saveWF',
		data: JSON.stringify(datas)
	}, function(data) {
		if(_handle) _handle(data);
	}, TABLE_URL);
}

function createWFToolbar(table) {
	var _table = table.get(0);
	var _wdata = _table._wdata;
	var _rdata = _table._rdata;
	var toolbar = $('.button_workflow');
	if(_rdata.node) {
		if(toolbar.find('.added').length == 0) {
			var nodes = _wdata.nodes;
			var currentNode = nodes[_rdata.node];
			var tid = table.attr("id");
			toolbar.append('<a class="btn btn-red added" href="javascript:void(0);" onclick="postToWF($(\'#' + tid + '\'),this,function(data){operateResultData($(\'#' + tid + '\'),data)})">提交</a>');
			if(!_rdata.isStart) {
				$('.content_workflow').show();
				toolbar.append('<a class="btn btn-red added" href="javascript:void(0);" onclick="backWFToStart($(\'#' + tid + '\'),this,function(data){operateResultData($(\'#' + tid + '\'),data)})">退回</a>');
			}
		}
	} else {
		alert('流程起始节点配置错误');
		return;
	}
}

function operateResultData(table, data) {
	if(data.success == true) {
		var ret = '';
		var _table = table[0];
		var datas = _table._postData;
		if(datas) {
			var data = data.datas;
			for(var i = 0; i < data.length; i++) {
				var d = data[i].data[0];
				if(d.flag == 0)
					ret += d.username;
			}
			if(ret !== "") {
				ret = '您的单据已经提交到:[' + ret + ']';
			} else
				ret = '提交成功!';
			alert(ret);
			setTimeout(function() {
				closeForm();
			}, 3000);
		} else {
			alert('单据已经退回!');
			setTimeout(function() {
				closeForm();
			}, 3000);
		}
	} else {
		alert(unescape(data.errors));
	}
}

function initWorkFlow(table, _rdata, _data, _handle) {
	var _path = table.attr("path");
	var _code = table.attr("code");
	var _table = table.get(0);
	GetWFDataFromFile(_path, function(_wdata) {
		if(!_rdata) {
			_rdata = wrapWorkFlowData(table);
		}
		_table._wdata = _wdata;
		if(!_rdata.node) {
			_rdata.node = CalcStartNodeFromData(_wdata, _rdata, _data);
			_rdata.isStart = true;
		}
		_table._rdata = _rdata;
		createWFToolbar(table);
		if(_handle) _handle(table);
	});
}

function wrapWorkFlowData(table) {
	var data = _user_status;
	table.find('[workflowFlag!="0"]').each(function() {
		var flag = $(this).attr("workflowFlag");
		if(flag == 1) {
			data.orga = $(this).val();
		} else if(flag == 2) {
			data.posi = $(this).val();
		} else if(flag == 3) {
			data.user = $(this).val();
		}
	});
	return data;
}

function wrapWorkFlowDataFromData(table, data) {
	var rdata = _user_status;
	table.find('tr:not([rowid]) td[fb-options]').each(function() {
		var ostr = $(this).attr("fb-options");
		options = eval('(' + unescape(ostr) + ')');
		var flag = options.workflowFlag;
		if(flag == 1) {
			rdata.orga = data[options.codename];
		} else if(flag == 2) {
			rdata.posi = data[options.codename];
		} else if(flag == 3) {
			rdata.user = data[options.codename];
		}
	});
	return rdata;
}

function initWorkFlowFromData(table, _data, nodedata, _sucHandle, _errHandle) {
	getNextNodesFromDB(table, nodedata, function(_rdata) {
		if(!_rdata.node) {
			if(_errHandle) _errHandle();
		} else {
			if(_data) table[0]._data = _data;
			initWorkFlow(table, _rdata, _data, function(data) {
				if(_sucHandle) _sucHandle(data);
			});
		}
	})
}

function getNextNodesFromDB(table, nodedata, _handle) {
	var rdata = wrapWorkFlowData(table);
	if(!nodedata)
		_handle(rdata);
	else {
		var _rdata = rdata;
		OnlineData({
			param: 'workflow',
			maxid: nodedata.id,
			did: nodedata.did
		}, function(data) {
			if(data.length == 1) {
				_rdata = data[0];
				_rdata.user = _user_status.user;
			}
			_handle(_rdata);
		}, TABLE_URL);
	}
}

function makeWorkFlowTimeLine(table, _wpanel, _data) {
	$('#_WorkFlowTimeLine').show();
	var source = _wpanel.html();
	var render = template.compile(source);
	var html = render({
		rows: _data
	});
	var whtml = $(html);
	_wpanel.html(html);
	_wpanel.find('.WorkFlowPhoto').html('<iframe src="/kde/workflow/show.chi?code=' + table.attr('path') + '" ></iframe>');
}

function changeDisplayPanel(panels) {
	for(var i = 0; i < panels.length; i++) {
		if($(panels[i]).is(':hidden')) {
			$(panels[i]).show();
		} else {
			$(panels[i]).hide();
			$('#_WorkFlowTimeLine').text($(panels[i]).attr('title'));
		}
	}
}

;
(function($) {
	var counter = 0;
	var modes = {
		iframe: "iframe",
		popup: "popup"
	};
	var defaults = {
		mode: modes.iframe,
		popHt: 500,
		popWd: 400,
		popX: 200,
		popY: 200,
		popTitle: '',
		popClose: false
	};

	var settings = {}; //global settings

	$.fn.printArea = function(options, _handle) {
		$.extend(settings, defaults, options);

		counter++;
		var idPrefix = "printArea_";
		$("[id^=" + idPrefix + "]").remove();
		var ele = getFormData($(this));

		settings.id = idPrefix + counter;

		var writeDoc;
		var printWindow;

		switch(settings.mode) {
			case modes.iframe:
				var f = new Iframe();
				writeDoc = f.doc;
				printWindow = f.contentWindow || f;
				break;
			case modes.popup:
				printWindow = new Popup();
				writeDoc = printWindow.doc;
		}

		writeDoc.open();
		var html = docType() + "<html>" + getHead() + getBody(ele) + "</html>";
		if(_handle) html = _handle(html);
		writeDoc.write(html);
		writeDoc.close();

		printWindow.focus();
		printWindow.print();

		if(settings.mode == modes.popup && settings.popClose)
			printWindow.close();
	}

	function docType() {
		if(settings.mode == modes.iframe || !settings.strict) return "";

		var standard = settings.strict == false ? " Trasitional" : "";
		var dtd = settings.strict == false ? "loose" : "strict";

		return '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01' + standard + '//EN" "http://www.w3.org/TR/html4/' + dtd + '.dtd">';
	}

	function getHead() {
		var head = "<head><title>" + settings.popTitle + "</title>";
		$(document).find("link")
			.filter(function() {
				return $(this).attr("rel").toLowerCase() == "stylesheet";
			})
			.filter(function() { // this filter contributed by "mindinquiring"
				var media = $(this).attr("media");
				if(media == undefined) {
					return false;
				} else {
					return(media.toLowerCase().indexOf("all") >= 0 || media.toLowerCase().indexOf("print") >= 0);
				}
			})
			.each(function() {
				head += '<link type="text/css" rel="stylesheet" href="' + $(this).attr("href") + '" >';
			});
		head += "</head>";
		return head;
	}

	function getBody(printElement) {
		return '<body><div class="' + $(printElement).attr("class") + '">' + $(printElement).html() + '</div></body>';
	}

	function getFormData(ele) {
		$("input,select,textarea", ele).each(function() {
			// In cases where radio, checkboxes and select elements are selected and deselected, and the print
			// button is pressed between select/deselect, the print screen shows incorrectly selected elements.
			// To ensure that the correct inputs are selected, when eventually printed, we must inspect each dom element
			var type = $(this).attr("type");
			if(type == "radio" || type == "checkbox") {
				if($(this).is(":not(:checked)")) this.removeAttribute("checked");
				else this.setAttribute("checked", true);
			} else if(type == "text")
				this.setAttribute("value", $(this).val());
			else if(type == "select-multiple" || type == "select-one")
				$(this).find("option").each(function() {
					if($(this).is(":not(:selected)")) this.removeAttribute("selected");
					else this.setAttribute("selected", true);
				});
			else if(type == "textarea") {
				var v = $(this).attr("value");
				if($.browser.mozilla) {
					if(this.firstChild) this.firstChild.textContent = v;
					else this.textContent = v;
				} else this.innerHTML = v;
			}
		});
		return ele;
	}

	function Iframe() {
		var frameId = settings.id;
		var iframeStyle = 'border:0;position:absolute;width:0px;height:0px;left:0px;top:0px;';
		var iframe;

		try {
			iframe = document.createElement('iframe');
			document.body.appendChild(iframe);
			$(iframe).attr({
				style: iframeStyle,
				id: frameId,
				src: ""
			});
			iframe.doc = null;
			iframe.doc = iframe.contentDocument ? iframe.contentDocument : (iframe.contentWindow ? iframe.contentWindow.document : iframe.document);
		} catch(e) {
			throw e + ". iframes may not be supported in this browser.";
		}

		if(iframe.doc == null) throw "Cannot find document.";

		return iframe;
	}

	function Popup() {
		var windowAttr = "location=no,statusbar=no,directories=no,menubar=no,titlebar=no,toolbar=no,dependent=no";
		windowAttr += ",width=595px,height=842px,top=0,left=0,toolbar=no,scrollbars=no,personalbar=no";
		windowAttr += ",resizable=yes,screenX=" + settings.popX + ",screenY=" + settings.popY + "";

		var newWin = window.open("", "_blank", windowAttr);

		newWin.doc = newWin.document;

		return newWin;
	}

})(jQuery);;﻿
/**
 * @license
 * =========================================================
 * bootstrap-datetimepicker.js
 * http://www.eyecon.ro/bootstrap-datepicker
 * =========================================================
 * Copyright 2012 Stefan Petre
 *
 * Contributions:
 *  - Andrew Rowls
 *  - Thiago de Arruda
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =========================================================
 */
(function($) {
	var smartPhone = window.orientation != undefined;
	var DateTimePicker = function(element, options) {
		this.id = dpgId++;
		this.init(element, options)
	};
	var dateToDate = function(dt) {
		if(typeof dt === "string") {
			return new Date(dt)
		}
		return dt
	};
	DateTimePicker.prototype = {
		constructor: DateTimePicker,
		init: function(element, options) {
			var icon;
			if(!(options.pickTime || options.pickDate)) throw new Error("Must choose at least one picker");
			this.options = options;
			this.$element = $(element);
			this.language = options.language in dates ? options.language : "en";
			this.pickDate = options.pickDate;
			this.pickTime = options.pickTime;
			this.isInput = this.$element.is("input");
			this.component = false;
			if(this.$element.find(".input-append") || this.$element.find(".input-prepend")) this.component = this.$element.find(".add-on");
			this.format = options.format;
			if(!this.format) {
				if(this.isInput) this.format = this.$element.data("format");
				else this.format = this.$element.find("input").data("format");
				if(!this.format) this.format = "MM/dd/yyyy"
			}
			this._compileFormat();
			if(this.component) {
				icon = this.component.find("i")
			}
			if(this.pickTime) {
				if(icon && icon.length) this.timeIcon = icon.data("time-icon");
				if(!this.timeIcon) this.timeIcon = "icon-time";
				icon.addClass(this.timeIcon)
			}
			if(this.pickDate) {
				if(icon && icon.length) this.dateIcon = icon.data("date-icon");
				if(!this.dateIcon) this.dateIcon = "icon-calendar";
				icon.removeClass(this.timeIcon);
				icon.addClass(this.dateIcon)
			}
			this.widget = $(getTemplate(this.timeIcon, options.pickDate, options.pickTime, options.pick12HourFormat, options.pickSeconds, options.collapse)).appendTo("body");
			this.minViewMode = options.minViewMode || this.$element.data("date-minviewmode") || 0;
			if(typeof this.minViewMode === "string") {
				switch(this.minViewMode) {
					case "months":
						this.minViewMode = 1;
						break;
					case "years":
						this.minViewMode = 2;
						break;
					default:
						this.minViewMode = 0;
						break
				}
			}
			this.viewMode = options.viewMode || this.$element.data("date-viewmode") || 0;
			if(typeof this.viewMode === "string") {
				switch(this.viewMode) {
					case "months":
						this.viewMode = 1;
						break;
					case "years":
						this.viewMode = 2;
						break;
					default:
						this.viewMode = 0;
						break
				}
			}
			this.startViewMode = this.viewMode;
			this.weekStart = options.weekStart || this.$element.data("date-weekstart") || 0;
			this.weekEnd = this.weekStart === 0 ? 6 : this.weekStart - 1;
			this.setStartDate(options.startDate || this.$element.data("date-startdate"));
			this.setEndDate(options.endDate || this.$element.data("date-enddate"));
			this.fillDow();
			this.fillMonths();
			this.fillHours();
			this.fillMinutes();
			this.fillSeconds();
			this.update();
			this.showMode();
			this._attachDatePickerEvents()
		},
		show: function(e) {
			this.widget.show();
			this.height = this.component ? this.component.outerHeight() : this.$element.outerHeight();
			this.place();
			this.$element.trigger({
				type: "show",
				date: this._date
			});
			this._attachDatePickerGlobalEvents();
			if(e) {
				e.stopPropagation();
				e.preventDefault()
			}
		},
		disable: function() {
			this.$element.find("input").prop("disabled", true);
			this._detachDatePickerEvents()
		},
		enable: function() {
			this.$element.find("input").prop("disabled", false);
			this._attachDatePickerEvents()
		},
		hide: function() {
			var collapse = this.widget.find(".collapse");
			for(var i = 0; i < collapse.length; i++) {
				var collapseData = collapse.eq(i).data("collapse");
				if(collapseData && collapseData.transitioning) return
			}
			this.widget.hide();
			this.viewMode = this.startViewMode;
			this.showMode();
			this.set();
			this.$element.trigger({
				type: "hide",
				date: this._date
			});
			this._detachDatePickerGlobalEvents()
		},
		set: function() {
			var formatted = "";
			if(!this._unset) formatted = this.formatDate(this._date);
			if(!this.isInput) {
				if(this.component) {
					var input = this.$element.find("input");
					input.val(formatted);
					this._resetMaskPos(input)
				}
				this.$element.data("date", formatted)
			} else {
				this.$element.val(formatted);
				this._resetMaskPos(this.$element)
			}
		},
		setValue: function(newDate) {
			if(!newDate) {
				this._unset = true
			} else {
				this._unset = false
			}
			if(typeof newDate === "string") {
				this._date = this.parseDate(newDate)
			} else if(newDate) {
				this._date = new Date(newDate)
			}
			this.set();
			this.viewDate = UTCDate(this._date.getUTCFullYear(), this._date.getUTCMonth(), 1, 0, 0, 0, 0);
			this.fillDate();
			this.fillTime()
		},
		getDate: function() {
			if(this._unset) return null;
			return new Date(this._date.valueOf())
		},
		setDate: function(date) {
			if(!date) this.setValue(null);
			else this.setValue(date.valueOf())
		},
		setStartDate: function(date) {
			if(date instanceof Date) {
				this.startDate = date
			} else if(typeof date === "string") {
				this.startDate = new UTCDate(date);
				if(!this.startDate.getUTCFullYear()) {
					this.startDate = -Infinity
				}
			} else {
				this.startDate = -Infinity
			}
			if(this.viewDate) {
				this.update()
			}
		},
		setEndDate: function(date) {
			if(date instanceof Date) {
				this.endDate = date
			} else if(typeof date === "string") {
				this.endDate = new UTCDate(date);
				if(!this.endDate.getUTCFullYear()) {
					this.endDate = Infinity
				}
			} else {
				this.endDate = Infinity
			}
			if(this.viewDate) {
				this.update()
			}
		},
		getLocalDate: function() {
			if(this._unset) return null;
			var d = this._date;
			return new Date(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate(), d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds())
		},
		setLocalDate: function(localDate) {
			if(!localDate) this.setValue(null);
			else this.setValue(Date.UTC(localDate.getFullYear(), localDate.getMonth(), localDate.getDate(), localDate.getHours(), localDate.getMinutes(), localDate.getSeconds(), localDate.getMilliseconds()))
		},
		place: function() {
			var position = "absolute";
			var offset = this.component ? this.component.offset() : this.$element.offset();
			this.width = this.component ? this.component.outerWidth() : this.$element.outerWidth();
			offset.top = offset.top + this.height;
			var $window = $(window);
			if(this.options.width != undefined) {
				this.widget.width(this.options.width)
			}
			if(this.options.orientation == "left") {
				this.widget.addClass("left-oriented");
				offset.left = offset.left - this.widget.width() + 20
			}
			if(this._isInFixed()) {
				position = "fixed";
				offset.top -= $window.scrollTop();
				offset.left -= $window.scrollLeft()
			}
			if($window.width() < offset.left + this.widget.outerWidth()) {
				offset.right = $window.width() - offset.left - this.width;
				offset.left = "auto";
				this.widget.addClass("pull-right")
			} else {
				offset.right = "auto";
				this.widget.removeClass("pull-right")
			}
			this.widget.css({
				position: position,
				top: offset.top,
				left: offset.left,
				right: offset.right
			})
		},
		notifyChange: function() {
			this.$element.trigger({
				type: "changeDate",
				date: this.getDate(),
				localDate: this.getLocalDate()
			})
		},
		update: function(newDate) {
			var dateStr = newDate;
			if(!dateStr) {
				if(this.isInput) {
					dateStr = this.$element.val()
				} else {
					dateStr = this.$element.find("input").val()
				}
				if(dateStr) {
					this._date = this.parseDate(dateStr)
				}
				if(!this._date) {
					var tmp = new Date;
					this._date = UTCDate(tmp.getFullYear(), tmp.getMonth(), tmp.getDate(), tmp.getHours(), tmp.getMinutes(), tmp.getSeconds(), tmp.getMilliseconds())
				}
			}
			this.viewDate = UTCDate(this._date.getUTCFullYear(), this._date.getUTCMonth(), 1, 0, 0, 0, 0);
			this.fillDate();
			this.fillTime()
		},
		fillDow: function() {
			var dowCnt = this.weekStart;
			var html = $("<tr>");
			while(dowCnt < this.weekStart + 7) {
				html.append('<th class="dow">' + dates[this.language].daysMin[dowCnt++ % 7] + "</th>")
			}
			this.widget.find(".datepicker-days thead").append(html)
		},
		fillMonths: function() {
			var html = "";
			var i = 0;
			while(i < 12) {
				html += '<span class="month">' + dates[this.language].monthsShort[i++] + "</span>"
			}
			this.widget.find(".datepicker-months td").append(html)
		},
		fillDate: function() {
			var year = this.viewDate.getUTCFullYear();
			var month = this.viewDate.getUTCMonth();
			var currentDate = UTCDate(this._date.getUTCFullYear(), this._date.getUTCMonth(), this._date.getUTCDate(), 0, 0, 0, 0);
			var startYear = typeof this.startDate === "object" ? this.startDate.getUTCFullYear() : -Infinity;
			var startMonth = typeof this.startDate === "object" ? this.startDate.getUTCMonth() : -1;
			var endYear = typeof this.endDate === "object" ? this.endDate.getUTCFullYear() : Infinity;
			var endMonth = typeof this.endDate === "object" ? this.endDate.getUTCMonth() : 12;
			this.widget.find(".datepicker-days").find(".disabled").removeClass("disabled");
			this.widget.find(".datepicker-months").find(".disabled").removeClass("disabled");
			this.widget.find(".datepicker-years").find(".disabled").removeClass("disabled");
			this.widget.find(".datepicker-days th:eq(1)").text(dates[this.language].months[month] + " " + year);
			var prevMonth = UTCDate(year, month - 1, 28, 0, 0, 0, 0);
			var day = DPGlobal.getDaysInMonth(prevMonth.getUTCFullYear(), prevMonth.getUTCMonth());
			prevMonth.setUTCDate(day);
			prevMonth.setUTCDate(day - (prevMonth.getUTCDay() - this.weekStart + 7) % 7);
			if(year == startYear && month <= startMonth || year < startYear) {
				this.widget.find(".datepicker-days th:eq(0)").addClass("disabled")
			}
			if(year == endYear && month >= endMonth || year > endYear) {
				this.widget.find(".datepicker-days th:eq(2)").addClass("disabled")
			}
			var nextMonth = new Date(prevMonth.valueOf());
			nextMonth.setUTCDate(nextMonth.getUTCDate() + 42);
			nextMonth = nextMonth.valueOf();
			var html = [];
			var row;
			var clsName;
			while(prevMonth.valueOf() < nextMonth) {
				if(prevMonth.getUTCDay() === this.weekStart) {
					row = $("<tr>");
					html.push(row)
				}
				clsName = "";
				if(prevMonth.getUTCFullYear() < year || prevMonth.getUTCFullYear() == year && prevMonth.getUTCMonth() < month) {
					clsName += " old"
				} else if(prevMonth.getUTCFullYear() > year || prevMonth.getUTCFullYear() == year && prevMonth.getUTCMonth() > month) {
					clsName += " new"
				}
				if(prevMonth.valueOf() === currentDate.valueOf()) {
					clsName += " active"
				}
				if(prevMonth.valueOf() + 864e5 <= this.startDate) {
					clsName += " disabled"
				}
				if(prevMonth.valueOf() > this.endDate) {
					clsName += " disabled"
				}
				row.append('<td class="day' + clsName + '">' + prevMonth.getUTCDate() + "</td>");
				prevMonth.setUTCDate(prevMonth.getUTCDate() + 1)
			}
			this.widget.find(".datepicker-days tbody").empty().append(html);
			var currentYear = this._date.getUTCFullYear();
			var months = this.widget.find(".datepicker-months").find("th:eq(1)").text(year).end().find("span").removeClass("active");
			if(currentYear === year) {
				months.eq(this._date.getUTCMonth()).addClass("active")
			}
			if(currentYear - 1 < startYear) {
				this.widget.find(".datepicker-months th:eq(0)").addClass("disabled")
			}
			if(currentYear + 1 > endYear) {
				this.widget.find(".datepicker-months th:eq(2)").addClass("disabled")
			}
			for(var i = 0; i < 12; i++) {
				if(year == startYear && startMonth > i || year < startYear) {
					$(months[i]).addClass("disabled")
				} else if(year == endYear && endMonth < i || year > endYear) {
					$(months[i]).addClass("disabled")
				}
			}
			html = "";
			year = parseInt(year / 10, 10) * 10;
			var yearCont = this.widget.find(".datepicker-years").find("th:eq(1)").text(year + "-" + (year + 9)).end().find("td");
			this.widget.find(".datepicker-years").find("th").removeClass("disabled");
			if(startYear > year) {
				this.widget.find(".datepicker-years").find("th:eq(0)").addClass("disabled")
			}
			if(endYear < year + 9) {
				this.widget.find(".datepicker-years").find("th:eq(2)").addClass("disabled")
			}
			year -= 1;
			for(var i = -1; i < 11; i++) {
				html += '<span class="year' + (i === -1 || i === 10 ? " old" : "") + (currentYear === year ? " active" : "") + (year < startYear || year > endYear ? " disabled" : "") + '">' + year + "</span>";
				year += 1
			}
			yearCont.html(html)
		},
		fillHours: function() {
			var table = this.widget.find(".timepicker .timepicker-hours table");
			table.parent().hide();
			var html = "";
			if(this.options.pick12HourFormat) {
				var current = 1;
				for(var i = 0; i < 3; i += 1) {
					html += "<tr>";
					for(var j = 0; j < 4; j += 1) {
						var c = current.toString();
						html += '<td class="hour">' + padLeft(c, 2, "0") + "</td>";
						current++
					}
					html += "</tr>"
				}
			} else {
				var current = 0;
				for(var i = 0; i < 6; i += 1) {
					html += "<tr>";
					for(var j = 0; j < 4; j += 1) {
						var c = current.toString();
						html += '<td class="hour">' + padLeft(c, 2, "0") + "</td>";
						current++
					}
					html += "</tr>"
				}
			}
			table.html(html)
		},
		fillMinutes: function() {
			var table = this.widget.find(".timepicker .timepicker-minutes table");
			table.parent().hide();
			var html = "";
			var current = 0;
			for(var i = 0; i < 5; i++) {
				html += "<tr>";
				for(var j = 0; j < 4; j += 1) {
					var c = current.toString();
					html += '<td class="minute">' + padLeft(c, 2, "0") + "</td>";
					current += 3
				}
				html += "</tr>"
			}
			table.html(html)
		},
		fillSeconds: function() {
			var table = this.widget.find(".timepicker .timepicker-seconds table");
			table.parent().hide();
			var html = "";
			var current = 0;
			for(var i = 0; i < 5; i++) {
				html += "<tr>";
				for(var j = 0; j < 4; j += 1) {
					var c = current.toString();
					html += '<td class="second">' + padLeft(c, 2, "0") + "</td>";
					current += 3
				}
				html += "</tr>"
			}
			table.html(html)
		},
		fillTime: function() {
			if(!this._date) return;
			var timeComponents = this.widget.find(".timepicker span[data-time-component]");
			var table = timeComponents.closest("table");
			var is12HourFormat = this.options.pick12HourFormat;
			var hour = this._date.getUTCHours();
			var period = "AM";
			if(is12HourFormat) {
				if(hour >= 12) period = "PM";
				if(hour === 0) hour = 12;
				else if(hour != 12) hour = hour % 12;
				this.widget.find(".timepicker [data-action=togglePeriod]").text(period)
			}
			hour = padLeft(hour.toString(), 2, "0");
			var minute = padLeft(this._date.getUTCMinutes().toString(), 2, "0");
			var second = padLeft(this._date.getUTCSeconds().toString(), 2, "0");
			timeComponents.filter("[data-time-component=hours]").text(hour);
			timeComponents.filter("[data-time-component=minutes]").text(minute);
			timeComponents.filter("[data-time-component=seconds]").text(second)
		},
		click: function(e) {
			e.stopPropagation();
			e.preventDefault();
			this._unset = false;
			var target = $(e.target).closest("span, td, th");
			if(target.length === 1) {
				if(!target.is(".disabled")) {
					switch(target[0].nodeName.toLowerCase()) {
						case "th":
							switch(target[0].className) {
								case "switch":
									this.showMode(1);
									break;
								case "prev":
								case "next":
									var vd = this.viewDate;
									var navFnc = DPGlobal.modes[this.viewMode].navFnc;
									var step = DPGlobal.modes[this.viewMode].navStep;
									if(target[0].className === "prev") step = step * -1;
									vd["set" + navFnc](vd["get" + navFnc]() + step);
									this.fillDate();
									this.set();
									break
							}
							break;
						case "span":
							if(target.is(".month")) {
								var month = target.parent().find("span").index(target);
								this.viewDate.setUTCMonth(month)
							} else {
								var year = parseInt(target.text(), 10) || 0;
								this.viewDate.setUTCFullYear(year)
							}
							if(this.viewMode !== 0) {
								this._date = UTCDate(this.viewDate.getUTCFullYear(), this.viewDate.getUTCMonth(), this.viewDate.getUTCDate(), this._date.getUTCHours(), this._date.getUTCMinutes(), this._date.getUTCSeconds(), this._date.getUTCMilliseconds());
								this.notifyChange()
							}
							this.showMode(-1);
							this.fillDate();
							this.set();
							break;
						case "td":
							if(target.is(".day")) {
								var day = parseInt(target.text(), 10) || 1;
								var month = this.viewDate.getUTCMonth();
								var year = this.viewDate.getUTCFullYear();
								if(target.is(".old")) {
									if(month === 0) {
										month = 11;
										year -= 1
									} else {
										month -= 1
									}
								} else if(target.is(".new")) {
									if(month == 11) {
										month = 0;
										year += 1
									} else {
										month += 1
									}
								}
								this._date = UTCDate(year, month, day, this._date.getUTCHours(), this._date.getUTCMinutes(), this._date.getUTCSeconds(), this._date.getUTCMilliseconds());
								this.viewDate = UTCDate(year, month, Math.min(28, day), 0, 0, 0, 0);
								this.fillDate();
								this.set();
								this.notifyChange()
							}
							break
					}
				}
			}
		},
		actions: {
			incrementHours: function(e) {
				this._date.setUTCHours(this._date.getUTCHours() + 1)
			},
			incrementMinutes: function(e) {
				this._date.setUTCMinutes(this._date.getUTCMinutes() + 1)
			},
			incrementSeconds: function(e) {
				this._date.setUTCSeconds(this._date.getUTCSeconds() + 1)
			},
			decrementHours: function(e) {
				this._date.setUTCHours(this._date.getUTCHours() - 1)
			},
			decrementMinutes: function(e) {
				this._date.setUTCMinutes(this._date.getUTCMinutes() - 1)
			},
			decrementSeconds: function(e) {
				this._date.setUTCSeconds(this._date.getUTCSeconds() - 1)
			},
			togglePeriod: function(e) {
				var hour = this._date.getUTCHours();
				if(hour >= 12) hour -= 12;
				else hour += 12;
				this._date.setUTCHours(hour)
			},
			showPicker: function() {
				this.widget.find(".timepicker > div:not(.timepicker-picker)").hide();
				this.widget.find(".timepicker .timepicker-picker").show()
			},
			showHours: function() {
				this.widget.find(".timepicker .timepicker-picker").hide();
				this.widget.find(".timepicker .timepicker-hours").show()
			},
			showMinutes: function() {
				this.widget.find(".timepicker .timepicker-picker").hide();
				this.widget.find(".timepicker .timepicker-minutes").show()
			},
			showSeconds: function() {
				this.widget.find(".timepicker .timepicker-picker").hide();
				this.widget.find(".timepicker .timepicker-seconds").show()
			},
			selectHour: function(e) {
				var tgt = $(e.target);
				var value = parseInt(tgt.text(), 10);
				if(this.options.pick12HourFormat) {
					var current = this._date.getUTCHours();
					if(current >= 12) {
						if(value != 12) value = (value + 12) % 24
					} else {
						if(value === 12) value = 0;
						else value = value % 12
					}
				}
				this._date.setUTCHours(value);
				this.actions.showPicker.call(this)
			},
			selectMinute: function(e) {
				var tgt = $(e.target);
				var value = parseInt(tgt.text(), 10);
				this._date.setUTCMinutes(value);
				this.actions.showPicker.call(this)
			},
			selectSecond: function(e) {
				var tgt = $(e.target);
				var value = parseInt(tgt.text(), 10);
				this._date.setUTCSeconds(value);
				this.actions.showPicker.call(this)
			}
		},
		doAction: function(e) {
			e.stopPropagation();
			e.preventDefault();
			if(!this._date) this._date = UTCDate(1970, 0, 0, 0, 0, 0, 0);
			var action = $(e.currentTarget).data("action");
			var rv = this.actions[action].apply(this, arguments);
			this.set();
			this.fillTime();
			this.notifyChange();
			return rv
		},
		stopEvent: function(e) {
			e.stopPropagation();
			e.preventDefault()
		},
		keydown: function(e) {
			var self = this,
				k = e.which,
				input = $(e.target);
			if(k == 8 || k == 46) {
				setTimeout(function() {
					self._resetMaskPos(input)
				})
			}
		},
		keypress: function(e) {
			var k = e.which;
			if(k == 8 || k == 46) {
				return
			}
			var input = $(e.target);
			var c = String.fromCharCode(k);
			var val = input.val() || "";
			val += c;
			var mask = this._mask[this._maskPos];
			if(!mask) {
				return false
			}
			if(mask.end != val.length) {
				return
			}
			if(!mask.pattern.test(val.slice(mask.start))) {
				val = val.slice(0, val.length - 1);
				while((mask = this._mask[this._maskPos]) && mask.character) {
					val += mask.character;
					this._maskPos++
				}
				val += c;
				if(mask.end != val.length) {
					input.val(val);
					return false
				} else {
					if(!mask.pattern.test(val.slice(mask.start))) {
						input.val(val.slice(0, mask.start));
						return false
					} else {
						input.val(val);
						this._maskPos++;
						return false
					}
				}
			} else {
				this._maskPos++
			}
		},
		change: function(e) {
			var input = $(e.target);
			var val = input.val();
			if(this._formatPattern.test(val)) {
				this.update();
				this.setValue(this._date.getTime());
				this.notifyChange();
				this.set()
			} else if(val && val.trim()) {
				this.setValue(this._date.getTime());
				if(this._date) this.set();
				else input.val("")
			} else {
				if(this._date) {
					this.setValue(null);
					this.notifyChange();
					this._unset = true
				}
			}
			this._resetMaskPos(input)
		},
		showMode: function(dir) {
			if(dir) {
				this.viewMode = Math.max(this.minViewMode, Math.min(2, this.viewMode + dir))
			}
			this.widget.find(".datepicker > div").hide().filter(".datepicker-" + DPGlobal.modes[this.viewMode].clsName).show()
		},
		destroy: function() {
			this._detachDatePickerEvents();
			this._detachDatePickerGlobalEvents();
			this.widget.remove();
			this.$element.removeData("datetimepicker");
			this.component.removeData("datetimepicker")
		},
		formatDate: function(d) {
			return this.format.replace(formatReplacer, function(match) {
				var methodName, property, rv, len = match.length;
				if(match === "ms") len = 1;
				property = dateFormatComponents[match].property;
				if(property === "Hours12") {
					rv = d.getUTCHours();
					if(rv === 0) rv = 12;
					else if(rv !== 12) rv = rv % 12
				} else if(property === "Period12") {
					if(d.getUTCHours() >= 12) return "PM";
					else return "AM"
				} else {
					methodName = "get" + property;
					rv = d[methodName]()
				}
				if(methodName === "getUTCMonth") rv = rv + 1;
				if(methodName === "getUTCYear") rv = rv + 1900 - 2e3;
				return padLeft(rv.toString(), len, "0")
			})
		},
		parseDate: function(str) {
			var match, i, property, methodName, value, parsed = {};
			if(!(match = this._formatPattern.exec(str))) return null;
			for(i = 1; i < match.length; i++) {
				property = this._propertiesByIndex[i];
				if(!property) continue;
				value = match[i];
				if(/^\d+$/.test(value)) value = parseInt(value, 10);
				parsed[property] = value
			}
			return this._finishParsingDate(parsed)
		},
		_resetMaskPos: function(input) {
			var val = input.val();
			for(var i = 0; i < this._mask.length; i++) {
				if(this._mask[i].end > val.length) {
					this._maskPos = i;
					break
				} else if(this._mask[i].end === val.length) {
					this._maskPos = i + 1;
					break
				}
			}
		},
		_finishParsingDate: function(parsed) {
			var year, month, date, hours, minutes, seconds, milliseconds;
			year = parsed.UTCFullYear;
			if(parsed.UTCYear) year = 2e3 + parsed.UTCYear;
			if(!year) year = 1970;
			if(parsed.UTCMonth) month = parsed.UTCMonth - 1;
			else month = 0;
			date = parsed.UTCDate || 1;
			hours = parsed.UTCHours || 0;
			minutes = parsed.UTCMinutes || 0;
			seconds = parsed.UTCSeconds || 0;
			milliseconds = parsed.UTCMilliseconds || 0;
			if(parsed.Hours12) {
				hours = parsed.Hours12
			}
			if(parsed.Period12) {
				if(/pm/i.test(parsed.Period12)) {
					if(hours != 12) hours = (hours + 12) % 24
				} else {
					hours = hours % 12
				}
			}
			return UTCDate(year, month, date, hours, minutes, seconds, milliseconds)
		},
		_compileFormat: function() {
			var match, component, components = [],
				mask = [],
				str = this.format,
				propertiesByIndex = {},
				i = 0,
				pos = 0;
			while(match = formatComponent.exec(str)) {
				component = match[0];
				if(component in dateFormatComponents) {
					i++;
					propertiesByIndex[i] = dateFormatComponents[component].property;
					components.push("\\s*" + dateFormatComponents[component].getPattern(this) + "\\s*");
					mask.push({
						pattern: new RegExp(dateFormatComponents[component].getPattern(this)),
						property: dateFormatComponents[component].property,
						start: pos,
						end: pos += component.length
					})
				} else {
					components.push(escapeRegExp(component));
					mask.push({
						pattern: new RegExp(escapeRegExp(component)),
						character: component,
						start: pos,
						end: ++pos
					})
				}
				str = str.slice(component.length)
			}
			this._mask = mask;
			this._maskPos = 0;
			this._formatPattern = new RegExp("^\\s*" + components.join("") + "\\s*$");
			this._propertiesByIndex = propertiesByIndex
		},
		_attachDatePickerEvents: function() {
			var self = this;
			this.widget.on("click", ".datepicker *", $.proxy(this.click, this));
			this.widget.on("click", "[data-action]", $.proxy(this.doAction, this));
			this.widget.on("mousedown", $.proxy(this.stopEvent, this));
			if(this.pickDate && this.pickTime) {
				this.widget.on("click.togglePicker", ".accordion-toggle", function(e) {
					e.stopPropagation();
					var $this = $(this);
					var $parent = $this.closest("ul");
					var expanded = $parent.find(".collapse.in");
					var closed = $parent.find(".collapse:not(.in)");
					if(expanded && expanded.length) {
						var collapseData = expanded.data("collapse");
						if(collapseData && collapseData.transitioning) return;
						expanded.collapse("hide");
						closed.collapse("show");
						$this.find("i").toggleClass(self.timeIcon + " " + self.dateIcon);
						self.$element.find(".add-on i").toggleClass(self.timeIcon + " " + self.dateIcon)
					}
				})
			}
			if(this.isInput) {
				this.$element.on({
					focus: $.proxy(this.show, this),
					change: $.proxy(this.change, this)
				});
				if(this.options.maskInput) {
					this.$element.on({
						keydown: $.proxy(this.keydown, this),
						keypress: $.proxy(this.keypress, this)
					})
				}
			} else {
				this.$element.on({
					change: $.proxy(this.change, this)
				}, "input");
				if(this.options.maskInput) {
					this.$element.on({
						keydown: $.proxy(this.keydown, this),
						keypress: $.proxy(this.keypress, this)
					}, "input")
				}
				if(this.component) {
					this.component.on("click", $.proxy(this.show, this))
				} else {
					this.$element.on("click", $.proxy(this.show, this))
				}
			}
		},
		_attachDatePickerGlobalEvents: function() {
			$(window).on("resize.datetimepicker" + this.id, $.proxy(this.place, this));
			if(!this.isInput) {
				$(document).on("mousedown.datetimepicker" + this.id, $.proxy(this.hide, this))
			}
		},
		_detachDatePickerEvents: function() {
			this.widget.off("click", ".datepicker *", this.click);
			this.widget.off("click", "[data-action]");
			this.widget.off("mousedown", this.stopEvent);
			if(this.pickDate && this.pickTime) {
				this.widget.off("click.togglePicker")
			}
			if(this.isInput) {
				this.$element.off({
					focus: this.show,
					change: this.change
				});
				if(this.options.maskInput) {
					this.$element.off({
						keydown: this.keydown,
						keypress: this.keypress
					})
				}
			} else {
				this.$element.off({
					change: this.change
				}, "input");
				if(this.options.maskInput) {
					this.$element.off({
						keydown: this.keydown,
						keypress: this.keypress
					}, "input")
				}
				if(this.component) {
					this.component.off("click", this.show)
				} else {
					this.$element.off("click", this.show)
				}
			}
		},
		_detachDatePickerGlobalEvents: function() {
			$(window).off("resize.datetimepicker" + this.id);
			if(!this.isInput) {
				$(document).off("mousedown.datetimepicker" + this.id)
			}
		},
		_isInFixed: function() {
			if(this.$element) {
				var parents = this.$element.parents();
				var inFixed = false;
				for(var i = 0; i < parents.length; i++) {
					if($(parents[i]).css("position") == "fixed") {
						inFixed = true;
						break
					}
				}
				return inFixed
			} else {
				return false
			}
		}
	};
	$.fn.datetimepicker = function(option, val) {
		return this.each(function() {
			var $this = $(this),
				data = $this.data("datetimepicker"),
				options = typeof option === "object" && option;
			if(!data) {
				$this.data("datetimepicker", data = new DateTimePicker(this, $.extend({}, $.fn.datetimepicker.defaults, options)))
			}
			if(typeof option === "string") data[option](val)
		})
	};
	$.fn.datetimepicker.defaults = {
		maskInput: false,
		pickDate: true,
		pickTime: true,
		pick12HourFormat: false,
		pickSeconds: true,
		startDate: -Infinity,
		endDate: Infinity,
		collapse: true
	};
	$.fn.datetimepicker.Constructor = DateTimePicker;
	var dpgId = 0;
	var dates = $.fn.datetimepicker.dates = {
		en: {
			days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
			daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
			daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa", "Su"],
			months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
			monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
		}
	};
	var dateFormatComponents = {
		dd: {
			property: "UTCDate",
			getPattern: function() {
				return "(0?[1-9]|[1-2][0-9]|3[0-1])\\b"
			}
		},
		MM: {
			property: "UTCMonth",
			getPattern: function() {
				return "(0?[1-9]|1[0-2])\\b"
			}
		},
		yy: {
			property: "UTCYear",
			getPattern: function() {
				return "(\\d{2})\\b"
			}
		},
		yyyy: {
			property: "UTCFullYear",
			getPattern: function() {
				return "(\\d{4})\\b"
			}
		},
		hh: {
			property: "UTCHours",
			getPattern: function() {
				return "(0?[0-9]|1[0-9]|2[0-3])\\b"
			}
		},
		mm: {
			property: "UTCMinutes",
			getPattern: function() {
				return "(0?[0-9]|[1-5][0-9])\\b"
			}
		},
		ss: {
			property: "UTCSeconds",
			getPattern: function() {
				return "(0?[0-9]|[1-5][0-9])\\b"
			}
		},
		ms: {
			property: "UTCMilliseconds",
			getPattern: function() {
				return "([0-9]{1,3})\\b"
			}
		},
		HH: {
			property: "Hours12",
			getPattern: function() {
				return "(0?[1-9]|1[0-2])\\b"
			}
		},
		PP: {
			property: "Period12",
			getPattern: function() {
				return "(AM|PM|am|pm|Am|aM|Pm|pM)\\b"
			}
		}
	};
	var keys = [];
	for(var k in dateFormatComponents) keys.push(k);
	keys[keys.length - 1] += "\\b";
	keys.push(".");
	var formatComponent = new RegExp(keys.join("\\b|"));
	keys.pop();
	var formatReplacer = new RegExp(keys.join("\\b|"), "g");

	function escapeRegExp(str) {
		return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&")
	}

	function padLeft(s, l, c) {
		if(l < s.length) return s;
		else return Array(l - s.length + 1).join(c || " ") + s
	}

	function getTemplate(timeIcon, pickDate, pickTime, is12Hours, showSeconds, collapse) {
		if(pickDate && pickTime) {
			return '<div class="bootstrap-datetimepicker-widget dropdown-menu">' + "<ul>" + "<li" + (collapse ? ' class="collapse in"' : "") + ">" + '<div class="datepicker">' + DPGlobal.template + "</div>" + "</li>" + '<li class="picker-switch accordion-toggle"><a><i class="' + timeIcon + '"></i></a></li>' + "<li" + (collapse ? ' class="collapse"' : "") + ">" + '<div class="timepicker">' + TPGlobal.getTemplate(is12Hours, showSeconds) + "</div>" + "</li>" + "</ul>" + "</div>"
		} else if(pickTime) {
			return '<div class="bootstrap-datetimepicker-widget dropdown-menu">' + '<div class="timepicker">' + TPGlobal.getTemplate(is12Hours, showSeconds) + "</div>" + "</div>"
		} else {
			return '<div class="bootstrap-datetimepicker-widget dropdown-menu">' + '<div class="datepicker">' + DPGlobal.template + "</div>" + "</div>"
		}
	}

	function UTCDate() {
		return new Date(Date.UTC.apply(Date, arguments))
	}
	var DPGlobal = {
		modes: [{
			clsName: "days",
			navFnc: "UTCMonth",
			navStep: 1
		}, {
			clsName: "months",
			navFnc: "UTCFullYear",
			navStep: 1
		}, {
			clsName: "years",
			navFnc: "UTCFullYear",
			navStep: 10
		}],
		isLeapYear: function(year) {
			return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0
		},
		getDaysInMonth: function(year, month) {
			return [31, DPGlobal.isLeapYear(year) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month]
		},
		headTemplate: "<thead>" + "<tr>" + '<th class="prev">&lsaquo;</th>' + '<th colspan="5" class="switch"></th>' + '<th class="next">&rsaquo;</th>' + "</tr>" + "</thead>",
		contTemplate: '<tbody><tr><td colspan="7"></td></tr></tbody>'
	};
	DPGlobal.template = '<div class="datepicker-days">' + '<table class="table-condensed">' + DPGlobal.headTemplate + "<tbody></tbody>" + "</table>" + "</div>" + '<div class="datepicker-months">' + '<table class="table-condensed">' + DPGlobal.headTemplate + DPGlobal.contTemplate + "</table>" + "</div>" + '<div class="datepicker-years">' + '<table class="table-condensed">' + DPGlobal.headTemplate + DPGlobal.contTemplate + "</table>" + "</div>";
	var TPGlobal = {
		hourTemplate: '<span data-action="showHours" data-time-component="hours" class="timepicker-hour"></span>',
		minuteTemplate: '<span data-action="showMinutes" data-time-component="minutes" class="timepicker-minute"></span>',
		secondTemplate: '<span data-action="showSeconds" data-time-component="seconds" class="timepicker-second"></span>'
	};
	TPGlobal.getTemplate = function(is12Hours, showSeconds) {
		return '<div class="timepicker-picker">' + '<table class="table-condensed"' + (is12Hours ? ' data-hour-format="12"' : "") + ">" + "<tr>" + '<td><a href="#" class="btn" data-action="incrementHours"><i class="icon-chevron-up"></i></a></td>' + '<td class="separator"></td>' + '<td><a href="#" class="btn" data-action="incrementMinutes"><i class="icon-chevron-up"></i></a></td>' + (showSeconds ? '<td class="separator"></td>' + '<td><a href="#" class="btn" data-action="incrementSeconds"><i class="icon-chevron-up"></i></a></td>' : "") + (is12Hours ? '<td class="separator"></td>' : "") + "</tr>" + "<tr>" + "<td>" + TPGlobal.hourTemplate + "</td> " + '<td class="separator">:</td>' + "<td>" + TPGlobal.minuteTemplate + "</td> " + (showSeconds ? '<td class="separator">:</td>' + "<td>" + TPGlobal.secondTemplate + "</td>" : "") + (is12Hours ? '<td class="separator"></td>' + "<td>" + '<button type="button" class="btn btn-primary" data-action="togglePeriod"></button>' + "</td>" : "") + "</tr>" + "<tr>" + '<td><a href="#" class="btn" data-action="decrementHours"><i class="icon-chevron-down"></i></a></td>' + '<td class="separator"></td>' + '<td><a href="#" class="btn" data-action="decrementMinutes"><i class="icon-chevron-down"></i></a></td>' + (showSeconds ? '<td class="separator"></td>' + '<td><a href="#" class="btn" data-action="decrementSeconds"><i class="icon-chevron-down"></i></a></td>' : "") + (is12Hours ? '<td class="separator"></td>' : "") + "</tr>" + "</table>" + "</div>" + '<div class="timepicker-hours" data-action="selectHour">' + '<table class="table-condensed">' + "</table>" + "</div>" + '<div class="timepicker-minutes" data-action="selectMinute">' + '<table class="table-condensed">' + "</table>" + "</div>" + (showSeconds ? '<div class="timepicker-seconds" data-action="selectSecond">' + '<table class="table-condensed">' + "</table>" + "</div>" : "")
	}
})(window.jQuery);;
/**
 * Simplified Chinese translation for bootstrap-datetimepicker
 * Yuan Cheung <advanimal@gmail.com>
 */
;
(function($) {
	$.fn.datetimepicker.dates['zh-CN'] = {
		days: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"],
		daysShort: ["周日", "周一", "周二", "周三", "周四", "周五", "周六", "周日"],
		daysMin: ["日", "一", "二", "三", "四", "五", "六", "日"],
		months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
		monthsShort: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
		today: "今日",
		suffix: [],
		meridiem: ["上午", "下午"]
	};
}(jQuery));;﻿
var code = "";
var code1 = "";
//var v_center = "o2o.zld.com.cn";

function _createCode(srcObj) {
	var _code = "";
	var codeLength = 4; //验证码的长度
	var checkCode = document.getElementById(srcObj);
	var codeChars = new Array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
		'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
		'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'); //所有候选组成验证码的字符，当然也可以用中文的
	for(var i = 0; i < codeLength; i++) {
		var charNum = Math.floor(Math.random() * 52);
		_code += codeChars[charNum];
	}

	if(checkCode) {
		checkCode.className = "code";
		checkCode.innerHTML = _code;
	}

	return _code;
}

function createCode() {
	code = _createCode("checkCode");

	return true;
}

function validateCode() {
	var inputCode = document.getElementById("inputCode").value;
	if(inputCode.length <= 0) {
		alert("请输入验证码！");

		return false;
	} else if(inputCode.toUpperCase() != code.toUpperCase()) {
		alert("验证码输入有误！");
		createCode();

		return false;
	} else {
		return true;
	}
}

function createCode1() {
	code1 = _createCode("checkCode1");

	return true;
}

function validateCode1() {
	var inputCode = document.getElementById("inputCode1").value;
	if(inputCode.length <= 0) {
		alert("请输入验证码！");

		return false;
	} else if(inputCode.toUpperCase() != code1.toUpperCase()) {
		alert("验证码输入有误！");
		createCode1();

		return false;
	} else {
		return true;
	}
}

function GetLoginProtocol(username, password) {
	var params = [{}];
	params[0].namespace = 'protocol';
	params[0].cmd = 'login';
	params[0].version = 1;
	params[0].id = 'tms_login_0001';

	var _p = [{}, {}];
	_p[0].name = "Username";
	_p[0].value = username;
	_p[1].name = "Password";
	_p[1].value = password;

	params[0].paras = _p;
	var _params_ToString = NSF.System.Json.ToString(params);
	return _params_ToString;
	//return "[{'namespace' : 'protocol', 'cmd' : 'login'}]";
}
//登录
function DoLogin(username, password, callback) {
	NSF.System.Network.Ajax('/SSOPortal.aspx',
		GetLoginProtocol(username, password),
		'POST',
		false,
		callback);
}

//登出
function GetLoginPOut() {

	var params = [{}];
	params[0].namespace = 'protocol';
	params[0].cmd = 'logout';
	params[0].version = 1;
	params[0].id = 'vml_login_0002';

	var _params_ToString = NSF.System.Json.ToString(params);
	return _params_ToString;
}

function DoLoginOut(callback) {
	NSF.System.Network.Ajax('/SSOPortal.aspx',
		GetLoginPOut(),
		'POST',
		false,
		callback
	);
}
//注册
function GetRegister(Name, Phone, Mail, Contact, License) {
	var params = [{}];
	params[0].namespace = 'protocol';
	params[0].cmd = 'data';
	params[0].version = 1;
	params[0].id = 'tms_0056';

	var _Reg = [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}];
	_Reg[0].name = 'Name';
	_Reg[0].value = Name;
	_Reg[1].name = 'Industry';
	_Reg[1].value = 0;
	_Reg[2].name = 'Logo';
	_Reg[2].value = '';
	_Reg[3].name = 'Web';
	_Reg[3].value = '';
	_Reg[4].name = 'ShortName';
	_Reg[4].value = '';
	_Reg[5].name = 'EnName';
	_Reg[5].value = '';
	_Reg[6].name = 'ShortEnName';
	_Reg[6].value = '';
	_Reg[7].name = 'Master';
	_Reg[7].value = '';
	_Reg[8].name = 'License';
	_Reg[8].value = License;
	_Reg[9].name = 'Contact';
	_Reg[9].value = Contact;
	_Reg[10].name = 'Phone';
	_Reg[10].value = Phone;
	_Reg[11].name = 'Fax';
	_Reg[11].value = '';
	_Reg[12].name = 'Zip';
	_Reg[12].value = '';
	_Reg[13].name = 'Address';
	_Reg[13].value = '';
	_Reg[14].name = 'Mail';
	_Reg[14].value = Mail;
	_Reg[15].name = 'WeiXin';
	_Reg[15].value = '';
	_Reg[16].name = 'Bank';
	_Reg[16].value = '';
	_Reg[17].name = 'BankAccount';
	_Reg[17].value = '';
	_Reg[18].name = 'Description';
	_Reg[18].value = '';

	params[0].paras = _Reg;

	var Reg_ToString = NSF.System.Json.ToString(params);
	return Reg_ToString;
}

function DoRegister(Name, Phone, Mail, Contact, License, callback) {
	NSF.System.Network.Ajax('/Portal.aspx',
		GetRegister(Name, Phone, Mail, Contact, License),
		'POST',
		false,
		callback
	);
}

//判断是否有登入注册,并给与相应的样式
$(function() {
	var user = $('#userID').text();
	if(user == 0) {
		$('.micro1').css('right', 160 + 'px');
	} else {
		$('.micro1').css('right', 100 + 'px');
	}

	$('.login').click(function() {
		location.href = '/Login.aspx';
	});

	//微信
	$(".micro").mouseover(function() {
		$(".micro1").css("display", "block").show(10);
	})
	$(".log-cont,.top_zld,.index_page").mouseout(function() {
		$(".micro1").css("display", "none");
	});

	//login切换
	$(".log1").click(function() {
			$("#log-sub2").css("display", "block");
			$("#log-sub1,#log-sub3,#log-sub4").css("display", "none");
		}) //注册
	$(".log2").click(function() {
			$("#log-sub1").css("display", "block");
			$("#log-sub2,#log-sub3,#log-sub4").css("display", "none");
		}) //登录
	$(".log3").click(function() {
			$("#log-sub3").css("display", "block");
			$("#log-sub1,#log-sub2,#log-sub4").css("display", "none");
		}) //忘记密码

	createCode1();
});
//返回前一页
function back() {
	history.go(-1);
}
//修改用户密码
function UpdatePwdSave() {
	var Username = $('input[name="Username"]').val();
	var OldPwd = $('input[name="OldPwd"]').val();
	var NewPwd = $('input[name="NewPwd"]').val();
	var ReOldPwd = $('input[name="ReOldPwd"]').val();

	if(NewPwd != ReOldPwd) {
		alert("两次输入的密码不一致，请重新输入!");
	} else {
		DoUserPwd(Username, OldPwd, NewPwd, _UserUpdatePwd);
	}

}

function GetUpdatePwd(Username, OldPwd, NewPwd) {
	var params = [{}];
	params[0].namespace = 'protocol';
	params[0].cmd = 'data';
	params[0].version = 1;
	params[0].id = 'tms_0058';

	var _Reg = [{}, {}, {}];
	_Reg[0].name = 'Username';
	_Reg[0].value = Username;
	_Reg[1].name = 'OldPwd';
	_Reg[1].value = OldPwd;
	_Reg[2].name = 'NewPwd';
	_Reg[2].value = NewPwd;

	params[0].paras = _Reg;

	var Reg_ToString = NSF.System.Json.ToString(params);
	return Reg_ToString;
}

function DoUserPwd(Username, OldPwd, NewPwd, callback) {
	NSF.System.Network.Ajax('/Portal.aspx',
		GetUpdatePwd(Username, OldPwd, NewPwd),
		'POST',
		false,
		callback
	);
}

function _UserUpdatePwd(result, data) {
	if(data[0].result) {
		if(data[0].rs[0].rows[0].Pwd_Result == 0) {
			alert("修改成功！");
		} else {
			alert('错误代码：' + data[0].rs[0].rows[0].Pwd_Result);
		}
	} else {
		alert(data[0].msg);
	}
}

//记住用户名密码
function SetLastUser(usr) {        
	var id = "49BAC005-7D5B-4231-8CEA-16939BEACD67";        
	var expdate = new Date();         //当前时间加上两周的时间
	        
	expdate.setTime(expdate.getTime() + 14 * (24 * 60 * 60 * 1000));        
	SetCookie(id, usr, expdate);    
}

//写入到Cookie
function SetCookie(name, value, expires) {
	var argv = SetCookie.arguments;
	//本例中length = 3
	var argc = SetCookie.arguments.length;
	var expires = (argc > 2) ? argv[2] : null;
	var path = (argc > 3) ? argv[3] : null;
	var domain = (argc > 4) ? argv[4] : null;
	var secure = (argc > 5) ? argv[5] : false;

	document.cookie = name + "=" + escape(value) + ((expires == null) ? "" : ("; expires=" + expires.toGMTString())) + ((path == null) ? "" : ("; path=" + path)) + ((domain == null) ? "" : ("; domain=" + domain)) + ((secure == true) ? "; secure" : "");

	if(typeof name == "undefined") {
		document.cookie = "49BAC005-7D5B-4231-8CEA-16939BEACD67=";
	}
}

function GetLastUser() {
	var id = "49BAC005-7D5B-4231-8CEA-16939BEACD67"; //GUID标识符
	var usr = GetCookie(id);
	if(usr != null) {
		$('input[name="loginUsername"]').val(usr);
	}
	GetPwdAndChk();
}

function getCookieVal(offset) {
	var endstr = document.cookie.indexOf(";", offset);
	if(endstr == -1) endstr = document.cookie.length;
	return unescape(document.cookie.substring(offset, endstr));
}

//取Cookie的值
function GetCookie(name) {
	var arg = name + "=";
	var alen = arg.length;
	var clen = document.cookie.length;
	var i = 0;
	while(i < clen) {
		var j = i + alen;
		//alert(j);
		if(document.cookie.substring(i, j) == arg) return getCookieVal(j);
		i = document.cookie.indexOf(" ", i) + 1;
		if(i == 0) break;
	}
	return null;
}

//用户名失去焦点时调用该方法
    
function GetPwdAndChk() {        
	var usr = $('input[name="loginUsername"]').val();        
	var pwd = GetCookie(usr);        
	if(pwd != null) {            
		$('input.userpwd')[0].checked = true;            
		$('input[name="loginPassword"]').val(pwd);        
	} else {            
		$('input.userpwd')[0].checked = false;            
		$('input[name="loginPassword"]').val("");        
	}    
}
//删除cookie
function ResetCookie(user, pwd) {
	var expdate = new Date();
	SetCookie(user, pwd, expdate);
};﻿
/*
function SetUserStatus(username, userid, truename, cp)
{
	var _str = 'username: ' + username;
	_str += '\nuserid: ' + userid;
	_str += '\ntruename: ' + truename;
	_str += '\ncp: ' + cp;
	
	alert(_str);
	return;
}
*/
//登录
function _LoginComplete(result, data) {
	if(data[0].result) {
		location.href = "/Index.aspx";
	} else {
		$('.login_btn button').text('登录失败');
		if(data[0].msg == "The username and password is unmatched!") {
			//alert("您输入的账号密码不匹配或者授权已过期，请与管理员联系！");
			$('#myModal').modal('show');
			$('input[name="loginPassword"]').val('');
		} else {
			alert(data[0].msg);
		}
	}
	$('.loginbtn').text('登 录');
	return;
}
//注册
function _RegisterComplete(result, data) {

	if(data[0].result) {
		if(data[0].rs[0].rows[0].Company_Result == 0) {
			location.href = '/Register_Result.aspx';
		} else {
			Login_Result(data[0]);
			//alert( '错误代码：' + data[0].rs[0].rows[0].Company_Result );
		}
	} else {
		alert(data[0].msg);
	}

	$('.register').text('注册');
}

function _LogoutComplete(result, data) {
	if(data[0].result) {
		location.href = "/Login.aspx";
	}

	return;
}

$(function() {
	//用户登录
	$('#loginForm').submit(function() {
		if(validateCode()) {
			var _user = $("input[name='loginUsername']").val();
			var _pwd = $("input[name='loginPassword']").val();

			DoLogin(_user, _pwd, _LoginComplete);
		}

		return false;
	});
	//用户注册
	$("#registerForm").submit(function() {
		if(validateCode1()) {
			var _user = $("input[name='registerUsername']").val();
			var _pwd = $("input[name='registerPassword']").val();
			var _cpwd = $("input[name='registerCPassword']").val();
			var _truename = $("input[name='registerTruename']").val();
			if(_pwd != _cpwd) {
				alert("两次输入的密码不一致，请重新输入!");
			} else if(_truename == "") {
				alert("昵称不能为空！");
			} else {
				DoRegister(_user, _pwd, _truename, _RegisterComplete);
			}
		}

		return false;
	});
	//修改密码
	$('#ChangPassword').submit(function() {
		var username = UserName;

		var _oldpwd = $("input[name='oldPassword']").val();
		var _newpwd = $("input[name='newPassword']").val();
		var _cnewPwd = $("input[name='cnewPassword']").val();
		if(_oldpwd == "") {
			alert("旧密码不能为空！");
		} else if(_newpwd == "" || _cnewPwd == "") {
			alert("新密码不能为空！");
		} else if(_newpwd != _cnewPwd) {
			alert("新密码，两次输入不一致！！");
		} else {
			DoChangePwd(username, _oldpwd, _newpwd, _ChangePwdComplete);

		}
		return false;
	});
});

function Login_Result(_ret) {
	var _result = {
		"Customer_Result": "0",
		"Supplier_Result": "0",
		"Addr_Result": "0",
		"Car_Result": "0",
		"Driver_Result": "0",
		"EndUser_Result": "0",
		"Goods_Result": "0",
		"GoodsType_Result": "0",
		"Order_Result": "0",
		"Pwd_Result": "0",
		"Company_Result": "0",
		"User_Result": "0",
		"Cost_Result": "0",
		"Back_Result": "0",
		"Flow_Result": "0",
		"Schedule_Result": "",
		"Close_Result": "",
		"Verify_Result": ""
	};
	var _msg = {
		"-510001001": "序列号生成失败",
		"-510001002": "公司名是否重复",
		"-510001003": "新增公司失败",
		"-510002000": "只有管理员有权执行该操作",
		"-510002001": "没有找到对应公司或公司已被审核",
		"-510002002": "审核公司失败",
		"-510002003": "管理员账号是否已经存在",
		"-510002004": "添加管理员账号失败",
		"-510003001": "参数错误",
		"-510003002": "账号不存在",
		"-510003003": "账号密码与原始密码不匹配",
		"-510004001": "参数错误",
		"-510004002": "账号不存在",
		"-510004003": "只有系统管理员能重置公司管理员的密码",
		"-510004004": "公司管理员能重置其他用户的密码",
		"-510004005": "编辑密码失败",
		"-510005001": "不能添加公司管理员",
		"-510005002": "只有公司管理员才能添加用户",
		"-510005003": "用户是否已经存在",
		"-510005004": "新增用户失败",
		"-510006001": "当前用户没有关联公司",
		"-510006002": "当前用户没有修改公司资料的权限",
		"-510006003": "修改失败",
		"-510007001": "当前用户没有关联公司",
		"-510007002": "当前用户没有罗列公司用户的权限",
		"-510008001": "当前用户没有关联公司",
		"-510008002": "当前用户没有添加客户的权限",
		"-510008003": "客户公司编号是否有效",
		"-510008004": "序列号生成失败",
		"-510008005": "客户公司是否存在,添加失败",
		"-510008006": "客户公司是否存在,编辑失败",
		"-510008007": "手动录入的客户公司名称是否重复",
		"-510009001": "当前用户没有关联公司",
		"-510009002": "当前用户没有添加承运商的权限",
		"-510009003": "承运商公司编号是否有效",
		"-510009004": "客户公司是否存在,添加失败",
		"-510010001": "当前用户没有关联公司",
		"-510010002": "当前用户没有添加客户的权限",
		"-510010003": "司机是否存在,添加失败",
		"-510010004": "司机是否存在，编辑失败",
		"-510011001": "当前用户没有关联公司",
		"-510011002": "当前用户没有添加客户的权限",
		"-510011003": "车辆是否存在,添加失败",
		"-510011004": "车辆是否存在，编辑失败",
		"-510012001": "当前用户没有关联公司",
		"-510012002": "当前用户没有添加客户的权限",
		"-510012003": "司机是否存在，新增失败",
		"-510012004": "司机是否存在，编辑失败",
		"-510013001": "当前用户没有关联公司",
		"-510013002": "当前用户没有添加客户的权限",
		"-510013003": "收货人是否存在",
		"-510013004": "地址是否存在,添加失败",
		"-510013005": "地址是否存在,编辑失败",
		"-510014001": "当前用户没有关联公司",
		"-510014002": "当前用户没有添加客户的权限",
		"-510014003": "延伸客户是否存在",
		"-510014004": "客户是否存在",
		"-510014005": "来源订单是否存在",
		"-510014006": "编辑模式订单是否存在[只能编辑自己公司的订单]",
		"-510014007": "只能编辑状态为新单据的订单",
		"-510014008": "添加主单信息失败",
		"-510014009": "编辑主单信息失败",
		"-510014010": "承运商是否存在",
		"-510015001": "当前用户没有关联公司",
		"-510015002": "当前用户没有添加订单物品的权限",
		"-510015003": "物品是否存在",
		"-510015004": "订单是否存在",
		"-510015005": "物品添加失败",
		"-510015006": "物品编辑失败",
		"-510016001": "当前用户没有关联公司",
		"-510016002": "当前用户没有添加物品的权限",
		"-510016003": "物品类型是否存在",
		"-510016004": "添加物品失败",
		"-510016005": "编辑物品失败",
		"-510017001": "当前用户没有关联公司",
		"-510017002": "当前用户没有接受订单的权限",
		"-510017003": "订单是否存在",
		"-510017004": "订单是否已经被接受",
		"-510017005": "接受订单失败",
		"-510017006": "添加订单流程失败",
		"-510018001": "当前用户没有关联公司",
		"-510018002": "当前用户没有分配订单的权限",
		"-510018003": "订单是否存在",
		"-510018004": "订单是否已经被分配",
		"-510018005": "车辆是否存在",
		"-510018006": "司机是否存在",
		"-510018007": "分配订单失败",
		"-510018008": "添加订单流程失败",
		"-510019001": "当前用户没有关联公司",
		"-510019002": "当前用户没有签收订单的权限",
		"-510019003": "订单是否存在",
		"-510019004": "订单是否已经被签收",
		"-510019005": "签收订单失败",
		"-510019006": "添加订单流程失败",
		"-510019007": "更新实签数量，异常数量失败",
		"-510020001": "当前用户没有关联公司",
		"-510020002": "当前用户没有提交订单回单的权限",
		"-510020003": "订单是否存在",
		"-510020004": "订单是否已经回单",
		"-510020005": "回单路径不能为空",
		"-510020006": "订单回单编辑失败",
		"-510020007": "添加订单流程失败",
		"-510021001": "当前用户没有关联公司",
		"-510021002": "当前用户没有添加客户的权限",
		"-510021003": "收件人公司编号是否有效",
		"-510021004": "序列号生成失败",
		"-510021005": "收件人添加失败",
		"-510021006": "收件人修改失败",
		"-510021007": "客户是否存在",
		"-510021008": "收件人名称已存在",
		"-510022001": "当前用户没有关联公司",
		"-510022002": "当前用户没有发送订单的权限",
		"-510022003": "订单是否存在",
		"-510022004": "订单是否已经被发送",
		"-510022005": "承运商是否存在",
		"-510022006": "发送订单失败",
		"-510022007": "添加订单流程失败",
		"-510022008": "指定承运商失败",
		"-510023001": "当前用户没有关联公司",
		"-510023002": "当前用户没有操作承运商的权限",
		"-510023003": "承运商公司编号是否有效",
		"-510023004": "接受失败",
		"-510023005": "拒绝失败",
		"-510023006": "",
		"-510024001": "只有管理员有权执行该操作",
		"-510024002": "公司编号是否有效",
		"-510024003": "启用或禁用失败",
		"-510025001": "当前用户没有关联公司",
		"-510025003": "当前用户没有拆单的权限",
		"-510025003": "来源订单不存在",
		"-510025004": "拆单后原始订单保留，原始订单状态修改为待签收失败",
		"-510025005": "复制原单失败",
		"-510025006": "写订单状态变更记录失败",
		"-510025007": "写订单状态变更记录失败",
		"-510026001": "当前用户没有关联公司",
		"-510026002": "当前用户没有添加订单费用的权限",
		"-510026003": "订单是否存在",
		"-510026004": "费用类型是否存在",
		"-510026005": "更新或添加失败",
		"-510028001": "当前用户没有关联公司",
		"-510028002": "当前用户没有启用或禁用客户的权限",
		"-510028003": "客户编号是否有效",
		"-510028004": "启用或禁用失败",
		"-510029001": "当前用户没有关联公司",
		"-510029002": "当前用户没有启用或禁用承运商的权限",
		"-510029003": "承运商编号是否有效",
		"-510029004": "启用或禁用失败",
		"-510030001": "当前用户没有关联公司",
		"-510030002": "当前用户没有启用或禁用最终用户的权限",
		"-510030003": "最终用户编号是否有效",
		"-510030004": "启用或禁用失败",
		"-510031001": "订单号是否存在",
		"-510031002": "下单公司是否是承运商的客户",
		"-510031003": "获取承运商的公司管理员",
		"-510031004": "下单失败",
		"-510031005": "订单的附属表(TMS_OrderCost)",
		"-510031006": "订单附属表(TMS_OrderGoods)",
		"-510032001": "当前用户没有关联公司",
		"-510032002": "当前用户没有添加承运商的权限",
		"-510032003": "当前承运商是否存在",
		"-510032004": "线下承运商是否重名",
		"-510032005": "承运商编辑失败",
		"-510032006": "承运商新增失败",
		"-510033001": "当前用户没有关联公司",
		"-510033002": "当前用户没有打回订单的权限",
		"-510033003": "订单不存在",
		"-510033004": "已经委托供应商承运的单子暂时不能打回",
		"-510033005": "已审核(待分配)",
		"-510033006": "已分配(待签收)",
		"-510033007": "已签收(待回单)",
		"-510033008": "打回订单失败",
		"-510033009": "添加流程失败",
		"-510034001": "当前用户没有关联公司",
		"-510034002": "当前用户没有关闭订单的权限",
		"-510034003": "订单不存在",
		"-510034004": "关闭订单失败",
		"-510034005": "添加流程失败",
		"-510035001": "当前用户没有关联公司",
		"-510035002": "当前用户没有添加订单备注的权限",
		"-510035003": "源订单不存在",
		"-510035004": "添加备注失败",
		"-510036001": "当前用户没有关联公司",
		"-510036002": "当前用户没有发送订单的权限",
		"-510036003": "原始订单是否存在，是否处于待调度状态(只有运输订单允许调度)",
		"-510036004": "自营",
		"-510036005": "自营,车辆不存在",
		"-510036006": "自营,司机不存在",
		"-510036007": "自营,分配订单失败",
		"-510036008": "自营,添加订单流程失败",
		"-510036009": "承运商,车辆不存在",
		"-510036010": "承运商,司机不存在",
		"-510036011": "承运商,分配订单失败",
		"-510036012": "承运商,添加订单流程失败",
		"-510036001": "当前用户没有关联公司",
		"-510036002": "当前用户没有发送订单的权限",
		"-510036003": "原始订单是否存在，是否处于待调度状态(只有运输订单允许调度)",
		"-510036004": "自营",
		"-510036005": "自营,车辆不存在",
		"-510036006": "自营,司机不存在",
		"-510036007": "自营,分配订单失败",
		"-510036008": "自营,添加订单流程失败",
		"-510036009": "承运商,车辆不存在",
		"-510036010": "承运商,司机不存在",
		"-510036011": "承运商,分配订单失败",
		"-510036012": "承运商,添加订单流程失败",
		"-520001001": "当前用户没有关联公司",
		"-520001002": "当前用户没有添加客户的权限",
		"-520001003": "按单报价",
		"-520001004": "按合约报价(同一合约可以多次报价)",
		"-520001005": "补充报价",
		"-520001006": "客户不存在",
		"-520001007": "原报价单是否存在，仅草稿模式允许编辑",
		"-520001008": "新增报价单失败",
		"-520001009": "编辑报价单失败",
		"-520011001": "当前用户没有关联公司",
		"-520011002": "当前用户没有关闭报价单的权限",
		"-520011003": "报价单是否存在",
		"-520011004": "只有报价单创建者(所在公司)可以关闭",
		"-520011005": "只有草稿、已发布但未审批的报价单可以关闭",
		"-520011006": "关闭报价单失败",
		"-520012001": "当前用户没有关联公司",
		"-520012002": "当前用户没有发布报价单的权限",
		"-520012003": "报价单是否存在",
		"-520012004": "只有报价单创建者(所在公司)可以发送",
		"-520012005": "只有草稿可以发布",
		"-520012006": "发送报价单失败",
		"-520013001": "当前用户没有关联公司",
		"-520013002": "当前用户没有发布报价单的权限",
		"-520013003": "报价单是否存在",
		"-520013004": "只有报价单接收者(所在公司)可以审核",
		"-520013005": "只有已发布的报价单可以审核",
		"-520013006": "拒绝时必须写描述",
	};
	for(var key in _result) {
		if(typeof(_ret.rs[0].rows[0][key]) != 'undefined') {
			if(_ret.rs[0].rows[0][key] == 0) {
				alert('成功！');
				setInterval(function() {
					if($('body').attr('code') == 'UpdatePwd') {
						Exit();
					} else if(location.href.split('.aspx')[0].split('/')[3] == 'splitSingle') {
						location.href = '/OrderSend.aspx';
					} else {
						location.href = $('body').attr('code') + '.aspx';
					}
				}, 2000);
			} else {
				if(typeof _msg[_ret.rs[0].rows[0][key]] == 'undefined') {
					alert('错误代码：' + _ret.rs[0].rows[0][key] + ',错误信息：异常错误');
				} else {
					alert('错误代码：' + _ret.rs[0].rows[0][key] + ',错误信息：' + _msg[_ret.rs[0].rows[0][key]]);
				}
			}
		} else {
			if($('body').attr('code') == 'Unit') {
				alert('保存成功！');
				setInterval(location.href = $('body').attr('code') + '.aspx', 5000);
			}
		}
	}
};﻿ /*Three Knives*/
//省
var Province = {
		"Provinces": [{
			"id": "110000",
			"parentid": "0",
			"name": "北京市"
		}, {
			"id": "120000",
			"parentid": "0",
			"name": "天津市"
		}, {
			"id": "130000",
			"parentid": "0",
			"name": "河北省"
		}, {
			"id": "140000",
			"parentid": "0",
			"name": "山西省"
		}, {
			"id": "150000",
			"parentid": "0",
			"name": "内蒙古自治区"
		}, {
			"id": "210000",
			"parentid": "0",
			"name": "辽宁省"
		}, {
			"id": "220000",
			"parentid": "0",
			"name": "吉林省"
		}, {
			"id": "230000",
			"parentid": "0",
			"name": "黑龙江省"
		}, {
			"id": "310000",
			"parentid": "0",
			"name": "上海市"
		}, {
			"id": "320000",
			"parentid": "0",
			"name": "江苏省"
		}, {
			"id": "330000",
			"parentid": "0",
			"name": "浙江省"
		}, {
			"id": "340000",
			"parentid": "0",
			"name": "安徽省"
		}, {
			"id": "350000",
			"parentid": "0",
			"name": "福建省"
		}, {
			"id": "360000",
			"parentid": "0",
			"name": "江西省"
		}, {
			"id": "370000",
			"parentid": "0",
			"name": "山东省"
		}, {
			"id": "410000",
			"parentid": "0",
			"name": "河南省"
		}, {
			"id": "420000",
			"parentid": "0",
			"name": "湖北省"
		}, {
			"id": "430000",
			"parentid": "0",
			"name": "湖南省"
		}, {
			"id": "440000",
			"parentid": "0",
			"name": "广东省"
		}, {
			"id": "450000",
			"parentid": "0",
			"name": "广西壮族自治区"
		}, {
			"id": "460000",
			"parentid": "0",
			"name": "海南省"
		}, {
			"id": "500000",
			"parentid": "0",
			"name": "重庆市"
		}, {
			"id": "510000",
			"parentid": "0",
			"name": "四川省"
		}, {
			"id": "520000",
			"parentid": "0",
			"name": "贵州省"
		}, {
			"id": "530000",
			"parentid": "0",
			"name": "云南省"
		}, {
			"id": "540000",
			"parentid": "0",
			"name": "西藏自治区"
		}, {
			"id": "610000",
			"parentid": "0",
			"name": "陕西省"
		}, {
			"id": "620000",
			"parentid": "0",
			"name": "甘肃省"
		}, {
			"id": "630000",
			"parentid": "0",
			"name": "青海省"
		}, {
			"id": "640000",
			"parentid": "0",
			"name": "宁夏回族自治区"
		}, {
			"id": "650000",
			"parentid": "0",
			"name": "新疆维吾尔自治区"
		}]
	}
	//市
var City = {
		"Citys": [{
			"id": "110100",
			"parentid": "110000",
			"name": "北京市"
		}, {
			"id": "120100",
			"parentid": "120000",
			"name": "天津市"
		}, {
			"id": "130100",
			"parentid": "130000",
			"name": "石家庄市"
		}, {
			"id": "130200",
			"parentid": "130000",
			"name": "唐山市"
		}, {
			"id": "130300",
			"parentid": "130000",
			"name": "秦皇岛市"
		}, {
			"id": "130400",
			"parentid": "130000",
			"name": "邯郸市"
		}, {
			"id": "130500",
			"parentid": "130000",
			"name": "邢台市"
		}, {
			"id": "130600",
			"parentid": "130000",
			"name": "保定市"
		}, {
			"id": "130700",
			"parentid": "130000",
			"name": "张家口市"
		}, {
			"id": "130800",
			"parentid": "130000",
			"name": "承德市"
		}, {
			"id": "130900",
			"parentid": "130000",
			"name": "沧州市"
		}, {
			"id": "131000",
			"parentid": "130000",
			"name": "廊坊市"
		}, {
			"id": "131100",
			"parentid": "130000",
			"name": "衡水市"
		}, {
			"id": "140100",
			"parentid": "140000",
			"name": "太原市"
		}, {
			"id": "140200",
			"parentid": "140000",
			"name": "大同市"
		}, {
			"id": "140300",
			"parentid": "140000",
			"name": "阳泉市"
		}, {
			"id": "140400",
			"parentid": "140000",
			"name": "长治市"
		}, {
			"id": "140500",
			"parentid": "140000",
			"name": "晋城市"
		}, {
			"id": "140600",
			"parentid": "140000",
			"name": "朔州市"
		}, {
			"id": "140700",
			"parentid": "140000",
			"name": "晋中市"
		}, {
			"id": "140800",
			"parentid": "140000",
			"name": "运城市"
		}, {
			"id": "140900",
			"parentid": "140000",
			"name": "忻州市"
		}, {
			"id": "141000",
			"parentid": "140000",
			"name": "临汾市"
		}, {
			"id": "141100",
			"parentid": "140000",
			"name": "吕梁市"
		}, {
			"id": "150100",
			"parentid": "150000",
			"name": "呼和浩特市"
		}, {
			"id": "150200",
			"parentid": "150000",
			"name": "包头市"
		}, {
			"id": "150300",
			"parentid": "150000",
			"name": "乌海市"
		}, {
			"id": "150400",
			"parentid": "150000",
			"name": "赤峰市"
		}, {
			"id": "150500",
			"parentid": "150000",
			"name": "通辽市"
		}, {
			"id": "150600",
			"parentid": "150000",
			"name": "鄂尔多斯市"
		}, {
			"id": "150700",
			"parentid": "150000",
			"name": "呼伦贝尔市"
		}, {
			"id": "150800",
			"parentid": "150000",
			"name": "巴彦淖尔市"
		}, {
			"id": "150900",
			"parentid": "150000",
			"name": "乌兰察布市"
		}, {
			"id": "152200",
			"parentid": "150000",
			"name": "兴安盟"
		}, {
			"id": "152500",
			"parentid": "150000",
			"name": "锡林郭勒盟"
		}, {
			"id": "152900",
			"parentid": "150000",
			"name": "阿拉善盟"
		}, {
			"id": "210100",
			"parentid": "210000",
			"name": "沈阳市"
		}, {
			"id": "210200",
			"parentid": "210000",
			"name": "大连市"
		}, {
			"id": "210300",
			"parentid": "210000",
			"name": "鞍山市"
		}, {
			"id": "210400",
			"parentid": "210000",
			"name": "抚顺市"
		}, {
			"id": "210500",
			"parentid": "210000",
			"name": "本溪市"
		}, {
			"id": "210600",
			"parentid": "210000",
			"name": "丹东市"
		}, {
			"id": "210700",
			"parentid": "210000",
			"name": "锦州市"
		}, {
			"id": "210800",
			"parentid": "210000",
			"name": "营口市"
		}, {
			"id": "210900",
			"parentid": "210000",
			"name": "阜新市"
		}, {
			"id": "211000",
			"parentid": "210000",
			"name": "辽阳市"
		}, {
			"id": "211100",
			"parentid": "210000",
			"name": "盘锦市"
		}, {
			"id": "211200",
			"parentid": "210000",
			"name": "铁岭市"
		}, {
			"id": "211300",
			"parentid": "210000",
			"name": "朝阳市"
		}, {
			"id": "211400",
			"parentid": "210000",
			"name": "葫芦岛市"
		}, {
			"id": "220100",
			"parentid": "220000",
			"name": "长春市"
		}, {
			"id": "220200",
			"parentid": "220000",
			"name": "吉林市"
		}, {
			"id": "220300",
			"parentid": "220000",
			"name": "四平市"
		}, {
			"id": "220400",
			"parentid": "220000",
			"name": "辽源市"
		}, {
			"id": "220500",
			"parentid": "220000",
			"name": "通化市"
		}, {
			"id": "220600",
			"parentid": "220000",
			"name": "白山市"
		}, {
			"id": "220700",
			"parentid": "220000",
			"name": "松原市"
		}, {
			"id": "220800",
			"parentid": "220000",
			"name": "白城市"
		}, {
			"id": "222400",
			"parentid": "220000",
			"name": "延边朝鲜族自治州"
		}, {
			"id": "230100",
			"parentid": "230000",
			"name": "哈尔滨市"
		}, {
			"id": "230200",
			"parentid": "230000",
			"name": "齐齐哈尔市"
		}, {
			"id": "230300",
			"parentid": "230000",
			"name": "鸡西市"
		}, {
			"id": "230400",
			"parentid": "230000",
			"name": "鹤岗市"
		}, {
			"id": "230500",
			"parentid": "230000",
			"name": "双鸭山市"
		}, {
			"id": "230600",
			"parentid": "230000",
			"name": "大庆市"
		}, {
			"id": "230700",
			"parentid": "230000",
			"name": "伊春市"
		}, {
			"id": "230800",
			"parentid": "230000",
			"name": "佳木斯市"
		}, {
			"id": "230900",
			"parentid": "230000",
			"name": "七台河市"
		}, {
			"id": "231000",
			"parentid": "230000",
			"name": "牡丹江市"
		}, {
			"id": "231100",
			"parentid": "230000",
			"name": "黑河市"
		}, {
			"id": "231200",
			"parentid": "230000",
			"name": "绥化市"
		}, {
			"id": "232700",
			"parentid": "230000",
			"name": "大兴安岭地区"
		}, {
			"id": "310100",
			"parentid": "310000",
			"name": "上海市"
		}, {
			"id": "320100",
			"parentid": "320000",
			"name": "南京市"
		}, {
			"id": "320200",
			"parentid": "320000",
			"name": "无锡市"
		}, {
			"id": "320300",
			"parentid": "320000",
			"name": "徐州市"
		}, {
			"id": "320400",
			"parentid": "320000",
			"name": "常州市"
		}, {
			"id": "320500",
			"parentid": "320000",
			"name": "苏州市"
		}, {
			"id": "320600",
			"parentid": "320000",
			"name": "南通市"
		}, {
			"id": "320700",
			"parentid": "320000",
			"name": "连云港市"
		}, {
			"id": "320800",
			"parentid": "320000",
			"name": "淮安市"
		}, {
			"id": "320900",
			"parentid": "320000",
			"name": "盐城市"
		}, {
			"id": "321000",
			"parentid": "320000",
			"name": "扬州市"
		}, {
			"id": "321100",
			"parentid": "320000",
			"name": "镇江市"
		}, {
			"id": "321200",
			"parentid": "320000",
			"name": "泰州市"
		}, {
			"id": "321300",
			"parentid": "320000",
			"name": "宿迁市"
		}, {
			"id": "330100",
			"parentid": "330000",
			"name": "杭州市"
		}, {
			"id": "330200",
			"parentid": "330000",
			"name": "宁波市"
		}, {
			"id": "330300",
			"parentid": "330000",
			"name": "温州市"
		}, {
			"id": "330400",
			"parentid": "330000",
			"name": "嘉兴市"
		}, {
			"id": "330500",
			"parentid": "330000",
			"name": "湖州市"
		}, {
			"id": "330600",
			"parentid": "330000",
			"name": "绍兴市"
		}, {
			"id": "330700",
			"parentid": "330000",
			"name": "金华市"
		}, {
			"id": "330800",
			"parentid": "330000",
			"name": "衢州市"
		}, {
			"id": "330900",
			"parentid": "330000",
			"name": "舟山市"
		}, {
			"id": "331000",
			"parentid": "330000",
			"name": "台州市"
		}, {
			"id": "331100",
			"parentid": "330000",
			"name": "丽水市"
		}, {
			"id": "340100",
			"parentid": "340000",
			"name": "合肥市"
		}, {
			"id": "340200",
			"parentid": "340000",
			"name": "芜湖市"
		}, {
			"id": "340300",
			"parentid": "340000",
			"name": "蚌埠市"
		}, {
			"id": "340400",
			"parentid": "340000",
			"name": "淮南市"
		}, {
			"id": "340500",
			"parentid": "340000",
			"name": "马鞍山市"
		}, {
			"id": "340600",
			"parentid": "340000",
			"name": "淮北市"
		}, {
			"id": "340700",
			"parentid": "340000",
			"name": "铜陵市"
		}, {
			"id": "340800",
			"parentid": "340000",
			"name": "安庆市"
		}, {
			"id": "341000",
			"parentid": "340000",
			"name": "黄山市"
		}, {
			"id": "341100",
			"parentid": "340000",
			"name": "滁州市"
		}, {
			"id": "341200",
			"parentid": "340000",
			"name": "阜阳市"
		}, {
			"id": "341300",
			"parentid": "340000",
			"name": "宿州市"
		}, {
			"id": "341400",
			"parentid": "340000",
			"name": "巢湖市"
		}, {
			"id": "341500",
			"parentid": "340000",
			"name": "六安市"
		}, {
			"id": "341600",
			"parentid": "340000",
			"name": "亳州市"
		}, {
			"id": "341700",
			"parentid": "340000",
			"name": "池州市"
		}, {
			"id": "341800",
			"parentid": "340000",
			"name": "宣城市"
		}, {
			"id": "350100",
			"parentid": "350000",
			"name": "福州市"
		}, {
			"id": "350200",
			"parentid": "350000",
			"name": "厦门市"
		}, {
			"id": "350300",
			"parentid": "350000",
			"name": "莆田市"
		}, {
			"id": "350400",
			"parentid": "350000",
			"name": "三明市"
		}, {
			"id": "350500",
			"parentid": "350000",
			"name": "泉州市"
		}, {
			"id": "350600",
			"parentid": "350000",
			"name": "漳州市"
		}, {
			"id": "350700",
			"parentid": "350000",
			"name": "南平市"
		}, {
			"id": "350800",
			"parentid": "350000",
			"name": "龙岩市"
		}, {
			"id": "350900",
			"parentid": "350000",
			"name": "宁德市"
		}, {
			"id": "360100",
			"parentid": "360000",
			"name": "南昌市"
		}, {
			"id": "360200",
			"parentid": "360000",
			"name": "景德镇市"
		}, {
			"id": "360300",
			"parentid": "360000",
			"name": "萍乡市"
		}, {
			"id": "360400",
			"parentid": "360000",
			"name": "九江市"
		}, {
			"id": "360500",
			"parentid": "360000",
			"name": "新余市"
		}, {
			"id": "360600",
			"parentid": "360000",
			"name": "鹰潭市"
		}, {
			"id": "360700",
			"parentid": "360000",
			"name": "赣州市"
		}, {
			"id": "360800",
			"parentid": "360000",
			"name": "吉安市"
		}, {
			"id": "360900",
			"parentid": "360000",
			"name": "宜春市"
		}, {
			"id": "361000",
			"parentid": "360000",
			"name": "抚州市"
		}, {
			"id": "361100",
			"parentid": "360000",
			"name": "上饶市"
		}, {
			"id": "370100",
			"parentid": "370000",
			"name": "济南市"
		}, {
			"id": "370200",
			"parentid": "370000",
			"name": "青岛市"
		}, {
			"id": "370300",
			"parentid": "370000",
			"name": "淄博市"
		}, {
			"id": "370400",
			"parentid": "370000",
			"name": "枣庄市"
		}, {
			"id": "370500",
			"parentid": "370000",
			"name": "东营市"
		}, {
			"id": "370600",
			"parentid": "370000",
			"name": "烟台市"
		}, {
			"id": "370700",
			"parentid": "370000",
			"name": "潍坊市"
		}, {
			"id": "370800",
			"parentid": "370000",
			"name": "济宁市"
		}, {
			"id": "370900",
			"parentid": "370000",
			"name": "泰安市"
		}, {
			"id": "371000",
			"parentid": "370000",
			"name": "威海市"
		}, {
			"id": "371100",
			"parentid": "370000",
			"name": "日照市"
		}, {
			"id": "371200",
			"parentid": "370000",
			"name": "莱芜市"
		}, {
			"id": "371300",
			"parentid": "370000",
			"name": "临沂市"
		}, {
			"id": "371400",
			"parentid": "370000",
			"name": "德州市"
		}, {
			"id": "371500",
			"parentid": "370000",
			"name": "聊城市"
		}, {
			"id": "371600",
			"parentid": "370000",
			"name": "滨州市"
		}, {
			"id": "371700",
			"parentid": "370000",
			"name": "荷泽市"
		}, {
			"id": "410100",
			"parentid": "410000",
			"name": "郑州市"
		}, {
			"id": "410200",
			"parentid": "410000",
			"name": "开封市"
		}, {
			"id": "410300",
			"parentid": "410000",
			"name": "洛阳市"
		}, {
			"id": "410400",
			"parentid": "410000",
			"name": "平顶山市"
		}, {
			"id": "410500",
			"parentid": "410000",
			"name": "安阳市"
		}, {
			"id": "410600",
			"parentid": "410000",
			"name": "鹤壁市"
		}, {
			"id": "410700",
			"parentid": "410000",
			"name": "新乡市"
		}, {
			"id": "410800",
			"parentid": "410000",
			"name": "焦作市"
		}, {
			"id": "410900",
			"parentid": "410000",
			"name": "濮阳市"
		}, {
			"id": "411000",
			"parentid": "410000",
			"name": "许昌市"
		}, {
			"id": "411100",
			"parentid": "410000",
			"name": "漯河市"
		}, {
			"id": "411200",
			"parentid": "410000",
			"name": "三门峡市"
		}, {
			"id": "411300",
			"parentid": "410000",
			"name": "南阳市"
		}, {
			"id": "411400",
			"parentid": "410000",
			"name": "商丘市"
		}, {
			"id": "411500",
			"parentid": "410000",
			"name": "信阳市"
		}, {
			"id": "411600",
			"parentid": "410000",
			"name": "周口市"
		}, {
			"id": "411700",
			"parentid": "410000",
			"name": "驻马店市"
		}, {
			"id": "420100",
			"parentid": "420000",
			"name": "武汉市"
		}, {
			"id": "420200",
			"parentid": "420000",
			"name": "黄石市"
		}, {
			"id": "420300",
			"parentid": "420000",
			"name": "十堰市"
		}, {
			"id": "420500",
			"parentid": "420000",
			"name": "宜昌市"
		}, {
			"id": "420600",
			"parentid": "420000",
			"name": "襄樊市"
		}, {
			"id": "420700",
			"parentid": "420000",
			"name": "鄂州市"
		}, {
			"id": "420800",
			"parentid": "420000",
			"name": "荆门市"
		}, {
			"id": "420900",
			"parentid": "420000",
			"name": "孝感市"
		}, {
			"id": "421000",
			"parentid": "420000",
			"name": "荆州市"
		}, {
			"id": "421100",
			"parentid": "420000",
			"name": "黄冈市"
		}, {
			"id": "421200",
			"parentid": "420000",
			"name": "咸宁市"
		}, {
			"id": "421300",
			"parentid": "420000",
			"name": "随州市"
		}, {
			"id": "422800",
			"parentid": "420000",
			"name": "恩施土家族苗族自治州"
		}, {
			"id": "429000",
			"parentid": "420000",
			"name": "省直辖行政单位"
		}, {
			"id": "430100",
			"parentid": "430000",
			"name": "长沙市"
		}, {
			"id": "430200",
			"parentid": "430000",
			"name": "株洲市"
		}, {
			"id": "430300",
			"parentid": "430000",
			"name": "湘潭市"
		}, {
			"id": "430400",
			"parentid": "430000",
			"name": "衡阳市"
		}, {
			"id": "430500",
			"parentid": "430000",
			"name": "邵阳市"
		}, {
			"id": "430600",
			"parentid": "430000",
			"name": "岳阳市"
		}, {
			"id": "430700",
			"parentid": "430000",
			"name": "常德市"
		}, {
			"id": "430800",
			"parentid": "430000",
			"name": "张家界市"
		}, {
			"id": "430900",
			"parentid": "430000",
			"name": "益阳市"
		}, {
			"id": "431000",
			"parentid": "430000",
			"name": "郴州市"
		}, {
			"id": "431100",
			"parentid": "430000",
			"name": "永州市"
		}, {
			"id": "431200",
			"parentid": "430000",
			"name": "怀化市"
		}, {
			"id": "431300",
			"parentid": "430000",
			"name": "娄底市"
		}, {
			"id": "433100",
			"parentid": "430000",
			"name": "湘西土家族苗族自治州"
		}, {
			"id": "440100",
			"parentid": "440000",
			"name": "广州市"
		}, {
			"id": "440200",
			"parentid": "440000",
			"name": "韶关市"
		}, {
			"id": "440300",
			"parentid": "440000",
			"name": "深圳市"
		}, {
			"id": "440400",
			"parentid": "440000",
			"name": "珠海市"
		}, {
			"id": "440500",
			"parentid": "440000",
			"name": "汕头市"
		}, {
			"id": "440600",
			"parentid": "440000",
			"name": "佛山市"
		}, {
			"id": "440700",
			"parentid": "440000",
			"name": "江门市"
		}, {
			"id": "440800",
			"parentid": "440000",
			"name": "湛江市"
		}, {
			"id": "440900",
			"parentid": "440000",
			"name": "茂名市"
		}, {
			"id": "441200",
			"parentid": "440000",
			"name": "肇庆市"
		}, {
			"id": "441300",
			"parentid": "440000",
			"name": "惠州市"
		}, {
			"id": "441400",
			"parentid": "440000",
			"name": "梅州市"
		}, {
			"id": "441500",
			"parentid": "440000",
			"name": "汕尾市"
		}, {
			"id": "441600",
			"parentid": "440000",
			"name": "河源市"
		}, {
			"id": "441700",
			"parentid": "440000",
			"name": "阳江市"
		}, {
			"id": "441800",
			"parentid": "440000",
			"name": "清远市"
		}, {
			"id": "441900",
			"parentid": "440000",
			"name": "东莞市"
		}, {
			"id": "442000",
			"parentid": "440000",
			"name": "中山市"
		}, {
			"id": "445100",
			"parentid": "440000",
			"name": "潮州市"
		}, {
			"id": "445200",
			"parentid": "440000",
			"name": "揭阳市"
		}, {
			"id": "445300",
			"parentid": "440000",
			"name": "云浮市"
		}, {
			"id": "450100",
			"parentid": "450000",
			"name": "南宁市"
		}, {
			"id": "450200",
			"parentid": "450000",
			"name": "柳州市"
		}, {
			"id": "450300",
			"parentid": "450000",
			"name": "桂林市"
		}, {
			"id": "450400",
			"parentid": "450000",
			"name": "梧州市"
		}, {
			"id": "450500",
			"parentid": "450000",
			"name": "北海市"
		}, {
			"id": "450600",
			"parentid": "450000",
			"name": "防城港市"
		}, {
			"id": "450700",
			"parentid": "450000",
			"name": "钦州市"
		}, {
			"id": "450800",
			"parentid": "450000",
			"name": "贵港市"
		}, {
			"id": "450900",
			"parentid": "450000",
			"name": "玉林市"
		}, {
			"id": "451000",
			"parentid": "450000",
			"name": "百色市"
		}, {
			"id": "451100",
			"parentid": "450000",
			"name": "贺州市"
		}, {
			"id": "451200",
			"parentid": "450000",
			"name": "河池市"
		}, {
			"id": "451300",
			"parentid": "450000",
			"name": "来宾市"
		}, {
			"id": "451400",
			"parentid": "450000",
			"name": "崇左市"
		}, {
			"id": "460100",
			"parentid": "460000",
			"name": "海口市"
		}, {
			"id": "460200",
			"parentid": "460000",
			"name": "三亚市"
		}, {
			"id": "469000",
			"parentid": "460000",
			"name": "省直辖县级行政单位"
		}, {
			"id": "500100",
			"parentid": "500000",
			"name": "重庆市"
		}, {
			"id": "500300",
			"parentid": "500000",
			"name": "市"
		}, {
			"id": "510100",
			"parentid": "510000",
			"name": "成都市"
		}, {
			"id": "510300",
			"parentid": "510000",
			"name": "自贡市"
		}, {
			"id": "510400",
			"parentid": "510000",
			"name": "攀枝花市"
		}, {
			"id": "510500",
			"parentid": "510000",
			"name": "泸州市"
		}, {
			"id": "510600",
			"parentid": "510000",
			"name": "德阳市"
		}, {
			"id": "510700",
			"parentid": "510000",
			"name": "绵阳市"
		}, {
			"id": "510800",
			"parentid": "510000",
			"name": "广元市"
		}, {
			"id": "510900",
			"parentid": "510000",
			"name": "遂宁市"
		}, {
			"id": "511000",
			"parentid": "510000",
			"name": "内江市"
		}, {
			"id": "511100",
			"parentid": "510000",
			"name": "乐山市"
		}, {
			"id": "511300",
			"parentid": "510000",
			"name": "南充市"
		}, {
			"id": "511400",
			"parentid": "510000",
			"name": "眉山市"
		}, {
			"id": "511500",
			"parentid": "510000",
			"name": "宜宾市"
		}, {
			"id": "511600",
			"parentid": "510000",
			"name": "广安市"
		}, {
			"id": "511700",
			"parentid": "510000",
			"name": "达州市"
		}, {
			"id": "511800",
			"parentid": "510000",
			"name": "雅安市"
		}, {
			"id": "511900",
			"parentid": "510000",
			"name": "巴中市"
		}, {
			"id": "512000",
			"parentid": "510000",
			"name": "资阳市"
		}, {
			"id": "513200",
			"parentid": "510000",
			"name": "阿坝藏族羌族自治州"
		}, {
			"id": "513300",
			"parentid": "510000",
			"name": "甘孜藏族自治州"
		}, {
			"id": "513400",
			"parentid": "510000",
			"name": "凉山彝族自治州"
		}, {
			"id": "520100",
			"parentid": "520000",
			"name": "贵阳市"
		}, {
			"id": "520200",
			"parentid": "520000",
			"name": "六盘水市"
		}, {
			"id": "520300",
			"parentid": "520000",
			"name": "遵义市"
		}, {
			"id": "520400",
			"parentid": "520000",
			"name": "安顺市"
		}, {
			"id": "522200",
			"parentid": "520000",
			"name": "铜仁地区"
		}, {
			"id": "522300",
			"parentid": "520000",
			"name": "黔西南布依族苗族自治州"
		}, {
			"id": "522400",
			"parentid": "520000",
			"name": "毕节地区"
		}, {
			"id": "522600",
			"parentid": "520000",
			"name": "黔东南苗族侗族自治州"
		}, {
			"id": "522700",
			"parentid": "520000",
			"name": "黔南布依族苗族自治州"
		}, {
			"id": "530100",
			"parentid": "530000",
			"name": "昆明市"
		}, {
			"id": "530300",
			"parentid": "530000",
			"name": "曲靖市"
		}, {
			"id": "530400",
			"parentid": "530000",
			"name": "玉溪市"
		}, {
			"id": "530500",
			"parentid": "530000",
			"name": "保山市"
		}, {
			"id": "530600",
			"parentid": "530000",
			"name": "昭通市"
		}, {
			"id": "530700",
			"parentid": "530000",
			"name": "丽江市"
		}, {
			"id": "530800",
			"parentid": "530000",
			"name": "思茅市"
		}, {
			"id": "530900",
			"parentid": "530000",
			"name": "临沧市"
		}, {
			"id": "532300",
			"parentid": "530000",
			"name": "楚雄彝族自治州"
		}, {
			"id": "532500",
			"parentid": "530000",
			"name": "红河哈尼族彝族自治州"
		}, {
			"id": "532600",
			"parentid": "530000",
			"name": "文山壮族苗族自治州"
		}, {
			"id": "532800",
			"parentid": "530000",
			"name": "西双版纳傣族自治州"
		}, {
			"id": "532900",
			"parentid": "530000",
			"name": "大理白族自治州"
		}, {
			"id": "533100",
			"parentid": "530000",
			"name": "德宏傣族景颇族自治州"
		}, {
			"id": "533300",
			"parentid": "530000",
			"name": "怒江傈僳族自治州"
		}, {
			"id": "533400",
			"parentid": "530000",
			"name": "迪庆藏族自治州"
		}, {
			"id": "540100",
			"parentid": "540000",
			"name": "拉萨市"
		}, {
			"id": "542100",
			"parentid": "540000",
			"name": "昌都地区"
		}, {
			"id": "542200",
			"parentid": "540000",
			"name": "山南地区"
		}, {
			"id": "542300",
			"parentid": "540000",
			"name": "日喀则地区"
		}, {
			"id": "542400",
			"parentid": "540000",
			"name": "那曲地区"
		}, {
			"id": "542500",
			"parentid": "540000",
			"name": "阿里地区"
		}, {
			"id": "542600",
			"parentid": "540000",
			"name": "林芝地区"
		}, {
			"id": "610100",
			"parentid": "610000",
			"name": "西安市"
		}, {
			"id": "610200",
			"parentid": "610000",
			"name": "铜川市"
		}, {
			"id": "610300",
			"parentid": "610000",
			"name": "宝鸡市"
		}, {
			"id": "610400",
			"parentid": "610000",
			"name": "咸阳市"
		}, {
			"id": "610500",
			"parentid": "610000",
			"name": "渭南市"
		}, {
			"id": "610600",
			"parentid": "610000",
			"name": "延安市"
		}, {
			"id": "610700",
			"parentid": "610000",
			"name": "汉中市"
		}, {
			"id": "610800",
			"parentid": "610000",
			"name": "榆林市"
		}, {
			"id": "610900",
			"parentid": "610000",
			"name": "安康市"
		}, {
			"id": "611000",
			"parentid": "610000",
			"name": "商洛市"
		}, {
			"id": "620100",
			"parentid": "620000",
			"name": "兰州市"
		}, {
			"id": "620200",
			"parentid": "620000",
			"name": "嘉峪关市"
		}, {
			"id": "620300",
			"parentid": "620000",
			"name": "金昌市"
		}, {
			"id": "620400",
			"parentid": "620000",
			"name": "白银市"
		}, {
			"id": "620500",
			"parentid": "620000",
			"name": "天水市"
		}, {
			"id": "620600",
			"parentid": "620000",
			"name": "武威市"
		}, {
			"id": "620700",
			"parentid": "620000",
			"name": "张掖市"
		}, {
			"id": "620800",
			"parentid": "620000",
			"name": "平凉市"
		}, {
			"id": "620900",
			"parentid": "620000",
			"name": "酒泉市"
		}, {
			"id": "621000",
			"parentid": "620000",
			"name": "庆阳市"
		}, {
			"id": "621100",
			"parentid": "620000",
			"name": "定西市"
		}, {
			"id": "621200",
			"parentid": "620000",
			"name": "陇南市"
		}, {
			"id": "622900",
			"parentid": "620000",
			"name": "临夏回族自治州"
		}, {
			"id": "623000",
			"parentid": "620000",
			"name": "甘南藏族自治州"
		}, {
			"id": "630100",
			"parentid": "630000",
			"name": "西宁市"
		}, {
			"id": "632100",
			"parentid": "630000",
			"name": "海东地区"
		}, {
			"id": "632200",
			"parentid": "630000",
			"name": "海北藏族自治州"
		}, {
			"id": "632300",
			"parentid": "630000",
			"name": "黄南藏族自治州"
		}, {
			"id": "632500",
			"parentid": "630000",
			"name": "海南藏族自治州"
		}, {
			"id": "632600",
			"parentid": "630000",
			"name": "果洛藏族自治州"
		}, {
			"id": "632700",
			"parentid": "630000",
			"name": "玉树藏族自治州"
		}, {
			"id": "632800",
			"parentid": "630000",
			"name": "海西蒙古族藏族自治州"
		}, {
			"id": "640100",
			"parentid": "640000",
			"name": "银川市"
		}, {
			"id": "640200",
			"parentid": "640000",
			"name": "石嘴山市"
		}, {
			"id": "640300",
			"parentid": "640000",
			"name": "吴忠市"
		}, {
			"id": "640400",
			"parentid": "640000",
			"name": "固原市"
		}, {
			"id": "640500",
			"parentid": "640000",
			"name": "中卫市"
		}, {
			"id": "650100",
			"parentid": "650000",
			"name": "乌鲁木齐市"
		}, {
			"id": "650200",
			"parentid": "650000",
			"name": "克拉玛依市"
		}, {
			"id": "652100",
			"parentid": "650000",
			"name": "吐鲁番地区"
		}, {
			"id": "652200",
			"parentid": "650000",
			"name": "哈密地区"
		}, {
			"id": "652300",
			"parentid": "650000",
			"name": "昌吉回族自治州"
		}, {
			"id": "652700",
			"parentid": "650000",
			"name": "博尔塔拉蒙古自治州"
		}, {
			"id": "652800",
			"parentid": "650000",
			"name": "巴音郭楞蒙古自治州"
		}, {
			"id": "652900",
			"parentid": "650000",
			"name": "阿克苏地区"
		}, {
			"id": "653000",
			"parentid": "650000",
			"name": "克孜勒苏柯尔克孜自治州"
		}, {
			"id": "653100",
			"parentid": "650000",
			"name": "喀什地区"
		}, {
			"id": "653200",
			"parentid": "650000",
			"name": "和田地区"
		}, {
			"id": "654000",
			"parentid": "650000",
			"name": "伊犁哈萨克自治州"
		}, {
			"id": "654200",
			"parentid": "650000",
			"name": "塔城地区"
		}, {
			"id": "654300",
			"parentid": "650000",
			"name": "阿勒泰地区"
		}, {
			"id": "659000",
			"parentid": "650000",
			"name": "省直辖行政单位"
		}]
	}
	//区
var District = {
	"Districts": [{
		"id": "110101",
		"parentid": "110100",
		"name": "东城区"
	}, {
		"id": "110102",
		"parentid": "110100",
		"name": "西城区"
	}, {
		"id": "110103",
		"parentid": "110100",
		"name": "崇文区"
	}, {
		"id": "110104",
		"parentid": "110100",
		"name": "宣武区"
	}, {
		"id": "110105",
		"parentid": "110100",
		"name": "朝阳区"
	}, {
		"id": "110106",
		"parentid": "110100",
		"name": "丰台区"
	}, {
		"id": "110107",
		"parentid": "110100",
		"name": "石景山区"
	}, {
		"id": "110108",
		"parentid": "110100",
		"name": "海淀区"
	}, {
		"id": "110109",
		"parentid": "110100",
		"name": "门头沟区"
	}, {
		"id": "110111",
		"parentid": "110100",
		"name": "房山区"
	}, {
		"id": "110112",
		"parentid": "110100",
		"name": "通州区"
	}, {
		"id": "110113",
		"parentid": "110100",
		"name": "顺义区"
	}, {
		"id": "110114",
		"parentid": "110100",
		"name": "昌平区"
	}, {
		"id": "110115",
		"parentid": "110100",
		"name": "大兴区"
	}, {
		"id": "110116",
		"parentid": "110100",
		"name": "怀柔区"
	}, {
		"id": "110117",
		"parentid": "110100",
		"name": "平谷区"
	}, {
		"id": "110228",
		"parentid": "110100",
		"name": "密云县"
	}, {
		"id": "110229",
		"parentid": "110100",
		"name": "延庆县"
	}, {
		"id": "120101",
		"parentid": "120100",
		"name": "和平区"
	}, {
		"id": "120102",
		"parentid": "120100",
		"name": "河东区"
	}, {
		"id": "120103",
		"parentid": "120100",
		"name": "河西区"
	}, {
		"id": "120104",
		"parentid": "120100",
		"name": "南开区"
	}, {
		"id": "120105",
		"parentid": "120100",
		"name": "河北区"
	}, {
		"id": "120106",
		"parentid": "120100",
		"name": "红桥区"
	}, {
		"id": "120107",
		"parentid": "120100",
		"name": "塘沽区"
	}, {
		"id": "120108",
		"parentid": "120100",
		"name": "汉沽区"
	}, {
		"id": "120109",
		"parentid": "120100",
		"name": "大港区"
	}, {
		"id": "120110",
		"parentid": "120100",
		"name": "东丽区"
	}, {
		"id": "120111",
		"parentid": "120100",
		"name": "西青区"
	}, {
		"id": "120112",
		"parentid": "120100",
		"name": "津南区"
	}, {
		"id": "120113",
		"parentid": "120100",
		"name": "北辰区"
	}, {
		"id": "120114",
		"parentid": "120100",
		"name": "武清区"
	}, {
		"id": "120115",
		"parentid": "120100",
		"name": "宝坻区"
	}, {
		"id": "120221",
		"parentid": "120100",
		"name": "宁河县"
	}, {
		"id": "120223",
		"parentid": "120100",
		"name": "静海县"
	}, {
		"id": "120225",
		"parentid": "120100",
		"name": "蓟　县"
	}, {
		"id": "130102",
		"parentid": "130100",
		"name": "长安区"
	}, {
		"id": "130103",
		"parentid": "130100",
		"name": "桥东区"
	}, {
		"id": "130104",
		"parentid": "130100",
		"name": "桥西区"
	}, {
		"id": "130105",
		"parentid": "130100",
		"name": "新华区"
	}, {
		"id": "130107",
		"parentid": "130100",
		"name": "井陉矿区"
	}, {
		"id": "130108",
		"parentid": "130100",
		"name": "裕华区"
	}, {
		"id": "130121",
		"parentid": "130100",
		"name": "井陉县"
	}, {
		"id": "130123",
		"parentid": "130100",
		"name": "正定县"
	}, {
		"id": "130124",
		"parentid": "130100",
		"name": "栾城县"
	}, {
		"id": "130125",
		"parentid": "130100",
		"name": "行唐县"
	}, {
		"id": "130126",
		"parentid": "130100",
		"name": "灵寿县"
	}, {
		"id": "130127",
		"parentid": "130100",
		"name": "高邑县"
	}, {
		"id": "130128",
		"parentid": "130100",
		"name": "深泽县"
	}, {
		"id": "130129",
		"parentid": "130100",
		"name": "赞皇县"
	}, {
		"id": "130130",
		"parentid": "130100",
		"name": "无极县"
	}, {
		"id": "130131",
		"parentid": "130100",
		"name": "平山县"
	}, {
		"id": "130132",
		"parentid": "130100",
		"name": "元氏县"
	}, {
		"id": "130133",
		"parentid": "130100",
		"name": "赵　县"
	}, {
		"id": "130181",
		"parentid": "130100",
		"name": "辛集市"
	}, {
		"id": "130182",
		"parentid": "130100",
		"name": "藁城市"
	}, {
		"id": "130183",
		"parentid": "130100",
		"name": "晋州市"
	}, {
		"id": "130184",
		"parentid": "130100",
		"name": "新乐市"
	}, {
		"id": "130185",
		"parentid": "130100",
		"name": "鹿泉市"
	}, {
		"id": "130202",
		"parentid": "130200",
		"name": "路南区"
	}, {
		"id": "130203",
		"parentid": "130200",
		"name": "路北区"
	}, {
		"id": "130204",
		"parentid": "130200",
		"name": "古冶区"
	}, {
		"id": "130205",
		"parentid": "130200",
		"name": "开平区"
	}, {
		"id": "130207",
		"parentid": "130200",
		"name": "丰南区"
	}, {
		"id": "130208",
		"parentid": "130200",
		"name": "丰润区"
	}, {
		"id": "130223",
		"parentid": "130200",
		"name": "滦　县"
	}, {
		"id": "130224",
		"parentid": "130200",
		"name": "滦南县"
	}, {
		"id": "130225",
		"parentid": "130200",
		"name": "乐亭县"
	}, {
		"id": "130227",
		"parentid": "130200",
		"name": "迁西县"
	}, {
		"id": "130229",
		"parentid": "130200",
		"name": "玉田县"
	}, {
		"id": "130230",
		"parentid": "130200",
		"name": "唐海县"
	}, {
		"id": "130281",
		"parentid": "130200",
		"name": "遵化市"
	}, {
		"id": "130283",
		"parentid": "130200",
		"name": "迁安市"
	}, {
		"id": "130302",
		"parentid": "130300",
		"name": "海港区"
	}, {
		"id": "130303",
		"parentid": "130300",
		"name": "山海关区"
	}, {
		"id": "130304",
		"parentid": "130300",
		"name": "北戴河区"
	}, {
		"id": "130321",
		"parentid": "130300",
		"name": "青龙满族自治县"
	}, {
		"id": "130322",
		"parentid": "130300",
		"name": "昌黎县"
	}, {
		"id": "130323",
		"parentid": "130300",
		"name": "抚宁县"
	}, {
		"id": "130324",
		"parentid": "130300",
		"name": "卢龙县"
	}, {
		"id": "130402",
		"parentid": "130400",
		"name": "邯山区"
	}, {
		"id": "130403",
		"parentid": "130400",
		"name": "丛台区"
	}, {
		"id": "130404",
		"parentid": "130400",
		"name": "复兴区"
	}, {
		"id": "130406",
		"parentid": "130400",
		"name": "峰峰矿区"
	}, {
		"id": "130421",
		"parentid": "130400",
		"name": "邯郸县"
	}, {
		"id": "130423",
		"parentid": "130400",
		"name": "临漳县"
	}, {
		"id": "130424",
		"parentid": "130400",
		"name": "成安县"
	}, {
		"id": "130425",
		"parentid": "130400",
		"name": "大名县"
	}, {
		"id": "130426",
		"parentid": "130400",
		"name": "涉　县"
	}, {
		"id": "130427",
		"parentid": "130400",
		"name": "磁　县"
	}, {
		"id": "130428",
		"parentid": "130400",
		"name": "肥乡县"
	}, {
		"id": "130429",
		"parentid": "130400",
		"name": "永年县"
	}, {
		"id": "130430",
		"parentid": "130400",
		"name": "邱　县"
	}, {
		"id": "130431",
		"parentid": "130400",
		"name": "鸡泽县"
	}, {
		"id": "130432",
		"parentid": "130400",
		"name": "广平县"
	}, {
		"id": "130433",
		"parentid": "130400",
		"name": "馆陶县"
	}, {
		"id": "130434",
		"parentid": "130400",
		"name": "魏　县"
	}, {
		"id": "130435",
		"parentid": "130400",
		"name": "曲周县"
	}, {
		"id": "130481",
		"parentid": "130400",
		"name": "武安市"
	}, {
		"id": "130502",
		"parentid": "130500",
		"name": "桥东区"
	}, {
		"id": "130503",
		"parentid": "130500",
		"name": "桥西区"
	}, {
		"id": "130521",
		"parentid": "130500",
		"name": "邢台县"
	}, {
		"id": "130522",
		"parentid": "130500",
		"name": "临城县"
	}, {
		"id": "130523",
		"parentid": "130500",
		"name": "内丘县"
	}, {
		"id": "130524",
		"parentid": "130500",
		"name": "柏乡县"
	}, {
		"id": "130525",
		"parentid": "130500",
		"name": "隆尧县"
	}, {
		"id": "130526",
		"parentid": "130500",
		"name": "任　县"
	}, {
		"id": "130527",
		"parentid": "130500",
		"name": "南和县"
	}, {
		"id": "130528",
		"parentid": "130500",
		"name": "宁晋县"
	}, {
		"id": "130529",
		"parentid": "130500",
		"name": "巨鹿县"
	}, {
		"id": "130530",
		"parentid": "130500",
		"name": "新河县"
	}, {
		"id": "130531",
		"parentid": "130500",
		"name": "广宗县"
	}, {
		"id": "130532",
		"parentid": "130500",
		"name": "平乡县"
	}, {
		"id": "130533",
		"parentid": "130500",
		"name": "威　县"
	}, {
		"id": "130534",
		"parentid": "130500",
		"name": "清河县"
	}, {
		"id": "130535",
		"parentid": "130500",
		"name": "临西县"
	}, {
		"id": "130581",
		"parentid": "130500",
		"name": "南宫市"
	}, {
		"id": "130582",
		"parentid": "130500",
		"name": "沙河市"
	}, {
		"id": "130602",
		"parentid": "130600",
		"name": "新市区"
	}, {
		"id": "130603",
		"parentid": "130600",
		"name": "北市区"
	}, {
		"id": "130604",
		"parentid": "130600",
		"name": "南市区"
	}, {
		"id": "130621",
		"parentid": "130600",
		"name": "满城县"
	}, {
		"id": "130622",
		"parentid": "130600",
		"name": "清苑县"
	}, {
		"id": "130623",
		"parentid": "130600",
		"name": "涞水县"
	}, {
		"id": "130624",
		"parentid": "130600",
		"name": "阜平县"
	}, {
		"id": "130625",
		"parentid": "130600",
		"name": "徐水县"
	}, {
		"id": "130626",
		"parentid": "130600",
		"name": "定兴县"
	}, {
		"id": "130627",
		"parentid": "130600",
		"name": "唐　县"
	}, {
		"id": "130628",
		"parentid": "130600",
		"name": "高阳县"
	}, {
		"id": "130629",
		"parentid": "130600",
		"name": "容城县"
	}, {
		"id": "130630",
		"parentid": "130600",
		"name": "涞源县"
	}, {
		"id": "130631",
		"parentid": "130600",
		"name": "望都县"
	}, {
		"id": "130632",
		"parentid": "130600",
		"name": "安新县"
	}, {
		"id": "130633",
		"parentid": "130600",
		"name": "易　县"
	}, {
		"id": "130634",
		"parentid": "130600",
		"name": "曲阳县"
	}, {
		"id": "130635",
		"parentid": "130600",
		"name": "蠡　县"
	}, {
		"id": "130636",
		"parentid": "130600",
		"name": "顺平县"
	}, {
		"id": "130637",
		"parentid": "130600",
		"name": "博野县"
	}, {
		"id": "130638",
		"parentid": "130600",
		"name": "雄　县"
	}, {
		"id": "130681",
		"parentid": "130600",
		"name": "涿州市"
	}, {
		"id": "130682",
		"parentid": "130600",
		"name": "定州市"
	}, {
		"id": "130683",
		"parentid": "130600",
		"name": "安国市"
	}, {
		"id": "130684",
		"parentid": "130600",
		"name": "高碑店市"
	}, {
		"id": "130702",
		"parentid": "130700",
		"name": "桥东区"
	}, {
		"id": "130703",
		"parentid": "130700",
		"name": "桥西区"
	}, {
		"id": "130705",
		"parentid": "130700",
		"name": "宣化区"
	}, {
		"id": "130706",
		"parentid": "130700",
		"name": "下花园区"
	}, {
		"id": "130721",
		"parentid": "130700",
		"name": "宣化县"
	}, {
		"id": "130722",
		"parentid": "130700",
		"name": "张北县"
	}, {
		"id": "130723",
		"parentid": "130700",
		"name": "康保县"
	}, {
		"id": "130724",
		"parentid": "130700",
		"name": "沽源县"
	}, {
		"id": "130725",
		"parentid": "130700",
		"name": "尚义县"
	}, {
		"id": "130726",
		"parentid": "130700",
		"name": "蔚　县"
	}, {
		"id": "130727",
		"parentid": "130700",
		"name": "阳原县"
	}, {
		"id": "130728",
		"parentid": "130700",
		"name": "怀安县"
	}, {
		"id": "130729",
		"parentid": "130700",
		"name": "万全县"
	}, {
		"id": "130730",
		"parentid": "130700",
		"name": "怀来县"
	}, {
		"id": "130731",
		"parentid": "130700",
		"name": "涿鹿县"
	}, {
		"id": "130732",
		"parentid": "130700",
		"name": "赤城县"
	}, {
		"id": "130733",
		"parentid": "130700",
		"name": "崇礼县"
	}, {
		"id": "130802",
		"parentid": "130800",
		"name": "双桥区"
	}, {
		"id": "130803",
		"parentid": "130800",
		"name": "双滦区"
	}, {
		"id": "130804",
		"parentid": "130800",
		"name": "鹰手营子矿区"
	}, {
		"id": "130821",
		"parentid": "130800",
		"name": "承德县"
	}, {
		"id": "130822",
		"parentid": "130800",
		"name": "兴隆县"
	}, {
		"id": "130823",
		"parentid": "130800",
		"name": "平泉县"
	}, {
		"id": "130824",
		"parentid": "130800",
		"name": "滦平县"
	}, {
		"id": "130825",
		"parentid": "130800",
		"name": "隆化县"
	}, {
		"id": "130826",
		"parentid": "130800",
		"name": "丰宁满族自治县"
	}, {
		"id": "130827",
		"parentid": "130800",
		"name": "宽城满族自治县"
	}, {
		"id": "130828",
		"parentid": "130800",
		"name": "围场满族蒙古族自治县"
	}, {
		"id": "130902",
		"parentid": "130900",
		"name": "新华区"
	}, {
		"id": "130903",
		"parentid": "130900",
		"name": "运河区"
	}, {
		"id": "130921",
		"parentid": "130900",
		"name": "沧　县"
	}, {
		"id": "130922",
		"parentid": "130900",
		"name": "青　县"
	}, {
		"id": "130923",
		"parentid": "130900",
		"name": "东光县"
	}, {
		"id": "130924",
		"parentid": "130900",
		"name": "海兴县"
	}, {
		"id": "130925",
		"parentid": "130900",
		"name": "盐山县"
	}, {
		"id": "130926",
		"parentid": "130900",
		"name": "肃宁县"
	}, {
		"id": "130927",
		"parentid": "130900",
		"name": "南皮县"
	}, {
		"id": "130928",
		"parentid": "130900",
		"name": "吴桥县"
	}, {
		"id": "130929",
		"parentid": "130900",
		"name": "献　县"
	}, {
		"id": "130930",
		"parentid": "130900",
		"name": "孟村回族自治县"
	}, {
		"id": "130981",
		"parentid": "130900",
		"name": "泊头市"
	}, {
		"id": "130982",
		"parentid": "130900",
		"name": "任丘市"
	}, {
		"id": "130983",
		"parentid": "130900",
		"name": "黄骅市"
	}, {
		"id": "130984",
		"parentid": "130900",
		"name": "河间市"
	}, {
		"id": "131002",
		"parentid": "131000",
		"name": "安次区"
	}, {
		"id": "131003",
		"parentid": "131000",
		"name": "广阳区"
	}, {
		"id": "131022",
		"parentid": "131000",
		"name": "固安县"
	}, {
		"id": "131023",
		"parentid": "131000",
		"name": "永清县"
	}, {
		"id": "131024",
		"parentid": "131000",
		"name": "香河县"
	}, {
		"id": "131025",
		"parentid": "131000",
		"name": "大城县"
	}, {
		"id": "131026",
		"parentid": "131000",
		"name": "文安县"
	}, {
		"id": "131028",
		"parentid": "131000",
		"name": "大厂回族自治县"
	}, {
		"id": "131081",
		"parentid": "131000",
		"name": "霸州市"
	}, {
		"id": "131082",
		"parentid": "131000",
		"name": "三河市"
	}, {
		"id": "131102",
		"parentid": "131100",
		"name": "桃城区"
	}, {
		"id": "131121",
		"parentid": "131100",
		"name": "枣强县"
	}, {
		"id": "131122",
		"parentid": "131100",
		"name": "武邑县"
	}, {
		"id": "131123",
		"parentid": "131100",
		"name": "武强县"
	}, {
		"id": "131124",
		"parentid": "131100",
		"name": "饶阳县"
	}, {
		"id": "131125",
		"parentid": "131100",
		"name": "安平县"
	}, {
		"id": "131126",
		"parentid": "131100",
		"name": "故城县"
	}, {
		"id": "131127",
		"parentid": "131100",
		"name": "景　县"
	}, {
		"id": "131128",
		"parentid": "131100",
		"name": "阜城县"
	}, {
		"id": "131181",
		"parentid": "131100",
		"name": "冀州市"
	}, {
		"id": "131182",
		"parentid": "131100",
		"name": "深州市"
	}, {
		"id": "140105",
		"parentid": "140100",
		"name": "小店区"
	}, {
		"id": "140106",
		"parentid": "140100",
		"name": "迎泽区"
	}, {
		"id": "140107",
		"parentid": "140100",
		"name": "杏花岭区"
	}, {
		"id": "140108",
		"parentid": "140100",
		"name": "尖草坪区"
	}, {
		"id": "140109",
		"parentid": "140100",
		"name": "万柏林区"
	}, {
		"id": "140110",
		"parentid": "140100",
		"name": "晋源区"
	}, {
		"id": "140121",
		"parentid": "140100",
		"name": "清徐县"
	}, {
		"id": "140122",
		"parentid": "140100",
		"name": "阳曲县"
	}, {
		"id": "140123",
		"parentid": "140100",
		"name": "娄烦县"
	}, {
		"id": "140181",
		"parentid": "140100",
		"name": "古交市"
	}, {
		"id": "140202",
		"parentid": "140200",
		"name": "城　区"
	}, {
		"id": "140203",
		"parentid": "140200",
		"name": "矿　区"
	}, {
		"id": "140211",
		"parentid": "140200",
		"name": "南郊区"
	}, {
		"id": "140212",
		"parentid": "140200",
		"name": "新荣区"
	}, {
		"id": "140221",
		"parentid": "140200",
		"name": "阳高县"
	}, {
		"id": "140222",
		"parentid": "140200",
		"name": "天镇县"
	}, {
		"id": "140223",
		"parentid": "140200",
		"name": "广灵县"
	}, {
		"id": "140224",
		"parentid": "140200",
		"name": "灵丘县"
	}, {
		"id": "140225",
		"parentid": "140200",
		"name": "浑源县"
	}, {
		"id": "140226",
		"parentid": "140200",
		"name": "左云县"
	}, {
		"id": "140227",
		"parentid": "140200",
		"name": "大同县"
	}, {
		"id": "140302",
		"parentid": "140300",
		"name": "城　区"
	}, {
		"id": "140303",
		"parentid": "140300",
		"name": "矿　区"
	}, {
		"id": "140311",
		"parentid": "140300",
		"name": "郊　区"
	}, {
		"id": "140321",
		"parentid": "140300",
		"name": "平定县"
	}, {
		"id": "140322",
		"parentid": "140300",
		"name": "盂　县"
	}, {
		"id": "140402",
		"parentid": "140400",
		"name": "城　区"
	}, {
		"id": "140411",
		"parentid": "140400",
		"name": "郊　区"
	}, {
		"id": "140421",
		"parentid": "140400",
		"name": "长治县"
	}, {
		"id": "140423",
		"parentid": "140400",
		"name": "襄垣县"
	}, {
		"id": "140424",
		"parentid": "140400",
		"name": "屯留县"
	}, {
		"id": "140425",
		"parentid": "140400",
		"name": "平顺县"
	}, {
		"id": "140426",
		"parentid": "140400",
		"name": "黎城县"
	}, {
		"id": "140427",
		"parentid": "140400",
		"name": "壶关县"
	}, {
		"id": "140428",
		"parentid": "140400",
		"name": "长子县"
	}, {
		"id": "140429",
		"parentid": "140400",
		"name": "武乡县"
	}, {
		"id": "140430",
		"parentid": "140400",
		"name": "沁　县"
	}, {
		"id": "140431",
		"parentid": "140400",
		"name": "沁源县"
	}, {
		"id": "140481",
		"parentid": "140400",
		"name": "潞城市"
	}, {
		"id": "140502",
		"parentid": "140500",
		"name": "城　区"
	}, {
		"id": "140521",
		"parentid": "140500",
		"name": "沁水县"
	}, {
		"id": "140522",
		"parentid": "140500",
		"name": "阳城县"
	}, {
		"id": "140524",
		"parentid": "140500",
		"name": "陵川县"
	}, {
		"id": "140525",
		"parentid": "140500",
		"name": "泽州县"
	}, {
		"id": "140581",
		"parentid": "140500",
		"name": "高平市"
	}, {
		"id": "140602",
		"parentid": "140600",
		"name": "朔城区"
	}, {
		"id": "140603",
		"parentid": "140600",
		"name": "平鲁区"
	}, {
		"id": "140621",
		"parentid": "140600",
		"name": "山阴县"
	}, {
		"id": "140622",
		"parentid": "140600",
		"name": "应　县"
	}, {
		"id": "140623",
		"parentid": "140600",
		"name": "右玉县"
	}, {
		"id": "140624",
		"parentid": "140600",
		"name": "怀仁县"
	}, {
		"id": "140702",
		"parentid": "140700",
		"name": "榆次区"
	}, {
		"id": "140721",
		"parentid": "140700",
		"name": "榆社县"
	}, {
		"id": "140722",
		"parentid": "140700",
		"name": "左权县"
	}, {
		"id": "140723",
		"parentid": "140700",
		"name": "和顺县"
	}, {
		"id": "140724",
		"parentid": "140700",
		"name": "昔阳县"
	}, {
		"id": "140725",
		"parentid": "140700",
		"name": "寿阳县"
	}, {
		"id": "140726",
		"parentid": "140700",
		"name": "太谷县"
	}, {
		"id": "140727",
		"parentid": "140700",
		"name": "祁　县"
	}, {
		"id": "140728",
		"parentid": "140700",
		"name": "平遥县"
	}, {
		"id": "140729",
		"parentid": "140700",
		"name": "灵石县"
	}, {
		"id": "140781",
		"parentid": "140700",
		"name": "介休市"
	}, {
		"id": "140802",
		"parentid": "140800",
		"name": "盐湖区"
	}, {
		"id": "140821",
		"parentid": "140800",
		"name": "临猗县"
	}, {
		"id": "140822",
		"parentid": "140800",
		"name": "万荣县"
	}, {
		"id": "140823",
		"parentid": "140800",
		"name": "闻喜县"
	}, {
		"id": "140824",
		"parentid": "140800",
		"name": "稷山县"
	}, {
		"id": "140825",
		"parentid": "140800",
		"name": "新绛县"
	}, {
		"id": "140826",
		"parentid": "140800",
		"name": "绛　县"
	}, {
		"id": "140827",
		"parentid": "140800",
		"name": "垣曲县"
	}, {
		"id": "140828",
		"parentid": "140800",
		"name": "夏　县"
	}, {
		"id": "140829",
		"parentid": "140800",
		"name": "平陆县"
	}, {
		"id": "140830",
		"parentid": "140800",
		"name": "芮城县"
	}, {
		"id": "140881",
		"parentid": "140800",
		"name": "永济市"
	}, {
		"id": "140882",
		"parentid": "140800",
		"name": "河津市"
	}, {
		"id": "140902",
		"parentid": "140900",
		"name": "忻府区"
	}, {
		"id": "140921",
		"parentid": "140900",
		"name": "定襄县"
	}, {
		"id": "140922",
		"parentid": "140900",
		"name": "五台县"
	}, {
		"id": "140923",
		"parentid": "140900",
		"name": "代　县"
	}, {
		"id": "140924",
		"parentid": "140900",
		"name": "繁峙县"
	}, {
		"id": "140925",
		"parentid": "140900",
		"name": "宁武县"
	}, {
		"id": "140926",
		"parentid": "140900",
		"name": "静乐县"
	}, {
		"id": "140927",
		"parentid": "140900",
		"name": "神池县"
	}, {
		"id": "140928",
		"parentid": "140900",
		"name": "五寨县"
	}, {
		"id": "140929",
		"parentid": "140900",
		"name": "岢岚县"
	}, {
		"id": "140930",
		"parentid": "140900",
		"name": "河曲县"
	}, {
		"id": "140931",
		"parentid": "140900",
		"name": "保德县"
	}, {
		"id": "140932",
		"parentid": "140900",
		"name": "偏关县"
	}, {
		"id": "140981",
		"parentid": "140900",
		"name": "原平市"
	}, {
		"id": "141002",
		"parentid": "141000",
		"name": "尧都区"
	}, {
		"id": "141021",
		"parentid": "141000",
		"name": "曲沃县"
	}, {
		"id": "141022",
		"parentid": "141000",
		"name": "翼城县"
	}, {
		"id": "141023",
		"parentid": "141000",
		"name": "襄汾县"
	}, {
		"id": "141024",
		"parentid": "141000",
		"name": "洪洞县"
	}, {
		"id": "141025",
		"parentid": "141000",
		"name": "古　县"
	}, {
		"id": "141026",
		"parentid": "141000",
		"name": "安泽县"
	}, {
		"id": "141027",
		"parentid": "141000",
		"name": "浮山县"
	}, {
		"id": "141028",
		"parentid": "141000",
		"name": "吉　县"
	}, {
		"id": "141029",
		"parentid": "141000",
		"name": "乡宁县"
	}, {
		"id": "141030",
		"parentid": "141000",
		"name": "大宁县"
	}, {
		"id": "141031",
		"parentid": "141000",
		"name": "隰　县"
	}, {
		"id": "141032",
		"parentid": "141000",
		"name": "永和县"
	}, {
		"id": "141033",
		"parentid": "141000",
		"name": "蒲　县"
	}, {
		"id": "141034",
		"parentid": "141000",
		"name": "汾西县"
	}, {
		"id": "141081",
		"parentid": "141000",
		"name": "侯马市"
	}, {
		"id": "141082",
		"parentid": "141000",
		"name": "霍州市"
	}, {
		"id": "141102",
		"parentid": "141100",
		"name": "离石区"
	}, {
		"id": "141121",
		"parentid": "141100",
		"name": "文水县"
	}, {
		"id": "141122",
		"parentid": "141100",
		"name": "交城县"
	}, {
		"id": "141123",
		"parentid": "141100",
		"name": "兴　县"
	}, {
		"id": "141124",
		"parentid": "141100",
		"name": "临　县"
	}, {
		"id": "141125",
		"parentid": "141100",
		"name": "柳林县"
	}, {
		"id": "141126",
		"parentid": "141100",
		"name": "石楼县"
	}, {
		"id": "141127",
		"parentid": "141100",
		"name": "岚　县"
	}, {
		"id": "141128",
		"parentid": "141100",
		"name": "方山县"
	}, {
		"id": "141129",
		"parentid": "141100",
		"name": "中阳县"
	}, {
		"id": "141130",
		"parentid": "141100",
		"name": "交口县"
	}, {
		"id": "141181",
		"parentid": "141100",
		"name": "孝义市"
	}, {
		"id": "141182",
		"parentid": "141100",
		"name": "汾阳市"
	}, {
		"id": "150102",
		"parentid": "150100",
		"name": "新城区"
	}, {
		"id": "150103",
		"parentid": "150100",
		"name": "回民区"
	}, {
		"id": "150104",
		"parentid": "150100",
		"name": "玉泉区"
	}, {
		"id": "150105",
		"parentid": "150100",
		"name": "赛罕区"
	}, {
		"id": "150121",
		"parentid": "150100",
		"name": "土默特左旗"
	}, {
		"id": "150122",
		"parentid": "150100",
		"name": "托克托县"
	}, {
		"id": "150123",
		"parentid": "150100",
		"name": "和林格尔县"
	}, {
		"id": "150124",
		"parentid": "150100",
		"name": "清水河县"
	}, {
		"id": "150125",
		"parentid": "150100",
		"name": "武川县"
	}, {
		"id": "150202",
		"parentid": "150200",
		"name": "东河区"
	}, {
		"id": "150203",
		"parentid": "150200",
		"name": "昆都仑区"
	}, {
		"id": "150204",
		"parentid": "150200",
		"name": "青山区"
	}, {
		"id": "150205",
		"parentid": "150200",
		"name": "石拐区"
	}, {
		"id": "150206",
		"parentid": "150200",
		"name": "白云矿区"
	}, {
		"id": "150207",
		"parentid": "150200",
		"name": "九原区"
	}, {
		"id": "150221",
		"parentid": "150200",
		"name": "土默特右旗"
	}, {
		"id": "150222",
		"parentid": "150200",
		"name": "固阳县"
	}, {
		"id": "150223",
		"parentid": "150200",
		"name": "达尔罕茂明安联合旗"
	}, {
		"id": "150302",
		"parentid": "150300",
		"name": "海勃湾区"
	}, {
		"id": "150303",
		"parentid": "150300",
		"name": "海南区"
	}, {
		"id": "150304",
		"parentid": "150300",
		"name": "乌达区"
	}, {
		"id": "150402",
		"parentid": "150400",
		"name": "红山区"
	}, {
		"id": "150403",
		"parentid": "150400",
		"name": "元宝山区"
	}, {
		"id": "150404",
		"parentid": "150400",
		"name": "松山区"
	}, {
		"id": "150421",
		"parentid": "150400",
		"name": "阿鲁科尔沁旗"
	}, {
		"id": "150422",
		"parentid": "150400",
		"name": "巴林左旗"
	}, {
		"id": "150423",
		"parentid": "150400",
		"name": "巴林右旗"
	}, {
		"id": "150424",
		"parentid": "150400",
		"name": "林西县"
	}, {
		"id": "150425",
		"parentid": "150400",
		"name": "克什克腾旗"
	}, {
		"id": "150426",
		"parentid": "150400",
		"name": "翁牛特旗"
	}, {
		"id": "150428",
		"parentid": "150400",
		"name": "喀喇沁旗"
	}, {
		"id": "150429",
		"parentid": "150400",
		"name": "宁城县"
	}, {
		"id": "150430",
		"parentid": "150400",
		"name": "敖汉旗"
	}, {
		"id": "150502",
		"parentid": "150500",
		"name": "科尔沁区"
	}, {
		"id": "150521",
		"parentid": "150500",
		"name": "科尔沁左翼中旗"
	}, {
		"id": "150522",
		"parentid": "150500",
		"name": "科尔沁左翼后旗"
	}, {
		"id": "150523",
		"parentid": "150500",
		"name": "开鲁县"
	}, {
		"id": "150524",
		"parentid": "150500",
		"name": "库伦旗"
	}, {
		"id": "150525",
		"parentid": "150500",
		"name": "奈曼旗"
	}, {
		"id": "150526",
		"parentid": "150500",
		"name": "扎鲁特旗"
	}, {
		"id": "150581",
		"parentid": "150500",
		"name": "霍林郭勒市"
	}, {
		"id": "150602",
		"parentid": "150600",
		"name": "东胜区"
	}, {
		"id": "150621",
		"parentid": "150600",
		"name": "达拉特旗"
	}, {
		"id": "150622",
		"parentid": "150600",
		"name": "准格尔旗"
	}, {
		"id": "150623",
		"parentid": "150600",
		"name": "鄂托克前旗"
	}, {
		"id": "150624",
		"parentid": "150600",
		"name": "鄂托克旗"
	}, {
		"id": "150625",
		"parentid": "150600",
		"name": "杭锦旗"
	}, {
		"id": "150626",
		"parentid": "150600",
		"name": "乌审旗"
	}, {
		"id": "150627",
		"parentid": "150600",
		"name": "伊金霍洛旗"
	}, {
		"id": "150702",
		"parentid": "150700",
		"name": "海拉尔区"
	}, {
		"id": "150721",
		"parentid": "150700",
		"name": "阿荣旗"
	}, {
		"id": "150722",
		"parentid": "150700",
		"name": "莫力达瓦达斡尔族自治旗"
	}, {
		"id": "150723",
		"parentid": "150700",
		"name": "鄂伦春自治旗"
	}, {
		"id": "150724",
		"parentid": "150700",
		"name": "鄂温克族自治旗"
	}, {
		"id": "150725",
		"parentid": "150700",
		"name": "陈巴尔虎旗"
	}, {
		"id": "150726",
		"parentid": "150700",
		"name": "新巴尔虎左旗"
	}, {
		"id": "150727",
		"parentid": "150700",
		"name": "新巴尔虎右旗"
	}, {
		"id": "150781",
		"parentid": "150700",
		"name": "满洲里市"
	}, {
		"id": "150782",
		"parentid": "150700",
		"name": "牙克石市"
	}, {
		"id": "150783",
		"parentid": "150700",
		"name": "扎兰屯市"
	}, {
		"id": "150784",
		"parentid": "150700",
		"name": "额尔古纳市"
	}, {
		"id": "150785",
		"parentid": "150700",
		"name": "根河市"
	}, {
		"id": "150802",
		"parentid": "150800",
		"name": "临河区"
	}, {
		"id": "150821",
		"parentid": "150800",
		"name": "五原县"
	}, {
		"id": "150822",
		"parentid": "150800",
		"name": "磴口县"
	}, {
		"id": "150823",
		"parentid": "150800",
		"name": "乌拉特前旗"
	}, {
		"id": "150824",
		"parentid": "150800",
		"name": "乌拉特中旗"
	}, {
		"id": "150825",
		"parentid": "150800",
		"name": "乌拉特后旗"
	}, {
		"id": "150826",
		"parentid": "150800",
		"name": "杭锦后旗"
	}, {
		"id": "150902",
		"parentid": "150900",
		"name": "集宁区"
	}, {
		"id": "150921",
		"parentid": "150900",
		"name": "卓资县"
	}, {
		"id": "150922",
		"parentid": "150900",
		"name": "化德县"
	}, {
		"id": "150923",
		"parentid": "150900",
		"name": "商都县"
	}, {
		"id": "150924",
		"parentid": "150900",
		"name": "兴和县"
	}, {
		"id": "150925",
		"parentid": "150900",
		"name": "凉城县"
	}, {
		"id": "150926",
		"parentid": "150900",
		"name": "察哈尔右翼前旗"
	}, {
		"id": "150927",
		"parentid": "150900",
		"name": "察哈尔右翼中旗"
	}, {
		"id": "150928",
		"parentid": "150900",
		"name": "察哈尔右翼后旗"
	}, {
		"id": "150929",
		"parentid": "150900",
		"name": "四子王旗"
	}, {
		"id": "150981",
		"parentid": "150900",
		"name": "丰镇市"
	}, {
		"id": "152201",
		"parentid": "152200",
		"name": "乌兰浩特市"
	}, {
		"id": "152202",
		"parentid": "152200",
		"name": "阿尔山市"
	}, {
		"id": "152221",
		"parentid": "152200",
		"name": "科尔沁右翼前旗"
	}, {
		"id": "152222",
		"parentid": "152200",
		"name": "科尔沁右翼中旗"
	}, {
		"id": "152223",
		"parentid": "152200",
		"name": "扎赉特旗"
	}, {
		"id": "152224",
		"parentid": "152200",
		"name": "突泉县"
	}, {
		"id": "152501",
		"parentid": "152500",
		"name": "二连浩特市"
	}, {
		"id": "152502",
		"parentid": "152500",
		"name": "锡林浩特市"
	}, {
		"id": "152522",
		"parentid": "152500",
		"name": "阿巴嘎旗"
	}, {
		"id": "152523",
		"parentid": "152500",
		"name": "苏尼特左旗"
	}, {
		"id": "152524",
		"parentid": "152500",
		"name": "苏尼特右旗"
	}, {
		"id": "152525",
		"parentid": "152500",
		"name": "东乌珠穆沁旗"
	}, {
		"id": "152526",
		"parentid": "152500",
		"name": "西乌珠穆沁旗"
	}, {
		"id": "152527",
		"parentid": "152500",
		"name": "太仆寺旗"
	}, {
		"id": "152528",
		"parentid": "152500",
		"name": "镶黄旗"
	}, {
		"id": "152529",
		"parentid": "152500",
		"name": "正镶白旗"
	}, {
		"id": "152530",
		"parentid": "152500",
		"name": "正蓝旗"
	}, {
		"id": "152531",
		"parentid": "152500",
		"name": "多伦县"
	}, {
		"id": "152921",
		"parentid": "152900",
		"name": "阿拉善左旗"
	}, {
		"id": "152922",
		"parentid": "152900",
		"name": "阿拉善右旗"
	}, {
		"id": "152923",
		"parentid": "152900",
		"name": "额济纳旗"
	}, {
		"id": "210102",
		"parentid": "210100",
		"name": "和平区"
	}, {
		"id": "210103",
		"parentid": "210100",
		"name": "沈河区"
	}, {
		"id": "210104",
		"parentid": "210100",
		"name": "大东区"
	}, {
		"id": "210105",
		"parentid": "210100",
		"name": "皇姑区"
	}, {
		"id": "210106",
		"parentid": "210100",
		"name": "铁西区"
	}, {
		"id": "210111",
		"parentid": "210100",
		"name": "苏家屯区"
	}, {
		"id": "210112",
		"parentid": "210100",
		"name": "东陵区"
	}, {
		"id": "210113",
		"parentid": "210100",
		"name": "新城子区"
	}, {
		"id": "210114",
		"parentid": "210100",
		"name": "于洪区"
	}, {
		"id": "210122",
		"parentid": "210100",
		"name": "辽中县"
	}, {
		"id": "210123",
		"parentid": "210100",
		"name": "康平县"
	}, {
		"id": "210124",
		"parentid": "210100",
		"name": "法库县"
	}, {
		"id": "210181",
		"parentid": "210100",
		"name": "新民市"
	}, {
		"id": "210202",
		"parentid": "210200",
		"name": "中山区"
	}, {
		"id": "210203",
		"parentid": "210200",
		"name": "西岗区"
	}, {
		"id": "210204",
		"parentid": "210200",
		"name": "沙河口区"
	}, {
		"id": "210211",
		"parentid": "210200",
		"name": "甘井子区"
	}, {
		"id": "210212",
		"parentid": "210200",
		"name": "旅顺口区"
	}, {
		"id": "210213",
		"parentid": "210200",
		"name": "金州区"
	}, {
		"id": "210224",
		"parentid": "210200",
		"name": "长海县"
	}, {
		"id": "210281",
		"parentid": "210200",
		"name": "瓦房店市"
	}, {
		"id": "210282",
		"parentid": "210200",
		"name": "普兰店市"
	}, {
		"id": "210283",
		"parentid": "210200",
		"name": "庄河市"
	}, {
		"id": "210302",
		"parentid": "210300",
		"name": "铁东区"
	}, {
		"id": "210303",
		"parentid": "210300",
		"name": "铁西区"
	}, {
		"id": "210304",
		"parentid": "210300",
		"name": "立山区"
	}, {
		"id": "210311",
		"parentid": "210300",
		"name": "千山区"
	}, {
		"id": "210321",
		"parentid": "210300",
		"name": "台安县"
	}, {
		"id": "210323",
		"parentid": "210300",
		"name": "岫岩满族自治县"
	}, {
		"id": "210381",
		"parentid": "210300",
		"name": "海城市"
	}, {
		"id": "210402",
		"parentid": "210400",
		"name": "新抚区"
	}, {
		"id": "210403",
		"parentid": "210400",
		"name": "东洲区"
	}, {
		"id": "210404",
		"parentid": "210400",
		"name": "望花区"
	}, {
		"id": "210411",
		"parentid": "210400",
		"name": "顺城区"
	}, {
		"id": "210421",
		"parentid": "210400",
		"name": "抚顺县"
	}, {
		"id": "210422",
		"parentid": "210400",
		"name": "新宾满族自治县"
	}, {
		"id": "210423",
		"parentid": "210400",
		"name": "清原满族自治县"
	}, {
		"id": "210502",
		"parentid": "210500",
		"name": "平山区"
	}, {
		"id": "210503",
		"parentid": "210500",
		"name": "溪湖区"
	}, {
		"id": "210504",
		"parentid": "210500",
		"name": "明山区"
	}, {
		"id": "210505",
		"parentid": "210500",
		"name": "南芬区"
	}, {
		"id": "210521",
		"parentid": "210500",
		"name": "本溪满族自治县"
	}, {
		"id": "210522",
		"parentid": "210500",
		"name": "桓仁满族自治县"
	}, {
		"id": "210602",
		"parentid": "210600",
		"name": "元宝区"
	}, {
		"id": "210603",
		"parentid": "210600",
		"name": "振兴区"
	}, {
		"id": "210604",
		"parentid": "210600",
		"name": "振安区"
	}, {
		"id": "210624",
		"parentid": "210600",
		"name": "宽甸满族自治县"
	}, {
		"id": "210681",
		"parentid": "210600",
		"name": "东港市"
	}, {
		"id": "210682",
		"parentid": "210600",
		"name": "凤城市"
	}, {
		"id": "210702",
		"parentid": "210700",
		"name": "古塔区"
	}, {
		"id": "210703",
		"parentid": "210700",
		"name": "凌河区"
	}, {
		"id": "210711",
		"parentid": "210700",
		"name": "太和区"
	}, {
		"id": "210726",
		"parentid": "210700",
		"name": "黑山县"
	}, {
		"id": "210727",
		"parentid": "210700",
		"name": "义　县"
	}, {
		"id": "210781",
		"parentid": "210700",
		"name": "凌海市"
	}, {
		"id": "210782",
		"parentid": "210700",
		"name": "北宁市"
	}, {
		"id": "210802",
		"parentid": "210800",
		"name": "站前区"
	}, {
		"id": "210803",
		"parentid": "210800",
		"name": "西市区"
	}, {
		"id": "210804",
		"parentid": "210800",
		"name": "鲅鱼圈区"
	}, {
		"id": "210811",
		"parentid": "210800",
		"name": "老边区"
	}, {
		"id": "210881",
		"parentid": "210800",
		"name": "盖州市"
	}, {
		"id": "210882",
		"parentid": "210800",
		"name": "大石桥市"
	}, {
		"id": "210902",
		"parentid": "210900",
		"name": "海州区"
	}, {
		"id": "210903",
		"parentid": "210900",
		"name": "新邱区"
	}, {
		"id": "210904",
		"parentid": "210900",
		"name": "太平区"
	}, {
		"id": "210905",
		"parentid": "210900",
		"name": "清河门区"
	}, {
		"id": "210911",
		"parentid": "210900",
		"name": "细河区"
	}, {
		"id": "210921",
		"parentid": "210900",
		"name": "阜新蒙古族自治县"
	}, {
		"id": "210922",
		"parentid": "210900",
		"name": "彰武县"
	}, {
		"id": "211002",
		"parentid": "211000",
		"name": "白塔区"
	}, {
		"id": "211003",
		"parentid": "211000",
		"name": "文圣区"
	}, {
		"id": "211004",
		"parentid": "211000",
		"name": "宏伟区"
	}, {
		"id": "211005",
		"parentid": "211000",
		"name": "弓长岭区"
	}, {
		"id": "211011",
		"parentid": "211000",
		"name": "太子河区"
	}, {
		"id": "211021",
		"parentid": "211000",
		"name": "辽阳县"
	}, {
		"id": "211081",
		"parentid": "211000",
		"name": "灯塔市"
	}, {
		"id": "211102",
		"parentid": "211100",
		"name": "双台子区"
	}, {
		"id": "211103",
		"parentid": "211100",
		"name": "兴隆台区"
	}, {
		"id": "211121",
		"parentid": "211100",
		"name": "大洼县"
	}, {
		"id": "211122",
		"parentid": "211100",
		"name": "盘山县"
	}, {
		"id": "211202",
		"parentid": "211200",
		"name": "银州区"
	}, {
		"id": "211204",
		"parentid": "211200",
		"name": "清河区"
	}, {
		"id": "211221",
		"parentid": "211200",
		"name": "铁岭县"
	}, {
		"id": "211223",
		"parentid": "211200",
		"name": "西丰县"
	}, {
		"id": "211224",
		"parentid": "211200",
		"name": "昌图县"
	}, {
		"id": "211281",
		"parentid": "211200",
		"name": "调兵山市"
	}, {
		"id": "211282",
		"parentid": "211200",
		"name": "开原市"
	}, {
		"id": "211302",
		"parentid": "211300",
		"name": "双塔区"
	}, {
		"id": "211303",
		"parentid": "211300",
		"name": "龙城区"
	}, {
		"id": "211321",
		"parentid": "211300",
		"name": "朝阳县"
	}, {
		"id": "211322",
		"parentid": "211300",
		"name": "建平县"
	}, {
		"id": "211324",
		"parentid": "211300",
		"name": "喀喇沁左翼蒙古族自治县"
	}, {
		"id": "211381",
		"parentid": "211300",
		"name": "北票市"
	}, {
		"id": "211382",
		"parentid": "211300",
		"name": "凌源市"
	}, {
		"id": "211402",
		"parentid": "211400",
		"name": "连山区"
	}, {
		"id": "211403",
		"parentid": "211400",
		"name": "龙港区"
	}, {
		"id": "211404",
		"parentid": "211400",
		"name": "南票区"
	}, {
		"id": "211421",
		"parentid": "211400",
		"name": "绥中县"
	}, {
		"id": "211422",
		"parentid": "211400",
		"name": "建昌县"
	}, {
		"id": "211481",
		"parentid": "211400",
		"name": "兴城市"
	}, {
		"id": "220102",
		"parentid": "220100",
		"name": "南关区"
	}, {
		"id": "220103",
		"parentid": "220100",
		"name": "宽城区"
	}, {
		"id": "220104",
		"parentid": "220100",
		"name": "朝阳区"
	}, {
		"id": "220105",
		"parentid": "220100",
		"name": "二道区"
	}, {
		"id": "220106",
		"parentid": "220100",
		"name": "绿园区"
	}, {
		"id": "220112",
		"parentid": "220100",
		"name": "双阳区"
	}, {
		"id": "220122",
		"parentid": "220100",
		"name": "农安县"
	}, {
		"id": "220181",
		"parentid": "220100",
		"name": "九台市"
	}, {
		"id": "220182",
		"parentid": "220100",
		"name": "榆树市"
	}, {
		"id": "220183",
		"parentid": "220100",
		"name": "德惠市"
	}, {
		"id": "220202",
		"parentid": "220200",
		"name": "昌邑区"
	}, {
		"id": "220203",
		"parentid": "220200",
		"name": "龙潭区"
	}, {
		"id": "220204",
		"parentid": "220200",
		"name": "船营区"
	}, {
		"id": "220211",
		"parentid": "220200",
		"name": "丰满区"
	}, {
		"id": "220221",
		"parentid": "220200",
		"name": "永吉县"
	}, {
		"id": "220281",
		"parentid": "220200",
		"name": "蛟河市"
	}, {
		"id": "220282",
		"parentid": "220200",
		"name": "桦甸市"
	}, {
		"id": "220283",
		"parentid": "220200",
		"name": "舒兰市"
	}, {
		"id": "220284",
		"parentid": "220200",
		"name": "磐石市"
	}, {
		"id": "220302",
		"parentid": "220300",
		"name": "铁西区"
	}, {
		"id": "220303",
		"parentid": "220300",
		"name": "铁东区"
	}, {
		"id": "220322",
		"parentid": "220300",
		"name": "梨树县"
	}, {
		"id": "220323",
		"parentid": "220300",
		"name": "伊通满族自治县"
	}, {
		"id": "220381",
		"parentid": "220300",
		"name": "公主岭市"
	}, {
		"id": "220382",
		"parentid": "220300",
		"name": "双辽市"
	}, {
		"id": "220402",
		"parentid": "220400",
		"name": "龙山区"
	}, {
		"id": "220403",
		"parentid": "220400",
		"name": "西安区"
	}, {
		"id": "220421",
		"parentid": "220400",
		"name": "东丰县"
	}, {
		"id": "220422",
		"parentid": "220400",
		"name": "东辽县"
	}, {
		"id": "220502",
		"parentid": "220500",
		"name": "东昌区"
	}, {
		"id": "220503",
		"parentid": "220500",
		"name": "二道江区"
	}, {
		"id": "220521",
		"parentid": "220500",
		"name": "通化县"
	}, {
		"id": "220523",
		"parentid": "220500",
		"name": "辉南县"
	}, {
		"id": "220524",
		"parentid": "220500",
		"name": "柳河县"
	}, {
		"id": "220581",
		"parentid": "220500",
		"name": "梅河口市"
	}, {
		"id": "220582",
		"parentid": "220500",
		"name": "集安市"
	}, {
		"id": "220602",
		"parentid": "220600",
		"name": "八道江区"
	}, {
		"id": "220621",
		"parentid": "220600",
		"name": "抚松县"
	}, {
		"id": "220622",
		"parentid": "220600",
		"name": "靖宇县"
	}, {
		"id": "220623",
		"parentid": "220600",
		"name": "长白朝鲜族自治县"
	}, {
		"id": "220625",
		"parentid": "220600",
		"name": "江源县"
	}, {
		"id": "220681",
		"parentid": "220600",
		"name": "临江市"
	}, {
		"id": "220702",
		"parentid": "220700",
		"name": "宁江区"
	}, {
		"id": "220721",
		"parentid": "220700",
		"name": "前郭尔罗斯蒙古族自治县"
	}, {
		"id": "220722",
		"parentid": "220700",
		"name": "长岭县"
	}, {
		"id": "220723",
		"parentid": "220700",
		"name": "乾安县"
	}, {
		"id": "220724",
		"parentid": "220700",
		"name": "扶余县"
	}, {
		"id": "220802",
		"parentid": "220800",
		"name": "洮北区"
	}, {
		"id": "220821",
		"parentid": "220800",
		"name": "镇赉县"
	}, {
		"id": "220822",
		"parentid": "220800",
		"name": "通榆县"
	}, {
		"id": "220881",
		"parentid": "220800",
		"name": "洮南市"
	}, {
		"id": "220882",
		"parentid": "220800",
		"name": "大安市"
	}, {
		"id": "222401",
		"parentid": "222400",
		"name": "延吉市"
	}, {
		"id": "222402",
		"parentid": "222400",
		"name": "图们市"
	}, {
		"id": "222403",
		"parentid": "222400",
		"name": "敦化市"
	}, {
		"id": "222404",
		"parentid": "222400",
		"name": "珲春市"
	}, {
		"id": "222405",
		"parentid": "222400",
		"name": "龙井市"
	}, {
		"id": "222406",
		"parentid": "222400",
		"name": "和龙市"
	}, {
		"id": "222424",
		"parentid": "222400",
		"name": "汪清县"
	}, {
		"id": "222426",
		"parentid": "222400",
		"name": "安图县"
	}, {
		"id": "230102",
		"parentid": "230100",
		"name": "道里区"
	}, {
		"id": "230103",
		"parentid": "230100",
		"name": "南岗区"
	}, {
		"id": "230104",
		"parentid": "230100",
		"name": "道外区"
	}, {
		"id": "230106",
		"parentid": "230100",
		"name": "香坊区"
	}, {
		"id": "230107",
		"parentid": "230100",
		"name": "动力区"
	}, {
		"id": "230108",
		"parentid": "230100",
		"name": "平房区"
	}, {
		"id": "230109",
		"parentid": "230100",
		"name": "松北区"
	}, {
		"id": "230111",
		"parentid": "230100",
		"name": "呼兰区"
	}, {
		"id": "230123",
		"parentid": "230100",
		"name": "依兰县"
	}, {
		"id": "230124",
		"parentid": "230100",
		"name": "方正县"
	}, {
		"id": "230125",
		"parentid": "230100",
		"name": "宾　县"
	}, {
		"id": "230126",
		"parentid": "230100",
		"name": "巴彦县"
	}, {
		"id": "230127",
		"parentid": "230100",
		"name": "木兰县"
	}, {
		"id": "230128",
		"parentid": "230100",
		"name": "通河县"
	}, {
		"id": "230129",
		"parentid": "230100",
		"name": "延寿县"
	}, {
		"id": "230181",
		"parentid": "230100",
		"name": "阿城市"
	}, {
		"id": "230182",
		"parentid": "230100",
		"name": "双城市"
	}, {
		"id": "230183",
		"parentid": "230100",
		"name": "尚志市"
	}, {
		"id": "230184",
		"parentid": "230100",
		"name": "五常市"
	}, {
		"id": "230202",
		"parentid": "230200",
		"name": "龙沙区"
	}, {
		"id": "230203",
		"parentid": "230200",
		"name": "建华区"
	}, {
		"id": "230204",
		"parentid": "230200",
		"name": "铁锋区"
	}, {
		"id": "230205",
		"parentid": "230200",
		"name": "昂昂溪区"
	}, {
		"id": "230206",
		"parentid": "230200",
		"name": "富拉尔基区"
	}, {
		"id": "230207",
		"parentid": "230200",
		"name": "碾子山区"
	}, {
		"id": "230208",
		"parentid": "230200",
		"name": "梅里斯达斡尔族区"
	}, {
		"id": "230221",
		"parentid": "230200",
		"name": "龙江县"
	}, {
		"id": "230223",
		"parentid": "230200",
		"name": "依安县"
	}, {
		"id": "230224",
		"parentid": "230200",
		"name": "泰来县"
	}, {
		"id": "230225",
		"parentid": "230200",
		"name": "甘南县"
	}, {
		"id": "230227",
		"parentid": "230200",
		"name": "富裕县"
	}, {
		"id": "230229",
		"parentid": "230200",
		"name": "克山县"
	}, {
		"id": "230230",
		"parentid": "230200",
		"name": "克东县"
	}, {
		"id": "230231",
		"parentid": "230200",
		"name": "拜泉县"
	}, {
		"id": "230281",
		"parentid": "230200",
		"name": "讷河市"
	}, {
		"id": "230302",
		"parentid": "230300",
		"name": "鸡冠区"
	}, {
		"id": "230303",
		"parentid": "230300",
		"name": "恒山区"
	}, {
		"id": "230304",
		"parentid": "230300",
		"name": "滴道区"
	}, {
		"id": "230305",
		"parentid": "230300",
		"name": "梨树区"
	}, {
		"id": "230306",
		"parentid": "230300",
		"name": "城子河区"
	}, {
		"id": "230307",
		"parentid": "230300",
		"name": "麻山区"
	}, {
		"id": "230321",
		"parentid": "230300",
		"name": "鸡东县"
	}, {
		"id": "230381",
		"parentid": "230300",
		"name": "虎林市"
	}, {
		"id": "230382",
		"parentid": "230300",
		"name": "密山市"
	}, {
		"id": "230402",
		"parentid": "230400",
		"name": "向阳区"
	}, {
		"id": "230403",
		"parentid": "230400",
		"name": "工农区"
	}, {
		"id": "230404",
		"parentid": "230400",
		"name": "南山区"
	}, {
		"id": "230405",
		"parentid": "230400",
		"name": "兴安区"
	}, {
		"id": "230406",
		"parentid": "230400",
		"name": "东山区"
	}, {
		"id": "230407",
		"parentid": "230400",
		"name": "兴山区"
	}, {
		"id": "230421",
		"parentid": "230400",
		"name": "萝北县"
	}, {
		"id": "230422",
		"parentid": "230400",
		"name": "绥滨县"
	}, {
		"id": "230502",
		"parentid": "230500",
		"name": "尖山区"
	}, {
		"id": "230503",
		"parentid": "230500",
		"name": "岭东区"
	}, {
		"id": "230505",
		"parentid": "230500",
		"name": "四方台区"
	}, {
		"id": "230506",
		"parentid": "230500",
		"name": "宝山区"
	}, {
		"id": "230521",
		"parentid": "230500",
		"name": "集贤县"
	}, {
		"id": "230522",
		"parentid": "230500",
		"name": "友谊县"
	}, {
		"id": "230523",
		"parentid": "230500",
		"name": "宝清县"
	}, {
		"id": "230524",
		"parentid": "230500",
		"name": "饶河县"
	}, {
		"id": "230602",
		"parentid": "230600",
		"name": "萨尔图区"
	}, {
		"id": "230603",
		"parentid": "230600",
		"name": "龙凤区"
	}, {
		"id": "230604",
		"parentid": "230600",
		"name": "让胡路区"
	}, {
		"id": "230605",
		"parentid": "230600",
		"name": "红岗区"
	}, {
		"id": "230606",
		"parentid": "230600",
		"name": "大同区"
	}, {
		"id": "230621",
		"parentid": "230600",
		"name": "肇州县"
	}, {
		"id": "230622",
		"parentid": "230600",
		"name": "肇源县"
	}, {
		"id": "230623",
		"parentid": "230600",
		"name": "林甸县"
	}, {
		"id": "230624",
		"parentid": "230600",
		"name": "杜尔伯特蒙古族自治县"
	}, {
		"id": "230702",
		"parentid": "230700",
		"name": "伊春区"
	}, {
		"id": "230703",
		"parentid": "230700",
		"name": "南岔区"
	}, {
		"id": "230704",
		"parentid": "230700",
		"name": "友好区"
	}, {
		"id": "230705",
		"parentid": "230700",
		"name": "西林区"
	}, {
		"id": "230706",
		"parentid": "230700",
		"name": "翠峦区"
	}, {
		"id": "230707",
		"parentid": "230700",
		"name": "新青区"
	}, {
		"id": "230708",
		"parentid": "230700",
		"name": "美溪区"
	}, {
		"id": "230709",
		"parentid": "230700",
		"name": "金山屯区"
	}, {
		"id": "230710",
		"parentid": "230700",
		"name": "五营区"
	}, {
		"id": "230711",
		"parentid": "230700",
		"name": "乌马河区"
	}, {
		"id": "230712",
		"parentid": "230700",
		"name": "汤旺河区"
	}, {
		"id": "230713",
		"parentid": "230700",
		"name": "带岭区"
	}, {
		"id": "230714",
		"parentid": "230700",
		"name": "乌伊岭区"
	}, {
		"id": "230715",
		"parentid": "230700",
		"name": "红星区"
	}, {
		"id": "230716",
		"parentid": "230700",
		"name": "上甘岭区"
	}, {
		"id": "230722",
		"parentid": "230700",
		"name": "嘉荫县"
	}, {
		"id": "230781",
		"parentid": "230700",
		"name": "铁力市"
	}, {
		"id": "230802",
		"parentid": "230800",
		"name": "永红区"
	}, {
		"id": "230803",
		"parentid": "230800",
		"name": "向阳区"
	}, {
		"id": "230804",
		"parentid": "230800",
		"name": "前进区"
	}, {
		"id": "230805",
		"parentid": "230800",
		"name": "东风区"
	}, {
		"id": "230811",
		"parentid": "230800",
		"name": "郊　区"
	}, {
		"id": "230822",
		"parentid": "230800",
		"name": "桦南县"
	}, {
		"id": "230826",
		"parentid": "230800",
		"name": "桦川县"
	}, {
		"id": "230828",
		"parentid": "230800",
		"name": "汤原县"
	}, {
		"id": "230833",
		"parentid": "230800",
		"name": "抚远县"
	}, {
		"id": "230881",
		"parentid": "230800",
		"name": "同江市"
	}, {
		"id": "230882",
		"parentid": "230800",
		"name": "富锦市"
	}, {
		"id": "230902",
		"parentid": "230900",
		"name": "新兴区"
	}, {
		"id": "230903",
		"parentid": "230900",
		"name": "桃山区"
	}, {
		"id": "230904",
		"parentid": "230900",
		"name": "茄子河区"
	}, {
		"id": "230921",
		"parentid": "230900",
		"name": "勃利县"
	}, {
		"id": "231002",
		"parentid": "231000",
		"name": "东安区"
	}, {
		"id": "231003",
		"parentid": "231000",
		"name": "阳明区"
	}, {
		"id": "231004",
		"parentid": "231000",
		"name": "爱民区"
	}, {
		"id": "231005",
		"parentid": "231000",
		"name": "西安区"
	}, {
		"id": "231024",
		"parentid": "231000",
		"name": "东宁县"
	}, {
		"id": "231025",
		"parentid": "231000",
		"name": "林口县"
	}, {
		"id": "231081",
		"parentid": "231000",
		"name": "绥芬河市"
	}, {
		"id": "231083",
		"parentid": "231000",
		"name": "海林市"
	}, {
		"id": "231084",
		"parentid": "231000",
		"name": "宁安市"
	}, {
		"id": "231085",
		"parentid": "231000",
		"name": "穆棱市"
	}, {
		"id": "231102",
		"parentid": "231100",
		"name": "爱辉区"
	}, {
		"id": "231121",
		"parentid": "231100",
		"name": "嫩江县"
	}, {
		"id": "231123",
		"parentid": "231100",
		"name": "逊克县"
	}, {
		"id": "231124",
		"parentid": "231100",
		"name": "孙吴县"
	}, {
		"id": "231181",
		"parentid": "231100",
		"name": "北安市"
	}, {
		"id": "231182",
		"parentid": "231100",
		"name": "五大连池市"
	}, {
		"id": "231202",
		"parentid": "231200",
		"name": "北林区"
	}, {
		"id": "231221",
		"parentid": "231200",
		"name": "望奎县"
	}, {
		"id": "231222",
		"parentid": "231200",
		"name": "兰西县"
	}, {
		"id": "231223",
		"parentid": "231200",
		"name": "青冈县"
	}, {
		"id": "231224",
		"parentid": "231200",
		"name": "庆安县"
	}, {
		"id": "231225",
		"parentid": "231200",
		"name": "明水县"
	}, {
		"id": "231226",
		"parentid": "231200",
		"name": "绥棱县"
	}, {
		"id": "231281",
		"parentid": "231200",
		"name": "安达市"
	}, {
		"id": "231282",
		"parentid": "231200",
		"name": "肇东市"
	}, {
		"id": "231283",
		"parentid": "231200",
		"name": "海伦市"
	}, {
		"id": "232721",
		"parentid": "232700",
		"name": "呼玛县"
	}, {
		"id": "232722",
		"parentid": "232700",
		"name": "塔河县"
	}, {
		"id": "232723",
		"parentid": "232700",
		"name": "漠河县"
	}, {
		"id": "310101",
		"parentid": "310100",
		"name": "黄浦区"
	}, {
		"id": "310103",
		"parentid": "310100",
		"name": "卢湾区"
	}, {
		"id": "310104",
		"parentid": "310100",
		"name": "徐汇区"
	}, {
		"id": "310105",
		"parentid": "310100",
		"name": "长宁区"
	}, {
		"id": "310106",
		"parentid": "310100",
		"name": "静安区"
	}, {
		"id": "310107",
		"parentid": "310100",
		"name": "普陀区"
	}, {
		"id": "310108",
		"parentid": "310100",
		"name": "闸北区"
	}, {
		"id": "310109",
		"parentid": "310100",
		"name": "虹口区"
	}, {
		"id": "310110",
		"parentid": "310100",
		"name": "杨浦区"
	}, {
		"id": "310112",
		"parentid": "310100",
		"name": "闵行区"
	}, {
		"id": "310113",
		"parentid": "310100",
		"name": "宝山区"
	}, {
		"id": "310114",
		"parentid": "310100",
		"name": "嘉定区"
	}, {
		"id": "310115",
		"parentid": "310100",
		"name": "浦东新区"
	}, {
		"id": "310116",
		"parentid": "310100",
		"name": "金山区"
	}, {
		"id": "310117",
		"parentid": "310100",
		"name": "松江区"
	}, {
		"id": "310118",
		"parentid": "310100",
		"name": "青浦区"
	}, {
		"id": "310119",
		"parentid": "310100",
		"name": "南汇区"
	}, {
		"id": "310120",
		"parentid": "310100",
		"name": "奉贤区"
	}, {
		"id": "310230",
		"parentid": "310100",
		"name": "崇明县"
	}, {
		"id": "320102",
		"parentid": "320100",
		"name": "玄武区"
	}, {
		"id": "320103",
		"parentid": "320100",
		"name": "白下区"
	}, {
		"id": "320104",
		"parentid": "320100",
		"name": "秦淮区"
	}, {
		"id": "320105",
		"parentid": "320100",
		"name": "建邺区"
	}, {
		"id": "320106",
		"parentid": "320100",
		"name": "鼓楼区"
	}, {
		"id": "320107",
		"parentid": "320100",
		"name": "下关区"
	}, {
		"id": "320111",
		"parentid": "320100",
		"name": "浦口区"
	}, {
		"id": "320113",
		"parentid": "320100",
		"name": "栖霞区"
	}, {
		"id": "320114",
		"parentid": "320100",
		"name": "雨花台区"
	}, {
		"id": "320115",
		"parentid": "320100",
		"name": "江宁区"
	}, {
		"id": "320116",
		"parentid": "320100",
		"name": "六合区"
	}, {
		"id": "320124",
		"parentid": "320100",
		"name": "溧水县"
	}, {
		"id": "320125",
		"parentid": "320100",
		"name": "高淳县"
	}, {
		"id": "320202",
		"parentid": "320200",
		"name": "崇安区"
	}, {
		"id": "320203",
		"parentid": "320200",
		"name": "南长区"
	}, {
		"id": "320204",
		"parentid": "320200",
		"name": "北塘区"
	}, {
		"id": "320205",
		"parentid": "320200",
		"name": "锡山区"
	}, {
		"id": "320206",
		"parentid": "320200",
		"name": "惠山区"
	}, {
		"id": "320211",
		"parentid": "320200",
		"name": "滨湖区"
	}, {
		"id": "320281",
		"parentid": "320200",
		"name": "江阴市"
	}, {
		"id": "320282",
		"parentid": "320200",
		"name": "宜兴市"
	}, {
		"id": "320302",
		"parentid": "320300",
		"name": "鼓楼区"
	}, {
		"id": "320303",
		"parentid": "320300",
		"name": "云龙区"
	}, {
		"id": "320304",
		"parentid": "320300",
		"name": "九里区"
	}, {
		"id": "320305",
		"parentid": "320300",
		"name": "贾汪区"
	}, {
		"id": "320311",
		"parentid": "320300",
		"name": "泉山区"
	}, {
		"id": "320321",
		"parentid": "320300",
		"name": "丰　县"
	}, {
		"id": "320322",
		"parentid": "320300",
		"name": "沛　县"
	}, {
		"id": "320323",
		"parentid": "320300",
		"name": "铜山县"
	}, {
		"id": "320324",
		"parentid": "320300",
		"name": "睢宁县"
	}, {
		"id": "320381",
		"parentid": "320300",
		"name": "新沂市"
	}, {
		"id": "320382",
		"parentid": "320300",
		"name": "邳州市"
	}, {
		"id": "320402",
		"parentid": "320400",
		"name": "天宁区"
	}, {
		"id": "320404",
		"parentid": "320400",
		"name": "钟楼区"
	}, {
		"id": "320405",
		"parentid": "320400",
		"name": "戚墅堰区"
	}, {
		"id": "320411",
		"parentid": "320400",
		"name": "新北区"
	}, {
		"id": "320412",
		"parentid": "320400",
		"name": "武进区"
	}, {
		"id": "320481",
		"parentid": "320400",
		"name": "溧阳市"
	}, {
		"id": "320482",
		"parentid": "320400",
		"name": "金坛市"
	}, {
		"id": "320502",
		"parentid": "320500",
		"name": "沧浪区"
	}, {
		"id": "320503",
		"parentid": "320500",
		"name": "平江区"
	}, {
		"id": "320504",
		"parentid": "320500",
		"name": "金阊区"
	}, {
		"id": "320505",
		"parentid": "320500",
		"name": "虎丘区"
	}, {
		"id": "320506",
		"parentid": "320500",
		"name": "吴中区"
	}, {
		"id": "320507",
		"parentid": "320500",
		"name": "相城区"
	}, {
		"id": "320581",
		"parentid": "320500",
		"name": "常熟市"
	}, {
		"id": "320582",
		"parentid": "320500",
		"name": "张家港市"
	}, {
		"id": "320583",
		"parentid": "320500",
		"name": "昆山市"
	}, {
		"id": "320584",
		"parentid": "320500",
		"name": "吴江市"
	}, {
		"id": "320585",
		"parentid": "320500",
		"name": "太仓市"
	}, {
		"id": "320602",
		"parentid": "320600",
		"name": "崇川区"
	}, {
		"id": "320611",
		"parentid": "320600",
		"name": "港闸区"
	}, {
		"id": "320621",
		"parentid": "320600",
		"name": "海安县"
	}, {
		"id": "320623",
		"parentid": "320600",
		"name": "如东县"
	}, {
		"id": "320681",
		"parentid": "320600",
		"name": "启东市"
	}, {
		"id": "320682",
		"parentid": "320600",
		"name": "如皋市"
	}, {
		"id": "320683",
		"parentid": "320600",
		"name": "通州市"
	}, {
		"id": "320684",
		"parentid": "320600",
		"name": "海门市"
	}, {
		"id": "320703",
		"parentid": "320700",
		"name": "连云区"
	}, {
		"id": "320705",
		"parentid": "320700",
		"name": "新浦区"
	}, {
		"id": "320706",
		"parentid": "320700",
		"name": "海州区"
	}, {
		"id": "320721",
		"parentid": "320700",
		"name": "赣榆县"
	}, {
		"id": "320722",
		"parentid": "320700",
		"name": "东海县"
	}, {
		"id": "320723",
		"parentid": "320700",
		"name": "灌云县"
	}, {
		"id": "320724",
		"parentid": "320700",
		"name": "灌南县"
	}, {
		"id": "320802",
		"parentid": "320800",
		"name": "清河区"
	}, {
		"id": "320803",
		"parentid": "320800",
		"name": "楚州区"
	}, {
		"id": "320804",
		"parentid": "320800",
		"name": "淮阴区"
	}, {
		"id": "320811",
		"parentid": "320800",
		"name": "清浦区"
	}, {
		"id": "320826",
		"parentid": "320800",
		"name": "涟水县"
	}, {
		"id": "320829",
		"parentid": "320800",
		"name": "洪泽县"
	}, {
		"id": "320830",
		"parentid": "320800",
		"name": "盱眙县"
	}, {
		"id": "320831",
		"parentid": "320800",
		"name": "金湖县"
	}, {
		"id": "320902",
		"parentid": "320900",
		"name": "亭湖区"
	}, {
		"id": "320903",
		"parentid": "320900",
		"name": "盐都区"
	}, {
		"id": "320921",
		"parentid": "320900",
		"name": "响水县"
	}, {
		"id": "320922",
		"parentid": "320900",
		"name": "滨海县"
	}, {
		"id": "320923",
		"parentid": "320900",
		"name": "阜宁县"
	}, {
		"id": "320924",
		"parentid": "320900",
		"name": "射阳县"
	}, {
		"id": "320925",
		"parentid": "320900",
		"name": "建湖县"
	}, {
		"id": "320981",
		"parentid": "320900",
		"name": "东台市"
	}, {
		"id": "320982",
		"parentid": "320900",
		"name": "大丰市"
	}, {
		"id": "321002",
		"parentid": "321000",
		"name": "广陵区"
	}, {
		"id": "321003",
		"parentid": "321000",
		"name": "邗江区"
	}, {
		"id": "321011",
		"parentid": "321000",
		"name": "郊　区"
	}, {
		"id": "321023",
		"parentid": "321000",
		"name": "宝应县"
	}, {
		"id": "321081",
		"parentid": "321000",
		"name": "仪征市"
	}, {
		"id": "321084",
		"parentid": "321000",
		"name": "高邮市"
	}, {
		"id": "321088",
		"parentid": "321000",
		"name": "江都市"
	}, {
		"id": "321102",
		"parentid": "321100",
		"name": "京口区"
	}, {
		"id": "321111",
		"parentid": "321100",
		"name": "润州区"
	}, {
		"id": "321112",
		"parentid": "321100",
		"name": "丹徒区"
	}, {
		"id": "321181",
		"parentid": "321100",
		"name": "丹阳市"
	}, {
		"id": "321182",
		"parentid": "321100",
		"name": "扬中市"
	}, {
		"id": "321183",
		"parentid": "321100",
		"name": "句容市"
	}, {
		"id": "321202",
		"parentid": "321200",
		"name": "海陵区"
	}, {
		"id": "321203",
		"parentid": "321200",
		"name": "高港区"
	}, {
		"id": "321281",
		"parentid": "321200",
		"name": "兴化市"
	}, {
		"id": "321282",
		"parentid": "321200",
		"name": "靖江市"
	}, {
		"id": "321283",
		"parentid": "321200",
		"name": "泰兴市"
	}, {
		"id": "321284",
		"parentid": "321200",
		"name": "姜堰市"
	}, {
		"id": "321302",
		"parentid": "321300",
		"name": "宿城区"
	}, {
		"id": "321311",
		"parentid": "321300",
		"name": "宿豫区"
	}, {
		"id": "321322",
		"parentid": "321300",
		"name": "沭阳县"
	}, {
		"id": "321323",
		"parentid": "321300",
		"name": "泗阳县"
	}, {
		"id": "321324",
		"parentid": "321300",
		"name": "泗洪县"
	}, {
		"id": "330102",
		"parentid": "330100",
		"name": "上城区"
	}, {
		"id": "330103",
		"parentid": "330100",
		"name": "下城区"
	}, {
		"id": "330104",
		"parentid": "330100",
		"name": "江干区"
	}, {
		"id": "330105",
		"parentid": "330100",
		"name": "拱墅区"
	}, {
		"id": "330106",
		"parentid": "330100",
		"name": "西湖区"
	}, {
		"id": "330108",
		"parentid": "330100",
		"name": "滨江区"
	}, {
		"id": "330109",
		"parentid": "330100",
		"name": "萧山区"
	}, {
		"id": "330110",
		"parentid": "330100",
		"name": "余杭区"
	}, {
		"id": "330122",
		"parentid": "330100",
		"name": "桐庐县"
	}, {
		"id": "330127",
		"parentid": "330100",
		"name": "淳安县"
	}, {
		"id": "330182",
		"parentid": "330100",
		"name": "建德市"
	}, {
		"id": "330183",
		"parentid": "330100",
		"name": "富阳市"
	}, {
		"id": "330185",
		"parentid": "330100",
		"name": "临安市"
	}, {
		"id": "330203",
		"parentid": "330200",
		"name": "海曙区"
	}, {
		"id": "330204",
		"parentid": "330200",
		"name": "江东区"
	}, {
		"id": "330205",
		"parentid": "330200",
		"name": "江北区"
	}, {
		"id": "330206",
		"parentid": "330200",
		"name": "北仑区"
	}, {
		"id": "330211",
		"parentid": "330200",
		"name": "镇海区"
	}, {
		"id": "330212",
		"parentid": "330200",
		"name": "鄞州区"
	}, {
		"id": "330225",
		"parentid": "330200",
		"name": "象山县"
	}, {
		"id": "330226",
		"parentid": "330200",
		"name": "宁海县"
	}, {
		"id": "330281",
		"parentid": "330200",
		"name": "余姚市"
	}, {
		"id": "330282",
		"parentid": "330200",
		"name": "慈溪市"
	}, {
		"id": "330283",
		"parentid": "330200",
		"name": "奉化市"
	}, {
		"id": "330302",
		"parentid": "330300",
		"name": "鹿城区"
	}, {
		"id": "330303",
		"parentid": "330300",
		"name": "龙湾区"
	}, {
		"id": "330304",
		"parentid": "330300",
		"name": "瓯海区"
	}, {
		"id": "330322",
		"parentid": "330300",
		"name": "洞头县"
	}, {
		"id": "330324",
		"parentid": "330300",
		"name": "永嘉县"
	}, {
		"id": "330326",
		"parentid": "330300",
		"name": "平阳县"
	}, {
		"id": "330327",
		"parentid": "330300",
		"name": "苍南县"
	}, {
		"id": "330328",
		"parentid": "330300",
		"name": "文成县"
	}, {
		"id": "330329",
		"parentid": "330300",
		"name": "泰顺县"
	}, {
		"id": "330381",
		"parentid": "330300",
		"name": "瑞安市"
	}, {
		"id": "330382",
		"parentid": "330300",
		"name": "乐清市"
	}, {
		"id": "330402",
		"parentid": "330400",
		"name": "秀城区"
	}, {
		"id": "330411",
		"parentid": "330400",
		"name": "秀洲区"
	}, {
		"id": "330421",
		"parentid": "330400",
		"name": "嘉善县"
	}, {
		"id": "330424",
		"parentid": "330400",
		"name": "海盐县"
	}, {
		"id": "330481",
		"parentid": "330400",
		"name": "海宁市"
	}, {
		"id": "330482",
		"parentid": "330400",
		"name": "平湖市"
	}, {
		"id": "330483",
		"parentid": "330400",
		"name": "桐乡市"
	}, {
		"id": "330502",
		"parentid": "330500",
		"name": "吴兴区"
	}, {
		"id": "330503",
		"parentid": "330500",
		"name": "南浔区"
	}, {
		"id": "330521",
		"parentid": "330500",
		"name": "德清县"
	}, {
		"id": "330522",
		"parentid": "330500",
		"name": "长兴县"
	}, {
		"id": "330523",
		"parentid": "330500",
		"name": "安吉县"
	}, {
		"id": "330602",
		"parentid": "330600",
		"name": "越城区"
	}, {
		"id": "330621",
		"parentid": "330600",
		"name": "绍兴县"
	}, {
		"id": "330624",
		"parentid": "330600",
		"name": "新昌县"
	}, {
		"id": "330681",
		"parentid": "330600",
		"name": "诸暨市"
	}, {
		"id": "330682",
		"parentid": "330600",
		"name": "上虞市"
	}, {
		"id": "330683",
		"parentid": "330600",
		"name": "嵊州市"
	}, {
		"id": "330702",
		"parentid": "330700",
		"name": "婺城区"
	}, {
		"id": "330703",
		"parentid": "330700",
		"name": "金东区"
	}, {
		"id": "330723",
		"parentid": "330700",
		"name": "武义县"
	}, {
		"id": "330726",
		"parentid": "330700",
		"name": "浦江县"
	}, {
		"id": "330727",
		"parentid": "330700",
		"name": "磐安县"
	}, {
		"id": "330781",
		"parentid": "330700",
		"name": "兰溪市"
	}, {
		"id": "330782",
		"parentid": "330700",
		"name": "义乌市"
	}, {
		"id": "330783",
		"parentid": "330700",
		"name": "东阳市"
	}, {
		"id": "330784",
		"parentid": "330700",
		"name": "永康市"
	}, {
		"id": "330802",
		"parentid": "330800",
		"name": "柯城区"
	}, {
		"id": "330803",
		"parentid": "330800",
		"name": "衢江区"
	}, {
		"id": "330822",
		"parentid": "330800",
		"name": "常山县"
	}, {
		"id": "330824",
		"parentid": "330800",
		"name": "开化县"
	}, {
		"id": "330825",
		"parentid": "330800",
		"name": "龙游县"
	}, {
		"id": "330881",
		"parentid": "330800",
		"name": "江山市"
	}, {
		"id": "330902",
		"parentid": "330900",
		"name": "定海区"
	}, {
		"id": "330903",
		"parentid": "330900",
		"name": "普陀区"
	}, {
		"id": "330921",
		"parentid": "330900",
		"name": "岱山县"
	}, {
		"id": "330922",
		"parentid": "330900",
		"name": "嵊泗县"
	}, {
		"id": "331002",
		"parentid": "331000",
		"name": "椒江区"
	}, {
		"id": "331003",
		"parentid": "331000",
		"name": "黄岩区"
	}, {
		"id": "331004",
		"parentid": "331000",
		"name": "路桥区"
	}, {
		"id": "331021",
		"parentid": "331000",
		"name": "玉环县"
	}, {
		"id": "331022",
		"parentid": "331000",
		"name": "三门县"
	}, {
		"id": "331023",
		"parentid": "331000",
		"name": "天台县"
	}, {
		"id": "331024",
		"parentid": "331000",
		"name": "仙居县"
	}, {
		"id": "331081",
		"parentid": "331000",
		"name": "温岭市"
	}, {
		"id": "331082",
		"parentid": "331000",
		"name": "临海市"
	}, {
		"id": "331102",
		"parentid": "331100",
		"name": "莲都区"
	}, {
		"id": "331121",
		"parentid": "331100",
		"name": "青田县"
	}, {
		"id": "331122",
		"parentid": "331100",
		"name": "缙云县"
	}, {
		"id": "331123",
		"parentid": "331100",
		"name": "遂昌县"
	}, {
		"id": "331124",
		"parentid": "331100",
		"name": "松阳县"
	}, {
		"id": "331125",
		"parentid": "331100",
		"name": "云和县"
	}, {
		"id": "331126",
		"parentid": "331100",
		"name": "庆元县"
	}, {
		"id": "331127",
		"parentid": "331100",
		"name": "景宁畲族自治县"
	}, {
		"id": "331181",
		"parentid": "331100",
		"name": "龙泉市"
	}, {
		"id": "340102",
		"parentid": "340100",
		"name": "瑶海区"
	}, {
		"id": "340103",
		"parentid": "340100",
		"name": "庐阳区"
	}, {
		"id": "340104",
		"parentid": "340100",
		"name": "蜀山区"
	}, {
		"id": "340111",
		"parentid": "340100",
		"name": "包河区"
	}, {
		"id": "340121",
		"parentid": "340100",
		"name": "长丰县"
	}, {
		"id": "340122",
		"parentid": "340100",
		"name": "肥东县"
	}, {
		"id": "340123",
		"parentid": "340100",
		"name": "肥西县"
	}, {
		"id": "340202",
		"parentid": "340200",
		"name": "镜湖区"
	}, {
		"id": "340203",
		"parentid": "340200",
		"name": "马塘区"
	}, {
		"id": "340204",
		"parentid": "340200",
		"name": "新芜区"
	}, {
		"id": "340207",
		"parentid": "340200",
		"name": "鸠江区"
	}, {
		"id": "340221",
		"parentid": "340200",
		"name": "芜湖县"
	}, {
		"id": "340222",
		"parentid": "340200",
		"name": "繁昌县"
	}, {
		"id": "340223",
		"parentid": "340200",
		"name": "南陵县"
	}, {
		"id": "340302",
		"parentid": "340300",
		"name": "龙子湖区"
	}, {
		"id": "340303",
		"parentid": "340300",
		"name": "蚌山区"
	}, {
		"id": "340304",
		"parentid": "340300",
		"name": "禹会区"
	}, {
		"id": "340311",
		"parentid": "340300",
		"name": "淮上区"
	}, {
		"id": "340321",
		"parentid": "340300",
		"name": "怀远县"
	}, {
		"id": "340322",
		"parentid": "340300",
		"name": "五河县"
	}, {
		"id": "340323",
		"parentid": "340300",
		"name": "固镇县"
	}, {
		"id": "340402",
		"parentid": "340400",
		"name": "大通区"
	}, {
		"id": "340403",
		"parentid": "340400",
		"name": "田家庵区"
	}, {
		"id": "340404",
		"parentid": "340400",
		"name": "谢家集区"
	}, {
		"id": "340405",
		"parentid": "340400",
		"name": "八公山区"
	}, {
		"id": "340406",
		"parentid": "340400",
		"name": "潘集区"
	}, {
		"id": "340421",
		"parentid": "340400",
		"name": "凤台县"
	}, {
		"id": "340502",
		"parentid": "340500",
		"name": "金家庄区"
	}, {
		"id": "340503",
		"parentid": "340500",
		"name": "花山区"
	}, {
		"id": "340504",
		"parentid": "340500",
		"name": "雨山区"
	}, {
		"id": "340521",
		"parentid": "340500",
		"name": "当涂县"
	}, {
		"id": "340602",
		"parentid": "340600",
		"name": "杜集区"
	}, {
		"id": "340603",
		"parentid": "340600",
		"name": "相山区"
	}, {
		"id": "340604",
		"parentid": "340600",
		"name": "烈山区"
	}, {
		"id": "340621",
		"parentid": "340600",
		"name": "濉溪县"
	}, {
		"id": "340702",
		"parentid": "340700",
		"name": "铜官山区"
	}, {
		"id": "340703",
		"parentid": "340700",
		"name": "狮子山区"
	}, {
		"id": "340711",
		"parentid": "340700",
		"name": "郊　区"
	}, {
		"id": "340721",
		"parentid": "340700",
		"name": "铜陵县"
	}, {
		"id": "340802",
		"parentid": "340800",
		"name": "迎江区"
	}, {
		"id": "340803",
		"parentid": "340800",
		"name": "大观区"
	}, {
		"id": "340811",
		"parentid": "340800",
		"name": "郊　区"
	}, {
		"id": "340822",
		"parentid": "340800",
		"name": "怀宁县"
	}, {
		"id": "340823",
		"parentid": "340800",
		"name": "枞阳县"
	}, {
		"id": "340824",
		"parentid": "340800",
		"name": "潜山县"
	}, {
		"id": "340825",
		"parentid": "340800",
		"name": "太湖县"
	}, {
		"id": "340826",
		"parentid": "340800",
		"name": "宿松县"
	}, {
		"id": "340827",
		"parentid": "340800",
		"name": "望江县"
	}, {
		"id": "340828",
		"parentid": "340800",
		"name": "岳西县"
	}, {
		"id": "340881",
		"parentid": "340800",
		"name": "桐城市"
	}, {
		"id": "341002",
		"parentid": "341000",
		"name": "屯溪区"
	}, {
		"id": "341003",
		"parentid": "341000",
		"name": "黄山区"
	}, {
		"id": "341004",
		"parentid": "341000",
		"name": "徽州区"
	}, {
		"id": "341021",
		"parentid": "341000",
		"name": "歙　县"
	}, {
		"id": "341022",
		"parentid": "341000",
		"name": "休宁县"
	}, {
		"id": "341023",
		"parentid": "341000",
		"name": "黟　县"
	}, {
		"id": "341024",
		"parentid": "341000",
		"name": "祁门县"
	}, {
		"id": "341102",
		"parentid": "341100",
		"name": "琅琊区"
	}, {
		"id": "341103",
		"parentid": "341100",
		"name": "南谯区"
	}, {
		"id": "341122",
		"parentid": "341100",
		"name": "来安县"
	}, {
		"id": "341124",
		"parentid": "341100",
		"name": "全椒县"
	}, {
		"id": "341125",
		"parentid": "341100",
		"name": "定远县"
	}, {
		"id": "341126",
		"parentid": "341100",
		"name": "凤阳县"
	}, {
		"id": "341181",
		"parentid": "341100",
		"name": "天长市"
	}, {
		"id": "341182",
		"parentid": "341100",
		"name": "明光市"
	}, {
		"id": "341202",
		"parentid": "341200",
		"name": "颍州区"
	}, {
		"id": "341203",
		"parentid": "341200",
		"name": "颍东区"
	}, {
		"id": "341204",
		"parentid": "341200",
		"name": "颍泉区"
	}, {
		"id": "341221",
		"parentid": "341200",
		"name": "临泉县"
	}, {
		"id": "341222",
		"parentid": "341200",
		"name": "太和县"
	}, {
		"id": "341225",
		"parentid": "341200",
		"name": "阜南县"
	}, {
		"id": "341226",
		"parentid": "341200",
		"name": "颍上县"
	}, {
		"id": "341282",
		"parentid": "341200",
		"name": "界首市"
	}, {
		"id": "341302",
		"parentid": "341300",
		"name": "墉桥区"
	}, {
		"id": "341321",
		"parentid": "341300",
		"name": "砀山县"
	}, {
		"id": "341322",
		"parentid": "341300",
		"name": "萧　县"
	}, {
		"id": "341323",
		"parentid": "341300",
		"name": "灵璧县"
	}, {
		"id": "341324",
		"parentid": "341300",
		"name": "泗　县"
	}, {
		"id": "341402",
		"parentid": "341400",
		"name": "居巢区"
	}, {
		"id": "341421",
		"parentid": "341400",
		"name": "庐江县"
	}, {
		"id": "341422",
		"parentid": "341400",
		"name": "无为县"
	}, {
		"id": "341423",
		"parentid": "341400",
		"name": "含山县"
	}, {
		"id": "341424",
		"parentid": "341400",
		"name": "和　县"
	}, {
		"id": "341502",
		"parentid": "341500",
		"name": "金安区"
	}, {
		"id": "341503",
		"parentid": "341500",
		"name": "裕安区"
	}, {
		"id": "341521",
		"parentid": "341500",
		"name": "寿　县"
	}, {
		"id": "341522",
		"parentid": "341500",
		"name": "霍邱县"
	}, {
		"id": "341523",
		"parentid": "341500",
		"name": "舒城县"
	}, {
		"id": "341524",
		"parentid": "341500",
		"name": "金寨县"
	}, {
		"id": "341525",
		"parentid": "341500",
		"name": "霍山县"
	}, {
		"id": "341602",
		"parentid": "341600",
		"name": "谯城区"
	}, {
		"id": "341621",
		"parentid": "341600",
		"name": "涡阳县"
	}, {
		"id": "341622",
		"parentid": "341600",
		"name": "蒙城县"
	}, {
		"id": "341623",
		"parentid": "341600",
		"name": "利辛县"
	}, {
		"id": "341702",
		"parentid": "341700",
		"name": "贵池区"
	}, {
		"id": "341721",
		"parentid": "341700",
		"name": "东至县"
	}, {
		"id": "341722",
		"parentid": "341700",
		"name": "石台县"
	}, {
		"id": "341723",
		"parentid": "341700",
		"name": "青阳县"
	}, {
		"id": "341802",
		"parentid": "341800",
		"name": "宣州区"
	}, {
		"id": "341821",
		"parentid": "341800",
		"name": "郎溪县"
	}, {
		"id": "341822",
		"parentid": "341800",
		"name": "广德县"
	}, {
		"id": "341823",
		"parentid": "341800",
		"name": "泾　县"
	}, {
		"id": "341824",
		"parentid": "341800",
		"name": "绩溪县"
	}, {
		"id": "341825",
		"parentid": "341800",
		"name": "旌德县"
	}, {
		"id": "341881",
		"parentid": "341800",
		"name": "宁国市"
	}, {
		"id": "350102",
		"parentid": "350100",
		"name": "鼓楼区"
	}, {
		"id": "350103",
		"parentid": "350100",
		"name": "台江区"
	}, {
		"id": "350104",
		"parentid": "350100",
		"name": "仓山区"
	}, {
		"id": "350105",
		"parentid": "350100",
		"name": "马尾区"
	}, {
		"id": "350111",
		"parentid": "350100",
		"name": "晋安区"
	}, {
		"id": "350121",
		"parentid": "350100",
		"name": "闽侯县"
	}, {
		"id": "350122",
		"parentid": "350100",
		"name": "连江县"
	}, {
		"id": "350123",
		"parentid": "350100",
		"name": "罗源县"
	}, {
		"id": "350124",
		"parentid": "350100",
		"name": "闽清县"
	}, {
		"id": "350125",
		"parentid": "350100",
		"name": "永泰县"
	}, {
		"id": "350128",
		"parentid": "350100",
		"name": "平潭县"
	}, {
		"id": "350181",
		"parentid": "350100",
		"name": "福清市"
	}, {
		"id": "350182",
		"parentid": "350100",
		"name": "长乐市"
	}, {
		"id": "350203",
		"parentid": "350200",
		"name": "思明区"
	}, {
		"id": "350205",
		"parentid": "350200",
		"name": "海沧区"
	}, {
		"id": "350206",
		"parentid": "350200",
		"name": "湖里区"
	}, {
		"id": "350211",
		"parentid": "350200",
		"name": "集美区"
	}, {
		"id": "350212",
		"parentid": "350200",
		"name": "同安区"
	}, {
		"id": "350213",
		"parentid": "350200",
		"name": "翔安区"
	}, {
		"id": "350302",
		"parentid": "350300",
		"name": "城厢区"
	}, {
		"id": "350303",
		"parentid": "350300",
		"name": "涵江区"
	}, {
		"id": "350304",
		"parentid": "350300",
		"name": "荔城区"
	}, {
		"id": "350305",
		"parentid": "350300",
		"name": "秀屿区"
	}, {
		"id": "350322",
		"parentid": "350300",
		"name": "仙游县"
	}, {
		"id": "350402",
		"parentid": "350400",
		"name": "梅列区"
	}, {
		"id": "350403",
		"parentid": "350400",
		"name": "三元区"
	}, {
		"id": "350421",
		"parentid": "350400",
		"name": "明溪县"
	}, {
		"id": "350423",
		"parentid": "350400",
		"name": "清流县"
	}, {
		"id": "350424",
		"parentid": "350400",
		"name": "宁化县"
	}, {
		"id": "350425",
		"parentid": "350400",
		"name": "大田县"
	}, {
		"id": "350426",
		"parentid": "350400",
		"name": "尤溪县"
	}, {
		"id": "350427",
		"parentid": "350400",
		"name": "沙　县"
	}, {
		"id": "350428",
		"parentid": "350400",
		"name": "将乐县"
	}, {
		"id": "350429",
		"parentid": "350400",
		"name": "泰宁县"
	}, {
		"id": "350430",
		"parentid": "350400",
		"name": "建宁县"
	}, {
		"id": "350481",
		"parentid": "350400",
		"name": "永安市"
	}, {
		"id": "350502",
		"parentid": "350500",
		"name": "鲤城区"
	}, {
		"id": "350503",
		"parentid": "350500",
		"name": "丰泽区"
	}, {
		"id": "350504",
		"parentid": "350500",
		"name": "洛江区"
	}, {
		"id": "350505",
		"parentid": "350500",
		"name": "泉港区"
	}, {
		"id": "350521",
		"parentid": "350500",
		"name": "惠安县"
	}, {
		"id": "350524",
		"parentid": "350500",
		"name": "安溪县"
	}, {
		"id": "350525",
		"parentid": "350500",
		"name": "永春县"
	}, {
		"id": "350526",
		"parentid": "350500",
		"name": "德化县"
	}, {
		"id": "350527",
		"parentid": "350500",
		"name": "金门县"
	}, {
		"id": "350581",
		"parentid": "350500",
		"name": "石狮市"
	}, {
		"id": "350582",
		"parentid": "350500",
		"name": "晋江市"
	}, {
		"id": "350583",
		"parentid": "350500",
		"name": "南安市"
	}, {
		"id": "350602",
		"parentid": "350600",
		"name": "芗城区"
	}, {
		"id": "350603",
		"parentid": "350600",
		"name": "龙文区"
	}, {
		"id": "350622",
		"parentid": "350600",
		"name": "云霄县"
	}, {
		"id": "350623",
		"parentid": "350600",
		"name": "漳浦县"
	}, {
		"id": "350624",
		"parentid": "350600",
		"name": "诏安县"
	}, {
		"id": "350625",
		"parentid": "350600",
		"name": "长泰县"
	}, {
		"id": "350626",
		"parentid": "350600",
		"name": "东山县"
	}, {
		"id": "350627",
		"parentid": "350600",
		"name": "南靖县"
	}, {
		"id": "350628",
		"parentid": "350600",
		"name": "平和县"
	}, {
		"id": "350629",
		"parentid": "350600",
		"name": "华安县"
	}, {
		"id": "350681",
		"parentid": "350600",
		"name": "龙海市"
	}, {
		"id": "350702",
		"parentid": "350700",
		"name": "延平区"
	}, {
		"id": "350721",
		"parentid": "350700",
		"name": "顺昌县"
	}, {
		"id": "350722",
		"parentid": "350700",
		"name": "浦城县"
	}, {
		"id": "350723",
		"parentid": "350700",
		"name": "光泽县"
	}, {
		"id": "350724",
		"parentid": "350700",
		"name": "松溪县"
	}, {
		"id": "350725",
		"parentid": "350700",
		"name": "政和县"
	}, {
		"id": "350781",
		"parentid": "350700",
		"name": "邵武市"
	}, {
		"id": "350782",
		"parentid": "350700",
		"name": "武夷山市"
	}, {
		"id": "350783",
		"parentid": "350700",
		"name": "建瓯市"
	}, {
		"id": "350784",
		"parentid": "350700",
		"name": "建阳市"
	}, {
		"id": "350802",
		"parentid": "350800",
		"name": "新罗区"
	}, {
		"id": "350821",
		"parentid": "350800",
		"name": "长汀县"
	}, {
		"id": "350822",
		"parentid": "350800",
		"name": "永定县"
	}, {
		"id": "350823",
		"parentid": "350800",
		"name": "上杭县"
	}, {
		"id": "350824",
		"parentid": "350800",
		"name": "武平县"
	}, {
		"id": "350825",
		"parentid": "350800",
		"name": "连城县"
	}, {
		"id": "350881",
		"parentid": "350800",
		"name": "漳平市"
	}, {
		"id": "350902",
		"parentid": "350900",
		"name": "蕉城区"
	}, {
		"id": "350921",
		"parentid": "350900",
		"name": "霞浦县"
	}, {
		"id": "350922",
		"parentid": "350900",
		"name": "古田县"
	}, {
		"id": "350923",
		"parentid": "350900",
		"name": "屏南县"
	}, {
		"id": "350924",
		"parentid": "350900",
		"name": "寿宁县"
	}, {
		"id": "350925",
		"parentid": "350900",
		"name": "周宁县"
	}, {
		"id": "350926",
		"parentid": "350900",
		"name": "柘荣县"
	}, {
		"id": "350981",
		"parentid": "350900",
		"name": "福安市"
	}, {
		"id": "350982",
		"parentid": "350900",
		"name": "福鼎市"
	}, {
		"id": "360102",
		"parentid": "360100",
		"name": "东湖区"
	}, {
		"id": "360103",
		"parentid": "360100",
		"name": "西湖区"
	}, {
		"id": "360104",
		"parentid": "360100",
		"name": "青云谱区"
	}, {
		"id": "360105",
		"parentid": "360100",
		"name": "湾里区"
	}, {
		"id": "360111",
		"parentid": "360100",
		"name": "青山湖区"
	}, {
		"id": "360121",
		"parentid": "360100",
		"name": "南昌县"
	}, {
		"id": "360122",
		"parentid": "360100",
		"name": "新建县"
	}, {
		"id": "360123",
		"parentid": "360100",
		"name": "安义县"
	}, {
		"id": "360124",
		"parentid": "360100",
		"name": "进贤县"
	}, {
		"id": "360202",
		"parentid": "360200",
		"name": "昌江区"
	}, {
		"id": "360203",
		"parentid": "360200",
		"name": "珠山区"
	}, {
		"id": "360222",
		"parentid": "360200",
		"name": "浮梁县"
	}, {
		"id": "360281",
		"parentid": "360200",
		"name": "乐平市"
	}, {
		"id": "360302",
		"parentid": "360300",
		"name": "安源区"
	}, {
		"id": "360313",
		"parentid": "360300",
		"name": "湘东区"
	}, {
		"id": "360321",
		"parentid": "360300",
		"name": "莲花县"
	}, {
		"id": "360322",
		"parentid": "360300",
		"name": "上栗县"
	}, {
		"id": "360323",
		"parentid": "360300",
		"name": "芦溪县"
	}, {
		"id": "360402",
		"parentid": "360400",
		"name": "庐山区"
	}, {
		"id": "360403",
		"parentid": "360400",
		"name": "浔阳区"
	}, {
		"id": "360421",
		"parentid": "360400",
		"name": "九江县"
	}, {
		"id": "360423",
		"parentid": "360400",
		"name": "武宁县"
	}, {
		"id": "360424",
		"parentid": "360400",
		"name": "修水县"
	}, {
		"id": "360425",
		"parentid": "360400",
		"name": "永修县"
	}, {
		"id": "360426",
		"parentid": "360400",
		"name": "德安县"
	}, {
		"id": "360427",
		"parentid": "360400",
		"name": "星子县"
	}, {
		"id": "360428",
		"parentid": "360400",
		"name": "都昌县"
	}, {
		"id": "360429",
		"parentid": "360400",
		"name": "湖口县"
	}, {
		"id": "360430",
		"parentid": "360400",
		"name": "彭泽县"
	}, {
		"id": "360481",
		"parentid": "360400",
		"name": "瑞昌市"
	}, {
		"id": "360502",
		"parentid": "360500",
		"name": "渝水区"
	}, {
		"id": "360521",
		"parentid": "360500",
		"name": "分宜县"
	}, {
		"id": "360602",
		"parentid": "360600",
		"name": "月湖区"
	}, {
		"id": "360622",
		"parentid": "360600",
		"name": "余江县"
	}, {
		"id": "360681",
		"parentid": "360600",
		"name": "贵溪市"
	}, {
		"id": "360702",
		"parentid": "360700",
		"name": "章贡区"
	}, {
		"id": "360721",
		"parentid": "360700",
		"name": "赣　县"
	}, {
		"id": "360722",
		"parentid": "360700",
		"name": "信丰县"
	}, {
		"id": "360723",
		"parentid": "360700",
		"name": "大余县"
	}, {
		"id": "360724",
		"parentid": "360700",
		"name": "上犹县"
	}, {
		"id": "360725",
		"parentid": "360700",
		"name": "崇义县"
	}, {
		"id": "360726",
		"parentid": "360700",
		"name": "安远县"
	}, {
		"id": "360727",
		"parentid": "360700",
		"name": "龙南县"
	}, {
		"id": "360728",
		"parentid": "360700",
		"name": "定南县"
	}, {
		"id": "360729",
		"parentid": "360700",
		"name": "全南县"
	}, {
		"id": "360730",
		"parentid": "360700",
		"name": "宁都县"
	}, {
		"id": "360731",
		"parentid": "360700",
		"name": "于都县"
	}, {
		"id": "360732",
		"parentid": "360700",
		"name": "兴国县"
	}, {
		"id": "360733",
		"parentid": "360700",
		"name": "会昌县"
	}, {
		"id": "360734",
		"parentid": "360700",
		"name": "寻乌县"
	}, {
		"id": "360735",
		"parentid": "360700",
		"name": "石城县"
	}, {
		"id": "360781",
		"parentid": "360700",
		"name": "瑞金市"
	}, {
		"id": "360782",
		"parentid": "360700",
		"name": "南康市"
	}, {
		"id": "360802",
		"parentid": "360800",
		"name": "吉州区"
	}, {
		"id": "360803",
		"parentid": "360800",
		"name": "青原区"
	}, {
		"id": "360821",
		"parentid": "360800",
		"name": "吉安县"
	}, {
		"id": "360822",
		"parentid": "360800",
		"name": "吉水县"
	}, {
		"id": "360823",
		"parentid": "360800",
		"name": "峡江县"
	}, {
		"id": "360824",
		"parentid": "360800",
		"name": "新干县"
	}, {
		"id": "360825",
		"parentid": "360800",
		"name": "永丰县"
	}, {
		"id": "360826",
		"parentid": "360800",
		"name": "泰和县"
	}, {
		"id": "360827",
		"parentid": "360800",
		"name": "遂川县"
	}, {
		"id": "360828",
		"parentid": "360800",
		"name": "万安县"
	}, {
		"id": "360829",
		"parentid": "360800",
		"name": "安福县"
	}, {
		"id": "360830",
		"parentid": "360800",
		"name": "永新县"
	}, {
		"id": "360881",
		"parentid": "360800",
		"name": "井冈山市"
	}, {
		"id": "360902",
		"parentid": "360900",
		"name": "袁州区"
	}, {
		"id": "360921",
		"parentid": "360900",
		"name": "奉新县"
	}, {
		"id": "360922",
		"parentid": "360900",
		"name": "万载县"
	}, {
		"id": "360923",
		"parentid": "360900",
		"name": "上高县"
	}, {
		"id": "360924",
		"parentid": "360900",
		"name": "宜丰县"
	}, {
		"id": "360925",
		"parentid": "360900",
		"name": "靖安县"
	}, {
		"id": "360926",
		"parentid": "360900",
		"name": "铜鼓县"
	}, {
		"id": "360981",
		"parentid": "360900",
		"name": "丰城市"
	}, {
		"id": "360982",
		"parentid": "360900",
		"name": "樟树市"
	}, {
		"id": "360983",
		"parentid": "360900",
		"name": "高安市"
	}, {
		"id": "361002",
		"parentid": "361000",
		"name": "临川区"
	}, {
		"id": "361021",
		"parentid": "361000",
		"name": "南城县"
	}, {
		"id": "361022",
		"parentid": "361000",
		"name": "黎川县"
	}, {
		"id": "361023",
		"parentid": "361000",
		"name": "南丰县"
	}, {
		"id": "361024",
		"parentid": "361000",
		"name": "崇仁县"
	}, {
		"id": "361025",
		"parentid": "361000",
		"name": "乐安县"
	}, {
		"id": "361026",
		"parentid": "361000",
		"name": "宜黄县"
	}, {
		"id": "361027",
		"parentid": "361000",
		"name": "金溪县"
	}, {
		"id": "361028",
		"parentid": "361000",
		"name": "资溪县"
	}, {
		"id": "361029",
		"parentid": "361000",
		"name": "东乡县"
	}, {
		"id": "361030",
		"parentid": "361000",
		"name": "广昌县"
	}, {
		"id": "361102",
		"parentid": "361100",
		"name": "信州区"
	}, {
		"id": "361121",
		"parentid": "361100",
		"name": "上饶县"
	}, {
		"id": "361122",
		"parentid": "361100",
		"name": "广丰县"
	}, {
		"id": "361123",
		"parentid": "361100",
		"name": "玉山县"
	}, {
		"id": "361124",
		"parentid": "361100",
		"name": "铅山县"
	}, {
		"id": "361125",
		"parentid": "361100",
		"name": "横峰县"
	}, {
		"id": "361126",
		"parentid": "361100",
		"name": "弋阳县"
	}, {
		"id": "361127",
		"parentid": "361100",
		"name": "余干县"
	}, {
		"id": "361128",
		"parentid": "361100",
		"name": "鄱阳县"
	}, {
		"id": "361129",
		"parentid": "361100",
		"name": "万年县"
	}, {
		"id": "361130",
		"parentid": "361100",
		"name": "婺源县"
	}, {
		"id": "361181",
		"parentid": "361100",
		"name": "德兴市"
	}, {
		"id": "370102",
		"parentid": "370100",
		"name": "历下区"
	}, {
		"id": "370103",
		"parentid": "370100",
		"name": "市中区"
	}, {
		"id": "370104",
		"parentid": "370100",
		"name": "槐荫区"
	}, {
		"id": "370105",
		"parentid": "370100",
		"name": "天桥区"
	}, {
		"id": "370112",
		"parentid": "370100",
		"name": "历城区"
	}, {
		"id": "370113",
		"parentid": "370100",
		"name": "长清区"
	}, {
		"id": "370124",
		"parentid": "370100",
		"name": "平阴县"
	}, {
		"id": "370125",
		"parentid": "370100",
		"name": "济阳县"
	}, {
		"id": "370126",
		"parentid": "370100",
		"name": "商河县"
	}, {
		"id": "370181",
		"parentid": "370100",
		"name": "章丘市"
	}, {
		"id": "370202",
		"parentid": "370200",
		"name": "市南区"
	}, {
		"id": "370203",
		"parentid": "370200",
		"name": "市北区"
	}, {
		"id": "370205",
		"parentid": "370200",
		"name": "四方区"
	}, {
		"id": "370211",
		"parentid": "370200",
		"name": "黄岛区"
	}, {
		"id": "370212",
		"parentid": "370200",
		"name": "崂山区"
	}, {
		"id": "370213",
		"parentid": "370200",
		"name": "李沧区"
	}, {
		"id": "370214",
		"parentid": "370200",
		"name": "城阳区"
	}, {
		"id": "370281",
		"parentid": "370200",
		"name": "胶州市"
	}, {
		"id": "370282",
		"parentid": "370200",
		"name": "即墨市"
	}, {
		"id": "370283",
		"parentid": "370200",
		"name": "平度市"
	}, {
		"id": "370284",
		"parentid": "370200",
		"name": "胶南市"
	}, {
		"id": "370285",
		"parentid": "370200",
		"name": "莱西市"
	}, {
		"id": "370302",
		"parentid": "370300",
		"name": "淄川区"
	}, {
		"id": "370303",
		"parentid": "370300",
		"name": "张店区"
	}, {
		"id": "370304",
		"parentid": "370300",
		"name": "博山区"
	}, {
		"id": "370305",
		"parentid": "370300",
		"name": "临淄区"
	}, {
		"id": "370306",
		"parentid": "370300",
		"name": "周村区"
	}, {
		"id": "370321",
		"parentid": "370300",
		"name": "桓台县"
	}, {
		"id": "370322",
		"parentid": "370300",
		"name": "高青县"
	}, {
		"id": "370323",
		"parentid": "370300",
		"name": "沂源县"
	}, {
		"id": "370402",
		"parentid": "370400",
		"name": "市中区"
	}, {
		"id": "370403",
		"parentid": "370400",
		"name": "薛城区"
	}, {
		"id": "370404",
		"parentid": "370400",
		"name": "峄城区"
	}, {
		"id": "370405",
		"parentid": "370400",
		"name": "台儿庄区"
	}, {
		"id": "370406",
		"parentid": "370400",
		"name": "山亭区"
	}, {
		"id": "370481",
		"parentid": "370400",
		"name": "滕州市"
	}, {
		"id": "370502",
		"parentid": "370500",
		"name": "东营区"
	}, {
		"id": "370503",
		"parentid": "370500",
		"name": "河口区"
	}, {
		"id": "370521",
		"parentid": "370500",
		"name": "垦利县"
	}, {
		"id": "370522",
		"parentid": "370500",
		"name": "利津县"
	}, {
		"id": "370523",
		"parentid": "370500",
		"name": "广饶县"
	}, {
		"id": "370602",
		"parentid": "370600",
		"name": "芝罘区"
	}, {
		"id": "370611",
		"parentid": "370600",
		"name": "福山区"
	}, {
		"id": "370612",
		"parentid": "370600",
		"name": "牟平区"
	}, {
		"id": "370613",
		"parentid": "370600",
		"name": "莱山区"
	}, {
		"id": "370634",
		"parentid": "370600",
		"name": "长岛县"
	}, {
		"id": "370681",
		"parentid": "370600",
		"name": "龙口市"
	}, {
		"id": "370682",
		"parentid": "370600",
		"name": "莱阳市"
	}, {
		"id": "370683",
		"parentid": "370600",
		"name": "莱州市"
	}, {
		"id": "370684",
		"parentid": "370600",
		"name": "蓬莱市"
	}, {
		"id": "370685",
		"parentid": "370600",
		"name": "招远市"
	}, {
		"id": "370686",
		"parentid": "370600",
		"name": "栖霞市"
	}, {
		"id": "370687",
		"parentid": "370600",
		"name": "海阳市"
	}, {
		"id": "370702",
		"parentid": "370700",
		"name": "潍城区"
	}, {
		"id": "370703",
		"parentid": "370700",
		"name": "寒亭区"
	}, {
		"id": "370704",
		"parentid": "370700",
		"name": "坊子区"
	}, {
		"id": "370705",
		"parentid": "370700",
		"name": "奎文区"
	}, {
		"id": "370724",
		"parentid": "370700",
		"name": "临朐县"
	}, {
		"id": "370725",
		"parentid": "370700",
		"name": "昌乐县"
	}, {
		"id": "370781",
		"parentid": "370700",
		"name": "青州市"
	}, {
		"id": "370782",
		"parentid": "370700",
		"name": "诸城市"
	}, {
		"id": "370783",
		"parentid": "370700",
		"name": "寿光市"
	}, {
		"id": "370784",
		"parentid": "370700",
		"name": "安丘市"
	}, {
		"id": "370785",
		"parentid": "370700",
		"name": "高密市"
	}, {
		"id": "370786",
		"parentid": "370700",
		"name": "昌邑市"
	}, {
		"id": "370802",
		"parentid": "370800",
		"name": "市中区"
	}, {
		"id": "370811",
		"parentid": "370800",
		"name": "任城区"
	}, {
		"id": "370826",
		"parentid": "370800",
		"name": "微山县"
	}, {
		"id": "370827",
		"parentid": "370800",
		"name": "鱼台县"
	}, {
		"id": "370828",
		"parentid": "370800",
		"name": "金乡县"
	}, {
		"id": "370829",
		"parentid": "370800",
		"name": "嘉祥县"
	}, {
		"id": "370830",
		"parentid": "370800",
		"name": "汶上县"
	}, {
		"id": "370831",
		"parentid": "370800",
		"name": "泗水县"
	}, {
		"id": "370832",
		"parentid": "370800",
		"name": "梁山县"
	}, {
		"id": "370881",
		"parentid": "370800",
		"name": "曲阜市"
	}, {
		"id": "370882",
		"parentid": "370800",
		"name": "兖州市"
	}, {
		"id": "370883",
		"parentid": "370800",
		"name": "邹城市"
	}, {
		"id": "370902",
		"parentid": "370900",
		"name": "泰山区"
	}, {
		"id": "370903",
		"parentid": "370900",
		"name": "岱岳区"
	}, {
		"id": "370921",
		"parentid": "370900",
		"name": "宁阳县"
	}, {
		"id": "370923",
		"parentid": "370900",
		"name": "东平县"
	}, {
		"id": "370982",
		"parentid": "370900",
		"name": "新泰市"
	}, {
		"id": "370983",
		"parentid": "370900",
		"name": "肥城市"
	}, {
		"id": "371002",
		"parentid": "371000",
		"name": "环翠区"
	}, {
		"id": "371081",
		"parentid": "371000",
		"name": "文登市"
	}, {
		"id": "371082",
		"parentid": "371000",
		"name": "荣成市"
	}, {
		"id": "371083",
		"parentid": "371000",
		"name": "乳山市"
	}, {
		"id": "371102",
		"parentid": "371100",
		"name": "东港区"
	}, {
		"id": "371103",
		"parentid": "371100",
		"name": "岚山区"
	}, {
		"id": "371121",
		"parentid": "371100",
		"name": "五莲县"
	}, {
		"id": "371122",
		"parentid": "371100",
		"name": "莒　县"
	}, {
		"id": "371202",
		"parentid": "371200",
		"name": "莱城区"
	}, {
		"id": "371203",
		"parentid": "371200",
		"name": "钢城区"
	}, {
		"id": "371302",
		"parentid": "371300",
		"name": "兰山区"
	}, {
		"id": "371311",
		"parentid": "371300",
		"name": "罗庄区"
	}, {
		"id": "371312",
		"parentid": "371300",
		"name": "河东区"
	}, {
		"id": "371321",
		"parentid": "371300",
		"name": "沂南县"
	}, {
		"id": "371322",
		"parentid": "371300",
		"name": "郯城县"
	}, {
		"id": "371323",
		"parentid": "371300",
		"name": "沂水县"
	}, {
		"id": "371324",
		"parentid": "371300",
		"name": "苍山县"
	}, {
		"id": "371325",
		"parentid": "371300",
		"name": "费　县"
	}, {
		"id": "371326",
		"parentid": "371300",
		"name": "平邑县"
	}, {
		"id": "371327",
		"parentid": "371300",
		"name": "莒南县"
	}, {
		"id": "371328",
		"parentid": "371300",
		"name": "蒙阴县"
	}, {
		"id": "371329",
		"parentid": "371300",
		"name": "临沭县"
	}, {
		"id": "371402",
		"parentid": "371400",
		"name": "德城区"
	}, {
		"id": "371421",
		"parentid": "371400",
		"name": "陵　县"
	}, {
		"id": "371422",
		"parentid": "371400",
		"name": "宁津县"
	}, {
		"id": "371423",
		"parentid": "371400",
		"name": "庆云县"
	}, {
		"id": "371424",
		"parentid": "371400",
		"name": "临邑县"
	}, {
		"id": "371425",
		"parentid": "371400",
		"name": "齐河县"
	}, {
		"id": "371426",
		"parentid": "371400",
		"name": "平原县"
	}, {
		"id": "371427",
		"parentid": "371400",
		"name": "夏津县"
	}, {
		"id": "371428",
		"parentid": "371400",
		"name": "武城县"
	}, {
		"id": "371481",
		"parentid": "371400",
		"name": "乐陵市"
	}, {
		"id": "371482",
		"parentid": "371400",
		"name": "禹城市"
	}, {
		"id": "371502",
		"parentid": "371500",
		"name": "东昌府区"
	}, {
		"id": "371521",
		"parentid": "371500",
		"name": "阳谷县"
	}, {
		"id": "371522",
		"parentid": "371500",
		"name": "莘　县"
	}, {
		"id": "371523",
		"parentid": "371500",
		"name": "茌平县"
	}, {
		"id": "371524",
		"parentid": "371500",
		"name": "东阿县"
	}, {
		"id": "371525",
		"parentid": "371500",
		"name": "冠　县"
	}, {
		"id": "371526",
		"parentid": "371500",
		"name": "高唐县"
	}, {
		"id": "371581",
		"parentid": "371500",
		"name": "临清市"
	}, {
		"id": "371602",
		"parentid": "371600",
		"name": "滨城区"
	}, {
		"id": "371621",
		"parentid": "371600",
		"name": "惠民县"
	}, {
		"id": "371622",
		"parentid": "371600",
		"name": "阳信县"
	}, {
		"id": "371623",
		"parentid": "371600",
		"name": "无棣县"
	}, {
		"id": "371624",
		"parentid": "371600",
		"name": "沾化县"
	}, {
		"id": "371625",
		"parentid": "371600",
		"name": "博兴县"
	}, {
		"id": "371626",
		"parentid": "371600",
		"name": "邹平县"
	}, {
		"id": "371702",
		"parentid": "371700",
		"name": "牡丹区"
	}, {
		"id": "371721",
		"parentid": "371700",
		"name": "曹　县"
	}, {
		"id": "371722",
		"parentid": "371700",
		"name": "单　县"
	}, {
		"id": "371723",
		"parentid": "371700",
		"name": "成武县"
	}, {
		"id": "371724",
		"parentid": "371700",
		"name": "巨野县"
	}, {
		"id": "371725",
		"parentid": "371700",
		"name": "郓城县"
	}, {
		"id": "371726",
		"parentid": "371700",
		"name": "鄄城县"
	}, {
		"id": "371727",
		"parentid": "371700",
		"name": "定陶县"
	}, {
		"id": "371728",
		"parentid": "371700",
		"name": "东明县"
	}, {
		"id": "410102",
		"parentid": "410100",
		"name": "中原区"
	}, {
		"id": "410103",
		"parentid": "410100",
		"name": "二七区"
	}, {
		"id": "410104",
		"parentid": "410100",
		"name": "管城回族区"
	}, {
		"id": "410105",
		"parentid": "410100",
		"name": "金水区"
	}, {
		"id": "410106",
		"parentid": "410100",
		"name": "上街区"
	}, {
		"id": "410108",
		"parentid": "410100",
		"name": "邙山区"
	}, {
		"id": "410122",
		"parentid": "410100",
		"name": "中牟县"
	}, {
		"id": "410181",
		"parentid": "410100",
		"name": "巩义市"
	}, {
		"id": "410182",
		"parentid": "410100",
		"name": "荥阳市"
	}, {
		"id": "410183",
		"parentid": "410100",
		"name": "新密市"
	}, {
		"id": "410184",
		"parentid": "410100",
		"name": "新郑市"
	}, {
		"id": "410185",
		"parentid": "410100",
		"name": "登封市"
	}, {
		"id": "410202",
		"parentid": "410200",
		"name": "龙亭区"
	}, {
		"id": "410203",
		"parentid": "410200",
		"name": "顺河回族区"
	}, {
		"id": "410204",
		"parentid": "410200",
		"name": "鼓楼区"
	}, {
		"id": "410205",
		"parentid": "410200",
		"name": "南关区"
	}, {
		"id": "410211",
		"parentid": "410200",
		"name": "郊　区"
	}, {
		"id": "410221",
		"parentid": "410200",
		"name": "杞　县"
	}, {
		"id": "410222",
		"parentid": "410200",
		"name": "通许县"
	}, {
		"id": "410223",
		"parentid": "410200",
		"name": "尉氏县"
	}, {
		"id": "410224",
		"parentid": "410200",
		"name": "开封县"
	}, {
		"id": "410225",
		"parentid": "410200",
		"name": "兰考县"
	}, {
		"id": "410302",
		"parentid": "410300",
		"name": "老城区"
	}, {
		"id": "410303",
		"parentid": "410300",
		"name": "西工区"
	}, {
		"id": "410304",
		"parentid": "410300",
		"name": "廛河回族区"
	}, {
		"id": "410305",
		"parentid": "410300",
		"name": "涧西区"
	}, {
		"id": "410306",
		"parentid": "410300",
		"name": "吉利区"
	}, {
		"id": "410307",
		"parentid": "410300",
		"name": "洛龙区"
	}, {
		"id": "410322",
		"parentid": "410300",
		"name": "孟津县"
	}, {
		"id": "410323",
		"parentid": "410300",
		"name": "新安县"
	}, {
		"id": "410324",
		"parentid": "410300",
		"name": "栾川县"
	}, {
		"id": "410325",
		"parentid": "410300",
		"name": "嵩　县"
	}, {
		"id": "410326",
		"parentid": "410300",
		"name": "汝阳县"
	}, {
		"id": "410327",
		"parentid": "410300",
		"name": "宜阳县"
	}, {
		"id": "410328",
		"parentid": "410300",
		"name": "洛宁县"
	}, {
		"id": "410329",
		"parentid": "410300",
		"name": "伊川县"
	}, {
		"id": "410381",
		"parentid": "410300",
		"name": "偃师市"
	}, {
		"id": "410402",
		"parentid": "410400",
		"name": "新华区"
	}, {
		"id": "410403",
		"parentid": "410400",
		"name": "卫东区"
	}, {
		"id": "410404",
		"parentid": "410400",
		"name": "石龙区"
	}, {
		"id": "410411",
		"parentid": "410400",
		"name": "湛河区"
	}, {
		"id": "410421",
		"parentid": "410400",
		"name": "宝丰县"
	}, {
		"id": "410422",
		"parentid": "410400",
		"name": "叶　县"
	}, {
		"id": "410423",
		"parentid": "410400",
		"name": "鲁山县"
	}, {
		"id": "410425",
		"parentid": "410400",
		"name": "郏　县"
	}, {
		"id": "410481",
		"parentid": "410400",
		"name": "舞钢市"
	}, {
		"id": "410482",
		"parentid": "410400",
		"name": "汝州市"
	}, {
		"id": "410502",
		"parentid": "410500",
		"name": "文峰区"
	}, {
		"id": "410503",
		"parentid": "410500",
		"name": "北关区"
	}, {
		"id": "410505",
		"parentid": "410500",
		"name": "殷都区"
	}, {
		"id": "410506",
		"parentid": "410500",
		"name": "龙安区"
	}, {
		"id": "410522",
		"parentid": "410500",
		"name": "安阳县"
	}, {
		"id": "410523",
		"parentid": "410500",
		"name": "汤阴县"
	}, {
		"id": "410526",
		"parentid": "410500",
		"name": "滑　县"
	}, {
		"id": "410527",
		"parentid": "410500",
		"name": "内黄县"
	}, {
		"id": "410581",
		"parentid": "410500",
		"name": "林州市"
	}, {
		"id": "410602",
		"parentid": "410600",
		"name": "鹤山区"
	}, {
		"id": "410603",
		"parentid": "410600",
		"name": "山城区"
	}, {
		"id": "410611",
		"parentid": "410600",
		"name": "淇滨区"
	}, {
		"id": "410621",
		"parentid": "410600",
		"name": "浚　县"
	}, {
		"id": "410622",
		"parentid": "410600",
		"name": "淇　县"
	}, {
		"id": "410702",
		"parentid": "410700",
		"name": "红旗区"
	}, {
		"id": "410703",
		"parentid": "410700",
		"name": "卫滨区"
	}, {
		"id": "410704",
		"parentid": "410700",
		"name": "凤泉区"
	}, {
		"id": "410711",
		"parentid": "410700",
		"name": "牧野区"
	}, {
		"id": "410721",
		"parentid": "410700",
		"name": "新乡县"
	}, {
		"id": "410724",
		"parentid": "410700",
		"name": "获嘉县"
	}, {
		"id": "410725",
		"parentid": "410700",
		"name": "原阳县"
	}, {
		"id": "410726",
		"parentid": "410700",
		"name": "延津县"
	}, {
		"id": "410727",
		"parentid": "410700",
		"name": "封丘县"
	}, {
		"id": "410728",
		"parentid": "410700",
		"name": "长垣县"
	}, {
		"id": "410781",
		"parentid": "410700",
		"name": "卫辉市"
	}, {
		"id": "410782",
		"parentid": "410700",
		"name": "辉县市"
	}, {
		"id": "410802",
		"parentid": "410800",
		"name": "解放区"
	}, {
		"id": "410803",
		"parentid": "410800",
		"name": "中站区"
	}, {
		"id": "410804",
		"parentid": "410800",
		"name": "马村区"
	}, {
		"id": "410811",
		"parentid": "410800",
		"name": "山阳区"
	}, {
		"id": "410821",
		"parentid": "410800",
		"name": "修武县"
	}, {
		"id": "410822",
		"parentid": "410800",
		"name": "博爱县"
	}, {
		"id": "410823",
		"parentid": "410800",
		"name": "武陟县"
	}, {
		"id": "410825",
		"parentid": "410800",
		"name": "温　县"
	}, {
		"id": "410881",
		"parentid": "410800",
		"name": "济源市"
	}, {
		"id": "410882",
		"parentid": "410800",
		"name": "沁阳市"
	}, {
		"id": "410883",
		"parentid": "410800",
		"name": "孟州市"
	}, {
		"id": "410902",
		"parentid": "410900",
		"name": "华龙区"
	}, {
		"id": "410922",
		"parentid": "410900",
		"name": "清丰县"
	}, {
		"id": "410923",
		"parentid": "410900",
		"name": "南乐县"
	}, {
		"id": "410926",
		"parentid": "410900",
		"name": "范　县"
	}, {
		"id": "410927",
		"parentid": "410900",
		"name": "台前县"
	}, {
		"id": "410928",
		"parentid": "410900",
		"name": "濮阳县"
	}, {
		"id": "411002",
		"parentid": "411000",
		"name": "魏都区"
	}, {
		"id": "411023",
		"parentid": "411000",
		"name": "许昌县"
	}, {
		"id": "411024",
		"parentid": "411000",
		"name": "鄢陵县"
	}, {
		"id": "411025",
		"parentid": "411000",
		"name": "襄城县"
	}, {
		"id": "411081",
		"parentid": "411000",
		"name": "禹州市"
	}, {
		"id": "411082",
		"parentid": "411000",
		"name": "长葛市"
	}, {
		"id": "411102",
		"parentid": "411100",
		"name": "源汇区"
	}, {
		"id": "411103",
		"parentid": "411100",
		"name": "郾城区"
	}, {
		"id": "411104",
		"parentid": "411100",
		"name": "召陵区"
	}, {
		"id": "411121",
		"parentid": "411100",
		"name": "舞阳县"
	}, {
		"id": "411122",
		"parentid": "411100",
		"name": "临颍县"
	}, {
		"id": "411202",
		"parentid": "411200",
		"name": "湖滨区"
	}, {
		"id": "411221",
		"parentid": "411200",
		"name": "渑池县"
	}, {
		"id": "411222",
		"parentid": "411200",
		"name": "陕　县"
	}, {
		"id": "411224",
		"parentid": "411200",
		"name": "卢氏县"
	}, {
		"id": "411281",
		"parentid": "411200",
		"name": "义马市"
	}, {
		"id": "411282",
		"parentid": "411200",
		"name": "灵宝市"
	}, {
		"id": "411302",
		"parentid": "411300",
		"name": "宛城区"
	}, {
		"id": "411303",
		"parentid": "411300",
		"name": "卧龙区"
	}, {
		"id": "411321",
		"parentid": "411300",
		"name": "南召县"
	}, {
		"id": "411322",
		"parentid": "411300",
		"name": "方城县"
	}, {
		"id": "411323",
		"parentid": "411300",
		"name": "西峡县"
	}, {
		"id": "411324",
		"parentid": "411300",
		"name": "镇平县"
	}, {
		"id": "411325",
		"parentid": "411300",
		"name": "内乡县"
	}, {
		"id": "411326",
		"parentid": "411300",
		"name": "淅川县"
	}, {
		"id": "411327",
		"parentid": "411300",
		"name": "社旗县"
	}, {
		"id": "411328",
		"parentid": "411300",
		"name": "唐河县"
	}, {
		"id": "411329",
		"parentid": "411300",
		"name": "新野县"
	}, {
		"id": "411330",
		"parentid": "411300",
		"name": "桐柏县"
	}, {
		"id": "411381",
		"parentid": "411300",
		"name": "邓州市"
	}, {
		"id": "411402",
		"parentid": "411400",
		"name": "梁园区"
	}, {
		"id": "411403",
		"parentid": "411400",
		"name": "睢阳区"
	}, {
		"id": "411421",
		"parentid": "411400",
		"name": "民权县"
	}, {
		"id": "411422",
		"parentid": "411400",
		"name": "睢　县"
	}, {
		"id": "411423",
		"parentid": "411400",
		"name": "宁陵县"
	}, {
		"id": "411424",
		"parentid": "411400",
		"name": "柘城县"
	}, {
		"id": "411425",
		"parentid": "411400",
		"name": "虞城县"
	}, {
		"id": "411426",
		"parentid": "411400",
		"name": "夏邑县"
	}, {
		"id": "411481",
		"parentid": "411400",
		"name": "永城市"
	}, {
		"id": "411502",
		"parentid": "411500",
		"name": "师河区"
	}, {
		"id": "411503",
		"parentid": "411500",
		"name": "平桥区"
	}, {
		"id": "411521",
		"parentid": "411500",
		"name": "罗山县"
	}, {
		"id": "411522",
		"parentid": "411500",
		"name": "光山县"
	}, {
		"id": "411523",
		"parentid": "411500",
		"name": "新　县"
	}, {
		"id": "411524",
		"parentid": "411500",
		"name": "商城县"
	}, {
		"id": "411525",
		"parentid": "411500",
		"name": "固始县"
	}, {
		"id": "411526",
		"parentid": "411500",
		"name": "潢川县"
	}, {
		"id": "411527",
		"parentid": "411500",
		"name": "淮滨县"
	}, {
		"id": "411528",
		"parentid": "411500",
		"name": "息　县"
	}, {
		"id": "411602",
		"parentid": "411600",
		"name": "川汇区"
	}, {
		"id": "411621",
		"parentid": "411600",
		"name": "扶沟县"
	}, {
		"id": "411622",
		"parentid": "411600",
		"name": "西华县"
	}, {
		"id": "411623",
		"parentid": "411600",
		"name": "商水县"
	}, {
		"id": "411624",
		"parentid": "411600",
		"name": "沈丘县"
	}, {
		"id": "411625",
		"parentid": "411600",
		"name": "郸城县"
	}, {
		"id": "411626",
		"parentid": "411600",
		"name": "淮阳县"
	}, {
		"id": "411627",
		"parentid": "411600",
		"name": "太康县"
	}, {
		"id": "411628",
		"parentid": "411600",
		"name": "鹿邑县"
	}, {
		"id": "411681",
		"parentid": "411600",
		"name": "项城市"
	}, {
		"id": "411702",
		"parentid": "411700",
		"name": "驿城区"
	}, {
		"id": "411721",
		"parentid": "411700",
		"name": "西平县"
	}, {
		"id": "411722",
		"parentid": "411700",
		"name": "上蔡县"
	}, {
		"id": "411723",
		"parentid": "411700",
		"name": "平舆县"
	}, {
		"id": "411724",
		"parentid": "411700",
		"name": "正阳县"
	}, {
		"id": "411725",
		"parentid": "411700",
		"name": "确山县"
	}, {
		"id": "411726",
		"parentid": "411700",
		"name": "泌阳县"
	}, {
		"id": "411727",
		"parentid": "411700",
		"name": "汝南县"
	}, {
		"id": "411728",
		"parentid": "411700",
		"name": "遂平县"
	}, {
		"id": "411729",
		"parentid": "411700",
		"name": "新蔡县"
	}, {
		"id": "420102",
		"parentid": "420100",
		"name": "江岸区"
	}, {
		"id": "420103",
		"parentid": "420100",
		"name": "江汉区"
	}, {
		"id": "420104",
		"parentid": "420100",
		"name": "乔口区"
	}, {
		"id": "420105",
		"parentid": "420100",
		"name": "汉阳区"
	}, {
		"id": "420106",
		"parentid": "420100",
		"name": "武昌区"
	}, {
		"id": "420107",
		"parentid": "420100",
		"name": "青山区"
	}, {
		"id": "420111",
		"parentid": "420100",
		"name": "洪山区"
	}, {
		"id": "420112",
		"parentid": "420100",
		"name": "东西湖区"
	}, {
		"id": "420113",
		"parentid": "420100",
		"name": "汉南区"
	}, {
		"id": "420114",
		"parentid": "420100",
		"name": "蔡甸区"
	}, {
		"id": "420115",
		"parentid": "420100",
		"name": "江夏区"
	}, {
		"id": "420116",
		"parentid": "420100",
		"name": "黄陂区"
	}, {
		"id": "420117",
		"parentid": "420100",
		"name": "新洲区"
	}, {
		"id": "420202",
		"parentid": "420200",
		"name": "黄石港区"
	}, {
		"id": "420203",
		"parentid": "420200",
		"name": "西塞山区"
	}, {
		"id": "420204",
		"parentid": "420200",
		"name": "下陆区"
	}, {
		"id": "420205",
		"parentid": "420200",
		"name": "铁山区"
	}, {
		"id": "420222",
		"parentid": "420200",
		"name": "阳新县"
	}, {
		"id": "420281",
		"parentid": "420200",
		"name": "大冶市"
	}, {
		"id": "420302",
		"parentid": "420300",
		"name": "茅箭区"
	}, {
		"id": "420303",
		"parentid": "420300",
		"name": "张湾区"
	}, {
		"id": "420321",
		"parentid": "420300",
		"name": "郧　县"
	}, {
		"id": "420322",
		"parentid": "420300",
		"name": "郧西县"
	}, {
		"id": "420323",
		"parentid": "420300",
		"name": "竹山县"
	}, {
		"id": "420324",
		"parentid": "420300",
		"name": "竹溪县"
	}, {
		"id": "420325",
		"parentid": "420300",
		"name": "房　县"
	}, {
		"id": "420381",
		"parentid": "420300",
		"name": "丹江口市"
	}, {
		"id": "420502",
		"parentid": "420500",
		"name": "西陵区"
	}, {
		"id": "420503",
		"parentid": "420500",
		"name": "伍家岗区"
	}, {
		"id": "420504",
		"parentid": "420500",
		"name": "点军区"
	}, {
		"id": "420505",
		"parentid": "420500",
		"name": "猇亭区"
	}, {
		"id": "420506",
		"parentid": "420500",
		"name": "夷陵区"
	}, {
		"id": "420525",
		"parentid": "420500",
		"name": "远安县"
	}, {
		"id": "420526",
		"parentid": "420500",
		"name": "兴山县"
	}, {
		"id": "420527",
		"parentid": "420500",
		"name": "秭归县"
	}, {
		"id": "420528",
		"parentid": "420500",
		"name": "长阳土家族自治县"
	}, {
		"id": "420529",
		"parentid": "420500",
		"name": "五峰土家族自治县"
	}, {
		"id": "420581",
		"parentid": "420500",
		"name": "宜都市"
	}, {
		"id": "420582",
		"parentid": "420500",
		"name": "当阳市"
	}, {
		"id": "420583",
		"parentid": "420500",
		"name": "枝江市"
	}, {
		"id": "420602",
		"parentid": "420600",
		"name": "襄城区"
	}, {
		"id": "420606",
		"parentid": "420600",
		"name": "樊城区"
	}, {
		"id": "420607",
		"parentid": "420600",
		"name": "襄阳区"
	}, {
		"id": "420624",
		"parentid": "420600",
		"name": "南漳县"
	}, {
		"id": "420625",
		"parentid": "420600",
		"name": "谷城县"
	}, {
		"id": "420626",
		"parentid": "420600",
		"name": "保康县"
	}, {
		"id": "420682",
		"parentid": "420600",
		"name": "老河口市"
	}, {
		"id": "420683",
		"parentid": "420600",
		"name": "枣阳市"
	}, {
		"id": "420684",
		"parentid": "420600",
		"name": "宜城市"
	}, {
		"id": "420702",
		"parentid": "420700",
		"name": "梁子湖区"
	}, {
		"id": "420703",
		"parentid": "420700",
		"name": "华容区"
	}, {
		"id": "420704",
		"parentid": "420700",
		"name": "鄂城区"
	}, {
		"id": "420802",
		"parentid": "420800",
		"name": "东宝区"
	}, {
		"id": "420804",
		"parentid": "420800",
		"name": "掇刀区"
	}, {
		"id": "420821",
		"parentid": "420800",
		"name": "京山县"
	}, {
		"id": "420822",
		"parentid": "420800",
		"name": "沙洋县"
	}, {
		"id": "420881",
		"parentid": "420800",
		"name": "钟祥市"
	}, {
		"id": "420902",
		"parentid": "420900",
		"name": "孝南区"
	}, {
		"id": "420921",
		"parentid": "420900",
		"name": "孝昌县"
	}, {
		"id": "420922",
		"parentid": "420900",
		"name": "大悟县"
	}, {
		"id": "420923",
		"parentid": "420900",
		"name": "云梦县"
	}, {
		"id": "420981",
		"parentid": "420900",
		"name": "应城市"
	}, {
		"id": "420982",
		"parentid": "420900",
		"name": "安陆市"
	}, {
		"id": "420984",
		"parentid": "420900",
		"name": "汉川市"
	}, {
		"id": "421002",
		"parentid": "421000",
		"name": "沙市区"
	}, {
		"id": "421003",
		"parentid": "421000",
		"name": "荆州区"
	}, {
		"id": "421022",
		"parentid": "421000",
		"name": "公安县"
	}, {
		"id": "421023",
		"parentid": "421000",
		"name": "监利县"
	}, {
		"id": "421024",
		"parentid": "421000",
		"name": "江陵县"
	}, {
		"id": "421081",
		"parentid": "421000",
		"name": "石首市"
	}, {
		"id": "421083",
		"parentid": "421000",
		"name": "洪湖市"
	}, {
		"id": "421087",
		"parentid": "421000",
		"name": "松滋市"
	}, {
		"id": "421102",
		"parentid": "421100",
		"name": "黄州区"
	}, {
		"id": "421121",
		"parentid": "421100",
		"name": "团风县"
	}, {
		"id": "421122",
		"parentid": "421100",
		"name": "红安县"
	}, {
		"id": "421123",
		"parentid": "421100",
		"name": "罗田县"
	}, {
		"id": "421124",
		"parentid": "421100",
		"name": "英山县"
	}, {
		"id": "421125",
		"parentid": "421100",
		"name": "浠水县"
	}, {
		"id": "421126",
		"parentid": "421100",
		"name": "蕲春县"
	}, {
		"id": "421127",
		"parentid": "421100",
		"name": "黄梅县"
	}, {
		"id": "421181",
		"parentid": "421100",
		"name": "麻城市"
	}, {
		"id": "421182",
		"parentid": "421100",
		"name": "武穴市"
	}, {
		"id": "421202",
		"parentid": "421200",
		"name": "咸安区"
	}, {
		"id": "421221",
		"parentid": "421200",
		"name": "嘉鱼县"
	}, {
		"id": "421222",
		"parentid": "421200",
		"name": "通城县"
	}, {
		"id": "421223",
		"parentid": "421200",
		"name": "崇阳县"
	}, {
		"id": "421224",
		"parentid": "421200",
		"name": "通山县"
	}, {
		"id": "421281",
		"parentid": "421200",
		"name": "赤壁市"
	}, {
		"id": "421302",
		"parentid": "421300",
		"name": "曾都区"
	}, {
		"id": "421381",
		"parentid": "421300",
		"name": "广水市"
	}, {
		"id": "422801",
		"parentid": "422800",
		"name": "恩施市"
	}, {
		"id": "422802",
		"parentid": "422800",
		"name": "利川市"
	}, {
		"id": "422822",
		"parentid": "422800",
		"name": "建始县"
	}, {
		"id": "422823",
		"parentid": "422800",
		"name": "巴东县"
	}, {
		"id": "422825",
		"parentid": "422800",
		"name": "宣恩县"
	}, {
		"id": "422826",
		"parentid": "422800",
		"name": "咸丰县"
	}, {
		"id": "422827",
		"parentid": "422800",
		"name": "来凤县"
	}, {
		"id": "422828",
		"parentid": "422800",
		"name": "鹤峰县"
	}, {
		"id": "429004",
		"parentid": "429000",
		"name": "仙桃市"
	}, {
		"id": "429005",
		"parentid": "429000",
		"name": "潜江市"
	}, {
		"id": "429006",
		"parentid": "429000",
		"name": "天门市"
	}, {
		"id": "429021",
		"parentid": "429000",
		"name": "神农架林区"
	}, {
		"id": "430102",
		"parentid": "430100",
		"name": "芙蓉区"
	}, {
		"id": "430103",
		"parentid": "430100",
		"name": "天心区"
	}, {
		"id": "430104",
		"parentid": "430100",
		"name": "岳麓区"
	}, {
		"id": "430105",
		"parentid": "430100",
		"name": "开福区"
	}, {
		"id": "430111",
		"parentid": "430100",
		"name": "雨花区"
	}, {
		"id": "430121",
		"parentid": "430100",
		"name": "长沙县"
	}, {
		"id": "430122",
		"parentid": "430100",
		"name": "望城县"
	}, {
		"id": "430124",
		"parentid": "430100",
		"name": "宁乡县"
	}, {
		"id": "430181",
		"parentid": "430100",
		"name": "浏阳市"
	}, {
		"id": "430202",
		"parentid": "430200",
		"name": "荷塘区"
	}, {
		"id": "430203",
		"parentid": "430200",
		"name": "芦淞区"
	}, {
		"id": "430204",
		"parentid": "430200",
		"name": "石峰区"
	}, {
		"id": "430211",
		"parentid": "430200",
		"name": "天元区"
	}, {
		"id": "430221",
		"parentid": "430200",
		"name": "株洲县"
	}, {
		"id": "430223",
		"parentid": "430200",
		"name": "攸　县"
	}, {
		"id": "430224",
		"parentid": "430200",
		"name": "茶陵县"
	}, {
		"id": "430225",
		"parentid": "430200",
		"name": "炎陵县"
	}, {
		"id": "430281",
		"parentid": "430200",
		"name": "醴陵市"
	}, {
		"id": "430302",
		"parentid": "430300",
		"name": "雨湖区"
	}, {
		"id": "430304",
		"parentid": "430300",
		"name": "岳塘区"
	}, {
		"id": "430321",
		"parentid": "430300",
		"name": "湘潭县"
	}, {
		"id": "430381",
		"parentid": "430300",
		"name": "湘乡市"
	}, {
		"id": "430382",
		"parentid": "430300",
		"name": "韶山市"
	}, {
		"id": "430405",
		"parentid": "430400",
		"name": "珠晖区"
	}, {
		"id": "430406",
		"parentid": "430400",
		"name": "雁峰区"
	}, {
		"id": "430407",
		"parentid": "430400",
		"name": "石鼓区"
	}, {
		"id": "430408",
		"parentid": "430400",
		"name": "蒸湘区"
	}, {
		"id": "430412",
		"parentid": "430400",
		"name": "南岳区"
	}, {
		"id": "430421",
		"parentid": "430400",
		"name": "衡阳县"
	}, {
		"id": "430422",
		"parentid": "430400",
		"name": "衡南县"
	}, {
		"id": "430423",
		"parentid": "430400",
		"name": "衡山县"
	}, {
		"id": "430424",
		"parentid": "430400",
		"name": "衡东县"
	}, {
		"id": "430426",
		"parentid": "430400",
		"name": "祁东县"
	}, {
		"id": "430481",
		"parentid": "430400",
		"name": "耒阳市"
	}, {
		"id": "430482",
		"parentid": "430400",
		"name": "常宁市"
	}, {
		"id": "430502",
		"parentid": "430500",
		"name": "双清区"
	}, {
		"id": "430503",
		"parentid": "430500",
		"name": "大祥区"
	}, {
		"id": "430511",
		"parentid": "430500",
		"name": "北塔区"
	}, {
		"id": "430521",
		"parentid": "430500",
		"name": "邵东县"
	}, {
		"id": "430522",
		"parentid": "430500",
		"name": "新邵县"
	}, {
		"id": "430523",
		"parentid": "430500",
		"name": "邵阳县"
	}, {
		"id": "430524",
		"parentid": "430500",
		"name": "隆回县"
	}, {
		"id": "430525",
		"parentid": "430500",
		"name": "洞口县"
	}, {
		"id": "430527",
		"parentid": "430500",
		"name": "绥宁县"
	}, {
		"id": "430528",
		"parentid": "430500",
		"name": "新宁县"
	}, {
		"id": "430529",
		"parentid": "430500",
		"name": "城步苗族自治县"
	}, {
		"id": "430581",
		"parentid": "430500",
		"name": "武冈市"
	}, {
		"id": "430602",
		"parentid": "430600",
		"name": "岳阳楼区"
	}, {
		"id": "430603",
		"parentid": "430600",
		"name": "云溪区"
	}, {
		"id": "430611",
		"parentid": "430600",
		"name": "君山区"
	}, {
		"id": "430621",
		"parentid": "430600",
		"name": "岳阳县"
	}, {
		"id": "430623",
		"parentid": "430600",
		"name": "华容县"
	}, {
		"id": "430624",
		"parentid": "430600",
		"name": "湘阴县"
	}, {
		"id": "430626",
		"parentid": "430600",
		"name": "平江县"
	}, {
		"id": "430681",
		"parentid": "430600",
		"name": "汨罗市"
	}, {
		"id": "430682",
		"parentid": "430600",
		"name": "临湘市"
	}, {
		"id": "430702",
		"parentid": "430700",
		"name": "武陵区"
	}, {
		"id": "430703",
		"parentid": "430700",
		"name": "鼎城区"
	}, {
		"id": "430721",
		"parentid": "430700",
		"name": "安乡县"
	}, {
		"id": "430722",
		"parentid": "430700",
		"name": "汉寿县"
	}, {
		"id": "430723",
		"parentid": "430700",
		"name": "澧　县"
	}, {
		"id": "430724",
		"parentid": "430700",
		"name": "临澧县"
	}, {
		"id": "430725",
		"parentid": "430700",
		"name": "桃源县"
	}, {
		"id": "430726",
		"parentid": "430700",
		"name": "石门县"
	}, {
		"id": "430781",
		"parentid": "430700",
		"name": "津市市"
	}, {
		"id": "430802",
		"parentid": "430800",
		"name": "永定区"
	}, {
		"id": "430811",
		"parentid": "430800",
		"name": "武陵源区"
	}, {
		"id": "430821",
		"parentid": "430800",
		"name": "慈利县"
	}, {
		"id": "430822",
		"parentid": "430800",
		"name": "桑植县"
	}, {
		"id": "430902",
		"parentid": "430900",
		"name": "资阳区"
	}, {
		"id": "430903",
		"parentid": "430900",
		"name": "赫山区"
	}, {
		"id": "430921",
		"parentid": "430900",
		"name": "南　县"
	}, {
		"id": "430922",
		"parentid": "430900",
		"name": "桃江县"
	}, {
		"id": "430923",
		"parentid": "430900",
		"name": "安化县"
	}, {
		"id": "430981",
		"parentid": "430900",
		"name": "沅江市"
	}, {
		"id": "431002",
		"parentid": "431000",
		"name": "北湖区"
	}, {
		"id": "431003",
		"parentid": "431000",
		"name": "苏仙区"
	}, {
		"id": "431021",
		"parentid": "431000",
		"name": "桂阳县"
	}, {
		"id": "431022",
		"parentid": "431000",
		"name": "宜章县"
	}, {
		"id": "431023",
		"parentid": "431000",
		"name": "永兴县"
	}, {
		"id": "431024",
		"parentid": "431000",
		"name": "嘉禾县"
	}, {
		"id": "431025",
		"parentid": "431000",
		"name": "临武县"
	}, {
		"id": "431026",
		"parentid": "431000",
		"name": "汝城县"
	}, {
		"id": "431027",
		"parentid": "431000",
		"name": "桂东县"
	}, {
		"id": "431028",
		"parentid": "431000",
		"name": "安仁县"
	}, {
		"id": "431081",
		"parentid": "431000",
		"name": "资兴市"
	}, {
		"id": "431102",
		"parentid": "431100",
		"name": "芝山区"
	}, {
		"id": "431103",
		"parentid": "431100",
		"name": "冷水滩区"
	}, {
		"id": "431121",
		"parentid": "431100",
		"name": "祁阳县"
	}, {
		"id": "431122",
		"parentid": "431100",
		"name": "东安县"
	}, {
		"id": "431123",
		"parentid": "431100",
		"name": "双牌县"
	}, {
		"id": "431124",
		"parentid": "431100",
		"name": "道　县"
	}, {
		"id": "431125",
		"parentid": "431100",
		"name": "江永县"
	}, {
		"id": "431126",
		"parentid": "431100",
		"name": "宁远县"
	}, {
		"id": "431127",
		"parentid": "431100",
		"name": "蓝山县"
	}, {
		"id": "431128",
		"parentid": "431100",
		"name": "新田县"
	}, {
		"id": "431129",
		"parentid": "431100",
		"name": "江华瑶族自治县"
	}, {
		"id": "431202",
		"parentid": "431200",
		"name": "鹤城区"
	}, {
		"id": "431221",
		"parentid": "431200",
		"name": "中方县"
	}, {
		"id": "431222",
		"parentid": "431200",
		"name": "沅陵县"
	}, {
		"id": "431223",
		"parentid": "431200",
		"name": "辰溪县"
	}, {
		"id": "431224",
		"parentid": "431200",
		"name": "溆浦县"
	}, {
		"id": "431225",
		"parentid": "431200",
		"name": "会同县"
	}, {
		"id": "431226",
		"parentid": "431200",
		"name": "麻阳苗族自治县"
	}, {
		"id": "431227",
		"parentid": "431200",
		"name": "新晃侗族自治县"
	}, {
		"id": "431228",
		"parentid": "431200",
		"name": "芷江侗族自治县"
	}, {
		"id": "431229",
		"parentid": "431200",
		"name": "靖州苗族侗族自治县"
	}, {
		"id": "431230",
		"parentid": "431200",
		"name": "通道侗族自治县"
	}, {
		"id": "431281",
		"parentid": "431200",
		"name": "洪江市"
	}, {
		"id": "431302",
		"parentid": "431300",
		"name": "娄星区"
	}, {
		"id": "431321",
		"parentid": "431300",
		"name": "双峰县"
	}, {
		"id": "431322",
		"parentid": "431300",
		"name": "新化县"
	}, {
		"id": "431381",
		"parentid": "431300",
		"name": "冷水江市"
	}, {
		"id": "431382",
		"parentid": "431300",
		"name": "涟源市"
	}, {
		"id": "433101",
		"parentid": "433100",
		"name": "吉首市"
	}, {
		"id": "433122",
		"parentid": "433100",
		"name": "泸溪县"
	}, {
		"id": "433123",
		"parentid": "433100",
		"name": "凤凰县"
	}, {
		"id": "433124",
		"parentid": "433100",
		"name": "花垣县"
	}, {
		"id": "433125",
		"parentid": "433100",
		"name": "保靖县"
	}, {
		"id": "433126",
		"parentid": "433100",
		"name": "古丈县"
	}, {
		"id": "433127",
		"parentid": "433100",
		"name": "永顺县"
	}, {
		"id": "433130",
		"parentid": "433100",
		"name": "龙山县"
	}, {
		"id": "440102",
		"parentid": "440100",
		"name": "东山区"
	}, {
		"id": "440103",
		"parentid": "440100",
		"name": "荔湾区"
	}, {
		"id": "440104",
		"parentid": "440100",
		"name": "越秀区"
	}, {
		"id": "440105",
		"parentid": "440100",
		"name": "海珠区"
	}, {
		"id": "440106",
		"parentid": "440100",
		"name": "天河区"
	}, {
		"id": "440107",
		"parentid": "440100",
		"name": "芳村区"
	}, {
		"id": "440111",
		"parentid": "440100",
		"name": "白云区"
	}, {
		"id": "440112",
		"parentid": "440100",
		"name": "黄埔区"
	}, {
		"id": "440113",
		"parentid": "440100",
		"name": "番禺区"
	}, {
		"id": "440114",
		"parentid": "440100",
		"name": "花都区"
	}, {
		"id": "440183",
		"parentid": "440100",
		"name": "增城市"
	}, {
		"id": "440184",
		"parentid": "440100",
		"name": "从化市"
	}, {
		"id": "440203",
		"parentid": "440200",
		"name": "武江区"
	}, {
		"id": "440204",
		"parentid": "440200",
		"name": "浈江区"
	}, {
		"id": "440205",
		"parentid": "440200",
		"name": "曲江区"
	}, {
		"id": "440222",
		"parentid": "440200",
		"name": "始兴县"
	}, {
		"id": "440224",
		"parentid": "440200",
		"name": "仁化县"
	}, {
		"id": "440229",
		"parentid": "440200",
		"name": "翁源县"
	}, {
		"id": "440232",
		"parentid": "440200",
		"name": "乳源瑶族自治县"
	}, {
		"id": "440233",
		"parentid": "440200",
		"name": "新丰县"
	}, {
		"id": "440281",
		"parentid": "440200",
		"name": "乐昌市"
	}, {
		"id": "440282",
		"parentid": "440200",
		"name": "南雄市"
	}, {
		"id": "440303",
		"parentid": "440300",
		"name": "罗湖区"
	}, {
		"id": "440304",
		"parentid": "440300",
		"name": "福田区"
	}, {
		"id": "440305",
		"parentid": "440300",
		"name": "南山区"
	}, {
		"id": "440306",
		"parentid": "440300",
		"name": "宝安区"
	}, {
		"id": "440307",
		"parentid": "440300",
		"name": "龙岗区"
	}, {
		"id": "440308",
		"parentid": "440300",
		"name": "盐田区"
	}, {
		"id": "440402",
		"parentid": "440400",
		"name": "香洲区"
	}, {
		"id": "440403",
		"parentid": "440400",
		"name": "斗门区"
	}, {
		"id": "440404",
		"parentid": "440400",
		"name": "金湾区"
	}, {
		"id": "440507",
		"parentid": "440500",
		"name": "龙湖区"
	}, {
		"id": "440511",
		"parentid": "440500",
		"name": "金平区"
	}, {
		"id": "440512",
		"parentid": "440500",
		"name": "濠江区"
	}, {
		"id": "440513",
		"parentid": "440500",
		"name": "潮阳区"
	}, {
		"id": "440514",
		"parentid": "440500",
		"name": "潮南区"
	}, {
		"id": "440515",
		"parentid": "440500",
		"name": "澄海区"
	}, {
		"id": "440523",
		"parentid": "440500",
		"name": "南澳县"
	}, {
		"id": "440604",
		"parentid": "440600",
		"name": "禅城区"
	}, {
		"id": "440605",
		"parentid": "440600",
		"name": "南海区"
	}, {
		"id": "440606",
		"parentid": "440600",
		"name": "顺德区"
	}, {
		"id": "440607",
		"parentid": "440600",
		"name": "三水区"
	}, {
		"id": "440608",
		"parentid": "440600",
		"name": "高明区"
	}, {
		"id": "440703",
		"parentid": "440700",
		"name": "蓬江区"
	}, {
		"id": "440704",
		"parentid": "440700",
		"name": "江海区"
	}, {
		"id": "440705",
		"parentid": "440700",
		"name": "新会区"
	}, {
		"id": "440781",
		"parentid": "440700",
		"name": "台山市"
	}, {
		"id": "440783",
		"parentid": "440700",
		"name": "开平市"
	}, {
		"id": "440784",
		"parentid": "440700",
		"name": "鹤山市"
	}, {
		"id": "440785",
		"parentid": "440700",
		"name": "恩平市"
	}, {
		"id": "440802",
		"parentid": "440800",
		"name": "赤坎区"
	}, {
		"id": "440803",
		"parentid": "440800",
		"name": "霞山区"
	}, {
		"id": "440804",
		"parentid": "440800",
		"name": "坡头区"
	}, {
		"id": "440811",
		"parentid": "440800",
		"name": "麻章区"
	}, {
		"id": "440823",
		"parentid": "440800",
		"name": "遂溪县"
	}, {
		"id": "440825",
		"parentid": "440800",
		"name": "徐闻县"
	}, {
		"id": "440881",
		"parentid": "440800",
		"name": "廉江市"
	}, {
		"id": "440882",
		"parentid": "440800",
		"name": "雷州市"
	}, {
		"id": "440883",
		"parentid": "440800",
		"name": "吴川市"
	}, {
		"id": "440902",
		"parentid": "440900",
		"name": "茂南区"
	}, {
		"id": "440903",
		"parentid": "440900",
		"name": "茂港区"
	}, {
		"id": "440923",
		"parentid": "440900",
		"name": "电白县"
	}, {
		"id": "440981",
		"parentid": "440900",
		"name": "高州市"
	}, {
		"id": "440982",
		"parentid": "440900",
		"name": "化州市"
	}, {
		"id": "440983",
		"parentid": "440900",
		"name": "信宜市"
	}, {
		"id": "441202",
		"parentid": "441200",
		"name": "端州区"
	}, {
		"id": "441203",
		"parentid": "441200",
		"name": "鼎湖区"
	}, {
		"id": "441223",
		"parentid": "441200",
		"name": "广宁县"
	}, {
		"id": "441224",
		"parentid": "441200",
		"name": "怀集县"
	}, {
		"id": "441225",
		"parentid": "441200",
		"name": "封开县"
	}, {
		"id": "441226",
		"parentid": "441200",
		"name": "德庆县"
	}, {
		"id": "441283",
		"parentid": "441200",
		"name": "高要市"
	}, {
		"id": "441284",
		"parentid": "441200",
		"name": "四会市"
	}, {
		"id": "441302",
		"parentid": "441300",
		"name": "惠城区"
	}, {
		"id": "441303",
		"parentid": "441300",
		"name": "惠阳区"
	}, {
		"id": "441322",
		"parentid": "441300",
		"name": "博罗县"
	}, {
		"id": "441323",
		"parentid": "441300",
		"name": "惠东县"
	}, {
		"id": "441324",
		"parentid": "441300",
		"name": "龙门县"
	}, {
		"id": "441402",
		"parentid": "441400",
		"name": "梅江区"
	}, {
		"id": "441421",
		"parentid": "441400",
		"name": "梅　县"
	}, {
		"id": "441422",
		"parentid": "441400",
		"name": "大埔县"
	}, {
		"id": "441423",
		"parentid": "441400",
		"name": "丰顺县"
	}, {
		"id": "441424",
		"parentid": "441400",
		"name": "五华县"
	}, {
		"id": "441426",
		"parentid": "441400",
		"name": "平远县"
	}, {
		"id": "441427",
		"parentid": "441400",
		"name": "蕉岭县"
	}, {
		"id": "441481",
		"parentid": "441400",
		"name": "兴宁市"
	}, {
		"id": "441502",
		"parentid": "441500",
		"name": "城　区"
	}, {
		"id": "441521",
		"parentid": "441500",
		"name": "海丰县"
	}, {
		"id": "441523",
		"parentid": "441500",
		"name": "陆河县"
	}, {
		"id": "441581",
		"parentid": "441500",
		"name": "陆丰市"
	}, {
		"id": "441602",
		"parentid": "441600",
		"name": "源城区"
	}, {
		"id": "441621",
		"parentid": "441600",
		"name": "紫金县"
	}, {
		"id": "441622",
		"parentid": "441600",
		"name": "龙川县"
	}, {
		"id": "441623",
		"parentid": "441600",
		"name": "连平县"
	}, {
		"id": "441624",
		"parentid": "441600",
		"name": "和平县"
	}, {
		"id": "441625",
		"parentid": "441600",
		"name": "东源县"
	}, {
		"id": "441702",
		"parentid": "441700",
		"name": "江城区"
	}, {
		"id": "441721",
		"parentid": "441700",
		"name": "阳西县"
	}, {
		"id": "441723",
		"parentid": "441700",
		"name": "阳东县"
	}, {
		"id": "441781",
		"parentid": "441700",
		"name": "阳春市"
	}, {
		"id": "441802",
		"parentid": "441800",
		"name": "清城区"
	}, {
		"id": "441821",
		"parentid": "441800",
		"name": "佛冈县"
	}, {
		"id": "441823",
		"parentid": "441800",
		"name": "阳山县"
	}, {
		"id": "441825",
		"parentid": "441800",
		"name": "连山壮族瑶族自治县"
	}, {
		"id": "441826",
		"parentid": "441800",
		"name": "连南瑶族自治县"
	}, {
		"id": "441827",
		"parentid": "441800",
		"name": "清新县"
	}, {
		"id": "441881",
		"parentid": "441800",
		"name": "英德市"
	}, {
		"id": "441882",
		"parentid": "441800",
		"name": "连州市"
	}, {
		"id": "442001",
		"parentid": "442000",
		"name": "市区"
	}, {
		"id": "442002",
		"parentid": "442000",
		"name": "东区"
	}, {
		"id": "442003",
		"parentid": "442000",
		"name": "环城区"
	}, {
		"id": "442004",
		"parentid": "442000",
		"name": "西区"
	}, {
		"id": "442005",
		"parentid": "442000",
		"name": "石岐区"
	}, {
		"id": "442006",
		"parentid": "442000",
		"name": "火炬区"
	}, {
		"id": "445102",
		"parentid": "445100",
		"name": "湘桥区"
	}, {
		"id": "445121",
		"parentid": "445100",
		"name": "潮安县"
	}, {
		"id": "445122",
		"parentid": "445100",
		"name": "饶平县"
	}, {
		"id": "445202",
		"parentid": "445200",
		"name": "榕城区"
	}, {
		"id": "445221",
		"parentid": "445200",
		"name": "揭东县"
	}, {
		"id": "445222",
		"parentid": "445200",
		"name": "揭西县"
	}, {
		"id": "445224",
		"parentid": "445200",
		"name": "惠来县"
	}, {
		"id": "445281",
		"parentid": "445200",
		"name": "普宁市"
	}, {
		"id": "445302",
		"parentid": "445300",
		"name": "云城区"
	}, {
		"id": "445321",
		"parentid": "445300",
		"name": "新兴县"
	}, {
		"id": "445322",
		"parentid": "445300",
		"name": "郁南县"
	}, {
		"id": "445323",
		"parentid": "445300",
		"name": "云安县"
	}, {
		"id": "445381",
		"parentid": "445300",
		"name": "罗定市"
	}, {
		"id": "450102",
		"parentid": "450100",
		"name": "兴宁区"
	}, {
		"id": "450103",
		"parentid": "450100",
		"name": "青秀区"
	}, {
		"id": "450105",
		"parentid": "450100",
		"name": "江南区"
	}, {
		"id": "450107",
		"parentid": "450100",
		"name": "西乡塘区"
	}, {
		"id": "450108",
		"parentid": "450100",
		"name": "良庆区"
	}, {
		"id": "450109",
		"parentid": "450100",
		"name": "邕宁区"
	}, {
		"id": "450122",
		"parentid": "450100",
		"name": "武鸣县"
	}, {
		"id": "450123",
		"parentid": "450100",
		"name": "隆安县"
	}, {
		"id": "450124",
		"parentid": "450100",
		"name": "马山县"
	}, {
		"id": "450125",
		"parentid": "450100",
		"name": "上林县"
	}, {
		"id": "450126",
		"parentid": "450100",
		"name": "宾阳县"
	}, {
		"id": "450127",
		"parentid": "450100",
		"name": "横　县"
	}, {
		"id": "450202",
		"parentid": "450200",
		"name": "城中区"
	}, {
		"id": "450203",
		"parentid": "450200",
		"name": "鱼峰区"
	}, {
		"id": "450204",
		"parentid": "450200",
		"name": "柳南区"
	}, {
		"id": "450205",
		"parentid": "450200",
		"name": "柳北区"
	}, {
		"id": "450221",
		"parentid": "450200",
		"name": "柳江县"
	}, {
		"id": "450222",
		"parentid": "450200",
		"name": "柳城县"
	}, {
		"id": "450223",
		"parentid": "450200",
		"name": "鹿寨县"
	}, {
		"id": "450224",
		"parentid": "450200",
		"name": "融安县"
	}, {
		"id": "450225",
		"parentid": "450200",
		"name": "融水苗族自治县"
	}, {
		"id": "450226",
		"parentid": "450200",
		"name": "三江侗族自治县"
	}, {
		"id": "450302",
		"parentid": "450300",
		"name": "秀峰区"
	}, {
		"id": "450303",
		"parentid": "450300",
		"name": "叠彩区"
	}, {
		"id": "450304",
		"parentid": "450300",
		"name": "象山区"
	}, {
		"id": "450305",
		"parentid": "450300",
		"name": "七星区"
	}, {
		"id": "450311",
		"parentid": "450300",
		"name": "雁山区"
	}, {
		"id": "450321",
		"parentid": "450300",
		"name": "阳朔县"
	}, {
		"id": "450322",
		"parentid": "450300",
		"name": "临桂县"
	}, {
		"id": "450323",
		"parentid": "450300",
		"name": "灵川县"
	}, {
		"id": "450324",
		"parentid": "450300",
		"name": "全州县"
	}, {
		"id": "450325",
		"parentid": "450300",
		"name": "兴安县"
	}, {
		"id": "450326",
		"parentid": "450300",
		"name": "永福县"
	}, {
		"id": "450327",
		"parentid": "450300",
		"name": "灌阳县"
	}, {
		"id": "450328",
		"parentid": "450300",
		"name": "龙胜各族自治县"
	}, {
		"id": "450329",
		"parentid": "450300",
		"name": "资源县"
	}, {
		"id": "450330",
		"parentid": "450300",
		"name": "平乐县"
	}, {
		"id": "450331",
		"parentid": "450300",
		"name": "荔蒲县"
	}, {
		"id": "450332",
		"parentid": "450300",
		"name": "恭城瑶族自治县"
	}, {
		"id": "450403",
		"parentid": "450400",
		"name": "万秀区"
	}, {
		"id": "450404",
		"parentid": "450400",
		"name": "蝶山区"
	}, {
		"id": "450405",
		"parentid": "450400",
		"name": "长洲区"
	}, {
		"id": "450421",
		"parentid": "450400",
		"name": "苍梧县"
	}, {
		"id": "450422",
		"parentid": "450400",
		"name": "藤　县"
	}, {
		"id": "450423",
		"parentid": "450400",
		"name": "蒙山县"
	}, {
		"id": "450481",
		"parentid": "450400",
		"name": "岑溪市"
	}, {
		"id": "450502",
		"parentid": "450500",
		"name": "海城区"
	}, {
		"id": "450503",
		"parentid": "450500",
		"name": "银海区"
	}, {
		"id": "450512",
		"parentid": "450500",
		"name": "铁山港区"
	}, {
		"id": "450521",
		"parentid": "450500",
		"name": "合浦县"
	}, {
		"id": "450602",
		"parentid": "450600",
		"name": "港口区"
	}, {
		"id": "450603",
		"parentid": "450600",
		"name": "防城区"
	}, {
		"id": "450621",
		"parentid": "450600",
		"name": "上思县"
	}, {
		"id": "450681",
		"parentid": "450600",
		"name": "东兴市"
	}, {
		"id": "450702",
		"parentid": "450700",
		"name": "钦南区"
	}, {
		"id": "450703",
		"parentid": "450700",
		"name": "钦北区"
	}, {
		"id": "450721",
		"parentid": "450700",
		"name": "灵山县"
	}, {
		"id": "450722",
		"parentid": "450700",
		"name": "浦北县"
	}, {
		"id": "450802",
		"parentid": "450800",
		"name": "港北区"
	}, {
		"id": "450803",
		"parentid": "450800",
		"name": "港南区"
	}, {
		"id": "450804",
		"parentid": "450800",
		"name": "覃塘区"
	}, {
		"id": "450821",
		"parentid": "450800",
		"name": "平南县"
	}, {
		"id": "450881",
		"parentid": "450800",
		"name": "桂平市"
	}, {
		"id": "450902",
		"parentid": "450900",
		"name": "玉州区"
	}, {
		"id": "450921",
		"parentid": "450900",
		"name": "容　县"
	}, {
		"id": "450922",
		"parentid": "450900",
		"name": "陆川县"
	}, {
		"id": "450923",
		"parentid": "450900",
		"name": "博白县"
	}, {
		"id": "450924",
		"parentid": "450900",
		"name": "兴业县"
	}, {
		"id": "450981",
		"parentid": "450900",
		"name": "北流市"
	}, {
		"id": "451002",
		"parentid": "451000",
		"name": "右江区"
	}, {
		"id": "451021",
		"parentid": "451000",
		"name": "田阳县"
	}, {
		"id": "451022",
		"parentid": "451000",
		"name": "田东县"
	}, {
		"id": "451023",
		"parentid": "451000",
		"name": "平果县"
	}, {
		"id": "451024",
		"parentid": "451000",
		"name": "德保县"
	}, {
		"id": "451025",
		"parentid": "451000",
		"name": "靖西县"
	}, {
		"id": "451026",
		"parentid": "451000",
		"name": "那坡县"
	}, {
		"id": "451027",
		"parentid": "451000",
		"name": "凌云县"
	}, {
		"id": "451028",
		"parentid": "451000",
		"name": "乐业县"
	}, {
		"id": "451029",
		"parentid": "451000",
		"name": "田林县"
	}, {
		"id": "451030",
		"parentid": "451000",
		"name": "西林县"
	}, {
		"id": "451031",
		"parentid": "451000",
		"name": "隆林各族自治县"
	}, {
		"id": "451102",
		"parentid": "451100",
		"name": "八步区"
	}, {
		"id": "451121",
		"parentid": "451100",
		"name": "昭平县"
	}, {
		"id": "451122",
		"parentid": "451100",
		"name": "钟山县"
	}, {
		"id": "451123",
		"parentid": "451100",
		"name": "富川瑶族自治县"
	}, {
		"id": "451202",
		"parentid": "451200",
		"name": "金城江区"
	}, {
		"id": "451221",
		"parentid": "451200",
		"name": "南丹县"
	}, {
		"id": "451222",
		"parentid": "451200",
		"name": "天峨县"
	}, {
		"id": "451223",
		"parentid": "451200",
		"name": "凤山县"
	}, {
		"id": "451224",
		"parentid": "451200",
		"name": "东兰县"
	}, {
		"id": "451225",
		"parentid": "451200",
		"name": "罗城仫佬族自治县"
	}, {
		"id": "451226",
		"parentid": "451200",
		"name": "环江毛南族自治县"
	}, {
		"id": "451227",
		"parentid": "451200",
		"name": "巴马瑶族自治县"
	}, {
		"id": "451228",
		"parentid": "451200",
		"name": "都安瑶族自治县"
	}, {
		"id": "451229",
		"parentid": "451200",
		"name": "大化瑶族自治县"
	}, {
		"id": "451281",
		"parentid": "451200",
		"name": "宜州市"
	}, {
		"id": "451302",
		"parentid": "451300",
		"name": "兴宾区"
	}, {
		"id": "451321",
		"parentid": "451300",
		"name": "忻城县"
	}, {
		"id": "451322",
		"parentid": "451300",
		"name": "象州县"
	}, {
		"id": "451323",
		"parentid": "451300",
		"name": "武宣县"
	}, {
		"id": "451324",
		"parentid": "451300",
		"name": "金秀瑶族自治县"
	}, {
		"id": "451381",
		"parentid": "451300",
		"name": "合山市"
	}, {
		"id": "451402",
		"parentid": "451400",
		"name": "江洲区"
	}, {
		"id": "451421",
		"parentid": "451400",
		"name": "扶绥县"
	}, {
		"id": "451422",
		"parentid": "451400",
		"name": "宁明县"
	}, {
		"id": "451423",
		"parentid": "451400",
		"name": "龙州县"
	}, {
		"id": "451424",
		"parentid": "451400",
		"name": "大新县"
	}, {
		"id": "451425",
		"parentid": "451400",
		"name": "天等县"
	}, {
		"id": "451481",
		"parentid": "451400",
		"name": "凭祥市"
	}, {
		"id": "460105",
		"parentid": "460100",
		"name": "秀英区"
	}, {
		"id": "460106",
		"parentid": "460100",
		"name": "龙华区"
	}, {
		"id": "460107",
		"parentid": "460100",
		"name": "琼山区"
	}, {
		"id": "460108",
		"parentid": "460100",
		"name": "美兰区"
	}, {
		"id": "469001",
		"parentid": "469000",
		"name": "五指山市"
	}, {
		"id": "469002",
		"parentid": "469000",
		"name": "琼海市"
	}, {
		"id": "469003",
		"parentid": "469000",
		"name": "儋州市"
	}, {
		"id": "469005",
		"parentid": "469000",
		"name": "文昌市"
	}, {
		"id": "469006",
		"parentid": "469000",
		"name": "万宁市"
	}, {
		"id": "469007",
		"parentid": "469000",
		"name": "东方市"
	}, {
		"id": "469025",
		"parentid": "469000",
		"name": "定安县"
	}, {
		"id": "469026",
		"parentid": "469000",
		"name": "屯昌县"
	}, {
		"id": "469027",
		"parentid": "469000",
		"name": "澄迈县"
	}, {
		"id": "469028",
		"parentid": "469000",
		"name": "临高县"
	}, {
		"id": "469030",
		"parentid": "469000",
		"name": "白沙黎族自治县"
	}, {
		"id": "469031",
		"parentid": "469000",
		"name": "昌江黎族自治县"
	}, {
		"id": "469033",
		"parentid": "469000",
		"name": "乐东黎族自治县"
	}, {
		"id": "469034",
		"parentid": "469000",
		"name": "陵水黎族自治县"
	}, {
		"id": "469035",
		"parentid": "469000",
		"name": "保亭黎族苗族自治县"
	}, {
		"id": "469036",
		"parentid": "469000",
		"name": "琼中黎族苗族自治县"
	}, {
		"id": "469037",
		"parentid": "469000",
		"name": "西沙群岛"
	}, {
		"id": "469038",
		"parentid": "469000",
		"name": "南沙群岛"
	}, {
		"id": "469039",
		"parentid": "469000",
		"name": "中沙群岛的岛礁及其海域"
	}, {
		"id": "500101",
		"parentid": "500100",
		"name": "万州区"
	}, {
		"id": "500102",
		"parentid": "500100",
		"name": "涪陵区"
	}, {
		"id": "500103",
		"parentid": "500100",
		"name": "渝中区"
	}, {
		"id": "500104",
		"parentid": "500100",
		"name": "大渡口区"
	}, {
		"id": "500105",
		"parentid": "500100",
		"name": "江北区"
	}, {
		"id": "500106",
		"parentid": "500100",
		"name": "沙坪坝区"
	}, {
		"id": "500107",
		"parentid": "500100",
		"name": "九龙坡区"
	}, {
		"id": "500108",
		"parentid": "500100",
		"name": "南岸区"
	}, {
		"id": "500109",
		"parentid": "500100",
		"name": "北碚区"
	}, {
		"id": "500110",
		"parentid": "500100",
		"name": "万盛区"
	}, {
		"id": "500111",
		"parentid": "500100",
		"name": "双桥区"
	}, {
		"id": "500112",
		"parentid": "500100",
		"name": "渝北区"
	}, {
		"id": "500113",
		"parentid": "500100",
		"name": "巴南区"
	}, {
		"id": "500114",
		"parentid": "500100",
		"name": "黔江区"
	}, {
		"id": "500115",
		"parentid": "500100",
		"name": "长寿区"
	}, {
		"id": "500222",
		"parentid": "500100",
		"name": "綦江县"
	}, {
		"id": "500223",
		"parentid": "500100",
		"name": "潼南县"
	}, {
		"id": "500224",
		"parentid": "500100",
		"name": "铜梁县"
	}, {
		"id": "500225",
		"parentid": "500100",
		"name": "大足县"
	}, {
		"id": "500226",
		"parentid": "500100",
		"name": "荣昌县"
	}, {
		"id": "500227",
		"parentid": "500100",
		"name": "璧山县"
	}, {
		"id": "500228",
		"parentid": "500100",
		"name": "梁平县"
	}, {
		"id": "500229",
		"parentid": "500100",
		"name": "城口县"
	}, {
		"id": "500230",
		"parentid": "500100",
		"name": "丰都县"
	}, {
		"id": "500231",
		"parentid": "500100",
		"name": "垫江县"
	}, {
		"id": "500232",
		"parentid": "500100",
		"name": "武隆县"
	}, {
		"id": "500233",
		"parentid": "500100",
		"name": "忠　县"
	}, {
		"id": "500234",
		"parentid": "500100",
		"name": "开　县"
	}, {
		"id": "500235",
		"parentid": "500100",
		"name": "云阳县"
	}, {
		"id": "500236",
		"parentid": "500100",
		"name": "奉节县"
	}, {
		"id": "500237",
		"parentid": "500100",
		"name": "巫山县"
	}, {
		"id": "500238",
		"parentid": "500100",
		"name": "巫溪县"
	}, {
		"id": "500240",
		"parentid": "500100",
		"name": "石柱土家族自治县"
	}, {
		"id": "500241",
		"parentid": "500100",
		"name": "秀山土家族苗族自治县"
	}, {
		"id": "500242",
		"parentid": "500100",
		"name": "酉阳土家族苗族自治县"
	}, {
		"id": "500243",
		"parentid": "500100",
		"name": "彭水苗族土家族自治县"
	}, {
		"id": "500381",
		"parentid": "500300",
		"name": "江津市"
	}, {
		"id": "500382",
		"parentid": "500300",
		"name": "合川市"
	}, {
		"id": "500383",
		"parentid": "500300",
		"name": "永川市"
	}, {
		"id": "500384",
		"parentid": "500300",
		"name": "南川市"
	}, {
		"id": "510104",
		"parentid": "510100",
		"name": "锦江区"
	}, {
		"id": "510105",
		"parentid": "510100",
		"name": "青羊区"
	}, {
		"id": "510106",
		"parentid": "510100",
		"name": "金牛区"
	}, {
		"id": "510107",
		"parentid": "510100",
		"name": "武侯区"
	}, {
		"id": "510108",
		"parentid": "510100",
		"name": "成华区"
	}, {
		"id": "510112",
		"parentid": "510100",
		"name": "龙泉驿区"
	}, {
		"id": "510113",
		"parentid": "510100",
		"name": "青白江区"
	}, {
		"id": "510114",
		"parentid": "510100",
		"name": "新都区"
	}, {
		"id": "510115",
		"parentid": "510100",
		"name": "温江区"
	}, {
		"id": "510121",
		"parentid": "510100",
		"name": "金堂县"
	}, {
		"id": "510122",
		"parentid": "510100",
		"name": "双流县"
	}, {
		"id": "510124",
		"parentid": "510100",
		"name": "郫　县"
	}, {
		"id": "510129",
		"parentid": "510100",
		"name": "大邑县"
	}, {
		"id": "510131",
		"parentid": "510100",
		"name": "蒲江县"
	}, {
		"id": "510132",
		"parentid": "510100",
		"name": "新津县"
	}, {
		"id": "510181",
		"parentid": "510100",
		"name": "都江堰市"
	}, {
		"id": "510182",
		"parentid": "510100",
		"name": "彭州市"
	}, {
		"id": "510183",
		"parentid": "510100",
		"name": "邛崃市"
	}, {
		"id": "510184",
		"parentid": "510100",
		"name": "崇州市"
	}, {
		"id": "510302",
		"parentid": "510300",
		"name": "自流井区"
	}, {
		"id": "510303",
		"parentid": "510300",
		"name": "贡井区"
	}, {
		"id": "510304",
		"parentid": "510300",
		"name": "大安区"
	}, {
		"id": "510311",
		"parentid": "510300",
		"name": "沿滩区"
	}, {
		"id": "510321",
		"parentid": "510300",
		"name": "荣　县"
	}, {
		"id": "510322",
		"parentid": "510300",
		"name": "富顺县"
	}, {
		"id": "510402",
		"parentid": "510400",
		"name": "东　区"
	}, {
		"id": "510403",
		"parentid": "510400",
		"name": "西　区"
	}, {
		"id": "510411",
		"parentid": "510400",
		"name": "仁和区"
	}, {
		"id": "510421",
		"parentid": "510400",
		"name": "米易县"
	}, {
		"id": "510422",
		"parentid": "510400",
		"name": "盐边县"
	}, {
		"id": "510502",
		"parentid": "510500",
		"name": "江阳区"
	}, {
		"id": "510503",
		"parentid": "510500",
		"name": "纳溪区"
	}, {
		"id": "510504",
		"parentid": "510500",
		"name": "龙马潭区"
	}, {
		"id": "510521",
		"parentid": "510500",
		"name": "泸　县"
	}, {
		"id": "510522",
		"parentid": "510500",
		"name": "合江县"
	}, {
		"id": "510524",
		"parentid": "510500",
		"name": "叙永县"
	}, {
		"id": "510525",
		"parentid": "510500",
		"name": "古蔺县"
	}, {
		"id": "510603",
		"parentid": "510600",
		"name": "旌阳区"
	}, {
		"id": "510623",
		"parentid": "510600",
		"name": "中江县"
	}, {
		"id": "510626",
		"parentid": "510600",
		"name": "罗江县"
	}, {
		"id": "510681",
		"parentid": "510600",
		"name": "广汉市"
	}, {
		"id": "510682",
		"parentid": "510600",
		"name": "什邡市"
	}, {
		"id": "510683",
		"parentid": "510600",
		"name": "绵竹市"
	}, {
		"id": "510703",
		"parentid": "510700",
		"name": "涪城区"
	}, {
		"id": "510704",
		"parentid": "510700",
		"name": "游仙区"
	}, {
		"id": "510722",
		"parentid": "510700",
		"name": "三台县"
	}, {
		"id": "510723",
		"parentid": "510700",
		"name": "盐亭县"
	}, {
		"id": "510724",
		"parentid": "510700",
		"name": "安　县"
	}, {
		"id": "510725",
		"parentid": "510700",
		"name": "梓潼县"
	}, {
		"id": "510726",
		"parentid": "510700",
		"name": "北川羌族自治县"
	}, {
		"id": "510727",
		"parentid": "510700",
		"name": "平武县"
	}, {
		"id": "510781",
		"parentid": "510700",
		"name": "江油市"
	}, {
		"id": "510802",
		"parentid": "510800",
		"name": "市中区"
	}, {
		"id": "510811",
		"parentid": "510800",
		"name": "元坝区"
	}, {
		"id": "510812",
		"parentid": "510800",
		"name": "朝天区"
	}, {
		"id": "510821",
		"parentid": "510800",
		"name": "旺苍县"
	}, {
		"id": "510822",
		"parentid": "510800",
		"name": "青川县"
	}, {
		"id": "510823",
		"parentid": "510800",
		"name": "剑阁县"
	}, {
		"id": "510824",
		"parentid": "510800",
		"name": "苍溪县"
	}, {
		"id": "510903",
		"parentid": "510900",
		"name": "船山区"
	}, {
		"id": "510904",
		"parentid": "510900",
		"name": "安居区"
	}, {
		"id": "510921",
		"parentid": "510900",
		"name": "蓬溪县"
	}, {
		"id": "510922",
		"parentid": "510900",
		"name": "射洪县"
	}, {
		"id": "510923",
		"parentid": "510900",
		"name": "大英县"
	}, {
		"id": "511002",
		"parentid": "511000",
		"name": "市中区"
	}, {
		"id": "511011",
		"parentid": "511000",
		"name": "东兴区"
	}, {
		"id": "511024",
		"parentid": "511000",
		"name": "威远县"
	}, {
		"id": "511025",
		"parentid": "511000",
		"name": "资中县"
	}, {
		"id": "511028",
		"parentid": "511000",
		"name": "隆昌县"
	}, {
		"id": "511102",
		"parentid": "511100",
		"name": "市中区"
	}, {
		"id": "511111",
		"parentid": "511100",
		"name": "沙湾区"
	}, {
		"id": "511112",
		"parentid": "511100",
		"name": "五通桥区"
	}, {
		"id": "511113",
		"parentid": "511100",
		"name": "金口河区"
	}, {
		"id": "511123",
		"parentid": "511100",
		"name": "犍为县"
	}, {
		"id": "511124",
		"parentid": "511100",
		"name": "井研县"
	}, {
		"id": "511126",
		"parentid": "511100",
		"name": "夹江县"
	}, {
		"id": "511129",
		"parentid": "511100",
		"name": "沐川县"
	}, {
		"id": "511132",
		"parentid": "511100",
		"name": "峨边彝族自治县"
	}, {
		"id": "511133",
		"parentid": "511100",
		"name": "马边彝族自治县"
	}, {
		"id": "511181",
		"parentid": "511100",
		"name": "峨眉山市"
	}, {
		"id": "511302",
		"parentid": "511300",
		"name": "顺庆区"
	}, {
		"id": "511303",
		"parentid": "511300",
		"name": "高坪区"
	}, {
		"id": "511304",
		"parentid": "511300",
		"name": "嘉陵区"
	}, {
		"id": "511321",
		"parentid": "511300",
		"name": "南部县"
	}, {
		"id": "511322",
		"parentid": "511300",
		"name": "营山县"
	}, {
		"id": "511323",
		"parentid": "511300",
		"name": "蓬安县"
	}, {
		"id": "511324",
		"parentid": "511300",
		"name": "仪陇县"
	}, {
		"id": "511325",
		"parentid": "511300",
		"name": "西充县"
	}, {
		"id": "511381",
		"parentid": "511300",
		"name": "阆中市"
	}, {
		"id": "511402",
		"parentid": "511400",
		"name": "东坡区"
	}, {
		"id": "511421",
		"parentid": "511400",
		"name": "仁寿县"
	}, {
		"id": "511422",
		"parentid": "511400",
		"name": "彭山县"
	}, {
		"id": "511423",
		"parentid": "511400",
		"name": "洪雅县"
	}, {
		"id": "511424",
		"parentid": "511400",
		"name": "丹棱县"
	}, {
		"id": "511425",
		"parentid": "511400",
		"name": "青神县"
	}, {
		"id": "511502",
		"parentid": "511500",
		"name": "翠屏区"
	}, {
		"id": "511521",
		"parentid": "511500",
		"name": "宜宾县"
	}, {
		"id": "511522",
		"parentid": "511500",
		"name": "南溪县"
	}, {
		"id": "511523",
		"parentid": "511500",
		"name": "江安县"
	}, {
		"id": "511524",
		"parentid": "511500",
		"name": "长宁县"
	}, {
		"id": "511525",
		"parentid": "511500",
		"name": "高　县"
	}, {
		"id": "511526",
		"parentid": "511500",
		"name": "珙　县"
	}, {
		"id": "511527",
		"parentid": "511500",
		"name": "筠连县"
	}, {
		"id": "511528",
		"parentid": "511500",
		"name": "兴文县"
	}, {
		"id": "511529",
		"parentid": "511500",
		"name": "屏山县"
	}, {
		"id": "511602",
		"parentid": "511600",
		"name": "广安区"
	}, {
		"id": "511621",
		"parentid": "511600",
		"name": "岳池县"
	}, {
		"id": "511622",
		"parentid": "511600",
		"name": "武胜县"
	}, {
		"id": "511623",
		"parentid": "511600",
		"name": "邻水县"
	}, {
		"id": "511681",
		"parentid": "511600",
		"name": "华莹市"
	}, {
		"id": "511702",
		"parentid": "511700",
		"name": "通川区"
	}, {
		"id": "511721",
		"parentid": "511700",
		"name": "达　县"
	}, {
		"id": "511722",
		"parentid": "511700",
		"name": "宣汉县"
	}, {
		"id": "511723",
		"parentid": "511700",
		"name": "开江县"
	}, {
		"id": "511724",
		"parentid": "511700",
		"name": "大竹县"
	}, {
		"id": "511725",
		"parentid": "511700",
		"name": "渠　县"
	}, {
		"id": "511781",
		"parentid": "511700",
		"name": "万源市"
	}, {
		"id": "511802",
		"parentid": "511800",
		"name": "雨城区"
	}, {
		"id": "511821",
		"parentid": "511800",
		"name": "名山县"
	}, {
		"id": "511822",
		"parentid": "511800",
		"name": "荥经县"
	}, {
		"id": "511823",
		"parentid": "511800",
		"name": "汉源县"
	}, {
		"id": "511824",
		"parentid": "511800",
		"name": "石棉县"
	}, {
		"id": "511825",
		"parentid": "511800",
		"name": "天全县"
	}, {
		"id": "511826",
		"parentid": "511800",
		"name": "芦山县"
	}, {
		"id": "511827",
		"parentid": "511800",
		"name": "宝兴县"
	}, {
		"id": "511902",
		"parentid": "511900",
		"name": "巴州区"
	}, {
		"id": "511921",
		"parentid": "511900",
		"name": "通江县"
	}, {
		"id": "511922",
		"parentid": "511900",
		"name": "南江县"
	}, {
		"id": "511923",
		"parentid": "511900",
		"name": "平昌县"
	}, {
		"id": "512002",
		"parentid": "512000",
		"name": "雁江区"
	}, {
		"id": "512021",
		"parentid": "512000",
		"name": "安岳县"
	}, {
		"id": "512022",
		"parentid": "512000",
		"name": "乐至县"
	}, {
		"id": "512081",
		"parentid": "512000",
		"name": "简阳市"
	}, {
		"id": "513221",
		"parentid": "513200",
		"name": "汶川县"
	}, {
		"id": "513222",
		"parentid": "513200",
		"name": "理　县"
	}, {
		"id": "513223",
		"parentid": "513200",
		"name": "茂　县"
	}, {
		"id": "513224",
		"parentid": "513200",
		"name": "松潘县"
	}, {
		"id": "513225",
		"parentid": "513200",
		"name": "九寨沟县"
	}, {
		"id": "513226",
		"parentid": "513200",
		"name": "金川县"
	}, {
		"id": "513227",
		"parentid": "513200",
		"name": "小金县"
	}, {
		"id": "513228",
		"parentid": "513200",
		"name": "黑水县"
	}, {
		"id": "513229",
		"parentid": "513200",
		"name": "马尔康县"
	}, {
		"id": "513230",
		"parentid": "513200",
		"name": "壤塘县"
	}, {
		"id": "513231",
		"parentid": "513200",
		"name": "阿坝县"
	}, {
		"id": "513232",
		"parentid": "513200",
		"name": "若尔盖县"
	}, {
		"id": "513233",
		"parentid": "513200",
		"name": "红原县"
	}, {
		"id": "513321",
		"parentid": "513300",
		"name": "康定县"
	}, {
		"id": "513322",
		"parentid": "513300",
		"name": "泸定县"
	}, {
		"id": "513323",
		"parentid": "513300",
		"name": "丹巴县"
	}, {
		"id": "513324",
		"parentid": "513300",
		"name": "九龙县"
	}, {
		"id": "513325",
		"parentid": "513300",
		"name": "雅江县"
	}, {
		"id": "513326",
		"parentid": "513300",
		"name": "道孚县"
	}, {
		"id": "513327",
		"parentid": "513300",
		"name": "炉霍县"
	}, {
		"id": "513328",
		"parentid": "513300",
		"name": "甘孜县"
	}, {
		"id": "513329",
		"parentid": "513300",
		"name": "新龙县"
	}, {
		"id": "513330",
		"parentid": "513300",
		"name": "德格县"
	}, {
		"id": "513331",
		"parentid": "513300",
		"name": "白玉县"
	}, {
		"id": "513332",
		"parentid": "513300",
		"name": "石渠县"
	}, {
		"id": "513333",
		"parentid": "513300",
		"name": "色达县"
	}, {
		"id": "513334",
		"parentid": "513300",
		"name": "理塘县"
	}, {
		"id": "513335",
		"parentid": "513300",
		"name": "巴塘县"
	}, {
		"id": "513336",
		"parentid": "513300",
		"name": "乡城县"
	}, {
		"id": "513337",
		"parentid": "513300",
		"name": "稻城县"
	}, {
		"id": "513338",
		"parentid": "513300",
		"name": "得荣县"
	}, {
		"id": "513401",
		"parentid": "513400",
		"name": "西昌市"
	}, {
		"id": "513422",
		"parentid": "513400",
		"name": "木里藏族自治县"
	}, {
		"id": "513423",
		"parentid": "513400",
		"name": "盐源县"
	}, {
		"id": "513424",
		"parentid": "513400",
		"name": "德昌县"
	}, {
		"id": "513425",
		"parentid": "513400",
		"name": "会理县"
	}, {
		"id": "513426",
		"parentid": "513400",
		"name": "会东县"
	}, {
		"id": "513427",
		"parentid": "513400",
		"name": "宁南县"
	}, {
		"id": "513428",
		"parentid": "513400",
		"name": "普格县"
	}, {
		"id": "513429",
		"parentid": "513400",
		"name": "布拖县"
	}, {
		"id": "513430",
		"parentid": "513400",
		"name": "金阳县"
	}, {
		"id": "513431",
		"parentid": "513400",
		"name": "昭觉县"
	}, {
		"id": "513432",
		"parentid": "513400",
		"name": "喜德县"
	}, {
		"id": "513433",
		"parentid": "513400",
		"name": "冕宁县"
	}, {
		"id": "513434",
		"parentid": "513400",
		"name": "越西县"
	}, {
		"id": "513435",
		"parentid": "513400",
		"name": "甘洛县"
	}, {
		"id": "513436",
		"parentid": "513400",
		"name": "美姑县"
	}, {
		"id": "513437",
		"parentid": "513400",
		"name": "雷波县"
	}, {
		"id": "520102",
		"parentid": "520100",
		"name": "南明区"
	}, {
		"id": "520103",
		"parentid": "520100",
		"name": "云岩区"
	}, {
		"id": "520111",
		"parentid": "520100",
		"name": "花溪区"
	}, {
		"id": "520112",
		"parentid": "520100",
		"name": "乌当区"
	}, {
		"id": "520113",
		"parentid": "520100",
		"name": "白云区"
	}, {
		"id": "520114",
		"parentid": "520100",
		"name": "小河区"
	}, {
		"id": "520121",
		"parentid": "520100",
		"name": "开阳县"
	}, {
		"id": "520122",
		"parentid": "520100",
		"name": "息烽县"
	}, {
		"id": "520123",
		"parentid": "520100",
		"name": "修文县"
	}, {
		"id": "520181",
		"parentid": "520100",
		"name": "清镇市"
	}, {
		"id": "520201",
		"parentid": "520200",
		"name": "钟山区"
	}, {
		"id": "520203",
		"parentid": "520200",
		"name": "六枝特区"
	}, {
		"id": "520221",
		"parentid": "520200",
		"name": "水城县"
	}, {
		"id": "520222",
		"parentid": "520200",
		"name": "盘　县"
	}, {
		"id": "520302",
		"parentid": "520300",
		"name": "红花岗区"
	}, {
		"id": "520303",
		"parentid": "520300",
		"name": "汇川区"
	}, {
		"id": "520321",
		"parentid": "520300",
		"name": "遵义县"
	}, {
		"id": "520322",
		"parentid": "520300",
		"name": "桐梓县"
	}, {
		"id": "520323",
		"parentid": "520300",
		"name": "绥阳县"
	}, {
		"id": "520324",
		"parentid": "520300",
		"name": "正安县"
	}, {
		"id": "520325",
		"parentid": "520300",
		"name": "道真仡佬族苗族自治县"
	}, {
		"id": "520326",
		"parentid": "520300",
		"name": "务川仡佬族苗族自治县"
	}, {
		"id": "520327",
		"parentid": "520300",
		"name": "凤冈县"
	}, {
		"id": "520328",
		"parentid": "520300",
		"name": "湄潭县"
	}, {
		"id": "520329",
		"parentid": "520300",
		"name": "余庆县"
	}, {
		"id": "520330",
		"parentid": "520300",
		"name": "习水县"
	}, {
		"id": "520381",
		"parentid": "520300",
		"name": "赤水市"
	}, {
		"id": "520382",
		"parentid": "520300",
		"name": "仁怀市"
	}, {
		"id": "520402",
		"parentid": "520400",
		"name": "西秀区"
	}, {
		"id": "520421",
		"parentid": "520400",
		"name": "平坝县"
	}, {
		"id": "520422",
		"parentid": "520400",
		"name": "普定县"
	}, {
		"id": "520423",
		"parentid": "520400",
		"name": "镇宁布依族苗族自治县"
	}, {
		"id": "520424",
		"parentid": "520400",
		"name": "关岭布依族苗族自治县"
	}, {
		"id": "520425",
		"parentid": "520400",
		"name": "紫云苗族布依族自治县"
	}, {
		"id": "522201",
		"parentid": "522200",
		"name": "铜仁市"
	}, {
		"id": "522222",
		"parentid": "522200",
		"name": "江口县"
	}, {
		"id": "522223",
		"parentid": "522200",
		"name": "玉屏侗族自治县"
	}, {
		"id": "522224",
		"parentid": "522200",
		"name": "石阡县"
	}, {
		"id": "522225",
		"parentid": "522200",
		"name": "思南县"
	}, {
		"id": "522226",
		"parentid": "522200",
		"name": "印江土家族苗族自治县"
	}, {
		"id": "522227",
		"parentid": "522200",
		"name": "德江县"
	}, {
		"id": "522228",
		"parentid": "522200",
		"name": "沿河土家族自治县"
	}, {
		"id": "522229",
		"parentid": "522200",
		"name": "松桃苗族自治县"
	}, {
		"id": "522230",
		"parentid": "522200",
		"name": "万山特区"
	}, {
		"id": "522301",
		"parentid": "522300",
		"name": "兴义市"
	}, {
		"id": "522322",
		"parentid": "522300",
		"name": "兴仁县"
	}, {
		"id": "522323",
		"parentid": "522300",
		"name": "普安县"
	}, {
		"id": "522324",
		"parentid": "522300",
		"name": "晴隆县"
	}, {
		"id": "522325",
		"parentid": "522300",
		"name": "贞丰县"
	}, {
		"id": "522326",
		"parentid": "522300",
		"name": "望谟县"
	}, {
		"id": "522327",
		"parentid": "522300",
		"name": "册亨县"
	}, {
		"id": "522328",
		"parentid": "522300",
		"name": "安龙县"
	}, {
		"id": "522401",
		"parentid": "522400",
		"name": "毕节市"
	}, {
		"id": "522422",
		"parentid": "522400",
		"name": "大方县"
	}, {
		"id": "522423",
		"parentid": "522400",
		"name": "黔西县"
	}, {
		"id": "522424",
		"parentid": "522400",
		"name": "金沙县"
	}, {
		"id": "522425",
		"parentid": "522400",
		"name": "织金县"
	}, {
		"id": "522426",
		"parentid": "522400",
		"name": "纳雍县"
	}, {
		"id": "522427",
		"parentid": "522400",
		"name": "威宁彝族回族苗族自治县"
	}, {
		"id": "522428",
		"parentid": "522400",
		"name": "赫章县"
	}, {
		"id": "522601",
		"parentid": "522600",
		"name": "凯里市"
	}, {
		"id": "522622",
		"parentid": "522600",
		"name": "黄平县"
	}, {
		"id": "522623",
		"parentid": "522600",
		"name": "施秉县"
	}, {
		"id": "522624",
		"parentid": "522600",
		"name": "三穗县"
	}, {
		"id": "522625",
		"parentid": "522600",
		"name": "镇远县"
	}, {
		"id": "522626",
		"parentid": "522600",
		"name": "岑巩县"
	}, {
		"id": "522627",
		"parentid": "522600",
		"name": "天柱县"
	}, {
		"id": "522628",
		"parentid": "522600",
		"name": "锦屏县"
	}, {
		"id": "522629",
		"parentid": "522600",
		"name": "剑河县"
	}, {
		"id": "522630",
		"parentid": "522600",
		"name": "台江县"
	}, {
		"id": "522631",
		"parentid": "522600",
		"name": "黎平县"
	}, {
		"id": "522632",
		"parentid": "522600",
		"name": "榕江县"
	}, {
		"id": "522633",
		"parentid": "522600",
		"name": "从江县"
	}, {
		"id": "522634",
		"parentid": "522600",
		"name": "雷山县"
	}, {
		"id": "522635",
		"parentid": "522600",
		"name": "麻江县"
	}, {
		"id": "522636",
		"parentid": "522600",
		"name": "丹寨县"
	}, {
		"id": "522701",
		"parentid": "522700",
		"name": "都匀市"
	}, {
		"id": "522702",
		"parentid": "522700",
		"name": "福泉市"
	}, {
		"id": "522722",
		"parentid": "522700",
		"name": "荔波县"
	}, {
		"id": "522723",
		"parentid": "522700",
		"name": "贵定县"
	}, {
		"id": "522725",
		"parentid": "522700",
		"name": "瓮安县"
	}, {
		"id": "522726",
		"parentid": "522700",
		"name": "独山县"
	}, {
		"id": "522727",
		"parentid": "522700",
		"name": "平塘县"
	}, {
		"id": "522728",
		"parentid": "522700",
		"name": "罗甸县"
	}, {
		"id": "522729",
		"parentid": "522700",
		"name": "长顺县"
	}, {
		"id": "522730",
		"parentid": "522700",
		"name": "龙里县"
	}, {
		"id": "522731",
		"parentid": "522700",
		"name": "惠水县"
	}, {
		"id": "522732",
		"parentid": "522700",
		"name": "三都水族自治县"
	}, {
		"id": "530102",
		"parentid": "530100",
		"name": "五华区"
	}, {
		"id": "530103",
		"parentid": "530100",
		"name": "盘龙区"
	}, {
		"id": "530111",
		"parentid": "530100",
		"name": "官渡区"
	}, {
		"id": "530112",
		"parentid": "530100",
		"name": "西山区"
	}, {
		"id": "530113",
		"parentid": "530100",
		"name": "东川区"
	}, {
		"id": "530121",
		"parentid": "530100",
		"name": "呈贡县"
	}, {
		"id": "530122",
		"parentid": "530100",
		"name": "晋宁县"
	}, {
		"id": "530124",
		"parentid": "530100",
		"name": "富民县"
	}, {
		"id": "530125",
		"parentid": "530100",
		"name": "宜良县"
	}, {
		"id": "530126",
		"parentid": "530100",
		"name": "石林彝族自治县"
	}, {
		"id": "530127",
		"parentid": "530100",
		"name": "嵩明县"
	}, {
		"id": "530128",
		"parentid": "530100",
		"name": "禄劝彝族苗族自治县"
	}, {
		"id": "530129",
		"parentid": "530100",
		"name": "寻甸回族彝族自治县"
	}, {
		"id": "530181",
		"parentid": "530100",
		"name": "安宁市"
	}, {
		"id": "530302",
		"parentid": "530300",
		"name": "麒麟区"
	}, {
		"id": "530321",
		"parentid": "530300",
		"name": "马龙县"
	}, {
		"id": "530322",
		"parentid": "530300",
		"name": "陆良县"
	}, {
		"id": "530323",
		"parentid": "530300",
		"name": "师宗县"
	}, {
		"id": "530324",
		"parentid": "530300",
		"name": "罗平县"
	}, {
		"id": "530325",
		"parentid": "530300",
		"name": "富源县"
	}, {
		"id": "530326",
		"parentid": "530300",
		"name": "会泽县"
	}, {
		"id": "530328",
		"parentid": "530300",
		"name": "沾益县"
	}, {
		"id": "530381",
		"parentid": "530300",
		"name": "宣威市"
	}, {
		"id": "530402",
		"parentid": "530400",
		"name": "红塔区"
	}, {
		"id": "530421",
		"parentid": "530400",
		"name": "江川县"
	}, {
		"id": "530422",
		"parentid": "530400",
		"name": "澄江县"
	}, {
		"id": "530423",
		"parentid": "530400",
		"name": "通海县"
	}, {
		"id": "530424",
		"parentid": "530400",
		"name": "华宁县"
	}, {
		"id": "530425",
		"parentid": "530400",
		"name": "易门县"
	}, {
		"id": "530426",
		"parentid": "530400",
		"name": "峨山彝族自治县"
	}, {
		"id": "530427",
		"parentid": "530400",
		"name": "新平彝族傣族自治县"
	}, {
		"id": "530428",
		"parentid": "530400",
		"name": "元江哈尼族彝族傣族自治县"
	}, {
		"id": "530502",
		"parentid": "530500",
		"name": "隆阳区"
	}, {
		"id": "530521",
		"parentid": "530500",
		"name": "施甸县"
	}, {
		"id": "530522",
		"parentid": "530500",
		"name": "腾冲县"
	}, {
		"id": "530523",
		"parentid": "530500",
		"name": "龙陵县"
	}, {
		"id": "530524",
		"parentid": "530500",
		"name": "昌宁县"
	}, {
		"id": "530602",
		"parentid": "530600",
		"name": "昭阳区"
	}, {
		"id": "530621",
		"parentid": "530600",
		"name": "鲁甸县"
	}, {
		"id": "530622",
		"parentid": "530600",
		"name": "巧家县"
	}, {
		"id": "530623",
		"parentid": "530600",
		"name": "盐津县"
	}, {
		"id": "530624",
		"parentid": "530600",
		"name": "大关县"
	}, {
		"id": "530625",
		"parentid": "530600",
		"name": "永善县"
	}, {
		"id": "530626",
		"parentid": "530600",
		"name": "绥江县"
	}, {
		"id": "530627",
		"parentid": "530600",
		"name": "镇雄县"
	}, {
		"id": "530628",
		"parentid": "530600",
		"name": "彝良县"
	}, {
		"id": "530629",
		"parentid": "530600",
		"name": "威信县"
	}, {
		"id": "530630",
		"parentid": "530600",
		"name": "水富县"
	}, {
		"id": "530702",
		"parentid": "530700",
		"name": "古城区"
	}, {
		"id": "530721",
		"parentid": "530700",
		"name": "玉龙纳西族自治县"
	}, {
		"id": "530722",
		"parentid": "530700",
		"name": "永胜县"
	}, {
		"id": "530723",
		"parentid": "530700",
		"name": "华坪县"
	}, {
		"id": "530724",
		"parentid": "530700",
		"name": "宁蒗彝族自治县"
	}, {
		"id": "530802",
		"parentid": "530800",
		"name": "翠云区"
	}, {
		"id": "530821",
		"parentid": "530800",
		"name": "普洱哈尼族彝族自治县"
	}, {
		"id": "530822",
		"parentid": "530800",
		"name": "墨江哈尼族自治县"
	}, {
		"id": "530823",
		"parentid": "530800",
		"name": "景东彝族自治县"
	}, {
		"id": "530824",
		"parentid": "530800",
		"name": "景谷傣族彝族自治县"
	}, {
		"id": "530825",
		"parentid": "530800",
		"name": "镇沅彝族哈尼族拉祜族自治县"
	}, {
		"id": "530826",
		"parentid": "530800",
		"name": "江城哈尼族彝族自治县"
	}, {
		"id": "530827",
		"parentid": "530800",
		"name": "孟连傣族拉祜族佤族自治县"
	}, {
		"id": "530828",
		"parentid": "530800",
		"name": "澜沧拉祜族自治县"
	}, {
		"id": "530829",
		"parentid": "530800",
		"name": "西盟佤族自治县"
	}, {
		"id": "530902",
		"parentid": "530900",
		"name": "临翔区"
	}, {
		"id": "530921",
		"parentid": "530900",
		"name": "凤庆县"
	}, {
		"id": "530922",
		"parentid": "530900",
		"name": "云　县"
	}, {
		"id": "530923",
		"parentid": "530900",
		"name": "永德县"
	}, {
		"id": "530924",
		"parentid": "530900",
		"name": "镇康县"
	}, {
		"id": "530925",
		"parentid": "530900",
		"name": "双江拉祜族佤族布朗族傣族自治县"
	}, {
		"id": "530926",
		"parentid": "530900",
		"name": "耿马傣族佤族自治县"
	}, {
		"id": "530927",
		"parentid": "530900",
		"name": "沧源佤族自治县"
	}, {
		"id": "532301",
		"parentid": "532300",
		"name": "楚雄市"
	}, {
		"id": "532322",
		"parentid": "532300",
		"name": "双柏县"
	}, {
		"id": "532323",
		"parentid": "532300",
		"name": "牟定县"
	}, {
		"id": "532324",
		"parentid": "532300",
		"name": "南华县"
	}, {
		"id": "532325",
		"parentid": "532300",
		"name": "姚安县"
	}, {
		"id": "532326",
		"parentid": "532300",
		"name": "大姚县"
	}, {
		"id": "532327",
		"parentid": "532300",
		"name": "永仁县"
	}, {
		"id": "532328",
		"parentid": "532300",
		"name": "元谋县"
	}, {
		"id": "532329",
		"parentid": "532300",
		"name": "武定县"
	}, {
		"id": "532331",
		"parentid": "532300",
		"name": "禄丰县"
	}, {
		"id": "532501",
		"parentid": "532500",
		"name": "个旧市"
	}, {
		"id": "532502",
		"parentid": "532500",
		"name": "开远市"
	}, {
		"id": "532522",
		"parentid": "532500",
		"name": "蒙自县"
	}, {
		"id": "532523",
		"parentid": "532500",
		"name": "屏边苗族自治县"
	}, {
		"id": "532524",
		"parentid": "532500",
		"name": "建水县"
	}, {
		"id": "532525",
		"parentid": "532500",
		"name": "石屏县"
	}, {
		"id": "532526",
		"parentid": "532500",
		"name": "弥勒县"
	}, {
		"id": "532527",
		"parentid": "532500",
		"name": "泸西县"
	}, {
		"id": "532528",
		"parentid": "532500",
		"name": "元阳县"
	}, {
		"id": "532529",
		"parentid": "532500",
		"name": "红河县"
	}, {
		"id": "532530",
		"parentid": "532500",
		"name": "金平苗族瑶族傣族自治县"
	}, {
		"id": "532531",
		"parentid": "532500",
		"name": "绿春县"
	}, {
		"id": "532532",
		"parentid": "532500",
		"name": "河口瑶族自治县"
	}, {
		"id": "532621",
		"parentid": "532600",
		"name": "文山县"
	}, {
		"id": "532622",
		"parentid": "532600",
		"name": "砚山县"
	}, {
		"id": "532623",
		"parentid": "532600",
		"name": "西畴县"
	}, {
		"id": "532624",
		"parentid": "532600",
		"name": "麻栗坡县"
	}, {
		"id": "532625",
		"parentid": "532600",
		"name": "马关县"
	}, {
		"id": "532626",
		"parentid": "532600",
		"name": "丘北县"
	}, {
		"id": "532627",
		"parentid": "532600",
		"name": "广南县"
	}, {
		"id": "532628",
		"parentid": "532600",
		"name": "富宁县"
	}, {
		"id": "532801",
		"parentid": "532800",
		"name": "景洪市"
	}, {
		"id": "532822",
		"parentid": "532800",
		"name": "勐海县"
	}, {
		"id": "532823",
		"parentid": "532800",
		"name": "勐腊县"
	}, {
		"id": "532901",
		"parentid": "532900",
		"name": "大理市"
	}, {
		"id": "532922",
		"parentid": "532900",
		"name": "漾濞彝族自治县"
	}, {
		"id": "532923",
		"parentid": "532900",
		"name": "祥云县"
	}, {
		"id": "532924",
		"parentid": "532900",
		"name": "宾川县"
	}, {
		"id": "532925",
		"parentid": "532900",
		"name": "弥渡县"
	}, {
		"id": "532926",
		"parentid": "532900",
		"name": "南涧彝族自治县"
	}, {
		"id": "532927",
		"parentid": "532900",
		"name": "巍山彝族回族自治县"
	}, {
		"id": "532928",
		"parentid": "532900",
		"name": "永平县"
	}, {
		"id": "532929",
		"parentid": "532900",
		"name": "云龙县"
	}, {
		"id": "532930",
		"parentid": "532900",
		"name": "洱源县"
	}, {
		"id": "532931",
		"parentid": "532900",
		"name": "剑川县"
	}, {
		"id": "532932",
		"parentid": "532900",
		"name": "鹤庆县"
	}, {
		"id": "533102",
		"parentid": "533100",
		"name": "瑞丽市"
	}, {
		"id": "533103",
		"parentid": "533100",
		"name": "潞西市"
	}, {
		"id": "533122",
		"parentid": "533100",
		"name": "梁河县"
	}, {
		"id": "533123",
		"parentid": "533100",
		"name": "盈江县"
	}, {
		"id": "533124",
		"parentid": "533100",
		"name": "陇川县"
	}, {
		"id": "533321",
		"parentid": "533300",
		"name": "泸水县"
	}, {
		"id": "533323",
		"parentid": "533300",
		"name": "福贡县"
	}, {
		"id": "533324",
		"parentid": "533300",
		"name": "贡山独龙族怒族自治县"
	}, {
		"id": "533325",
		"parentid": "533300",
		"name": "兰坪白族普米族自治县"
	}, {
		"id": "533421",
		"parentid": "533400",
		"name": "香格里拉县"
	}, {
		"id": "533422",
		"parentid": "533400",
		"name": "德钦县"
	}, {
		"id": "533423",
		"parentid": "533400",
		"name": "维西傈僳族自治县"
	}, {
		"id": "540102",
		"parentid": "540100",
		"name": "城关区"
	}, {
		"id": "540121",
		"parentid": "540100",
		"name": "林周县"
	}, {
		"id": "540122",
		"parentid": "540100",
		"name": "当雄县"
	}, {
		"id": "540123",
		"parentid": "540100",
		"name": "尼木县"
	}, {
		"id": "540124",
		"parentid": "540100",
		"name": "曲水县"
	}, {
		"id": "540125",
		"parentid": "540100",
		"name": "堆龙德庆县"
	}, {
		"id": "540126",
		"parentid": "540100",
		"name": "达孜县"
	}, {
		"id": "540127",
		"parentid": "540100",
		"name": "墨竹工卡县"
	}, {
		"id": "542121",
		"parentid": "542100",
		"name": "昌都县"
	}, {
		"id": "542122",
		"parentid": "542100",
		"name": "江达县"
	}, {
		"id": "542123",
		"parentid": "542100",
		"name": "贡觉县"
	}, {
		"id": "542124",
		"parentid": "542100",
		"name": "类乌齐县"
	}, {
		"id": "542125",
		"parentid": "542100",
		"name": "丁青县"
	}, {
		"id": "542126",
		"parentid": "542100",
		"name": "察雅县"
	}, {
		"id": "542127",
		"parentid": "542100",
		"name": "八宿县"
	}, {
		"id": "542128",
		"parentid": "542100",
		"name": "左贡县"
	}, {
		"id": "542129",
		"parentid": "542100",
		"name": "芒康县"
	}, {
		"id": "542132",
		"parentid": "542100",
		"name": "洛隆县"
	}, {
		"id": "542133",
		"parentid": "542100",
		"name": "边坝县"
	}, {
		"id": "542221",
		"parentid": "542200",
		"name": "乃东县"
	}, {
		"id": "542222",
		"parentid": "542200",
		"name": "扎囊县"
	}, {
		"id": "542223",
		"parentid": "542200",
		"name": "贡嘎县"
	}, {
		"id": "542224",
		"parentid": "542200",
		"name": "桑日县"
	}, {
		"id": "542225",
		"parentid": "542200",
		"name": "琼结县"
	}, {
		"id": "542226",
		"parentid": "542200",
		"name": "曲松县"
	}, {
		"id": "542227",
		"parentid": "542200",
		"name": "措美县"
	}, {
		"id": "542228",
		"parentid": "542200",
		"name": "洛扎县"
	}, {
		"id": "542229",
		"parentid": "542200",
		"name": "加查县"
	}, {
		"id": "542231",
		"parentid": "542200",
		"name": "隆子县"
	}, {
		"id": "542232",
		"parentid": "542200",
		"name": "错那县"
	}, {
		"id": "542233",
		"parentid": "542200",
		"name": "浪卡子县"
	}, {
		"id": "542301",
		"parentid": "542300",
		"name": "日喀则市"
	}, {
		"id": "542322",
		"parentid": "542300",
		"name": "南木林县"
	}, {
		"id": "542323",
		"parentid": "542300",
		"name": "江孜县"
	}, {
		"id": "542324",
		"parentid": "542300",
		"name": "定日县"
	}, {
		"id": "542325",
		"parentid": "542300",
		"name": "萨迦县"
	}, {
		"id": "542326",
		"parentid": "542300",
		"name": "拉孜县"
	}, {
		"id": "542327",
		"parentid": "542300",
		"name": "昂仁县"
	}, {
		"id": "542328",
		"parentid": "542300",
		"name": "谢通门县"
	}, {
		"id": "542329",
		"parentid": "542300",
		"name": "白朗县"
	}, {
		"id": "542330",
		"parentid": "542300",
		"name": "仁布县"
	}, {
		"id": "542331",
		"parentid": "542300",
		"name": "康马县"
	}, {
		"id": "542332",
		"parentid": "542300",
		"name": "定结县"
	}, {
		"id": "542333",
		"parentid": "542300",
		"name": "仲巴县"
	}, {
		"id": "542334",
		"parentid": "542300",
		"name": "亚东县"
	}, {
		"id": "542335",
		"parentid": "542300",
		"name": "吉隆县"
	}, {
		"id": "542336",
		"parentid": "542300",
		"name": "聂拉木县"
	}, {
		"id": "542337",
		"parentid": "542300",
		"name": "萨嘎县"
	}, {
		"id": "542338",
		"parentid": "542300",
		"name": "岗巴县"
	}, {
		"id": "542421",
		"parentid": "542400",
		"name": "那曲县"
	}, {
		"id": "542422",
		"parentid": "542400",
		"name": "嘉黎县"
	}, {
		"id": "542423",
		"parentid": "542400",
		"name": "比如县"
	}, {
		"id": "542424",
		"parentid": "542400",
		"name": "聂荣县"
	}, {
		"id": "542425",
		"parentid": "542400",
		"name": "安多县"
	}, {
		"id": "542426",
		"parentid": "542400",
		"name": "申扎县"
	}, {
		"id": "542427",
		"parentid": "542400",
		"name": "索　县"
	}, {
		"id": "542428",
		"parentid": "542400",
		"name": "班戈县"
	}, {
		"id": "542429",
		"parentid": "542400",
		"name": "巴青县"
	}, {
		"id": "542430",
		"parentid": "542400",
		"name": "尼玛县"
	}, {
		"id": "542521",
		"parentid": "542500",
		"name": "普兰县"
	}, {
		"id": "542522",
		"parentid": "542500",
		"name": "札达县"
	}, {
		"id": "542523",
		"parentid": "542500",
		"name": "噶尔县"
	}, {
		"id": "542524",
		"parentid": "542500",
		"name": "日土县"
	}, {
		"id": "542525",
		"parentid": "542500",
		"name": "革吉县"
	}, {
		"id": "542526",
		"parentid": "542500",
		"name": "改则县"
	}, {
		"id": "542527",
		"parentid": "542500",
		"name": "措勤县"
	}, {
		"id": "542621",
		"parentid": "542600",
		"name": "林芝县"
	}, {
		"id": "542622",
		"parentid": "542600",
		"name": "工布江达县"
	}, {
		"id": "542623",
		"parentid": "542600",
		"name": "米林县"
	}, {
		"id": "542624",
		"parentid": "542600",
		"name": "墨脱县"
	}, {
		"id": "542625",
		"parentid": "542600",
		"name": "波密县"
	}, {
		"id": "542626",
		"parentid": "542600",
		"name": "察隅县"
	}, {
		"id": "542627",
		"parentid": "542600",
		"name": "朗　县"
	}, {
		"id": "610102",
		"parentid": "610100",
		"name": "新城区"
	}, {
		"id": "610103",
		"parentid": "610100",
		"name": "碑林区"
	}, {
		"id": "610104",
		"parentid": "610100",
		"name": "莲湖区"
	}, {
		"id": "610111",
		"parentid": "610100",
		"name": "灞桥区"
	}, {
		"id": "610112",
		"parentid": "610100",
		"name": "未央区"
	}, {
		"id": "610113",
		"parentid": "610100",
		"name": "雁塔区"
	}, {
		"id": "610114",
		"parentid": "610100",
		"name": "阎良区"
	}, {
		"id": "610115",
		"parentid": "610100",
		"name": "临潼区"
	}, {
		"id": "610116",
		"parentid": "610100",
		"name": "长安区"
	}, {
		"id": "610122",
		"parentid": "610100",
		"name": "蓝田县"
	}, {
		"id": "610124",
		"parentid": "610100",
		"name": "周至县"
	}, {
		"id": "610125",
		"parentid": "610100",
		"name": "户　县"
	}, {
		"id": "610126",
		"parentid": "610100",
		"name": "高陵县"
	}, {
		"id": "610202",
		"parentid": "610200",
		"name": "王益区"
	}, {
		"id": "610203",
		"parentid": "610200",
		"name": "印台区"
	}, {
		"id": "610204",
		"parentid": "610200",
		"name": "耀州区"
	}, {
		"id": "610222",
		"parentid": "610200",
		"name": "宜君县"
	}, {
		"id": "610302",
		"parentid": "610300",
		"name": "渭滨区"
	}, {
		"id": "610303",
		"parentid": "610300",
		"name": "金台区"
	}, {
		"id": "610304",
		"parentid": "610300",
		"name": "陈仓区"
	}, {
		"id": "610322",
		"parentid": "610300",
		"name": "凤翔县"
	}, {
		"id": "610323",
		"parentid": "610300",
		"name": "岐山县"
	}, {
		"id": "610324",
		"parentid": "610300",
		"name": "扶风县"
	}, {
		"id": "610326",
		"parentid": "610300",
		"name": "眉　县"
	}, {
		"id": "610327",
		"parentid": "610300",
		"name": "陇　县"
	}, {
		"id": "610328",
		"parentid": "610300",
		"name": "千阳县"
	}, {
		"id": "610329",
		"parentid": "610300",
		"name": "麟游县"
	}, {
		"id": "610330",
		"parentid": "610300",
		"name": "凤　县"
	}, {
		"id": "610331",
		"parentid": "610300",
		"name": "太白县"
	}, {
		"id": "610402",
		"parentid": "610400",
		"name": "秦都区"
	}, {
		"id": "610403",
		"parentid": "610400",
		"name": "杨凌区"
	}, {
		"id": "610404",
		"parentid": "610400",
		"name": "渭城区"
	}, {
		"id": "610422",
		"parentid": "610400",
		"name": "三原县"
	}, {
		"id": "610423",
		"parentid": "610400",
		"name": "泾阳县"
	}, {
		"id": "610424",
		"parentid": "610400",
		"name": "乾　县"
	}, {
		"id": "610425",
		"parentid": "610400",
		"name": "礼泉县"
	}, {
		"id": "610426",
		"parentid": "610400",
		"name": "永寿县"
	}, {
		"id": "610427",
		"parentid": "610400",
		"name": "彬　县"
	}, {
		"id": "610428",
		"parentid": "610400",
		"name": "长武县"
	}, {
		"id": "610429",
		"parentid": "610400",
		"name": "旬邑县"
	}, {
		"id": "610430",
		"parentid": "610400",
		"name": "淳化县"
	}, {
		"id": "610431",
		"parentid": "610400",
		"name": "武功县"
	}, {
		"id": "610481",
		"parentid": "610400",
		"name": "兴平市"
	}, {
		"id": "610502",
		"parentid": "610500",
		"name": "临渭区"
	}, {
		"id": "610521",
		"parentid": "610500",
		"name": "华　县"
	}, {
		"id": "610522",
		"parentid": "610500",
		"name": "潼关县"
	}, {
		"id": "610523",
		"parentid": "610500",
		"name": "大荔县"
	}, {
		"id": "610524",
		"parentid": "610500",
		"name": "合阳县"
	}, {
		"id": "610525",
		"parentid": "610500",
		"name": "澄城县"
	}, {
		"id": "610526",
		"parentid": "610500",
		"name": "蒲城县"
	}, {
		"id": "610527",
		"parentid": "610500",
		"name": "白水县"
	}, {
		"id": "610528",
		"parentid": "610500",
		"name": "富平县"
	}, {
		"id": "610581",
		"parentid": "610500",
		"name": "韩城市"
	}, {
		"id": "610582",
		"parentid": "610500",
		"name": "华阴市"
	}, {
		"id": "610602",
		"parentid": "610600",
		"name": "宝塔区"
	}, {
		"id": "610621",
		"parentid": "610600",
		"name": "延长县"
	}, {
		"id": "610622",
		"parentid": "610600",
		"name": "延川县"
	}, {
		"id": "610623",
		"parentid": "610600",
		"name": "子长县"
	}, {
		"id": "610624",
		"parentid": "610600",
		"name": "安塞县"
	}, {
		"id": "610625",
		"parentid": "610600",
		"name": "志丹县"
	}, {
		"id": "610626",
		"parentid": "610600",
		"name": "吴旗县"
	}, {
		"id": "610627",
		"parentid": "610600",
		"name": "甘泉县"
	}, {
		"id": "610628",
		"parentid": "610600",
		"name": "富　县"
	}, {
		"id": "610629",
		"parentid": "610600",
		"name": "洛川县"
	}, {
		"id": "610630",
		"parentid": "610600",
		"name": "宜川县"
	}, {
		"id": "610631",
		"parentid": "610600",
		"name": "黄龙县"
	}, {
		"id": "610632",
		"parentid": "610600",
		"name": "黄陵县"
	}, {
		"id": "610702",
		"parentid": "610700",
		"name": "汉台区"
	}, {
		"id": "610721",
		"parentid": "610700",
		"name": "南郑县"
	}, {
		"id": "610722",
		"parentid": "610700",
		"name": "城固县"
	}, {
		"id": "610723",
		"parentid": "610700",
		"name": "洋　县"
	}, {
		"id": "610724",
		"parentid": "610700",
		"name": "西乡县"
	}, {
		"id": "610725",
		"parentid": "610700",
		"name": "勉　县"
	}, {
		"id": "610726",
		"parentid": "610700",
		"name": "宁强县"
	}, {
		"id": "610727",
		"parentid": "610700",
		"name": "略阳县"
	}, {
		"id": "610728",
		"parentid": "610700",
		"name": "镇巴县"
	}, {
		"id": "610729",
		"parentid": "610700",
		"name": "留坝县"
	}, {
		"id": "610730",
		"parentid": "610700",
		"name": "佛坪县"
	}, {
		"id": "610802",
		"parentid": "610800",
		"name": "榆阳区"
	}, {
		"id": "610821",
		"parentid": "610800",
		"name": "神木县"
	}, {
		"id": "610822",
		"parentid": "610800",
		"name": "府谷县"
	}, {
		"id": "610823",
		"parentid": "610800",
		"name": "横山县"
	}, {
		"id": "610824",
		"parentid": "610800",
		"name": "靖边县"
	}, {
		"id": "610825",
		"parentid": "610800",
		"name": "定边县"
	}, {
		"id": "610826",
		"parentid": "610800",
		"name": "绥德县"
	}, {
		"id": "610827",
		"parentid": "610800",
		"name": "米脂县"
	}, {
		"id": "610828",
		"parentid": "610800",
		"name": "佳　县"
	}, {
		"id": "610829",
		"parentid": "610800",
		"name": "吴堡县"
	}, {
		"id": "610830",
		"parentid": "610800",
		"name": "清涧县"
	}, {
		"id": "610831",
		"parentid": "610800",
		"name": "子洲县"
	}, {
		"id": "610902",
		"parentid": "610900",
		"name": "汉滨区"
	}, {
		"id": "610921",
		"parentid": "610900",
		"name": "汉阴县"
	}, {
		"id": "610922",
		"parentid": "610900",
		"name": "石泉县"
	}, {
		"id": "610923",
		"parentid": "610900",
		"name": "宁陕县"
	}, {
		"id": "610924",
		"parentid": "610900",
		"name": "紫阳县"
	}, {
		"id": "610925",
		"parentid": "610900",
		"name": "岚皋县"
	}, {
		"id": "610926",
		"parentid": "610900",
		"name": "平利县"
	}, {
		"id": "610927",
		"parentid": "610900",
		"name": "镇坪县"
	}, {
		"id": "610928",
		"parentid": "610900",
		"name": "旬阳县"
	}, {
		"id": "610929",
		"parentid": "610900",
		"name": "白河县"
	}, {
		"id": "611002",
		"parentid": "611000",
		"name": "商州区"
	}, {
		"id": "611021",
		"parentid": "611000",
		"name": "洛南县"
	}, {
		"id": "611022",
		"parentid": "611000",
		"name": "丹凤县"
	}, {
		"id": "611023",
		"parentid": "611000",
		"name": "商南县"
	}, {
		"id": "611024",
		"parentid": "611000",
		"name": "山阳县"
	}, {
		"id": "611025",
		"parentid": "611000",
		"name": "镇安县"
	}, {
		"id": "611026",
		"parentid": "611000",
		"name": "柞水县"
	}, {
		"id": "620102",
		"parentid": "620100",
		"name": "城关区"
	}, {
		"id": "620103",
		"parentid": "620100",
		"name": "七里河区"
	}, {
		"id": "620104",
		"parentid": "620100",
		"name": "西固区"
	}, {
		"id": "620105",
		"parentid": "620100",
		"name": "安宁区"
	}, {
		"id": "620111",
		"parentid": "620100",
		"name": "红古区"
	}, {
		"id": "620121",
		"parentid": "620100",
		"name": "永登县"
	}, {
		"id": "620122",
		"parentid": "620100",
		"name": "皋兰县"
	}, {
		"id": "620123",
		"parentid": "620100",
		"name": "榆中县"
	}, {
		"id": "620302",
		"parentid": "620300",
		"name": "金川区"
	}, {
		"id": "620321",
		"parentid": "620300",
		"name": "永昌县"
	}, {
		"id": "620402",
		"parentid": "620400",
		"name": "白银区"
	}, {
		"id": "620403",
		"parentid": "620400",
		"name": "平川区"
	}, {
		"id": "620421",
		"parentid": "620400",
		"name": "靖远县"
	}, {
		"id": "620422",
		"parentid": "620400",
		"name": "会宁县"
	}, {
		"id": "620423",
		"parentid": "620400",
		"name": "景泰县"
	}, {
		"id": "620502",
		"parentid": "620500",
		"name": "秦城区"
	}, {
		"id": "620503",
		"parentid": "620500",
		"name": "北道区"
	}, {
		"id": "620521",
		"parentid": "620500",
		"name": "清水县"
	}, {
		"id": "620522",
		"parentid": "620500",
		"name": "秦安县"
	}, {
		"id": "620523",
		"parentid": "620500",
		"name": "甘谷县"
	}, {
		"id": "620524",
		"parentid": "620500",
		"name": "武山县"
	}, {
		"id": "620525",
		"parentid": "620500",
		"name": "张家川回族自治县"
	}, {
		"id": "620602",
		"parentid": "620600",
		"name": "凉州区"
	}, {
		"id": "620621",
		"parentid": "620600",
		"name": "民勤县"
	}, {
		"id": "620622",
		"parentid": "620600",
		"name": "古浪县"
	}, {
		"id": "620623",
		"parentid": "620600",
		"name": "天祝藏族自治县"
	}, {
		"id": "620702",
		"parentid": "620700",
		"name": "甘州区"
	}, {
		"id": "620721",
		"parentid": "620700",
		"name": "肃南裕固族自治县"
	}, {
		"id": "620722",
		"parentid": "620700",
		"name": "民乐县"
	}, {
		"id": "620723",
		"parentid": "620700",
		"name": "临泽县"
	}, {
		"id": "620724",
		"parentid": "620700",
		"name": "高台县"
	}, {
		"id": "620725",
		"parentid": "620700",
		"name": "山丹县"
	}, {
		"id": "620802",
		"parentid": "620800",
		"name": "崆峒区"
	}, {
		"id": "620821",
		"parentid": "620800",
		"name": "泾川县"
	}, {
		"id": "620822",
		"parentid": "620800",
		"name": "灵台县"
	}, {
		"id": "620823",
		"parentid": "620800",
		"name": "崇信县"
	}, {
		"id": "620824",
		"parentid": "620800",
		"name": "华亭县"
	}, {
		"id": "620825",
		"parentid": "620800",
		"name": "庄浪县"
	}, {
		"id": "620826",
		"parentid": "620800",
		"name": "静宁县"
	}, {
		"id": "620902",
		"parentid": "620900",
		"name": "肃州区"
	}, {
		"id": "620921",
		"parentid": "620900",
		"name": "金塔县"
	}, {
		"id": "620922",
		"parentid": "620900",
		"name": "安西县"
	}, {
		"id": "620923",
		"parentid": "620900",
		"name": "肃北蒙古族自治县"
	}, {
		"id": "620924",
		"parentid": "620900",
		"name": "阿克塞哈萨克族自治县"
	}, {
		"id": "620981",
		"parentid": "620900",
		"name": "玉门市"
	}, {
		"id": "620982",
		"parentid": "620900",
		"name": "敦煌市"
	}, {
		"id": "621002",
		"parentid": "621000",
		"name": "西峰区"
	}, {
		"id": "621021",
		"parentid": "621000",
		"name": "庆城县"
	}, {
		"id": "621022",
		"parentid": "621000",
		"name": "环　县"
	}, {
		"id": "621023",
		"parentid": "621000",
		"name": "华池县"
	}, {
		"id": "621024",
		"parentid": "621000",
		"name": "合水县"
	}, {
		"id": "621025",
		"parentid": "621000",
		"name": "正宁县"
	}, {
		"id": "621026",
		"parentid": "621000",
		"name": "宁　县"
	}, {
		"id": "621027",
		"parentid": "621000",
		"name": "镇原县"
	}, {
		"id": "621102",
		"parentid": "621100",
		"name": "安定区"
	}, {
		"id": "621121",
		"parentid": "621100",
		"name": "通渭县"
	}, {
		"id": "621122",
		"parentid": "621100",
		"name": "陇西县"
	}, {
		"id": "621123",
		"parentid": "621100",
		"name": "渭源县"
	}, {
		"id": "621124",
		"parentid": "621100",
		"name": "临洮县"
	}, {
		"id": "621125",
		"parentid": "621100",
		"name": "漳　县"
	}, {
		"id": "621126",
		"parentid": "621100",
		"name": "岷　县"
	}, {
		"id": "621202",
		"parentid": "621200",
		"name": "武都区"
	}, {
		"id": "621221",
		"parentid": "621200",
		"name": "成　县"
	}, {
		"id": "621222",
		"parentid": "621200",
		"name": "文　县"
	}, {
		"id": "621223",
		"parentid": "621200",
		"name": "宕昌县"
	}, {
		"id": "621224",
		"parentid": "621200",
		"name": "康　县"
	}, {
		"id": "621225",
		"parentid": "621200",
		"name": "西和县"
	}, {
		"id": "621226",
		"parentid": "621200",
		"name": "礼　县"
	}, {
		"id": "621227",
		"parentid": "621200",
		"name": "徽　县"
	}, {
		"id": "621228",
		"parentid": "621200",
		"name": "两当县"
	}, {
		"id": "622901",
		"parentid": "622900",
		"name": "临夏市"
	}, {
		"id": "622921",
		"parentid": "622900",
		"name": "临夏县"
	}, {
		"id": "622922",
		"parentid": "622900",
		"name": "康乐县"
	}, {
		"id": "622923",
		"parentid": "622900",
		"name": "永靖县"
	}, {
		"id": "622924",
		"parentid": "622900",
		"name": "广河县"
	}, {
		"id": "622925",
		"parentid": "622900",
		"name": "和政县"
	}, {
		"id": "622926",
		"parentid": "622900",
		"name": "东乡族自治县"
	}, {
		"id": "622927",
		"parentid": "622900",
		"name": "积石山保安族东乡族撒拉族自治县"
	}, {
		"id": "623001",
		"parentid": "623000",
		"name": "合作市"
	}, {
		"id": "623021",
		"parentid": "623000",
		"name": "临潭县"
	}, {
		"id": "623022",
		"parentid": "623000",
		"name": "卓尼县"
	}, {
		"id": "623023",
		"parentid": "623000",
		"name": "舟曲县"
	}, {
		"id": "623024",
		"parentid": "623000",
		"name": "迭部县"
	}, {
		"id": "623025",
		"parentid": "623000",
		"name": "玛曲县"
	}, {
		"id": "623026",
		"parentid": "623000",
		"name": "碌曲县"
	}, {
		"id": "623027",
		"parentid": "623000",
		"name": "夏河县"
	}, {
		"id": "630102",
		"parentid": "630100",
		"name": "城东区"
	}, {
		"id": "630103",
		"parentid": "630100",
		"name": "城中区"
	}, {
		"id": "630104",
		"parentid": "630100",
		"name": "城西区"
	}, {
		"id": "630105",
		"parentid": "630100",
		"name": "城北区"
	}, {
		"id": "630121",
		"parentid": "630100",
		"name": "大通回族土族自治县"
	}, {
		"id": "630122",
		"parentid": "630100",
		"name": "湟中县"
	}, {
		"id": "630123",
		"parentid": "630100",
		"name": "湟源县"
	}, {
		"id": "632121",
		"parentid": "632100",
		"name": "平安县"
	}, {
		"id": "632122",
		"parentid": "632100",
		"name": "民和回族土族自治县"
	}, {
		"id": "632123",
		"parentid": "632100",
		"name": "乐都县"
	}, {
		"id": "632126",
		"parentid": "632100",
		"name": "互助土族自治县"
	}, {
		"id": "632127",
		"parentid": "632100",
		"name": "化隆回族自治县"
	}, {
		"id": "632128",
		"parentid": "632100",
		"name": "循化撒拉族自治县"
	}, {
		"id": "632221",
		"parentid": "632200",
		"name": "门源回族自治县"
	}, {
		"id": "632222",
		"parentid": "632200",
		"name": "祁连县"
	}, {
		"id": "632223",
		"parentid": "632200",
		"name": "海晏县"
	}, {
		"id": "632224",
		"parentid": "632200",
		"name": "刚察县"
	}, {
		"id": "632321",
		"parentid": "632300",
		"name": "同仁县"
	}, {
		"id": "632322",
		"parentid": "632300",
		"name": "尖扎县"
	}, {
		"id": "632323",
		"parentid": "632300",
		"name": "泽库县"
	}, {
		"id": "632324",
		"parentid": "632300",
		"name": "河南蒙古族自治县"
	}, {
		"id": "632521",
		"parentid": "632500",
		"name": "共和县"
	}, {
		"id": "632522",
		"parentid": "632500",
		"name": "同德县"
	}, {
		"id": "632523",
		"parentid": "632500",
		"name": "贵德县"
	}, {
		"id": "632524",
		"parentid": "632500",
		"name": "兴海县"
	}, {
		"id": "632525",
		"parentid": "632500",
		"name": "贵南县"
	}, {
		"id": "632621",
		"parentid": "632600",
		"name": "玛沁县"
	}, {
		"id": "632622",
		"parentid": "632600",
		"name": "班玛县"
	}, {
		"id": "632623",
		"parentid": "632600",
		"name": "甘德县"
	}, {
		"id": "632624",
		"parentid": "632600",
		"name": "达日县"
	}, {
		"id": "632625",
		"parentid": "632600",
		"name": "久治县"
	}, {
		"id": "632626",
		"parentid": "632600",
		"name": "玛多县"
	}, {
		"id": "632721",
		"parentid": "632700",
		"name": "玉树县"
	}, {
		"id": "632722",
		"parentid": "632700",
		"name": "杂多县"
	}, {
		"id": "632723",
		"parentid": "632700",
		"name": "称多县"
	}, {
		"id": "632724",
		"parentid": "632700",
		"name": "治多县"
	}, {
		"id": "632725",
		"parentid": "632700",
		"name": "囊谦县"
	}, {
		"id": "632726",
		"parentid": "632700",
		"name": "曲麻莱县"
	}, {
		"id": "632801",
		"parentid": "632800",
		"name": "格尔木市"
	}, {
		"id": "632802",
		"parentid": "632800",
		"name": "德令哈市"
	}, {
		"id": "632821",
		"parentid": "632800",
		"name": "乌兰县"
	}, {
		"id": "632822",
		"parentid": "632800",
		"name": "都兰县"
	}, {
		"id": "632823",
		"parentid": "632800",
		"name": "天峻县"
	}, {
		"id": "640104",
		"parentid": "640100",
		"name": "兴庆区"
	}, {
		"id": "640105",
		"parentid": "640100",
		"name": "西夏区"
	}, {
		"id": "640106",
		"parentid": "640100",
		"name": "金凤区"
	}, {
		"id": "640121",
		"parentid": "640100",
		"name": "永宁县"
	}, {
		"id": "640122",
		"parentid": "640100",
		"name": "贺兰县"
	}, {
		"id": "640181",
		"parentid": "640100",
		"name": "灵武市"
	}, {
		"id": "640202",
		"parentid": "640200",
		"name": "大武口区"
	}, {
		"id": "640205",
		"parentid": "640200",
		"name": "惠农区"
	}, {
		"id": "640221",
		"parentid": "640200",
		"name": "平罗县"
	}, {
		"id": "640302",
		"parentid": "640300",
		"name": "利通区"
	}, {
		"id": "640323",
		"parentid": "640300",
		"name": "盐池县"
	}, {
		"id": "640324",
		"parentid": "640300",
		"name": "同心县"
	}, {
		"id": "640381",
		"parentid": "640300",
		"name": "青铜峡市"
	}, {
		"id": "640402",
		"parentid": "640400",
		"name": "原州区"
	}, {
		"id": "640422",
		"parentid": "640400",
		"name": "西吉县"
	}, {
		"id": "640423",
		"parentid": "640400",
		"name": "隆德县"
	}, {
		"id": "640424",
		"parentid": "640400",
		"name": "泾源县"
	}, {
		"id": "640425",
		"parentid": "640400",
		"name": "彭阳县"
	}, {
		"id": "640502",
		"parentid": "640500",
		"name": "沙坡头区"
	}, {
		"id": "640521",
		"parentid": "640500",
		"name": "中宁县"
	}, {
		"id": "640522",
		"parentid": "640500",
		"name": "海原县"
	}, {
		"id": "650102",
		"parentid": "650100",
		"name": "天山区"
	}, {
		"id": "650103",
		"parentid": "650100",
		"name": "沙依巴克区"
	}, {
		"id": "650104",
		"parentid": "650100",
		"name": "新市区"
	}, {
		"id": "650105",
		"parentid": "650100",
		"name": "水磨沟区"
	}, {
		"id": "650106",
		"parentid": "650100",
		"name": "头屯河区"
	}, {
		"id": "650107",
		"parentid": "650100",
		"name": "达坂城区"
	}, {
		"id": "650108",
		"parentid": "650100",
		"name": "东山区"
	}, {
		"id": "650121",
		"parentid": "650100",
		"name": "乌鲁木齐县"
	}, {
		"id": "650202",
		"parentid": "650200",
		"name": "独山子区"
	}, {
		"id": "650203",
		"parentid": "650200",
		"name": "克拉玛依区"
	}, {
		"id": "650204",
		"parentid": "650200",
		"name": "白碱滩区"
	}, {
		"id": "650205",
		"parentid": "650200",
		"name": "乌尔禾区"
	}, {
		"id": "652101",
		"parentid": "652100",
		"name": "吐鲁番市"
	}, {
		"id": "652122",
		"parentid": "652100",
		"name": "鄯善县"
	}, {
		"id": "652123",
		"parentid": "652100",
		"name": "托克逊县"
	}, {
		"id": "652201",
		"parentid": "652200",
		"name": "哈密市"
	}, {
		"id": "652222",
		"parentid": "652200",
		"name": "巴里坤哈萨克自治县"
	}, {
		"id": "652223",
		"parentid": "652200",
		"name": "伊吾县"
	}, {
		"id": "652301",
		"parentid": "652300",
		"name": "昌吉市"
	}, {
		"id": "652302",
		"parentid": "652300",
		"name": "阜康市"
	}, {
		"id": "652303",
		"parentid": "652300",
		"name": "米泉市"
	}, {
		"id": "652323",
		"parentid": "652300",
		"name": "呼图壁县"
	}, {
		"id": "652324",
		"parentid": "652300",
		"name": "玛纳斯县"
	}, {
		"id": "652325",
		"parentid": "652300",
		"name": "奇台县"
	}, {
		"id": "652327",
		"parentid": "652300",
		"name": "吉木萨尔县"
	}, {
		"id": "652328",
		"parentid": "652300",
		"name": "木垒哈萨克自治县"
	}, {
		"id": "652701",
		"parentid": "652700",
		"name": "博乐市"
	}, {
		"id": "652722",
		"parentid": "652700",
		"name": "精河县"
	}, {
		"id": "652723",
		"parentid": "652700",
		"name": "温泉县"
	}, {
		"id": "652801",
		"parentid": "652800",
		"name": "库尔勒市"
	}, {
		"id": "652822",
		"parentid": "652800",
		"name": "轮台县"
	}, {
		"id": "652823",
		"parentid": "652800",
		"name": "尉犁县"
	}, {
		"id": "652824",
		"parentid": "652800",
		"name": "若羌县"
	}, {
		"id": "652825",
		"parentid": "652800",
		"name": "且末县"
	}, {
		"id": "652826",
		"parentid": "652800",
		"name": "焉耆回族自治县"
	}, {
		"id": "652827",
		"parentid": "652800",
		"name": "和静县"
	}, {
		"id": "652828",
		"parentid": "652800",
		"name": "和硕县"
	}, {
		"id": "652829",
		"parentid": "652800",
		"name": "博湖县"
	}, {
		"id": "652901",
		"parentid": "652900",
		"name": "阿克苏市"
	}, {
		"id": "652922",
		"parentid": "652900",
		"name": "温宿县"
	}, {
		"id": "652923",
		"parentid": "652900",
		"name": "库车县"
	}, {
		"id": "652924",
		"parentid": "652900",
		"name": "沙雅县"
	}, {
		"id": "652925",
		"parentid": "652900",
		"name": "新和县"
	}, {
		"id": "652926",
		"parentid": "652900",
		"name": "拜城县"
	}, {
		"id": "652927",
		"parentid": "652900",
		"name": "乌什县"
	}, {
		"id": "652928",
		"parentid": "652900",
		"name": "阿瓦提县"
	}, {
		"id": "652929",
		"parentid": "652900",
		"name": "柯坪县"
	}, {
		"id": "653001",
		"parentid": "653000",
		"name": "阿图什市"
	}, {
		"id": "653022",
		"parentid": "653000",
		"name": "阿克陶县"
	}, {
		"id": "653023",
		"parentid": "653000",
		"name": "阿合奇县"
	}, {
		"id": "653024",
		"parentid": "653000",
		"name": "乌恰县"
	}, {
		"id": "653101",
		"parentid": "653100",
		"name": "喀什市"
	}, {
		"id": "653121",
		"parentid": "653100",
		"name": "疏附县"
	}, {
		"id": "653122",
		"parentid": "653100",
		"name": "疏勒县"
	}, {
		"id": "653123",
		"parentid": "653100",
		"name": "英吉沙县"
	}, {
		"id": "653124",
		"parentid": "653100",
		"name": "泽普县"
	}, {
		"id": "653125",
		"parentid": "653100",
		"name": "莎车县"
	}, {
		"id": "653126",
		"parentid": "653100",
		"name": "叶城县"
	}, {
		"id": "653127",
		"parentid": "653100",
		"name": "麦盖提县"
	}, {
		"id": "653128",
		"parentid": "653100",
		"name": "岳普湖县"
	}, {
		"id": "653129",
		"parentid": "653100",
		"name": "伽师县"
	}, {
		"id": "653130",
		"parentid": "653100",
		"name": "巴楚县"
	}, {
		"id": "653131",
		"parentid": "653100",
		"name": "塔什库尔干塔吉克自治县"
	}, {
		"id": "653201",
		"parentid": "653200",
		"name": "和田市"
	}, {
		"id": "653221",
		"parentid": "653200",
		"name": "和田县"
	}, {
		"id": "653222",
		"parentid": "653200",
		"name": "墨玉县"
	}, {
		"id": "653223",
		"parentid": "653200",
		"name": "皮山县"
	}, {
		"id": "653224",
		"parentid": "653200",
		"name": "洛浦县"
	}, {
		"id": "653225",
		"parentid": "653200",
		"name": "策勒县"
	}, {
		"id": "653226",
		"parentid": "653200",
		"name": "于田县"
	}, {
		"id": "653227",
		"parentid": "653200",
		"name": "民丰县"
	}, {
		"id": "654002",
		"parentid": "654000",
		"name": "伊宁市"
	}, {
		"id": "654003",
		"parentid": "654000",
		"name": "奎屯市"
	}, {
		"id": "654021",
		"parentid": "654000",
		"name": "伊宁县"
	}, {
		"id": "654022",
		"parentid": "654000",
		"name": "察布查尔锡伯自治县"
	}, {
		"id": "654023",
		"parentid": "654000",
		"name": "霍城县"
	}, {
		"id": "654024",
		"parentid": "654000",
		"name": "巩留县"
	}, {
		"id": "654025",
		"parentid": "654000",
		"name": "新源县"
	}, {
		"id": "654026",
		"parentid": "654000",
		"name": "昭苏县"
	}, {
		"id": "654027",
		"parentid": "654000",
		"name": "特克斯县"
	}, {
		"id": "654028",
		"parentid": "654000",
		"name": "尼勒克县"
	}, {
		"id": "654201",
		"parentid": "654200",
		"name": "塔城市"
	}, {
		"id": "654202",
		"parentid": "654200",
		"name": "乌苏市"
	}, {
		"id": "654221",
		"parentid": "654200",
		"name": "额敏县"
	}, {
		"id": "654223",
		"parentid": "654200",
		"name": "沙湾县"
	}, {
		"id": "654224",
		"parentid": "654200",
		"name": "托里县"
	}, {
		"id": "654225",
		"parentid": "654200",
		"name": "裕民县"
	}, {
		"id": "654226",
		"parentid": "654200",
		"name": "和布克赛尔蒙古自治县"
	}, {
		"id": "654301",
		"parentid": "654300",
		"name": "阿勒泰市"
	}, {
		"id": "654321",
		"parentid": "654300",
		"name": "布尔津县"
	}, {
		"id": "654322",
		"parentid": "654300",
		"name": "富蕴县"
	}, {
		"id": "654323",
		"parentid": "654300",
		"name": "福海县"
	}, {
		"id": "654324",
		"parentid": "654300",
		"name": "哈巴河县"
	}, {
		"id": "654325",
		"parentid": "654300",
		"name": "青河县"
	}, {
		"id": "654326",
		"parentid": "654300",
		"name": "吉木乃县"
	}, {
		"id": "659001",
		"parentid": "659000",
		"name": "石河子市"
	}, {
		"id": "659002",
		"parentid": "659000",
		"name": "阿拉尔市"
	}, {
		"id": "659003",
		"parentid": "659000",
		"name": "图木舒克市"
	}, {
		"id": "659004",
		"parentid": "659000",
		"name": "五家渠市"
	}]
}
$(function() {
	$(document).on("click", "input.proCitySelAll", function(event) {
		$(this).closest("tr")[0].isDirty = true;
		if($("body").data("CitysAll") == null) {
			sendAllCitiesAjax();
		} else {
			viewAllProvince(1);
			viewAllHotCities();
		}
		$(this).select();
		$(".provinceCity").hide();
		$(".provinceCityAll").hide();
		$("#dimCityQuery").hide();
		var o2 = $(this).offset();
		var l2 = 0; //o2.left;
		var t2 = 60; //o2.top;
		var h2 = $(this).height();
		$(this).parent().css("position", "relative");
		$(this).parent().find(".provinceCityAll").css("top", t2).css("left", l2).toggle(); //  + h2 - 1
		$(".provinceCityAll").click(function(event) {
			event.stopPropagation();
		});
		event.stopPropagation();
		$("html").click(function() {
			$(".provinceCityAll").hide();
			$("input.current2").parent().css("position", "static");
		});
		$("input.proCitySelAll").removeClass("current2");
		$(this).addClass("current2");
		$(".provinceCityAll").find(".tabs").find("a").removeClass("current");
		$(".provinceCityAll").find(".tabs").find("a[tb=hotCityAll]").addClass("current");
		$(".provinceCityAll").find(".con").children().hide();
		$(".provinceCityAll").find(".con").find(".hotCityAll").show();
		if($("body").data("allProvinces") == null) {
			sendAllProvinceAjax();
		}
		if($("body").data("allCountys") == null) {
			sendAllCountiesAjax();
		}
		$(".provinceCityAll").find(".tabs").find("a").click(function() {
			if($(this).attr("tb") == "cityAll" && $(".provinceAll .list .current").val() == null) {
				return;
			};
			if($(this).attr("tb") == "countyAll" && $(".cityAll .list .current").val() == null && $(".hotCityAll .list .current").val() == null) {
				return;
			};
			$(".provinceCityAll").find(".tabs").find("a").removeClass("current");
			$(this).addClass("current");
			var tb = $(this).attr("tb");
			$(".provinceCityAll").find(".con").children().hide();
			$(".provinceCityAll").find(".con").find("." + tb).show();
		});
	});
});
(function() {
	$(".proCitySelAll_Img").click(function(event) {
		event.stopPropagation();
		$(this).prev().trigger("click");
	});
})();

function wrongMsg(object, msg) {
	$(".wrongMsg").text(msg);
	object.addClass("wrong");
}
(function() {
	var picNum = $("div.flashPic img").size();
	var isNum = 0;
	var str = [];
	var imgDiv = $("div.flashPic");
	var $div = $("div.picNum");
	imgDiv.find("img").hide().eq(0).show();
	for(var i = 0; i < picNum; i++) {
		str[i] = "<a href='javascript:'>" + (i + 1) + "</a>";
	}
	$div.html(str.join(""));
	$div.find("a:eq(0)").addClass("on");

	function MovePic() {
		if((isNum + 1) >= picNum) {
			isNum = 0;
		} else {
			isNum = isNum + 1;
		}
		imgDiv.find("img").hide().eq(isNum).fadeIn(500);
		$div.find("a").removeClass("on").eq(isNum).addClass("on");
	}
	var setFn = setInterval(MovePic, 4000);
	$div.find("a").click(function() {
		clearInterval(setFn);
		var j = $(this).index();
		$div.find("a").removeClass("on").siblings().eq(j).addClass("on");
		imgDiv.find("img").hide();
		imgDiv.find("img").eq(j).fadeIn(500);
		isNum = j;
		setFn = setInterval(MovePic, 4000);
	});
})();

(function() {
	var clkIndex;
	var currentClass;
	var allCitys;
	var allProvinces;
	var allCountys;
	var thisObj;
	var dimCityDiv = "<div id='dimCityQuery'><ul></ul></div>";
	$("body").append(dimCityDiv);
	$("body").delegate(".proCityQuery,.proCityQueryAll", "click", // ($.browser.opera ? "keypress": "keyup")
		function(event) {
			if($("#dimCityQuery:visible").size() == 0) {
				$(".backifname").hide();
			}
			$(".provinceCity").hide();
			$(".provinceCityAll").hide();
			if($(this).hasClass("proCityQueryAll")) {
				if($("body").data("allProvinces") == null) {
					sendAllProvinceAjax();
				}
				if($("body").data("CitysAll") == null) {
					sendAllCitiesAjax();
				}
				if($("body").data("allCountys") == null) {
					sendAllCountiesAjax();
				}
				currentClass = "proCityQueryAll";
				clkIndex = $("body").find(".proCityQueryAll").index(this);
				allCitys = $("body").data("CitysAll");
				allProvinces = $("body").data("allProvinces");
				allCountys = $("body").data("allCountys");
				thisObj = $(this);
			}
			if($(this).hasClass("proCityQuery")) {
				if($("body").data("allExistProvinces") == null) {
					sendProvinceAjax();
				}
				if($("body").data("allExistCitys") == null) {
					sendCitiesAjax();
				}
				if($("body").data("allExistCountys") == null) {
					sendCountiesAjax();
				}
				currentClass = "proCityQuery";
				clkIndex = $("body").find(".proCityQuery").index(this);
				allCitys = $("body").data("allExistCitys");
				allProvinces = $("body").data("allExistProvinces");
				allCountys = $("body").data("allExistCountys");
				thisObj = $(this);
			}
			lastKeyPressCode = event.keyCode;
			switch(lastKeyPressCode) {
				case 40:
					$("#dimCityQuery").trigger("selNext");
					return false;
					break;
				case 38:
					$("#dimCityQuery").trigger("selPrev");
					return false;
					break;
				case 13:
					$("#dimCityQuery").trigger("enter");
					return false;
					break;
			}
			v = $.trim($(this).val());
			if(v == "" || v == null) {
				return false;
			}
			$(".provinceCity").hide();
			var o = $(this).offset();
			var l = o.left;
			var t = o.top;
			var w = $(this).width();
			var h = $(this).height();
			var htmlArr = [];
			var autoWidth;
			for(i = 0; i < allCountys.length; i++) {
				if(v.toUpperCase() === allCountys[i].pinYinChar.substring(0, v.length)) {
					htmlArr[htmlArr.length] = "<li><a class='allcityClass' href='javascript:' provinceId=" + allCountys[i].provinceId + " cityId=" + allCountys[i].cityId + " countyId=" + allCountys[i].id + ">" + allCountys[i].cityName + "-" + allCountys[i].areaName + " (<span style='color:red'>" + v.toUpperCase() + "</span>" + allCountys[i].pinYinChar.substring(v.length, allCountys[i].pinYinChar.length) + ")</a></li>";
					if(htmlArr.length > 9) {
						break;
						return false;
					}
					autoWidth = autoWidth < (allCountys[i].cityName + allCountys[i].areaName + allCountys[i].pinYinChar).length ? (allCountys[i].cityName + allCountys[i].areaName + allCountys[i].pinYinChar).length : autoWidth;
					continue;
				};
				if(v === allCountys[i].areaName.substring(0, v.length)) {
					htmlArr[htmlArr.length] = "<li><a class='allcityClass' href='javascript:' provinceId=" + allCountys[i].provinceId + " cityId=" + allCountys[i].cityId + " countyId=" + allCountys[i].id + ">" + allCountys[i].cityName + "-" + "<span style='color:red'>" + v + "</span>" + allCountys[i].areaName.substring(v.length, allCountys[i].areaName.length) + " (" + allCountys[i].pinYinChar + ")</a></li>";
					if(htmlArr.length > 9) {
						break;
						return false;
					}
					autoWidth = autoWidth < (allCountys[i].cityName + allCountys[i].areaName + allCountys[i].pinYinChar).length ? (allCountys[i].cityName + allCountys[i].areaName + allCountys[i].pinYinChar).length : autoWidth;
					continue;
				};
				if(v.toLowerCase() === allCountys[i].pinYin.substring(0, v.length)) {
					htmlArr[htmlArr.length] = "<li><a class='allcityClass' href='javascript:' provinceId=" + allCountys[i].provinceId + " cityId=" + allCountys[i].cityId + " countyId=" + allCountys[i].id + ">" + allCountys[i].cityName + "-" + allCountys[i].areaName + " (<span style='color:red'>" + v.toLowerCase() + "</span>" + allCountys[i].pinYin.substring(v.length, allCountys[i].pinYin.length) + ")</a></li>"
					if(htmlArr.length > 9) {
						break;
						return false;
					}
					autoWidth = autoWidth < (allCountys[i].cityName + allCountys[i].areaName + allCountys[i].pinYin).length ? (allCountys[i].cityName + allCountys[i].areaName + allCountys[i].pinYin).length : autoWidth;
					continue;
				};
			}
			for(i = 0; i < allCitys.length; i++) {
				if(v.toUpperCase() === allCitys[i].cityShortPY.substring(0, v.length)) {
					htmlArr[htmlArr.length] = "<li><a class='allcityClass' href='javascript:' provinceId=" + allCitys[i].provinceId + " cityId=" + allCitys[i].id + ">" + allCitys[i].name + " (<span style='color:red'>" + v.toUpperCase() + "</span>" + allCitys[i].cityShortPY.substring(v.length, allCitys[i].cityShortPY.length) + ")</a></li>";
					if(htmlArr.length > 9) {
						break;
						return false;
					}
					autoWidth = autoWidth < (allCitys[i].name + allCitys[i].cityShortPY).length ? (allCitys[i].name + allCitys[i].cityShortPY).length : autoWidth;
					continue;
				};
				if(v === allCitys[i].name.substring(0, v.length)) {
					htmlArr[htmlArr.length] = "<li><a class='allcityClass' href='javascript:' provinceId=" + allCitys[i].provinceId + " cityId=" + allCitys[i].id + "><span style='color:red'>" + v + "</span>" + allCitys[i].name.substring(v.length, allCitys[i].name.length) + " (" + allCitys[i].cityShortPY + ")</a></li>";
					if(htmlArr.length > 9) {
						break;
						return false;
					}
					autoWidth = autoWidth < (allCitys[i].name + allCitys[i].cityShortPY).length ? (allCitys[i].name + allCitys[i].cityShortPY).length : autoWidth;
					continue;
				};
				if(v.toLowerCase() === allCitys[i].cityPinyin.substring(0, v.length)) {
					htmlArr[htmlArr.length] = "<li><a class='allcityClass' href='javascript:' provinceId=" + allCitys[i].provinceId + " cityId=" + allCitys[i].id + ">" + allCitys[i].name + " (<span style='color:red'>" + v.toLowerCase() + "</span>" + allCitys[i].cityPinyin.substring(v.length, allCitys[i].cityPinyin.length) + ")</a></li>"
					if(htmlArr.length > 9) {
						break;
						return false;
					}
					autoWidth = autoWidth < (allCitys[i].name + allCitys[i].cityPinyin).length ? (allCitys[i].name + allCitys[i].cityPinyin).length : autoWidth;
					continue;
				};
			};
			if(htmlArr == "" || htmlArr == null) {
				$("#dimCityQuery ul").html("<li class='none'>对不起,没有找到该城市</li>");
				return false;
			} else {
				$("#dimCityQuery ul").html(htmlArr.join("")).find("li:first").addClass("current");
			};
			if(autoWidth < 200) {
				autoWidth = 200;
			}
			$("#dimCityQuery").css("width", autoWidth).css("top", t + h - 1).css("left", l).show();
			$(".backifname").show();
			$("html").click(function() {
				$("#dimCityQuery").hide();
				$(".backifname").hide();
			});
		});
	$("body").delegate("#dimCityQuery li", "hover",
		function() {
			$(this).addClass("current").siblings().removeClass("current");
		},
		function() {
			$(this).removeClass("current");
		});
	$("#dimCityQuery").delegate("", "selNext",
		function() {
			var next = $(this).find("li.current").next();
			if(next.size() > 0) {
				next.addClass("current").siblings().removeClass("current");
			} else {
				$("#dimCityQuery li").removeClass("current").first().addClass("current");
			};
		});
	$("#dimCityQuery").delegate("", "selPrev",
		function() {
			var prev = $(this).find("li.current").prev();
			if(prev.size() > 0) {
				prev.addClass("current").siblings().removeClass("current");
			} else {
				$("#dimCityQuery li").removeClass("current").last().addClass("current");
			};
		});
	$("#dimCityQuery").delegate("", "enter",
		function(event) {
			var cur = $(this).find("li.current");
			if(cur.size() > 0) {
				cur.find("a").trigger("click");
			};
		});
	$("body").delegate("#dimCityQuery li a.allcityClass", "click",
		function() {
			var vm = $(this).text();
			var provinceId = $(this).attr("provinceId");
			var cityId = $(this).attr("cityId");
			var countyId = $(this).attr("countyId");
			var name;
			var cityName;
			var rtn;
			for(i = 0; i < allProvinces.length; i++) {
				if(allProvinces[i].id == provinceId) {
					name = allProvinces[i].provinceName;
				};
			}
			for(i = 0; i < allCitys.length; i++) {
				if(allCitys[i].id == cityId) {
					cityName = allCitys[i].name;
				}
			}
			if(currentClass == "proCityQueryAll") {
				$("body").data("pAllId", provinceId);
				$("body").data("cAllId", cityId);
				$("body").data("aAllId", countyId);
				$("body").data("pAllName", name);
				$("body").data("nameOfCityAll", cityName);
			}
			if(currentClass == "proCityQuery") {
				$("body").data("pId", provinceId);
				$("body").data("cId", cityId);
				$("body").data("aId", countyId);
				$("body").data("pName", name);
				$("body").data("nameOfCity", cityName);
			}
			vm = vm.split("(");
			countyName = $.trim(vm[0]);
			if(countyId == null || countyName == cityName) {
				if(currentClass == "proCityQuery") {
					thisObj.trigger("click");
					counties = [];
					var j = 0;
					$.each(allCountys,
						function(i, county) {
							if(county.cityId == cityId) {
								counties[j++] = county;
							}
						});
					countyTotalPage = Math.ceil(counties.length / p_pageSize);
					$(".provinceCity").find(".tabs").find("a").removeClass("current");
					$(".provinceCity .tabs").find("#county").addClass("current");
					$(".con .city .list a").removeClass("current");
					$(".provinceCity").find(".con").children().hide();
					$(".provinceCity").find(".con").find(".county").show();
					$(".con .provinceAll .list a").removeClass("current");
					countyPage(1);
				} else if(currentClass == "proCityQueryAll") {
					thisObj.trigger("click");
					countiesAll = [];
					var j = 0;
					$.each(allCountys,
						function(i, county) {
							if(county.cityId == cityId && county.areaName != cityName) {
								countiesAll[j++] = county;
							}
						});
					countyTotalPageAll = Math.ceil(countiesAll.length / p_pageSize);
					$(".provinceCityAll").find(".tabs").find("a").removeClass("current");
					$(".provinceCityAll .tabs").find(".district").addClass("current");
					$(".con .cityAll .list a").removeClass("current");
					$(".provinceCityAll").find(".con").children().hide();
					$(".provinceCityAll").find(".con").find(".countyAll").show();
					$(".con .provinceAll .list a").removeClass("current");
					allCountyPage(1);
				}
			} else {
				rtn = name + "-" + countyName;
				if(currentClass == "proCityQueryAll") {
					$("body").find(".proCityQueryAll").eq(clkIndex).val(rtn);
					$("body").find(".proCityQueryAll").eq(clkIndex).trigger("change");
					$(".provinceCityAll").find(".tabs").find("a").removeClass("current");
					$(".provinceCityAll").find(".tabs").find("a[tb=hotCityAll]").addClass("current");
					$(".provinceCityAll .con .list a").removeClass("current");
					$(".provinceCityAll .con .list a input").removeClass("current");
				}
				if(currentClass == "proCityQuery") {
					$("body").find(".proCityQuery").eq(clkIndex).val(rtn);
					$("body").find(".proCityQuery").eq(clkIndex).trigger("change", [cityId, countyId]);
					$(".provinceCity").find(".tabs").find("a").removeClass("current");
					$(".provinceCity").find(".tabs").find("a[tb=hotCity]").addClass("current");
					$(".provinceCity .con .list a").removeClass("current");
					$(".provinceCity .con .list a input").removeClass("current");
				}
			}
			$("#dimCityQuery").hide();
			$(".backifname").hide();
			return false;
		});
})();

function queryData() {
	var obj1 = $(".ts-usermessage").find("#transOrder");
	var obj2 = $(".ts-usermessage").find("#payOrder");
	var obj3 = $("#unreadMessages");
	$.ajax({
		type: "post",
		url: "/user/queryPayOderTranOder.action",
		dataType: "json",
		beforeSend: function(XMLHttpRequest) {
			obj1.html("<img src='../theme/default/images/loading.gif' height=20 width=20/>");
			obj2.html("<img src='../theme/default/images/loading.gif' height=20 width=20/>");
			obj3.html("<img src='../theme/default/images/loading.gif' height=20 width=20/>");
		},
		success: function(msg) {
			if(msg.user != null) {
				obj1.html("(" + msg.user.transportingOrder + ")");
				obj2.html("(" + msg.user.refundPaymentOrder + ")");
				obj3.html("(" + msg.user.siteMessage + ")");
			}
		},
		error: function(XMLHttpRequest, textStatus, errorThrown) {
			obj1.html("");
			obj2.html("");
			obj3.html("");
		}
	});
}

function sendCitiesAjax() {
	$.ajax({
		type: "get",
		url: 'json/province.json',
		async: false,
		dataType: "json",
		success: function(data) {
			cities = data;
			$("body").data("allExistCitys", data);
			viewHotCities();
		},
		error: function(XMLHttpRequest, textStatus, errorThrown) {
			alert("网络繁忙，请稍后再试！");
		}
	});
}

function viewHotCities() {
	$.each(cities,
		function(i, city) {
			if(city.hotCity) {
				$(".hotCity .list ul").append("<li><a><input type='button' style='background:none;border:0px;cursor: pointer;' onclick=hotCityAddrInput(\'" + city.provinceId + "," + city.id + "," + city.name + "\') id='" + city.id + "' value='" + city.name + "'></a></li>");
			}
		});
}
/*$(".province .pre a").bind('click',
function() {
	var provincePage = parseInt($('#provincePage').html());
	if (provincePage == 1) {
		return;
	}
	viewProvince(provincePage - 1);
});
$(".city .pre a").bind('click',
function() {
	var cityPages = parseInt($('#cityPage').html());
	if (cityPages == 1) {
		return;
	}
	cityPage(cityPages - 1);
});
$(".county .pre a").bind('click',
function() {
	var countyPages = parseInt($('#countyPage').html());
	if (countyPages == 1) {
		return;
	}
	countyPage(countyPages - 1);
});
$(".province .next a").bind('click',
function() {
	var provincePage = parseInt($('#provincePage').html());
	provinceTotalPage = countProvincePages();
	if (provincePage == provinceTotalPage) {
		return;
	}
	viewProvince(provincePage + 1);
});
$(".city .next a").bind('click',
function() {
	if ($(this).hasClass("can")) {
		var cityPages = parseInt($('#cityPage').html());
		cityPage(cityPages + 1);
	}
});
$(".county .next a").bind('click',
function() {
	if ($(this).hasClass("can")) {
		var countyPages = parseInt($('#countyPage').html());
		countyPage(countyPages + 1);
	}
});*/
function json2str(o) {
	var arr = [];
	var fmt = function(s) {
		if(typeof s == 'object' && s != null) return json2str(s);
		return /^(string|number)$/.test(typeof s) ? "'" + s + "'" : s;
	};
	for(var i in o) arr.push("'" + i + "':" + fmt(o[i]));
	return '{' + arr.join(',') + '}';
}

function countProvincePages() {
	provinceTotalPage = Math.ceil(provinces.length / p_pageSize);
	return provinceTotalPage;
}

function viewProvince(page) {
	$(".province .list ul li").remove();
	if(page == 1) {
		$(".province .pre a").removeClass("can");
		$(".province .next a").addClass("can");
	} else {
		$(".province .pre a").addClass("can");
		$(".province .next a").addClass("can");
	}
	var end;
	var start;
	if(page == provinceTotalPage) {
		start = (page - 1) * p_pageSize;
		end = provinces.length;
		$(".province .next a").removeClass("can");
	} else {
		start = (page - 1) * p_pageSize;
		end = start + p_pageSize;
	}
	for(var i = start; i < end; i++) {
		var p_id = provinces[i].id;
		var p_name = provinces[i].provinceName;
		if(provinces[i].provinceName == '内蒙古自治区') {
			p_name = '内蒙古';
		} else if(provinces[i].provinceName == '黑龙江省') {
			p_name = '黑龙江';
		} else {
			p_name = provinces[i].provinceName.substr(0, 2);
		}
		var li = $('<li><a style="background: none repeat scroll 0% 0% transparent; border: 0px none;" href="javascript:onclick=viewCities(' + i + ');" id="' + p_id + '">' + p_name + '</a></li>');
		$(".province .list ul").append(li);
	}
	$(".province .list #provincePage").remove();
	$(".province .list").append("<label id='provincePage' style='display:none;'>" + page + "</label>");
}

function viewCities(i) {
	proId = provinces[i].id;
	$("body").data("pName", provinces[i].provinceName);
	$("body").data("pId", proId);
	citys = [];
	var j = 0;
	$.each(cities,
		function(i, city) {
			if(city.provinceId == proId) {
				citys[j++] = city;
			}
		});
	cityTotalPage = Math.ceil(citys.length / p_pageSize);
	$(".provinceCity").find(".tabs").find("a").removeClass("current");
	$(".provinceCity .tabs").find("#city").addClass("current");
	$(".con .province .list a").removeClass("current");
	$(".con .province .list a[id='" + proId + "']").addClass("current");
	$(".provinceCity").find(".con").children().hide();
	$(".provinceCity").find(".con").find(".city").show();
	cityPage(1);
}

function cityPage(page) {
	$(".city .list ul li").remove();
	$(".cityAll .list ul li").remove();
	if(page == 1) {
		$(".city .pre a").removeClass("can");
	} else {
		$(".city .pre a").addClass("can");
	}
	var start;
	var end;
	if(page <= 1) {
		page = 1;
		$(".city .pre a").removeClass("can");
		$(".city .next a").addClass("can");
	}
	if(cityTotalPage == 1) {
		$(".city .next a").removeClass("can");
		$(".city .pre a").removeClass("can");
	}
	if(page >= cityTotalPage) {
		page = cityTotalPage;
		$(".city .next a").removeClass("can");
		start = (page - 1) * p_pageSize;
		end = citys.length;
	} else if(page == 1) {
		start = (page - 1) * p_pageSize;
		end = start + p_pageSize;
		$(".city .pre a").removeClass("can");
		$(".city .next a").addClass("can");
	} else {
		start = (page - 1) * p_pageSize;
		end = start + p_pageSize;
		$(".city .next a").addClass("can");
		$(".city .pre a").addClass("can");
	}
	for(var i = start; i < end; i++) {
		var c_id = citys[i].id;
		var cityName = citys[i].name.substr(0, 4);
		var li = $('<li><a href="javascript:onclick=viewCounties(' + i + ')" id="' + c_id + '">' + cityName + '</a></li>');
		$(".city .list ul").append(li);
	}
	$(".city .list #cityPage").remove();
	$(".city .list").append("<label id='cityPage' style='display:none;'>" + page + "</label>");
}

function viewCounties(i) {
	cityId = citys[i].id;
	$("body").data("cId", cityId);
	var nameOfCity = $.trim(citys[i].name);
	$("body").data("nameOfCity", nameOfCity);
	counties = [];
	var j = 0;
	$.each(areas,
		function(i, county) {
			if(county.cityId == cityId) {
				counties[j++] = county;
			}
		});
	countyTotalPage = Math.ceil(counties.length / p_pageSize);
	$(".provinceCity").find(".tabs").find("a").removeClass("current");
	$(".provinceCity .tabs").find("#county").addClass("current");
	$(".con .city .list a").removeClass("current");
	$(".con .city .list a[id='" + cityId + "']").addClass("current");
	$(".provinceCity").find(".con").children().hide();
	$(".provinceCity").find(".con").find(".county").show();
	countyPage(1);
}

function countyPage(page) {
	var nameValue = $("input.current1").attr("name");
	var nameOfProvince = $("body").data("pName");
	var cityCurName = $("body").data("nameOfCity");
	$("input.current1").removeClass("iGrays");
	$("input.current1").val(nameOfProvince + "-" + cityCurName);
	$(".county .list ul li").remove();
	if(page == 1) {
		$(".county .pre a").removeClass("can");
	} else {
		$(".county .pre a").addClass("can");
	}
	var start;
	var end;
	if(page <= 1) {
		page = 1;
		$(".county .pre a").removeClass("can");
		$(".county .next a").addClass("can");
	}
	if(countyTotalPage == 1) {
		$(".county .next a").removeClass("can");
		$(".county .pre a").removeClass("can");
	}
	if(page >= countyTotalPage) {
		page = countyTotalPage;
		$(".county .next a").removeClass("can");
		start = (page - 1) * p_pageSize;
		end = counties.length;
	} else if(page == 1) {
		start = (page - 1) * p_pageSize;
		end = start + p_pageSize;
		$(".county .pre a").removeClass("can");
		$(".county .next a").addClass("can");
	} else {
		start = (page - 1) * p_pageSize;
		end = start + p_pageSize;
		$(".county .next a").addClass("can");
		$(".county .pre a").addClass("can");
	}
	for(var i = start; i < end; i++) {
		var c_id = counties[i].id;
		var countyName = counties[i].name.substr(0, 4);;
		var li = $('<li><a href="javascript:onclick=addrInput(' + i + ')" id="' + c_id + '">' + countyName + '</a></li>');
		$(".county .list ul").append(li);
	}
	$(".county .list #countyPage").remove();
	$(".county .list").append("<label id='countyPage' style='display:none;'>" + page + "</label>");
}

function addrInput(i) {
	var countyId = $.trim(counties[i].id);
	$(".con .hotCity .list a input").removeClass("current");
	$(".con .hotCity .list a input[id='" + cityId + "']").addClass("current");
	$(".con .county .list a").removeClass("current");
	$(".con .county .list a[id='" + countyId + "']").addClass("current");
	proId = $("body").data("pId");
	cityId = $("body").data("cId");
	var p = null;
	$.each(provinces,
		function(i, province) {
			if(province.id == proId) {
				p = province.provinceName;
				return false;
			}
		});
	var c = null;
	$.each(cities,
		function(i, city) {
			if(city.id == cityId) {
				c = city.name;
				return false;
			}
		});
	var a = null;
	$.each(counties,
		function(i, county) {
			if(county.id == countyId) {
				a = county.areaName;
				return false;
			}
		});
	$("input.current1").removeClass("iGrays");
	$(".provinceCity").hide();
	var rtn = p + "-" + c + "-" + a;
	$("input.current1").val(rtn);
	$(".backifname").hide();
	var nameValue = $("input.current1").attr("name");
	if(nameValue == 'order.sdeptProCity') {
		$("#deptCityId").val(cityId);
		$("input[name='order.sdeptProCity']").trigger("change", [cityId, countyId]);
	}
	if(nameValue == 'consignor.deptProCity') {
		$("input[name='consignor.deptProCity']").trigger("change", [cityId, countyId]);
	}
	if(nameValue == 'template.sdeptProCity') {
		$("input[name='template.sdeptProCity']").trigger("change", [cityId, countyId]);
	}
}

function hotCityAddrInput(proCityId) {
	proId = proCityId.split(",")[0];
	cityId = proCityId.split(",")[1];
	var cityCurName = proCityId.split(",")[2];
	$("body").data("nameOfCity", cityCurName);
	$("body").data("pId", proId);
	$("body").data("cId", cityId);
	$.each(provinces,
		function(i, pro) {
			if(pro.id == proId) {
				$("body").data("pName", pro.provinceName);
			}
		});
	counties = [];
	var j = 0;
	$.each(areas,
		function(i, county) {
			if(county.cityId == cityId) {
				counties[j++] = county;
			}
		});
	countyTotalPage = Math.ceil(counties.length / p_pageSize);
	$(".provinceCity").find(".tabs").find("a").removeClass("current");
	$(".provinceCity .tabs").find("#county").addClass("current");
	$(".con .city .list a").removeClass("current");
	$(".con .city .list a[id='" + cityId + "']").addClass("current");
	$(".provinceCity").find(".con").children().hide();
	$(".provinceCity").find(".con").find(".county").show();
	$(".con .provinceAll .list a").removeClass("current");
	countyPage(1);
}
var allProvinces = null;
var allCities = null;
var allAreas = null;
var allProId = null;
var cityIdAll = null;
var provinceAllTotalPage = null;
var pa_pageSize = 12;
var pa_currentPage = 1;

function sendAllProvinceAjax() {
	var three_pro = [];
	for(var i = 0; i < Province.Provinces.length; i++) {

		three_pro.push({
			'id': Province.Provinces[i].id,
			'provinceName': Province.Provinces[i].name
		});

	}
	allProvinces = three_pro;
	$("body").data("allProvinces", allProvinces);
	viewAllProvince(1);
}

function sendAllCitiesAjax() {
	var three_citys = [];
	for(var i = 0; i < City.Citys.length; i++) {

		three_citys.push({
			'id': City.Citys[i].id,
			'name': City.Citys[i].name,
			'provinceId': City.Citys[i].parentid
		});

	}
	allCities = three_citys; //data[0].rs[0].rows;
	$("body").data("CitysAll", City.Citys);
	viewAllHotCities();
}

function sendAllCountiesAjax() {
	var three_district = [];

	for(var i = 0; i < District.Districts.length; i++) {

		three_district.push({
			'id': District.Districts[i].id,
			'provinceId': District.Districts[i].parentid,
			'areaName': District.Districts[i].name
		});

	}
	allAreas = three_district; //data[0].rs[0].rows;

	$("body").data("allCountys", District.Districts);
}

function viewAllHotCities() {
	$(".hotCityAll .list ul").html('');
	var rmcity = [{
			"id": "110100",
			"name": "北京市",
			"provinceId": "110000"
		}, {
			"id": "120100",
			"name": "天津市",
			"provinceId": "120000"
		}, {
			"id": "130100",
			"name": "石家庄市",
			"provinceId": "130000"
		}, {
			"id": "140100",
			"name": "太原市",
			"provinceId": "140000"
		}, {
			"id": "330100",
			"name": "杭州市",
			"provinceId": "330000"
		}, {
			"id": "210100",
			"name": "沈阳市",
			"provinceId": "210000"
		}, {
			"id": "310100",
			"name": "上海市",
			"provinceId": "310000"
		}, {
			"id": "430100",
			"name": "长沙市",
			"provinceId": "430000"
		}, {
			"id": "420100",
			"name": "武汉市",
			"provinceId": "420000"
		}, {
			"id": "440300",
			"name": "深圳市",
			"provinceId": "440000"
		}, {
			"id": "440100",
			"name": "广州市",
			"provinceId": "440000"
		}, {
			"id": "450100",
			"name": "南宁市",
			"provinceId": "450000"
		}, {
			"id": "510100",
			"name": "成都市",
			"provinceId": "510000"
		}, {
			"id": "320100",
			"name": "南京市",
			"provinceId": "320000"
		}, {
			"id": "500100",
			"name": "重庆市",
			"provinceId": "500000"
		}, {
			"id": "520100",
			"name": "贵阳市",
			"provinceId": "520000"
		}]
		/*$.each(allCities,
		function(i, city) {
			//设定city前16个
			if(city.invalid == 0)
			{
				if(i<16)
				{
					if (city.name) {
						$(".hotCityAll .list ul").append("<li><a><input type='button' style='background:none;border:0px;cursor: pointer;' onclick=hotCityAddrInputAll(\'" + city.provinceId + "," + city.id + "," + city.name + "\') id='" + city.id + "' value='" + city.name + "'></a></li>");
					}
				}
			}
		});*/
	$.each(rmcity,
		function(i, city) {
			$(".hotCityAll .list ul").append("<li><a><input type='button' style='background:none;border:0px;cursor: pointer;' onclick=hotCityAddrInputAll(\'" + city.provinceId + "," + city.id + "," + city.name + "\') id='" + city.id + "' value='" + city.name + "'></a></li>");
		});
}
/*上一页*/
function provinceAllPre() {
	var provincePage1 = parseInt($('#provincePage1').html());
	if(provincePage1 == 1) {
		return;
	}
	viewAllProvince(provincePage1 - 1);
}

function cityAllPre() {
	var cityPages1 = parseInt($('#cityPage1').html());
	if(cityPages1 == 1) {
		return;
	}
	allCityPage(cityPages1 - 1);
}

function countyAllPre() {
	var countyPages = parseInt($('#countyPage1').html());
	if(countyPages == 1) {
		return;
	}
	allCountyPage(countyPages - 1);
}
/*下一页*/
function provinceAllNext() {
	var provincePage1 = parseInt($('#provincePage1').html());
	provinceAllTotalPage = countAllProvincePages();
	if(provincePage1 >= provinceAllTotalPage) {
		return;
	}
	viewAllProvince(provincePage1 + 1);
}

function cityAllNext(obj) {
	if($(obj).hasClass("can")) {
		var cityPages1 = parseInt($('#cityPage1').html());
		allCityPage(cityPages1 + 1);
	}
}

function countyAllNext(obj) {
	if($(obj).hasClass("can")) {
		var countyPages = parseInt($('#countyPage1').html());
		allCountyPage(countyPages + 1);
	}
}

function json2str(o) {
	var arr = [];
	var fmt = function(s) {
		if(typeof s == 'object' && s != null) return json2str(s);
		return /^(string|number)$/.test(typeof s) ? "'" + s + "'" : s;
	};
	for(var i in o) arr.push("'" + i + "':" + fmt(o[i]));
	return '{' + arr.join(',') + '}';
}

function countAllProvincePages() {
	provinceAllTotalPage = Math.ceil(allProvinces.length / pa_pageSize);
	return provinceAllTotalPage;
}

function viewAllProvince(page) {
	$(".provinceAll .list ul li").remove();
	if(page == 1) {
		$(".provinceAll .pre a").removeClass("can");
		$(".provinceAll .next a").addClass("can");
	} else {
		$(".provinceAll .pre a").addClass("can");
		$(".provinceAll .next a").addClass("can");
	}
	var end;
	var start;
	if(page == provinceAllTotalPage) {
		start = (page - 1) * pa_pageSize;
		end = allProvinces.length;
		$(".provinceAll .next a").removeClass("can");
	} else {
		start = (page - 1) * pa_pageSize;
		end = start + pa_pageSize;
	}
	for(var i = start; i < end; i++) {
		var p_id = allProvinces[i].id;
		var p_name = allProvinces[i].provinceName;
		if(allProvinces[i].provinceName == '内蒙古自治区') {
			p_name = '内蒙古';
		} else if(allProvinces[i].provinceName == '黑龙江省') {
			p_name = '黑龙江';
		} else {
			p_name = allProvinces[i].provinceName.substr(0, 2);
		}
		var li = $('<li><a style="background: none repeat scroll 0% 0% transparent; border: 0px none;" href="javascript:onclick=viewAllCities(' + i + ');" id="' + p_id + '">' + p_name + '</a></li>');
		$(".provinceAll .list ul").append(li);
	}
	$(".provinceAll .list #provincePage1").remove();
	$(".provinceAll .list").append("<label id='provincePage1' style='display:none;'>" + page + "</label>");
}

function viewAllCities(i) {
	allProId = allProvinces[i].id;
	$("body").data("pAll", allProvinces[i].provinceName);
	$("body").data("pAllId", allProId);
	allCitys = [];
	var j = 0;
	$.each(allCities,
		function(i, city) {
			if(city.provinceId == allProId) {
				allCitys[j++] = city;
			}
		});
	allCityTotalPage = Math.ceil(allCitys.length / pa_pageSize);
	$(".provinceCityAll").find(".tabs").find("a").removeClass("current");
	$(".provinceCityAll .tabs").find(".city").addClass("current");
	$(".con .provinceAll .list a").removeClass("current");
	$(".con .provinceAll .list a[id='" + allProId + "']").addClass("current");
	$(".provinceCityAll").find(".con").children().hide();
	$(".provinceCityAll").find(".con").find(".cityAll").show();
	$("input.current2").val(allProvinces[i].provinceName);

	$("input.current2").next().val(allProId);
	$("input.current2").next().next().val('0');
	$("input.current2").next().next().next().val('0');
	allCityPage(1);
}

function allCityPage(page) {
	$(".cityAll .list ul li").empty();
	$(".cityAll .list ul li").remove();
	if(page == 1) {
		$(".cityAll .pre a").removeClass("can");
	} else {
		$(".cityAll .pre a").addClass("can");
	}
	var start;
	var end;
	if(page <= 1) {
		page = 1;
		$(".cityAll .pre a").removeClass("can");
		$(".cityAll .next a").addClass("can");
	}
	if(allCityTotalPage == 1) {
		$(".cityAll .next a").removeClass("can");
		$(".cityAll .pre a").removeClass("can");
	}
	if(page >= allCityTotalPage) {
		page = allCityTotalPage;
		$(".cityAll .next a").removeClass("can");
		start = (page - 1) * pa_pageSize;
		end = allCitys.length;
	} else if(page == 1) {
		start = (page - 1) * pa_pageSize;
		end = start + pa_pageSize;
		$(".cityAll .pre a").removeClass("can");
		$(".cityAll .next a").addClass("can");
	} else {
		start = (page - 1) * pa_pageSize;
		end = start + pa_pageSize;
		$(".cityAll .next a").addClass("can");
		$(".cityAll .pre a").addClass("can");
	}
	for(var i = start; i < end; i++) {
		var c_id = allCitys[i].id;
		var cityName = allCitys[i].name.substr(0, 4);
		var li = $('<li><a href="javascript:onclick=viewAllCounties(' + i + ')" id="' + c_id + '">' + cityName + '</a></li>');
		$(".cityAll .list ul").append(li);
	}
	$(".cityAll .list #cityPage1").remove();
	$(".cityAll .list").append("<label id='cityPage1' style='display:none;'>" + page + "</label>");
}

function viewAllCounties(i) {
	cityIdAll = allCitys[i].id;
	$("body").data("cAllId", cityIdAll);
	var cityname = $.trim(allCitys[i].name);
	$("body").data("nameOfCityAll", cityname);
	countiesAll = [];
	var j = 0;
	$.each(allAreas,
		function(i, countys) {
			if(countys.provinceId == cityIdAll) {
				countiesAll[j++] = countys;
			}
		});
	countyTotalPageAll = Math.ceil(countiesAll.length / pa_pageSize);
	$(".provinceCityAll").find(".tabs").find("a").removeClass("current");
	$(".provinceCityAll .tabs").find(".district").addClass("current");
	$(".con .cityAll .list a").removeClass("current");
	$(".con .cityAll .list a[id='" + cityIdAll + "']").addClass("current");
	$(".provinceCityAll").find(".con").children().hide();
	$(".provinceCityAll").find(".con").find(".countyAll").show();

	allCountyPage(1);
}

function allCountyPage(page) {
	var nameOfProvince = null;
	$.each(allProvinces,
		function(i, province) {
			if(province.id == allProId) {
				nameOfProvince = province.provinceName;
				nameOfPrivince_id = province.id;
				return false;
			}
		});
	var cityCurrentName = $("body").data("nameOfCityAll");
	var city_id = $("body").data("cAllId");
	$("input.current2").removeClass("iGrays");
	$("input.current2").val(nameOfProvince + "-" + cityCurrentName);
	$("input.current2").next().val(nameOfPrivince_id);
	$("input.current2").next().next().val(city_id);
	$("input.current2").next().next().next().val('0');
	$(".countyAll .list ul li").remove();
	if(page == 1) {
		$(".countyAll .pre a").removeClass("can");
	} else {
		$(".countyAll .pre a").addClass("can");
	}
	var start;
	var end;
	if(page <= 1) {
		page = 1;
		$(".countyAll .pre a").removeClass("can");
		$(".countyAll .next a").addClass("can");
	}
	if(countyTotalPageAll == 1) {
		$(".countyAll .next a").removeClass("can");
		$(".countyAll .pre a").removeClass("can");
	}
	if(page >= countyTotalPageAll) {
		page = countyTotalPageAll;
		$(".countyAll .next a").removeClass("can");
		start = (page - 1) * pa_pageSize;
		end = countiesAll.length;
	} else if(page == 1) {
		start = (page - 1) * pa_pageSize;
		end = start + pa_pageSize;
		$(".countyAll .pre a").removeClass("can");
		$(".countyAll .next a").addClass("can");
	} else {
		start = (page - 1) * pa_pageSize;
		end = start + pa_pageSize;
		$(".countyAll .next a").addClass("can");
		$(".countyAll .pre a").addClass("can");
	}
	for(var i = start; i < end; i++) {
		var c_id = countiesAll[i].id;
		var countyName = countiesAll[i].areaName.substr(0, 4);;
		var li = $('<li><a href="javascript:onclick=addrInputAll(' + i + ')" id="' + c_id + '">' + countyName + '</a></li>');
		$(".countyAll .list ul").append(li);
	}
	$(".countyAll .list #countyPage1").remove();
	$(".countyAll .list").append("<label id='countyPage1' style='display:none;'>" + page + "</label>");

}

function addrInputAll(i) {
	var countyId = $.trim(countiesAll[i].id);
	$(".con .hotCityAll .list a input").removeClass("current");
	$(".con .hotCityAll .list a input[id='" + cityIdAll + "']").addClass("current");
	$(".con .countyAll .list a").removeClass("current");
	$(".con .countyAll .list a[id='" + countyId + "']").addClass("current");
	allProId = $("body").data("pAllId");
	cityIdAll = $("body").data("cAllId");
	var p = null;
	var p_id = null;
	$.each(allProvinces,
		function(i, province) {
			if(province.id == allProId) {
				p = province.provinceName;
				p_id = province.id;
				return false;
			}
		});
	var c = null;
	var c_id = null;
	$.each(allCities,
		function(i, city) {
			if(city.id == cityIdAll) {
				c = city.name;
				c_id = city.id;
				return false;
			}
		});
	var a = null;
	var a_id = null;
	$.each(countiesAll,
		function(i, county) {
			if(county.id == countyId) {
				a = county.areaName;
				a_id = county.id;
				return false;
			}
		});
	var nameValue = $("input.current2");
	nameValue.removeClass("iGrays");
	$(".provinceCityAll").hide();
	var rtn = p + "-" + c + "-" + a;
	$("input.current2").val(rtn);
	$("input.current2").next().val(p_id);
	$("input.current2").next().next().val(c_id);
	$("input.current2").next().next().next().val(a_id);
	$("input.current2").attr('title', rtn);
	$(".backifname").hide();
	$("input.current2").parent().css("position", "static");
	var nameValue = $("input.current2").attr("name");
	if(nameValue == "consignor.addrProCity") {
		$("#provinceId").val(allProId);
		$("#cityId").val(cityIdAll);
	}
	if(nameValue == "order.caddrProCity") {
		$("input[name='order.caddrProCity']").trigger("change");
	}
	if(nameValue == "consigneeInfo.addrProCity") {
		$("input[name='consigneeInfo.addrProCity']").trigger("change");
	}
	if(nameValue == 'template.caddrProCity') {
		$("input[name='template.caddrProCity']").trigger("change");
	}
}

function hotCityAddrInputAll(proCityId) {
	allProId = proCityId.split(",")[0];
	cityIdAll = proCityId.split(",")[1];
	var cityCurName = proCityId.split(",")[2];
	$("body").data("nameOfCityAll", cityCurName);
	$("body").data("pAllId", allProId);
	$("body").data("cAllId", cityIdAll);
	$.each(allProvinces,
		function(i, pro) {
			if(pro.id == allProId) {
				$("body").data("pAllName", pro.provinceName);
			}
		});
	countiesAll = [];
	var j = 0;
	$.each(allAreas,
		function(i, county) {
			if(county.provinceId == cityIdAll) {
				countiesAll[j++] = county;
			}
		});
	countyTotalPageAll = Math.ceil(countiesAll.length / pa_pageSize);
	$(".provinceCityAll").find(".tabs").find("a").removeClass("current");
	$(".provinceCityAll .tabs").find(".district").addClass("current");
	$(".con .cityAll .list a").removeClass("current");
	$(".con .cityAll .list a[id='" + cityIdAll + "']").addClass("current");
	$(".provinceCityAll").find(".con").children().hide();
	$(".provinceCityAll").find(".con").find(".countyAll").show();
	$(".con .provinceAll .list a").removeClass("current");
	allCountyPage(1);
};﻿
function drag(elementToDrag, event) {
	var startX = event.clientX;
	startY = event.clientY; //div中间坐标
	var origX = elementToDrag.offsetLeft;
	origY = elementToDrag.offsetTop; //div左上角的坐标

	var deltaX = startX - origX;
	deltaY = startY - origY;
	if(document.addEventListener) { //firfox and so on
		document.addEventListener('mousemove', moveHandler, true);
		document.addEventListener('mouseup', upHandler, true);
	} else if(document.attachEvent) { //IE 5+
		elementToDrag.setCapture();
		elementToDrag.attachEvent('onmousemove', moveHandler);
		elementToDrag.attachEvent('onmouseup', upHandler);
		elementToDrag.attachEvent('onlosecapture', upHandler);
	} else { //IE 4 EVENT MODE
		var oldmoveHandler = document.onmousemove;
		var oldupHandler = document.mouseup;
		document.onmousemove = moveHandler;
		document.onmouseup = upHandler;
	}
	if(event.stopPropagation) event.stopPropagation(); //firefox 阻止事件冒泡，使得元素的父节点也响应事件
	else event.cancelBubble = true; //IE
	if(event.preventDefault) event.preventDefault(); //阻止默认的方法
	else event.returnValue = false;

	function moveHandler(e) {
		if(!e) e = window.event;
		elementToDrag.style.left = (e.clientX - deltaX) + 'px';
		elementToDrag.style.top = (e.clientY - deltaY) + 'px';
		if(e.stopPropagation) e.stopPropagation();
		else e.cancelBubble = true;
	}

	function upHandler(e) {
		if(!e) e = window.event;
		if(document.removeEventListener) {
			document.removeEventListener("mouseup", upHandler, true);
			document.removeEventListener("mousemove", moveHandler, true);
		} else if(document.detachEvent) {
			elementToDrag.detachEvent("onlosecapture", upHandler);
			elementToDrag.detachEvent("onmouseup", upHandler);
			elementToDrag.detachEvent("onmousemove", moveHandler);
			elementToDrag.releaseCapture;
		} else {
			document.onmouseup = oldupHandler;
			document.onmousemove = oldmoveHandler;
		}
		if(e.stopPropagation) e.stopPropagation();
		else e.cancelBubble = true;
	}
};